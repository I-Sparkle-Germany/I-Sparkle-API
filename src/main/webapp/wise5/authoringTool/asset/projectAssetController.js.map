{"version":3,"sources":["projectAssetController.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;IAEM;AAEF,aAFE,sBAEF,CAAY,MAAZ,EAAoB,YAApB,EAAkC,MAAlC,EAA0C,mBAA1C,EAA+D;;;8BAF7D,wBAE6D;;AAC3D,aAAK,MAAL,GAAc,MAAd,CAD2D;AAE3D,aAAK,YAAL,GAAoB,YAApB,CAF2D;AAG3D,aAAK,MAAL,GAAc,MAAd,CAH2D;AAI3D,aAAK,SAAL,GAAiB,KAAK,YAAL,CAAkB,SAAlB,CAJ0C;AAK3D,aAAK,mBAAL,GAA2B,mBAA3B,CAL2D;AAM3D,aAAK,aAAL,GAAqB,oBAAoB,aAApB,CANsC;AAO3D,aAAK,wBAAL,GAAgC,oBAAoB,wBAApB,CAP2B;AAQ3D,aAAK,2BAAL,GAAmC,oBAAoB,2BAApB,CARwB;;AAU3D,aAAK,MAAL,CAAY,MAAZ,CACI,YAAM;AAAE,mBAAO,MAAK,aAAL,CAAT;SAAN,EACA,QAAQ,IAAR,CAAa,IAAb,EAAmB,YAAW;AAC5B,iBAAK,2BAAL,GAAmC,KAAK,aAAL,CAAmB,aAAnB,GAAmC,KAAK,wBAAL,GAAgC,GAAnE,CADP;SAAX,CAFvB,EAV2D;KAA/D;;iBAFE;;oCAoBU,WAAW;;;AACnB,iBAAK,mBAAL,CAAyB,eAAzB,CAAyC,SAAzC,EAAoD,IAApD,CAAyD,UAAC,gBAAD,EAAsB;AAC3E,uBAAK,aAAL,GAAqB,OAAK,mBAAL,CAAyB,aAAzB,CADsD;aAAtB,CAAzD,CADmB;;;;yCAMN,OAAO;;;AACpB,iBAAK,mBAAL,CAAyB,YAAzB,CAAsC,KAAtC,EAA6C,IAA7C,CAAkD,UAAC,gBAAD,EAAsB;AACpE,uBAAK,aAAL,GAAqB,OAAK,mBAAL,CAAyB,aAAzB,CAD+C;aAAtB,CAAlD,CADoB;;;;+BAMjB;AACH,iBAAK,MAAL,CAAY,EAAZ,CAAe,cAAf,EAA+B,EAAC,WAAW,KAAK,SAAL,EAA3C,EADG;;;;WAhCL;;;AAqCN,uBAAuB,OAAvB,GAAiC,CAAC,QAAD,EAAW,cAAX,EAA2B,QAA3B,EAAqC,qBAArC,CAAjC;;kBAEe","file":"projectAssetController.js","sourcesContent":["'use strict';\n\nclass ProjectAssetController {\n\n    constructor($state, $stateParams, $scope, ProjectAssetService) {\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$scope = $scope;\n        this.projectId = this.$stateParams.projectId;\n        this.ProjectAssetService = ProjectAssetService;\n        this.projectAssets = ProjectAssetService.projectAssets;\n        this.projectAssetTotalSizeMax = ProjectAssetService.projectAssetTotalSizeMax;\n        this.projectAssetUsagePercentage = ProjectAssetService.projectAssetUsagePercentage;\n\n        this.$scope.$watch(\n            () => { return this.projectAssets },\n            angular.bind(this, function() {\n              this.projectAssetUsagePercentage = this.projectAssets.totalFileSize / this.projectAssetTotalSizeMax * 100;\n            }\n        ));\n    }\n\n    deleteAsset(assetItem) {\n        this.ProjectAssetService.deleteAssetItem(assetItem).then((newProjectAssets) => {\n            this.projectAssets = this.ProjectAssetService.projectAssets;\n        });\n    }\n\n    uploadAssetItems(files) {\n        this.ProjectAssetService.uploadAssets(files).then((newProjectAssets) => {\n            this.projectAssets = this.ProjectAssetService.projectAssets;\n        });\n    }\n\n    exit() {\n        this.$state.go('root.project', {projectId: this.projectId});\n    }\n}\n\nProjectAssetController.$inject = ['$state', '$stateParams', '$scope', 'ProjectAssetService'];\n\nexport default ProjectAssetController"]}