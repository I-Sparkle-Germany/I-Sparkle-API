{"version":3,"sources":["projectAssetController.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;IAEM;AAEF,aAFE,sBAEF,CAAY,MAAZ,EAAoB,YAApB,EAAkC,MAAlC,EAA0C,QAA1C,EAAoD,UAApD,EAAgE,mBAAhE,EAAqF;;;8BAFnF,wBAEmF;;AACjF,aAAK,MAAL,GAAc,MAAd,CADiF;AAEjF,aAAK,YAAL,GAAoB,YAApB,CAFiF;AAGjF,aAAK,MAAL,GAAc,MAAd,CAHiF;AAIjF,aAAK,QAAL,GAAgB,QAAhB,CAJiF;AAKjF,aAAK,UAAL,GAAkB,UAAlB,CALiF;AAMjF,aAAK,SAAL,GAAiB,KAAK,YAAL,CAAkB,SAAlB,CANgE;AAOjF,aAAK,mBAAL,GAA2B,mBAA3B,CAPiF;AAQjF,aAAK,aAAL,GAAqB,oBAAoB,aAApB,CAR4D;AASjF,aAAK,wBAAL,GAAgC,oBAAoB,wBAApB,CATiD;AAUjF,aAAK,2BAAL,GAAmC,oBAAoB,2BAApB,CAV8C;AAWjF,aAAK,YAAL,GAAoB,EAApB,CAXiF;;AAajF,aAAK,MAAL,CAAY,MAAZ,CACI,YAAM;AACF,mBAAO,MAAK,aAAL,CADL;SAAN,EAGA,YAAM;AACJ,kBAAK,2BAAL,GAAmC,MAAK,aAAL,CAAmB,aAAnB,GAAmC,MAAK,wBAAL,GAAgC,GAAnE,CAD/B;SAAN,CAJJ,CAbiF;KAArF;;iBAFE;;oCAyBU,WAAW;;;AACnB,iBAAK,mBAAL,CAAyB,eAAzB,CAAyC,SAAzC,EAAoD,IAApD,CAAyD,UAAC,gBAAD,EAAsB;AAC3E,uBAAK,aAAL,GAAqB,OAAK,mBAAL,CAAyB,aAAzB,CADsD;aAAtB,CAAzD,CADmB;;;;yCAMN,OAAO;;;AACpB,iBAAK,mBAAL,CAAyB,YAAzB,CAAsC,KAAtC,EAA6C,IAA7C,CAAkD,UAAC,mBAAD,EAAyB;AACvE,oBAAI,uBAAuB,oBAAoB,MAApB,GAA6B,CAA7B,EAAgC;AACvD,wBAAI,0BAA0B,EAA1B,CADmD;AAEvD,yBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,oBAAoB,MAApB,EAA4B,GAAhD,EAAqD;AACjD,4BAAI,qBAAqB,oBAAoB,CAApB,CAArB,CAD6C;AAEjD,gDAAwB,IAAxB,CAA6B,mBAAmB,MAAnB,CAA0B,IAA1B,CAA+B,IAA/B,CAA7B,CAFiD;qBAArD;AAIA,2BAAK,UAAL,CAAgB,uBAAhB,EAAyC,EAAE,gBAAgB,wBAAwB,IAAxB,CAA6B,IAA7B,CAAhB,EAA3C,EAAiG,IAAjG,CAAsG,UAAC,qBAAD,EAA2B;;AAE7H,+BAAK,YAAL,GAAoB,qBAApB,CAF6H;AAG7H,+BAAK,QAAL,CAAc,YAAM;AACZ,mCAAK,YAAL,GAAoB,EAApB,CADY;yBAAN,EAEX,IAFH,EAH6H;qBAA3B,CAAtG,CANuD;iBAA3D;AAcA,uBAAK,aAAL,GAAqB,OAAK,mBAAL,CAAyB,aAAzB,CAfkD;aAAzB,CAAlD,CADoB;;;;+BAoBjB;AACH,iBAAK,MAAL,CAAY,EAAZ,CAAe,cAAf,EAA+B,EAAC,WAAW,KAAK,SAAL,EAA3C,EADG;;;;WAnDL;;;AAwDN,uBAAuB,OAAvB,GAAiC,CAAC,QAAD,EAAW,cAAX,EAA2B,QAA3B,EAAqC,UAArC,EAAiD,YAAjD,EAA+D,qBAA/D,CAAjC;;kBAEe","file":"projectAssetController.js","sourcesContent":["'use strict';\n\nclass ProjectAssetController {\n\n    constructor($state, $stateParams, $scope, $timeout, $translate, ProjectAssetService) {\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.$translate = $translate;\n        this.projectId = this.$stateParams.projectId;\n        this.ProjectAssetService = ProjectAssetService;\n        this.projectAssets = ProjectAssetService.projectAssets;\n        this.projectAssetTotalSizeMax = ProjectAssetService.projectAssetTotalSizeMax;\n        this.projectAssetUsagePercentage = ProjectAssetService.projectAssetUsagePercentage;\n        this.assetMessage = \"\";\n\n        this.$scope.$watch(\n            () => {\n                return this.projectAssets\n            },\n            () => {\n              this.projectAssetUsagePercentage = this.projectAssets.totalFileSize / this.projectAssetTotalSizeMax * 100;\n            }\n        );\n    }\n\n    deleteAsset(assetItem) {\n        this.ProjectAssetService.deleteAssetItem(assetItem).then((newProjectAssets) => {\n            this.projectAssets = this.ProjectAssetService.projectAssets;\n        });\n    }\n\n    uploadAssetItems(files) {\n        this.ProjectAssetService.uploadAssets(files).then((uploadAssetsResults) => {\n            if (uploadAssetsResults && uploadAssetsResults.length > 0) {\n                let uploadedAssetsFilenames = [];\n                for (var r = 0; r < uploadAssetsResults.length; r++) {\n                    let uploadAssetsResult = uploadAssetsResults[r];\n                    uploadedAssetsFilenames.push(uploadAssetsResult.config.file.name);\n                }\n                this.$translate('assetUploadSuccessful', { assetFilenames: uploadedAssetsFilenames.join(\", \") }).then((assetUploadSuccessful) => {\n                    // show a confirmation message for 7 seconds\n                    this.assetMessage = assetUploadSuccessful;\n                    this.$timeout(() => {\n                            this.assetMessage = \"\";\n                    }, 7000);\n                });\n            }\n            this.projectAssets = this.ProjectAssetService.projectAssets;\n        });\n    }\n\n    exit() {\n        this.$state.go('root.project', {projectId: this.projectId});\n    }\n}\n\nProjectAssetController.$inject = ['$state', '$stateParams', '$scope', '$timeout', '$translate', 'ProjectAssetService'];\n\nexport default ProjectAssetController;"]}