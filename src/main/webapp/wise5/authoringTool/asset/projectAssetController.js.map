{"version":3,"sources":["projectAssetController.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;IAEM;AAEF,aAFE,sBAEF,CAAY,MAAZ,EAAoB,MAApB,EAA4B,mBAA5B,EAAiD;;;8BAF/C,wBAE+C;;AAC7C,aAAK,MAAL,GAAc,MAAd,CAD6C;AAE7C,aAAK,MAAL,GAAc,MAAd,CAF6C;AAG7C,aAAK,mBAAL,GAA2B,mBAA3B,CAH6C;AAI7C,aAAK,aAAL,GAAqB,oBAAoB,aAApB,CAJwB;AAK7C,aAAK,wBAAL,GAAgC,oBAAoB,wBAApB,CALa;AAM7C,aAAK,2BAAL,GAAmC,oBAAoB,2BAApB,CANU;;AAQ7C,aAAK,MAAL,CAAY,MAAZ,CACI,YAAM;AAAE,mBAAO,MAAK,aAAL,CAAT;SAAN,EACA,QAAQ,IAAR,CAAa,IAAb,EAAmB,YAAW;AAC5B,iBAAK,2BAAL,GAAmC,KAAK,aAAL,CAAmB,aAAnB,GAAmC,KAAK,wBAAL,GAAgC,GAAnE,CADP;SAAX,CAFvB,EAR6C;KAAjD;;iBAFE;;oCAkBU,WAAW;;;AACnB,iBAAK,mBAAL,CAAyB,eAAzB,CAAyC,SAAzC,EAAoD,IAApD,CAAyD,UAAC,gBAAD,EAAsB;AAC3E,uBAAK,aAAL,GAAqB,OAAK,mBAAL,CAAyB,aAAzB,CADsD;aAAtB,CAAzD,CADmB;;;;yCAMN,OAAO;;;AACpB,iBAAK,mBAAL,CAAyB,YAAzB,CAAsC,KAAtC,EAA6C,IAA7C,CAAkD,UAAC,gBAAD,EAAsB;AACpE,uBAAK,aAAL,GAAqB,OAAK,mBAAL,CAAyB,aAAzB,CAD+C;aAAtB,CAAlD,CADoB;;;;+BAMjB;AACH,iBAAK,MAAL,CAAY,EAAZ,CAAe,cAAf,EAA+B,EAA/B,EADG;;;;WA9BL;;;AAmCN,uBAAuB,OAAvB,GAAiC,CAAC,QAAD,EAAW,QAAX,EAAqB,qBAArB,CAAjC;;kBAEe","file":"projectAssetController.js","sourcesContent":["'use strict';\n\nclass ProjectAssetController {\n\n    constructor($state, $scope, ProjectAssetService) {\n        this.$state = $state;\n        this.$scope = $scope;\n        this.ProjectAssetService = ProjectAssetService;\n        this.projectAssets = ProjectAssetService.projectAssets;\n        this.projectAssetTotalSizeMax = ProjectAssetService.projectAssetTotalSizeMax;\n        this.projectAssetUsagePercentage = ProjectAssetService.projectAssetUsagePercentage;\n\n        this.$scope.$watch(\n            () => { return this.projectAssets },\n            angular.bind(this, function() {\n              this.projectAssetUsagePercentage = this.projectAssets.totalFileSize / this.projectAssetTotalSizeMax * 100;\n            }\n        ));\n    }\n\n    deleteAsset(assetItem) {\n        this.ProjectAssetService.deleteAssetItem(assetItem).then((newProjectAssets) => {\n            this.projectAssets = this.ProjectAssetService.projectAssets;\n        });\n    }\n\n    uploadAssetItems(files) {\n        this.ProjectAssetService.uploadAssets(files).then((newProjectAssets) => {\n            this.projectAssets = this.ProjectAssetService.projectAssets;\n        });\n    }\n\n    exit() {\n        this.$state.go('root.project', {});\n    }\n}\n\nProjectAssetController.$inject = ['$state', '$scope', 'ProjectAssetService'];\n\nexport default ProjectAssetController"]}