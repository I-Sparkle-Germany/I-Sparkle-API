{"version":3,"sources":["projectAssetController.es6"],"names":["ProjectAssetController","$filter","$mdDialog","$rootScope","$state","$stateParams","$scope","$timeout","ConfigService","ProjectAssetService","UtilService","$translate","projectId","projectAssets","projectAssetTotalSizeMax","projectAssetUsagePercentage","totalUnusedFilesSize","unusedFilesPercentage","isPopup","nodeId","componentId","target","targetObject","stateParams","assetSortBy","assetMessage","$watch","totalFileSize","sortAssets","calculateAssetUsage","then","setTotalUnusedFilesSize","sortBy","files","sort","sortAssetsAToZ","reverse","sortAssetsSmallToLarge","a","b","aFileName","fileName","toLowerCase","bFileName","result","aFileSize","fileSize","bFileSize","assetItem","deleteConfirmMessage","confirm","deleteAssetItem","newProjectAssets","downloadAssetItem","params","$broadcast","uploadAssets","uploadAssetsResults","length","uploadedAssetsFilenames","uploadAssetsResult","data","push","config","file","name","assetFilenames","join","$event","selectedAssetItem","assetFileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","previewAssetURL","assetIsImage","assetIsVideo","isImage","isVideo","$","load","hide","go","$inject"],"mappings":"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","file":"projectAssetController.js","sourcesContent":["'use strict';\n\nclass ProjectAssetController {\n\n  constructor(\n      $filter,\n      $mdDialog,\n      $rootScope,\n      $state,\n      $stateParams,\n      $scope,\n      $timeout,\n      ConfigService,\n      ProjectAssetService,\n      UtilService) {\n    this.$filter = $filter;\n    this.$mdDialog = $mdDialog;\n    this.$rootScope = $rootScope;\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.$scope = $scope;\n    this.$timeout = $timeout;\n    this.ConfigService = ConfigService;\n    this.ProjectAssetService = ProjectAssetService;\n    this.UtilService = UtilService;\n    this.$translate = this.$filter('translate');\n\n    this.projectId = this.$stateParams.projectId;\n    this.projectAssets = ProjectAssetService.projectAssets;\n    this.projectAssetTotalSizeMax =\n        ProjectAssetService.projectAssetTotalSizeMax;\n    this.projectAssetUsagePercentage =\n        ProjectAssetService.projectAssetUsagePercentage;\n\n    // the amount of space the unused files use\n    this.totalUnusedFilesSize = 0;\n\n    /*\n     * the amount of space the unused files use as a percentage of the\n     * total amount of allowed space for the project\n     */\n    this.unusedFilesPercentage = 0;\n\n    // whether the asset page is being displayed in a popup\n    this.isPopup = false;\n\n    // the project id that opened this popup\n    this.projectId = null;\n\n    // the node id that opened this popup\n    this.nodeId = null;\n\n    // the component id that opened this popup\n    this.componentId = null;\n\n    // the target to put the asset in\n    this.target = null;\n\n    // the target object to put the asset in\n    this.targetObject = null;\n\n    if (this.$stateParams != null) {\n      let stateParams = this.$stateParams;\n      if (stateParams.isPopup != null) {\n        this.isPopup = true;\n      }\n\n      if (stateParams.projectId != null) {\n        this.projectId = stateParams.projectId;\n      }\n\n      if (stateParams.nodeId != null) {\n        this.nodeId = stateParams.nodeId;\n      }\n\n      if (stateParams.componentId != null) {\n        this.componentId = stateParams.componentId;\n      }\n\n      if (stateParams.target != null) {\n        this.target = stateParams.target;\n      }\n\n      if (stateParams.targetObject != null) {\n        this.targetObject = stateParams.targetObject;\n      }\n    }\n\n    // sort assets alphabetically at the beginning\n    this.assetSortBy = 'aToZ';\n    this.assetMessage = '';\n\n    this.$scope.$watch(() => {\n          return this.projectAssets;\n        }, () => {\n          this.projectAssetUsagePercentage =\n              this.projectAssets.totalFileSize / this.projectAssetTotalSizeMax * 100;\n          this.sortAssets(this.assetSortBy);\n        }\n    );\n\n    // when the user changes the sort assets by field, also nperform the sort\n    this.$scope.$watch(() => {\n        return this.assetSortBy;\n      }, () => {\n        this.sortAssets(this.assetSortBy);\n      }\n    );\n\n    // calculate whether the assets are used in the project\n    this.ProjectAssetService.calculateAssetUsage()\n        .then((totalUnusedFilesSize) => {\n      this.setTotalUnusedFilesSize(totalUnusedFilesSize);\n    });\n  }\n\n  sortAssets(sortBy) {\n    if (sortBy === 'aToZ') {\n      this.projectAssets.files.sort(this.sortAssetsAToZ);\n    } else if (sortBy === 'zToA') {\n      let files = this.projectAssets.files;\n      this.projectAssets.files = files.sort(this.sortAssetsAToZ).reverse();\n    } else if (sortBy === 'smallToLarge') {\n      this.projectAssets.files.sort(this.sortAssetsSmallToLarge);\n    } else if (sortBy === 'largeToSmall') {\n      let files = this.projectAssets.files;\n      this.projectAssets.files =\n          files.sort(this.sortAssetsSmallToLarge).reverse();\n    }\n  };\n\n  sortAssetsAToZ(a, b) {\n    let aFileName = a.fileName.toLowerCase();\n    let bFileName = b.fileName.toLowerCase();\n    let result = 0;\n\n    if (aFileName < bFileName) {\n      result = -1;\n    } else if (aFileName > bFileName) {\n      result = 1;\n    }\n    return result;\n  };\n\n  sortAssetsSmallToLarge(a, b) {\n    let aFileSize = a.fileSize;\n    let bFileSize = b.fileSize;\n    let result = 0;\n\n    if (aFileSize < bFileSize) {\n      result = -1;\n    } else if (aFileSize > bFileSize) {\n      result = 1;\n    }\n    return result;\n  }\n\n  /**\n   * Delete an asset from the project after confirming with the user\n   * @param assetItem the asset to delete\n   */\n  deleteAsset(assetItem) {\n    let deleteConfirmMessage =\n      this.$translate('areYouSureYouWantToDeleteThisFile')\n      + '\\n\\n' + assetItem.fileName;\n    if (confirm(deleteConfirmMessage)) {\n      this.ProjectAssetService.deleteAssetItem(assetItem)\n        .then((newProjectAssets) => {\n        this.projectAssets = this.ProjectAssetService.projectAssets;\n        // calculate whether the assets are used in the project\n        this.ProjectAssetService.calculateAssetUsage()\n          .then((totalUnusedFilesSize) => {\n        this.setTotalUnusedFilesSize(totalUnusedFilesSize);\n        });\n      });\n    }\n  }\n\n  downloadAsset(assetItem) {\n    this.ProjectAssetService.downloadAssetItem(assetItem);\n  }\n\n  /**\n   * The user has chosen an asset to use, so notify listeners\n   * @param assetItem the asset the user chose\n   */\n  chooseAsset(assetItem) {\n    let params = {\n      \"assetItem\": assetItem,\n      \"projectId\": this.projectId,\n      \"nodeId\": this.nodeId,\n      \"componentId\": this.componentId,\n      \"target\": this.target,\n      \"targetObject\": this.targetObject\n    };\n    this.$rootScope.$broadcast('assetSelected', params);\n  }\n\n  uploadAssetItems(files) {\n    this.ProjectAssetService.uploadAssets(files).then((uploadAssetsResults) => {\n      if (uploadAssetsResults && uploadAssetsResults.length > 0) {\n        let uploadedAssetsFilenames = [];\n        for (let uploadAssetsResult of uploadAssetsResults) {\n          if (typeof uploadAssetsResult.data === 'string') {\n            // there was an error uploading this file, so don't add\n          } else {\n            uploadedAssetsFilenames.push(uploadAssetsResult.config.file.name);\n          }\n        }\n        if (uploadedAssetsFilenames.length > 0) {\n          // show which files were uploaded for 7 seconds\n          this.assetMessage = this.$translate('assetUploadSuccessful',\n              { assetFilenames: uploadedAssetsFilenames.join(', ') });\n          this.$timeout(() => {\n            this.assetMessage = '';\n          }, 7000);\n        }\n      }\n      this.projectAssets = this.ProjectAssetService.projectAssets;\n      // calculate whether the assets are used in the project\n      this.ProjectAssetService.calculateAssetUsage()\n          .then((totalUnusedFilesSize) => {\n        this.setTotalUnusedFilesSize(totalUnusedFilesSize);\n      });\n    });\n  }\n\n  /**\n   * Preview an asset in the right panel\n   * @param $event The event that caused the asset to be previewed. This will\n   * either be a mouseover or click event.\n   * @param assetItem the asset item to preview\n   */\n  previewAsset($event, assetItem) {\n    if (assetItem != null) {\n      this.selectedAssetItem = assetItem;\n      let assetFileName = assetItem.fileName;\n      let assetsDirectoryPath =\n          this.ConfigService.getProjectAssetsDirectoryPath();\n\n      // set the url of the asset so we can preview it\n      this.previewAssetURL = assetsDirectoryPath + '/' + assetFileName;\n\n      // clear these flags\n      this.assetIsImage = false;\n      this.assetIsVideo = false;\n\n      if (this.UtilService.isImage(assetFileName)) {\n        this.assetIsImage = true;\n      } else if(this.UtilService.isVideo(assetFileName)) {\n        this.assetIsVideo = true;\n        $('video').load();\n      }\n    }\n  }\n\n  /**\n   * Exits the asset view. If this was opened in a popup, closes the\n   * popup and reveal the activity below.\n   */\n  exit() {\n    if (this.isPopup) {\n      this.$mdDialog.hide();\n    } else {\n      this.$state.go('root.project', {projectId: this.projectId});\n    }\n  }\n\n  /**\n   * Set the total amount of space the unused files use\n   * @param totalUnusedFilesSize the total amount of space the unused files\n   * use\n   */\n  setTotalUnusedFilesSize(totalUnusedFilesSize) {\n    // set the total amount of space the unused files use\n    this.totalUnusedFilesSize = totalUnusedFilesSize;\n\n    /*\n     * calculate the amount of space the unused files use as a\n     * percentage of the total amount of allowed space for the project\n     */\n    this.unusedFilesPercentage =\n        this.totalUnusedFilesSize / this.projectAssetTotalSizeMax * 100;\n  }\n}\n\nProjectAssetController.$inject = [\n    '$filter',\n    '$mdDialog',\n    '$rootScope',\n    '$state',\n    '$stateParams',\n    '$scope',\n    '$timeout',\n    'ConfigService',\n    'ProjectAssetService',\n    'UtilService'\n];\n\nexport default ProjectAssetController;\n"]}