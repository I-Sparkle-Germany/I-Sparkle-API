{"version":3,"sources":["projectInfoController.es6"],"names":["ProjectInfoController","$filter","$mdDialog","$rootScope","$state","$stateParams","$scope","$timeout","ConfigService","ProjectService","UtilService","$translate","metadata","getProjectMetadata","metadataAuthoring","getConfigParam","processMetadata","fields","field","processMetadataAuthoringField","type","processMetadataAuthoringFieldCheckbox","metadataField","key","choices","choicesMapping","choice","hasUserCheckedThisMetadataField","userHasCheckedThisMetadataField","metadataFieldChoice","choiceText","userLocale","getLocale","i18nMapping","i18n","i18nMappingContainingChoiceTextArray","Object","values","filter","onei18nMapping","indexOf","length","i18nMappingContainingChoiceText","getMetadataChoiceText","checkedChoices","isChoiceChecked","push","saveProject","$inject"],"mappings":"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","file":"projectInfoController.js","sourcesContent":["'use strict';\n\nclass ProjectInfoController {\n\n  constructor(\n      $filter,\n      $mdDialog,\n      $rootScope,\n      $state,\n      $stateParams,\n      $scope,\n      $timeout,\n      ConfigService,\n      ProjectService,\n      UtilService) {\n    this.$filter = $filter;\n    this.$mdDialog = $mdDialog;\n    this.$rootScope = $rootScope;\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.$scope = $scope;\n    this.$timeout = $timeout;\n    this.ConfigService = ConfigService;\n    this.ProjectService = ProjectService;\n    this.UtilService = UtilService;\n    this.$translate = this.$filter('translate');\n\n    this.metadata = this.ProjectService.getProjectMetadata();\n    this.metadataAuthoring =\n        this.ConfigService.getConfigParam('projectMetadataSettings');\n    this.processMetadata();\n  }\n\n  processMetadata() {\n    if (this.metadataAuthoring != null) {\n      for (let field of this.metadataAuthoring.fields) {\n        this.processMetadataAuthoringField(field);\n      }\n    }\n  }\n\n  processMetadataAuthoringField(field) {\n    if (field != null) {\n      if (field.type === 'checkbox') {\n        this.processMetadataAuthoringFieldCheckbox(field);\n      } else if (field.type === 'radio') {\n        // do nothing. Radio buttons work automatically\n      }\n    }\n  }\n\n  processMetadataAuthoringFieldCheckbox(field) {\n    let metadataField = this.metadata[field.key];\n    if (metadataField != null && field.choices != null) {\n      field.choicesMapping = {};\n      for (let choice of field.choices) {\n        if (choice != null) {\n          field.choicesMapping[choice] =\n              this.hasUserCheckedThisMetadataField(metadataField, choice);\n        }\n      }\n    }\n  }\n\n  hasUserCheckedThisMetadataField(metadataField, choice) {\n    let userHasCheckedThisMetadataField = false;\n    for (let metadataFieldChoice of metadataField) {\n      if (metadataFieldChoice != null && metadataFieldChoice == choice) {\n        userHasCheckedThisMetadataField = true;\n        break;\n      }\n    }\n    return userHasCheckedThisMetadataField;\n  }\n\n  // returns the choice text that is appropriate for user's locale\n  getMetadataChoiceText(choice) {\n    let choiceText = choice;\n    let userLocale = this.ConfigService.getLocale();\n    let i18nMapping = this.metadataAuthoring.i18n;\n    let i18nMappingContainingChoiceTextArray =\n        Object.values(i18nMapping).filter((onei18nMapping) => {\n          return Object.values(onei18nMapping).indexOf(choice) != -1;\n        });\n    if (i18nMappingContainingChoiceTextArray != null &&\n        i18nMappingContainingChoiceTextArray.length > 0) {\n      // shouldn't be more than one, but if so, use the first one we find\n      let i18nMappingContainingChoiceText =\n          i18nMappingContainingChoiceTextArray[0];\n      if (i18nMappingContainingChoiceText[userLocale] != null) {\n        choiceText = i18nMappingContainingChoiceText[userLocale];\n      }\n    }\n    return choiceText;\n  }\n\n  metadataChoiceIsChecked(metadataField, choice) {\n    return this.getMetadataChoiceText(this.metadata[metadataField.key])\n        == this.getMetadataChoiceText(choice);\n  }\n\n  metadataCheckboxClicked(metadataField, choice) {\n    let checkedChoices = [];\n    let choices = metadataField.choices;\n    for (let choice of choices) {\n      let isChoiceChecked = metadataField.choicesMapping[choice];\n      if (isChoiceChecked) {\n        checkedChoices.push(this.getMetadataChoiceText(choice));\n      }\n    }\n    this.metadata[metadataField.key] = checkedChoices;\n    this.ProjectService.saveProject();\n  }\n\n  metadataRadioClicked(metadataField, choice) {\n    this.metadata[metadataField.key] = this.getMetadataChoiceText(choice);\n    this.ProjectService.saveProject();\n  }\n}\n\nProjectInfoController.$inject = [\n    '$filter',\n    '$mdDialog',\n    '$rootScope',\n    '$state',\n    '$stateParams',\n    '$scope',\n    '$timeout',\n    'ConfigService',\n    'ProjectService',\n    'UtilService'\n];\n\nexport default ProjectInfoController;\n"]}