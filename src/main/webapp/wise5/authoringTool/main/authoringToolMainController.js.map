{"version":3,"sources":["authoringToolMainController.es6"],"names":["AuthoringToolMainController","$state","ConfigService","ProjectService","projects","getConfigParam","sharedProjects","projectId","copyProject","then","configURL","window","retrieveConfig","exportProjectURL","getWISEBaseURL","location","href","go","previewProjectURL","open","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,2B;AAEF,yCAAYC,MAAZ,EAAoBC,aAApB,EAAmCC,cAAnC,EAAmD;AAAA;;AAC/C,aAAKF,MAAL,GAAcA,MAAd;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;;AAEA;AACA,aAAKC,QAAL,GAAgB,KAAKF,aAAL,CAAmBG,cAAnB,CAAkC,UAAlC,CAAhB;AACA,aAAKC,cAAL,GAAsB,KAAKJ,aAAL,CAAmBG,cAAnB,CAAkC,gBAAlC,CAAtB;AACH;;;;oCAEWE,S,EAAW;AAAA;;AACnB,iBAAKJ,cAAL,CAAoBK,WAApB,CAAgCD,SAAhC,EAA2CE,IAA3C,CAAgD,UAACF,SAAD,EAAe;AAC3D;AACA,oBAAIG,YAAYC,OAAOD,SAAvB;AACA,sBAAKR,aAAL,CAAmBU,cAAnB,CAAkCF,SAAlC,EAA6CD,IAA7C,CAAkD,YAAM;AACpD,0BAAKL,QAAL,GAAgB,MAAKF,aAAL,CAAmBG,cAAnB,CAAkC,UAAlC,CAAhB;AACH,iBAFD;AAGH,aAND;AAOH;;;wCAEeE,S,EAAW;AACvB,gBAAIM,mBAAmB,KAAKX,aAAL,CAAmBY,cAAnB,KAAsC,kBAAtC,GAA2DP,SAAlF;AACAI,mBAAOI,QAAP,CAAgBC,IAAhB,GAAuBH,gBAAvB;AACH;;;2CAEkB;AACf,iBAAKZ,MAAL,CAAYgB,EAAZ,CAAe,UAAf;AACH;;;oCAEWV,S,EAAW;AACnB,iBAAKN,MAAL,CAAYgB,EAAZ,CAAe,cAAf,EAA+B,EAACV,WAAUA,SAAX,EAA/B;AACH;;AAED;;;;;;uCAGeA,S,EAAW;AACtB,gBAAIW,oBAAoB,KAAKhB,aAAL,CAAmBY,cAAnB,KAAsC,WAAtC,GAAoDP,SAA5E;AACAI,mBAAOQ,IAAP,CAAYD,iBAAZ;AACH;;;;;;AACJ;;AAEDlB,4BAA4BoB,OAA5B,GAAsC,CAAC,QAAD,EAAW,eAAX,EAA4B,gBAA5B,CAAtC;;kBAEepB,2B","file":"authoringToolMainController.js","sourcesContent":["'use strict';\n\nclass AuthoringToolMainController {\n\n    constructor($state, ConfigService, ProjectService) {\n        this.$state = $state;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n\n        // get list of projects owned by this user and shared with this\n        this.projects = this.ConfigService.getConfigParam(\"projects\");\n        this.sharedProjects = this.ConfigService.getConfigParam(\"sharedProjects\");\n    }\n\n    copyProject(projectId) {\n        this.ProjectService.copyProject(projectId).then((projectId) => {\n            // refresh the project list\n            var configURL = window.configURL;\n            this.ConfigService.retrieveConfig(configURL).then(() => {\n                this.projects = this.ConfigService.getConfigParam(\"projects\");\n            });\n        });\n    }\n\n    downloadProject(projectId) {\n        let exportProjectURL = this.ConfigService.getWISEBaseURL() + \"/project/export/\" + projectId;\n        window.location.href = exportProjectURL;\n    }\n\n    createNewProject() {\n        this.$state.go('root.new');\n    }\n\n    openProject(projectId) {\n        this.$state.go('root.project', {projectId:projectId});\n    }\n\n    /**\n     * Launch the project in preview mode\n     */\n    previewProject(projectId) {\n        let previewProjectURL = this.ConfigService.getWISEBaseURL() + \"/project/\" + projectId;\n        window.open(previewProjectURL);\n    };\n};\n\nAuthoringToolMainController.$inject = ['$state', 'ConfigService', 'ProjectService'];\n\nexport default AuthoringToolMainController;"]}