{"version":3,"sources":["authoringToolMainController.es6"],"names":[],"mappings":";;;;;;;;;;IAAM;AACF,aADE,2BACF,CAAY,MAAZ,EAAoB,aAApB,EAAmC;8BADjC,6BACiC;;AAC/B,aAAK,aAAL,GAAqB,aAArB,CAD+B;AAE/B,aAAK,MAAL,GAAc,MAAd,CAF+B;AAG/B,YAAI,KAAK,aAAL,CAAmB,cAAnB,CAAkC,gBAAlC,CAAJ,EAAyD;AACrD,iBAAK,MAAL,CAAY,EAAZ,CAAe,cAAf,EAA+B,EAAC,WAAU,KAAV,EAAhC,EAAkD,IAAlD,CAAuD,UAAS,MAAT,EAAiB,EAAjB,CAAvD,CADqD;SAAzD,MAGO;;AAEH,iBAAK,QAAL,GAAgB,KAAK,aAAL,CAAmB,cAAnB,CAAkC,UAAlC,CAAhB,CAFG;SAHP;KAHJ;;iBADE;;2CAaiB;AACf,iBAAK,MAAL,CAAY,EAAZ,CAAe,UAAf,EADe;;;;oCAIP,WAAW;AACnB,iBAAK,MAAL,CAAY,EAAZ,CAAe,cAAf,EAA+B,EAAC,WAAU,SAAV,EAAhC,EADmB;;;;WAjBrB;;;AAsBN,4BAA4B,OAA5B,GAAsC,CAAC,QAAD,EAAW,eAAX,CAAtC;;kBAEe","file":"authoringToolMainController.js","sourcesContent":["class AuthoringToolMainController {\n    constructor($state, ConfigService) {\n        this.ConfigService = ConfigService;\n        this.$state = $state;\n        if (this.ConfigService.getConfigParam('projectBaseURL')) {\n            this.$state.go('root.project', {projectId:15621}).then(function(result) {\n            });\n        } else {\n            // get list of projects owned by this user\n            this.projects = this.ConfigService.getConfigParam(\"projects\");\n        }\n    }\n\n    createNewProject() {\n        this.$state.go('root.new');\n    }\n\n    openProject(projectId) {\n        this.$state.go('root.project', {projectId:projectId});\n    }\n}\n\nAuthoringToolMainController.$inject = ['$state', 'ConfigService'];\n\nexport default AuthoringToolMainController;"]}