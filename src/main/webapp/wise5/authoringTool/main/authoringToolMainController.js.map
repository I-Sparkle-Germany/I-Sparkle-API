{"version":3,"sources":["authoringToolMainController.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;IAEM;AAEF,aAFE,2BAEF,CAAY,MAAZ,EAAoB,aAApB,EAAmC,cAAnC,EAAmD;8BAFjD,6BAEiD;;AAC/C,aAAK,MAAL,GAAc,MAAd,CAD+C;AAE/C,aAAK,aAAL,GAAqB,aAArB,CAF+C;AAG/C,aAAK,cAAL,GAAsB,cAAtB;;;AAH+C,YAM/C,CAAK,QAAL,GAAgB,KAAK,aAAL,CAAmB,cAAnB,CAAkC,UAAlC,CAAhB,CAN+C;AAO/C,aAAK,cAAL,GAAsB,KAAK,aAAL,CAAmB,cAAnB,CAAkC,gBAAlC,CAAtB,CAP+C;KAAnD;;iBAFE;;oCAYU,WAAW;;;AACnB,iBAAK,cAAL,CAAoB,WAApB,CAAgC,SAAhC,EAA2C,IAA3C,CAAgD,UAAC,SAAD,EAAe;;AAE3D,oBAAI,YAAY,OAAO,SAAP,CAF2C;AAG3D,sBAAK,aAAL,CAAmB,cAAnB,CAAkC,SAAlC,EAA6C,IAA7C,CAAkD,YAAM;AACpD,0BAAK,QAAL,GAAgB,MAAK,aAAL,CAAmB,cAAnB,CAAkC,UAAlC,CAAhB,CADoD;iBAAN,CAAlD,CAH2D;aAAf,CAAhD,CADmB;;;;2CAUJ;AACf,iBAAK,MAAL,CAAY,EAAZ,CAAe,UAAf,EADe;;;;oCAIP,WAAW;AACnB,iBAAK,MAAL,CAAY,EAAZ,CAAe,cAAf,EAA+B,EAAC,WAAU,SAAV,EAAhC,EADmB;;;;;;;;;uCAOR,WAAW;AACtB,gBAAI,oBAAoB,KAAK,aAAL,CAAmB,cAAnB,KAAsC,WAAtC,GAAoD,SAApD,CADF;AAEtB,mBAAO,IAAP,CAAY,iBAAZ,EAFsB;;;;WAjCxB;;;AAqCL;;AAED,4BAA4B,OAA5B,GAAsC,CAAC,QAAD,EAAW,eAAX,EAA4B,gBAA5B,CAAtC;;kBAEe","file":"authoringToolMainController.js","sourcesContent":["'use strict';\n\nclass AuthoringToolMainController {\n\n    constructor($state, ConfigService, ProjectService) {\n        this.$state = $state;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n\n        // get list of projects owned by this user and shared with this\n        this.projects = this.ConfigService.getConfigParam(\"projects\");\n        this.sharedProjects = this.ConfigService.getConfigParam(\"sharedProjects\");\n    }\n\n    copyProject(projectId) {\n        this.ProjectService.copyProject(projectId).then((projectId) => {\n            // refresh the project list\n            var configURL = window.configURL;\n            this.ConfigService.retrieveConfig(configURL).then(() => {\n                this.projects = this.ConfigService.getConfigParam(\"projects\");\n            });\n        });\n    }\n\n    createNewProject() {\n        this.$state.go('root.new');\n    }\n\n    openProject(projectId) {\n        this.$state.go('root.project', {projectId:projectId});\n    }\n\n    /**\n     * Launch the project in preview mode\n     */\n    previewProject(projectId) {\n        let previewProjectURL = this.ConfigService.getWISEBaseURL() + \"/project/\" + projectId;\n        window.open(previewProjectURL);\n    };\n};\n\nAuthoringToolMainController.$inject = ['$state', 'ConfigService', 'ProjectService'];\n\nexport default AuthoringToolMainController;"]}