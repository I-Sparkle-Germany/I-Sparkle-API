{"version":3,"sources":["authoringToolNewProjectController.es6"],"names":["AuthoringToolNewProjectController","$state","ConfigService","ProjectService","newProjectTemplate1","project","projectJSONString","angular","toJson","commitMessage","Date","getTime","registerNewProject","then","projectId","go","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,iC;AAEF,+CAAYC,MAAZ,EAAoBC,aAApB,EAAmCC,cAAnC,EAAmD;AAAA;;AAC/C,aAAKF,MAAL,GAAcA,MAAd;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;;AAEA,aAAKC,mBAAL,GACA;AACI,qBAAS,CACL;AACI,sBAAM,QADV;AAEI,wBAAQ,OAFZ;AAGI,yBAAS,QAHb;AAII,2BAAW,QAJf;AAKI,uBAAO,CACH,QADG;AALX,aADK,EAUL;AACI,sBAAM,QADV;AAEI,wBAAQ,OAFZ;AAGI,yBAAS,gBAHb;AAII,2BAAW,EAJf;AAKI,uBAAO,EALX;AAOI,yBAAS;AACL,+BAAW;AACP,iCAAS,SADF;AAEP,gCAAQ,MAFD;AAGP,mCAAW,gBAHJ;AAIP,oCAAY;AAJL;AADN;AAPb,aAVK,CADb;AA4BI,2BAAe,EA5BnB;AA6BI,4BAAgB,QA7BpB;AA8BI,2BAAe,QA9BnB;AA+BI,8BAAkB,QA/BtB;AAgCI,sBAAU;AACN,4BAAY;AADN,aAhCd;AAmCI,wBAAY;AACR,yBAAS;AADD,aAnChB;AAsCI,wBAAY;AACR,2BAAW,KADH;AAER,yBAAS,UAFD;AAGR,6BAAa;AACT,4BAAQ;AACJ,mCAAW,IADP;AAEJ,yCAAiB,IAFb;AAGJ,0CAAkB,IAHd;AAIJ,gDAAwB,IAJpB;AAKJ,iCAAS;AACL,wCAAY,MADP;AAEL,sCAAU,OAFL;AAGL,oCAAQ;AAHH;AALL,qBADC;AAYT,gCAAY;AACR,mCAAW,KADH;AAER,iCAAS;AACL,wCAAY,UADP;AAEL,sCAAU,WAFL;AAGL,oCAAQ;AAHH;AAFD,qBAZH;AAoBT,8BAAU;AACN,mCAAW,KADL;AAEN,iCAAS;AACL,wCAAY,QADP;AAEL,sCAAU,SAFL;AAGL,oCAAQ;AAHH,yBAFH;AAON,iCAAS,CACL;AACI,wCAAY,aADhB;AAEI,qCAAS,cAFb;AAGI,2CAAe,0DAHnB;AAII,sCAAU,8EAJd;AAKI,uCAAW;AALf,yBADK;AAPH;AApBD;AAHL,aAtChB;AAgFI,8BAAkB,EAhFtB;AAiFI,6BAAiB;AAjFrB,SADA;;AAqFA,aAAKC,OAAL,GAAe,KAAKD,mBAApB;AACH;;;;6CAEoB;AAAA;;AACjB,gBAAIE,oBAAoBC,QAAQC,MAAR,CAAe,KAAKH,OAApB,EAA6B,CAA7B,CAAxB;AACA,gBAAII,gBAAgB,wBAAwB,IAAIC,IAAJ,GAAWC,OAAX,EAA5C;AACA,iBAAKR,cAAL,CAAoBS,kBAApB,CAAuCN,iBAAvC,EAA0DG,aAA1D,EAAyEI,IAAzE,CAA8E,UAACC,SAAD,EAAe;AACzF,sBAAKb,MAAL,CAAYc,EAAZ,CAAe,cAAf,EAA+B,EAACD,WAAWA,SAAZ,EAA/B;AACH,aAFD;AAGH;;;mDAE0B;AACvB,iBAAKb,MAAL,CAAYc,EAAZ,CAAe,WAAf;AACH;;;;;;AACJ;;AAEDf,kCAAkCgB,OAAlC,GAA4C,CAAC,QAAD,EAAW,eAAX,EAA4B,gBAA5B,CAA5C;;kBAEehB,iC","file":"authoringToolNewProjectController.js","sourcesContent":["'use strict';\n\nclass AuthoringToolNewProjectController {\n\n    constructor($state, ConfigService, ProjectService) {\n        this.$state = $state;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n\n        this.newProjectTemplate1 =\n        {\n            \"nodes\": [\n                {\n                    \"id\": \"group0\",\n                    \"type\": \"group\",\n                    \"title\": \"Master\",\n                    \"startId\": \"group1\",\n                    \"ids\": [\n                        \"group1\"\n                    ]\n                },\n                {\n                    \"id\": \"group1\",\n                    \"type\": \"group\",\n                    \"title\": \"First Activity\",\n                    \"startId\": \"\",\n                    \"ids\": [\n                    ],\n                    \"icons\": {\n                        \"default\": {\n                            \"color\": \"#2196F3\",\n                            \"type\": \"font\",\n                            \"fontSet\": \"material-icons\",\n                            \"fontName\": \"info\"\n                        }\n                    }\n                }\n            ],\n            \"constraints\": [],\n            \"startGroupId\": \"group0\",\n            \"startNodeId\": \"group0\",\n            \"navigationMode\": \"guided\",\n            \"layout\": {\n                \"template\": \"starmap|leftNav|rightNav\"\n            },\n            \"metadata\": {\n                \"title\": \"My New Project!\"\n            },\n            \"notebook\": {\n                \"enabled\": false,\n                \"label\": \"Notebook\",\n                \"itemTypes\": {\n                    \"note\": {\n                        \"enabled\": true,\n                        \"enableAddNote\": true,\n                        \"enableClipping\": true,\n                        \"enableStudentUploads\": true,\n                        \"label\": {\n                            \"singular\": \"note\",\n                            \"plural\": \"notes\",\n                            \"link\": \"Notes\"\n                        }\n                    },\n                    \"question\": {\n                        \"enabled\": false,\n                        \"label\": {\n                            \"singular\": \"question\",\n                            \"plural\": \"questions\",\n                            \"link\": \"Questions\"\n                        }\n                    },\n                    \"report\": {\n                        \"enabled\": false,\n                        \"label\": {\n                            \"singular\": \"report\",\n                            \"plural\": \"reports\",\n                            \"link\": \"Report\"\n                        },\n                        \"notes\": [\n                            {\n                                \"reportId\": \"finalReport\",\n                                \"title\": \"Final Report\",\n                                \"description\": \"Final summary report of what you learned in this project\",\n                                \"prompt\": \"Use this space to write your final report using evidence from your notebook.\",\n                                \"content\": \"<h3>This is a heading</h3><p>This is a paragraph.</p>\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"inactiveGroups\": [],\n            \"inactiveNodes\": []\n        };\n\n        this.project = this.newProjectTemplate1;\n    }\n\n    registerNewProject() {\n        var projectJSONString = angular.toJson(this.project, 4);\n        var commitMessage = \"Project created on \" + new Date().getTime();\n        this.ProjectService.registerNewProject(projectJSONString, commitMessage).then((projectId) => {\n            this.$state.go('root.project', {projectId: projectId});\n        });\n    }\n\n    cancelRegisterNewProject() {\n        this.$state.go('root.main');\n    }\n};\n\nAuthoringToolNewProjectController.$inject = ['$state', 'ConfigService', 'ProjectService'];\n\nexport default AuthoringToolNewProjectController;"]}