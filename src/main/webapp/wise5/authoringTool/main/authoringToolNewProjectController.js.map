{"version":3,"sources":["authoringToolNewProjectController.es6"],"names":["AuthoringToolNewProjectController","$filter","$state","$timeout","ConfigService","ProjectService","$translate","project","getNewProjectTemplate","newProjectTitleInput","document","getElementById","focus","projectJSONString","angular","toJson","commitMessage","Date","getTime","registerNewProject","then","projectId","go","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,iC;AAEJ,6CACIC,OADJ,EAEIC,MAFJ,EAGIC,QAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAKoB;AAAA;;AAClB,SAAKJ,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,UAAL,GAAkB,KAAKL,OAAL,CAAa,WAAb,CAAlB;AACA,SAAKM,OAAL,GAAe,KAAKF,cAAL,CAAoBG,qBAApB,EAAf;;AAEA;AACA,SAAKL,QAAL,CAAc,YAAM;AAClB,UAAIM,uBAAuBC,SAASC,cAAT,CAAwB,iBAAxB,CAA3B;AACA,UAAIF,wBAAwB,IAA5B,EAAkC;AAChCA,6BAAqBG,KAArB;AACD;AACF,KALD;AAMD;;AAED;;;;;;;yCAGqB;AAAA;;AACnB,UAAIC,oBAAoBC,QAAQC,MAAR,CAAe,KAAKR,OAApB,EAA6B,CAA7B,CAAxB;AACA,UAAIS,gBACA,KAAKV,UAAL,CAAgB,kBAAhB,IAAsC,IAAIW,IAAJ,GAAWC,OAAX,EAD1C;AAEA,WAAKb,cAAL,CAAoBc,kBAApB,CAAuCN,iBAAvC,EAA0DG,aAA1D,EACKI,IADL,CACU,UAACC,SAAD,EAAe;AACvB,cAAKnB,MAAL,CAAYoB,EAAZ,CAAe,cAAf,EAA+B,EAACD,WAAWA,SAAZ,EAA/B;AACD,OAHD;AAID;;;+CAE0B;AACzB,WAAKnB,MAAL,CAAYoB,EAAZ,CAAe,WAAf;AACD;;;;;;AAGHtB,kCAAkCuB,OAAlC,GAA4C,CACxC,SADwC,EAExC,QAFwC,EAGxC,UAHwC,EAIxC,eAJwC,EAKxC,gBALwC,CAA5C;;kBAQevB,iC","file":"authoringToolNewProjectController.js","sourcesContent":["'use strict';\n\nclass AuthoringToolNewProjectController {\n\n  constructor(\n      $filter,\n      $state,\n      $timeout,\n      ConfigService,\n      ProjectService) {\n    this.$filter = $filter;\n    this.$state = $state;\n    this.$timeout = $timeout;\n    this.ConfigService = ConfigService;\n    this.ProjectService = ProjectService;\n    this.$translate = this.$filter('translate');\n    this.project = this.ProjectService.getNewProjectTemplate();\n\n    // focus on the newProjectTitle input element\n    this.$timeout(() => {\n      let newProjectTitleInput = document.getElementById('newProjectTitle');\n      if (newProjectTitleInput != null) {\n        newProjectTitleInput.focus();\n      }\n    });\n  }\n\n  /**\n   * Register a new project with WISE\n   */\n  registerNewProject() {\n    let projectJSONString = angular.toJson(this.project, 4);\n    let commitMessage =\n        this.$translate('projectCreatedOn') + new Date().getTime();\n    this.ProjectService.registerNewProject(projectJSONString, commitMessage)\n        .then((projectId) => {\n      this.$state.go('root.project', {projectId: projectId});\n    });\n  }\n\n  cancelRegisterNewProject() {\n    this.$state.go('root.main');\n  }\n}\n\nAuthoringToolNewProjectController.$inject = [\n    '$filter',\n    '$state',\n    '$timeout',\n    'ConfigService',\n    'ProjectService'\n];\n\nexport default AuthoringToolNewProjectController;\n"]}