{"version":3,"sources":["nodeController.es6"],"names":[],"mappings":";;;;;;;;;;IAAM;AACF,aADE,cACF,CAAY,MAAZ,EACY,MADZ,EAEY,YAFZ,EAGY,cAHZ,EAG4B;8BAJ1B,gBAI0B;;AACxB,aAAK,MAAL,GAAc,MAAd,CADwB;AAExB,aAAK,MAAL,GAAc,MAAd,CAFwB;AAGxB,aAAK,YAAL,GAAoB,YAApB,CAHwB;AAIxB,aAAK,cAAL,GAAsB,cAAtB,CAJwB;AAKxB,aAAK,SAAL,GAAiB,aAAa,SAAb,CALO;AAMxB,aAAK,MAAL,GAAc,aAAa,MAAb,CANU;AAOxB,aAAK,mBAAL,GAA2B,KAA3B,CAPwB;AAQxB,aAAK,iBAAL,GAAyB,IAAzB;;;AARwB,YAWxB,CAAK,cAAL,GAAsB,CAClB,EAAC,eAAe,YAAf,EAA6B,eAAe,YAAf,EADZ,EAElB,EAAC,eAAe,MAAf,EAAuB,eAAe,MAAf,EAFN,EAGlB,EAAC,eAAe,UAAf,EAA2B,eAAe,UAAf,EAHV,EAIlB,EAAC,eAAe,OAAf,EAAwB,eAAe,OAAf,EAJP,EAKlB,EAAC,eAAe,MAAf,EAAuB,eAAe,MAAf,EALN,EAMlB,EAAC,eAAe,OAAf,EAAwB,eAAe,OAAf,EANP,EAOlB,EAAC,eAAe,OAAf,EAAwB,eAAe,OAAf,EAPP,EAQlB,EAAC,eAAe,gBAAf,EAAiC,eAAe,iBAAf,EARhB,EASlB,EAAC,eAAe,cAAf,EAA+B,eAAe,eAAf,EATd,EAUlB,EAAC,eAAe,YAAf,EAA6B,eAAe,aAAf,EAVZ,EAWlB,EAAC,eAAe,OAAf,EAAwB,eAAe,OAAf,EAXP,CAAtB;;;AAXwB,YA0BxB,CAAK,iBAAL,GAAyB,KAAK,cAAL,CAAoB,CAApB,EAAuB,aAAvB;;;AA1BD,YA6BxB,CAAK,IAAL,GAAY,KAAK,cAAL,CAAoB,WAApB,CAAgC,KAAK,MAAL,CAA5C;;;AA7BwB,YAgCxB,CAAK,UAAL,GAAkB,KAAK,cAAL,CAAoB,qBAApB,CAA0C,KAAK,MAAL,CAA5D,CAhCwB;KAH5B;;iBADE;;qCAsCW;AACT,iBAAK,MAAL,CAAY,EAAZ,CAAe,kBAAf,EAAmC,EAAC,QAAQ,KAAK,MAAL,EAA5C,EADS;;;;sCAIC;AACV,iBAAK,MAAL,CAAY,EAAZ,CAAe,mBAAf,EAAoC,EAAC,QAAQ,KAAK,MAAL,EAA7C,EADU;;;;uCAIC;AACX,iBAAK,MAAL,CAAY,EAAZ,CAAe,oBAAf,EAAqC,EAAC,QAAQ,KAAK,MAAL,EAA9C,EADW;;;;gCAIP;AACJ,iBAAK,MAAL,CAAY,EAAZ,CAAe,cAAf,EAA+B,EAAC,WAAW,KAAK,SAAL,EAA3C,EADI;;;;;;;;0CAOU;;;AAGd,iBAAK,cAAL,CAAoB,eAApB,CAAoC,KAAK,MAAL,EAAa,KAAK,iBAAL,CAAjD;;;AAHc,gBAMd,CAAK,cAAL,CAAoB,WAApB;;;AANc,gBASd,CAAK,mBAAL,GAA2B,KAA3B,CATc;;;;;;;;;mDAeS;AACvB,iBAAK,cAAL,CAAoB,WAApB,GADuB;;;;WAxEzB;;;AA6EN,eAAe,OAAf,GAAyB,CAAC,QAAD,EAAW,QAAX,EAAqB,cAArB,EAAqC,gBAArC,CAAzB;;kBAEe","file":"nodeController.js","sourcesContent":["class NodeController {\n    constructor($scope,\n                $state,\n                $stateParams,\n                ProjectService) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.ProjectService = ProjectService;\n        this.projectId = $stateParams.projectId;\n        this.nodeId = $stateParams.nodeId;\n        this.showCreateComponent = false;\n        this.selectedComponent = null;\n\n        // the array of component types that can be created\n        this.componentTypes = [\n            {componentType: 'Discussion', componentName: 'Discussion'},\n            {componentType: 'Draw', componentName: 'Draw'},\n            {componentType: 'Embedded', componentName: 'Embedded'},\n            {componentType: 'Graph', componentName: 'Graph'},\n            {componentType: 'HTML', componentName: 'HTML'},\n            {componentType: 'Label', componentName: 'Label'},\n            {componentType: 'Match', componentName: 'Match'},\n            {componentType: 'MultipleChoice', componentName: 'Multiple Choice'},\n            {componentType: 'OpenResponse', componentName: 'Open Response'},\n            {componentType: 'OutsideURL', componentName: 'Outside URL'},\n            {componentType: 'Table', componentName: 'Table'}\n        ];\n\n        // set the drop down to the first item\n        this.selectedComponent = this.componentTypes[0].componentType;\n\n        // get the node\n        this.node = this.ProjectService.getNodeById(this.nodeId);\n\n        // get the components in the node\n        this.components = this.ProjectService.getComponentsByNodeId(this.nodeId);\n    }\n    showNormal() {\n        this.$state.go('root.node.normal', {nodeId: this.nodeId});\n    };\n\n    showPreview() {\n        this.$state.go('root.node.preview', {nodeId: this.nodeId});\n    };\n\n    showAdvanced() {\n        this.$state.go('root.node.advanced', {nodeId: this.nodeId});\n    };\n\n    close() {\n        this.$state.go('root.project', {projectId: this.projectId});\n    };\n\n    /**\n     * Create a component in this node\n     */\n    createComponent() {\n\n        // create a component and add it to this node\n        this.ProjectService.createComponent(this.nodeId, this.selectedComponent);\n\n        // save the project\n        this.ProjectService.saveProject();\n\n        // hide the create component elements\n        this.showCreateComponent = false;\n    }\n\n    /**\n     * The node has changed in the authoring view\n     */\n    authoringViewNodeChanged() {\n        this.ProjectService.saveProject();\n    }\n}\n\nNodeController.$inject = ['$scope', '$state', '$stateParams', 'ProjectService'];\n\nexport default NodeController;\n"]}