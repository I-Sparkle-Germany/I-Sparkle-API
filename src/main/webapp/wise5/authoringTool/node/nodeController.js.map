{"version":3,"sources":["nodeController.es6"],"names":[],"mappings":"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","file":"nodeController.js","sourcesContent":["'use strict';\n\nclass NodeController {\n\n    constructor($anchorScroll,\n                $location,\n                $scope,\n                $state,\n                $stateParams,\n                $timeout,\n                ProjectService,\n                ConfigService) {\n        this.$anchorScroll = $anchorScroll;\n        this.$location = $location;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$timeout = $timeout;\n        this.ProjectService = ProjectService;\n        this.ConfigService = ConfigService;\n        this.projectId = $stateParams.projectId;\n        this.nodeId = $stateParams.nodeId;\n        this.showCreateComponent = false;\n        this.selectedComponent = null;\n\n        // the array of component types that can be created\n        this.componentTypes = [\n            {componentType: 'Discussion', componentName: 'Discussion'},\n            {componentType: 'Draw', componentName: 'Draw'},\n            {componentType: 'Embedded', componentName: 'Embedded'},\n            {componentType: 'Graph', componentName: 'Graph'},\n            {componentType: 'HTML', componentName: 'HTML'},\n            {componentType: 'Label', componentName: 'Label'},\n            {componentType: 'Match', componentName: 'Match'},\n            {componentType: 'MultipleChoice', componentName: 'Multiple Choice'},\n            {componentType: 'OpenResponse', componentName: 'Open Response'},\n            {componentType: 'OutsideURL', componentName: 'Outside URL'},\n            {componentType: 'Table', componentName: 'Table'}\n        ];\n\n        // set the drop down to the first item\n        this.selectedComponent = this.componentTypes[0].componentType;\n\n        // get the node\n        this.node = this.ProjectService.getNodeById(this.nodeId);\n\n        // get the components in the node\n        this.components = this.ProjectService.getComponentsByNodeId(this.nodeId);\n    }\n\n    /**\n     * Launch VLE with this current step as the initial step\n     */\n    previewStep() {\n        let previewProjectURL = this.ConfigService.getConfigParam(\"previewProjectURL\");\n        let previewStepURL  = previewProjectURL + \"#/vle/\" + this.nodeId;\n        window.open(previewStepURL);\n    };\n\n    close() {\n        this.$state.go('root.project', {projectId: this.projectId});\n    };\n\n    /**\n     * Create a component in this node\n     */\n    createComponent() {\n\n        // create a component and add it to this node\n        this.ProjectService.createComponent(this.nodeId, this.selectedComponent);\n\n        // save the project\n        this.ProjectService.saveProject();\n\n        // hide the create component elements\n        this.showCreateComponent = false;\n\n        // Scroll to the bottom of the page where the new component was added\n        this.$timeout(() => {\n            this.$location.hash('bottom');\n            this.$anchorScroll();\n        });\n    }\n\n    /**\n     * Move a component up within this node\n     * @param componentId the component id\n     */\n    moveComponentUp(componentId) {\n\n        // move the component up within the node\n        this.ProjectService.moveComponentUp(this.nodeId, componentId);\n\n        // save the project\n        this.ProjectService.saveProject();\n    }\n\n    /**\n     * Move a component up within this node\n     * @param componentId the component id\n     */\n    moveComponentDown(componentId) {\n\n        // move the component down within the node\n        this.ProjectService.moveComponentDown(this.nodeId, componentId);\n\n        // save the project\n        this.ProjectService.saveProject();\n    }\n\n    /**\n     * Delete the component from this node\n     * @param componentId the component id\n     */\n    deleteComponent(componentId) {\n    \n        // ask the user to confirm the delete\n        var answer = confirm('Are you sure you want to delete this component?');\n        \n        if (answer) {\n            // the user confirmed yes\n            \n            // delete the component from the node\n            this.ProjectService.deleteComponent(this.nodeId, componentId);\n\n            // save the project\n            this.ProjectService.saveProject();\n        }\n    }\n\n    /**\n     * The node has changed in the authoring view\n     */\n    authoringViewNodeChanged() {\n        this.ProjectService.saveProject();\n    }\n};\n\nNodeController.$inject = ['$anchorScroll', '$location', '$scope', '$state', '$stateParams', '$timeout', 'ProjectService', 'ConfigService'];\n\nexport default NodeController;\n"]}