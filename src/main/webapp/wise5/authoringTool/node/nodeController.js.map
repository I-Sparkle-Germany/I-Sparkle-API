{"version":3,"sources":["nodeController.es6"],"names":[],"mappings":";;;;;;;;;;IAAM,cAAc;AAChB,aADE,cAAc,CACJ,MAAM,EACN,MAAM,EACN,YAAY,EACZ,cAAc,EAAE;8BAJ1B,cAAc;;AAKZ,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,YAAI,CAAC,cAAc,GAAG,cAAc,CAAC;AACrC,YAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM;;;AAAC,AAGlC,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;;;AAAC,AAGzD,YAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC5E;;iBAhBC,cAAc;;qCAiBH;AACT,gBAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;SAC7D;;;sCAEa;AACV,gBAAI,CAAC,MAAM,CAAC,EAAE,CAAC,mBAAmB,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;SAC9D;;;uCAEc;AACX,gBAAI,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;SAC/D;;;gCAEO;AACJ,gBAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;SAClC;;;;;;;mDAK0B;AACvB,gBAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;SACrC;;;WAtCC,cAAc;;;AAyCpB,cAAc,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;;kBAEjE,cAAc","file":"nodeController.js","sourcesContent":["class NodeController {\n    constructor($scope,\n                $state,\n                $stateParams,\n                ProjectService) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.ProjectService = ProjectService;\n        this.nodeId = $stateParams.nodeId;\n\n        // get the node\n        this.node = this.ProjectService.getNodeById(this.nodeId);\n\n        // get the components in the node\n        this.components = this.ProjectService.getComponentsByNodeId(this.nodeId);\n    }\n    showNormal() {\n        this.$state.go('root.node.normal', {nodeId: this.nodeId});\n    };\n\n    showPreview() {\n        this.$state.go('root.node.preview', {nodeId: this.nodeId});\n    };\n\n    showAdvanced() {\n        this.$state.go('root.node.advanced', {nodeId: this.nodeId});\n    };\n\n    close() {\n        this.$state.go('root.project');\n    };\n\n    /**\n     * The node has changed in the authoring view\n     */\n    authoringViewNodeChanged() {\n        this.ProjectService.saveProject();\n    }\n}\n\nNodeController.$inject = ['$scope', '$state', '$stateParams', 'ProjectService'];\n\nexport default NodeController;\n"]}