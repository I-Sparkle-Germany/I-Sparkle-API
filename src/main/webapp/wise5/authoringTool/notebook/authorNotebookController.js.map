{"version":3,"sources":["authorNotebookController.es6"],"names":["AuthorNotebookController","$filter","$mdDialog","$state","$stateParams","$scope","ConfigService","ProjectService","UtilService","$translate","projectId","project","notebook","projectTemplate","getNewProjectTemplate","notes","itemTypes","report","n","length","note","reportId","summernoteId","noteContent","replaceAssetPaths","content","replaceWISELinks","summernoteHTML","insertAssetString","InsertAssetButton","createInsertAssetButton","summernoteOptions","toolbar","height","disableDragAndDrop","buttons","insertAssetButton","$on","event","args","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","target","isImage","$","summernote","isVideo","videoElement","document","createElement","controls","innerHTML","hide","push","commitMessage","saveProject","go","html","removeAbsoluteAssetPaths","insertWISELinks","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,wB;AAEF,sCAAYC,OAAZ,EACYC,SADZ,EAEYC,MAFZ,EAGYC,YAHZ,EAIYC,MAJZ,EAKYC,aALZ,EAMYC,cANZ,EAOYC,WAPZ,EAOyB;AAAA;;AAAA;;AAErB,aAAKP,OAAL,GAAeA,OAAf;AACA,aAAKC,SAAL,GAAiBA,SAAjB;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACA,aAAKC,UAAL,GAAkB,KAAKR,OAAL,CAAa,WAAb,CAAlB;AACA,aAAKS,SAAL,GAAiB,KAAKN,YAAL,CAAkBM,SAAnC;AACA,aAAKC,OAAL,GAAe,KAAKJ,cAAL,CAAoBI,OAAnC;;AAEA,YAAI,KAAKA,OAAL,CAAaC,QAAb,IAAyB,IAA7B,EAAmC;AAC/B;AACA,gBAAIC,kBAAkB,KAAKN,cAAL,CAAoBO,qBAApB,EAAtB;AACA,iBAAKH,OAAL,CAAaC,QAAb,GAAwBC,gBAAgBD,QAAxC;AACH;;AAED,YAAIG,QAAQ,KAAKJ,OAAL,CAAaC,QAAb,CAAsBI,SAAtB,CAAgCC,MAAhC,CAAuCF,KAAnD;;AAEA,YAAIA,SAAS,IAAb,EAAmB;AACf,iBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIH,MAAMI,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC,oBAAIE,OAAOL,MAAMG,CAAN,CAAX;;AAEA,oBAAIE,QAAQ,IAAZ,EAAkB;AACd,wBAAIC,WAAWD,KAAKC,QAApB;;AAEAD,yBAAKE,YAAL,GAAoB,wBAAwBD,QAA5C;;AAEA,wBAAIE,cAAc,KAAKhB,cAAL,CAAoBiB,iBAApB,CAAsCJ,KAAKK,OAA3C,CAAlB;AACAF,kCAAc,KAAKf,WAAL,CAAiBkB,gBAAjB,CAAkCH,WAAlC,CAAd;;AAEAH,yBAAKO,cAAL,GAAsBJ,WAAtB;;AAEA;AACA,wBAAIK,oBAAoB,KAAKnB,UAAL,CAAgB,cAAhB,CAAxB;;AAEA;;;;AAIA,wBAAIoB,oBAAoB,KAAKrB,WAAL,CAAiBsB,uBAAjB,CAAyC,IAAzC,EAA+C,KAAKpB,SAApD,EAA+D,IAA/D,EAAqE,IAArE,EAA2EW,QAA3E,EAAqFO,iBAArF,CAAxB;;AAEA;;;;AAIAR,yBAAKW,iBAAL,GAAyB;AACrBC,iCAAS,CACL,CAAC,OAAD,EAAU,CAAC,OAAD,CAAV,CADK,EAEL,CAAC,MAAD,EAAS,CAAC,MAAD,EAAS,WAAT,EAAsB,OAAtB,CAAT,CAFK,EAGL,CAAC,UAAD,EAAa,CAAC,UAAD,CAAb,CAHK,EAIL,CAAC,OAAD,EAAU,CAAC,OAAD,CAAV,CAJK,EAKL,CAAC,MAAD,EAAS,CAAC,IAAD,EAAO,IAAP,EAAa,WAAb,CAAT,CALK,EAML,CAAC,OAAD,EAAU,CAAC,OAAD,CAAV,CANK,EAOL,CAAC,QAAD,EAAW,CAAC,MAAD,EAAS,OAAT,CAAX,CAPK,EAQL,CAAC,MAAD,EAAS,CAAC,YAAD,EAAe,UAAf,EAA2B,MAA3B,CAAT,CARK,EASL,CAAC,cAAD,EAAiB,CAAC,mBAAD,CAAjB,CATK,CADY;AAYrBC,gCAAQ,GAZa;AAarBC,4CAAoB,IAbC;AAcrBC,iCAAS;AACLC,+CAAmBP;AADd;AAdY,qBAAzB;AAkBH;AACJ;AACJ;;AAED;;;;AAIA,aAAKxB,MAAL,CAAYgC,GAAZ,CAAgB,eAAhB,EAAiC,UAACC,KAAD,EAAQC,IAAR,EAAiB;;AAE9C,gBAAIA,QAAQ,IAAZ,EAAkB;;AAEd;AACA,oBAAIA,KAAK7B,SAAL,IAAkB,MAAKA,SAA3B,EAAsC;AAClC;AACA,wBAAI8B,YAAYD,KAAKC,SAArB;;AAEA,wBAAIA,aAAa,IAAjB,EAAuB;AACnB,4BAAIC,WAAWD,UAAUC,QAAzB;;AAEA,4BAAIA,YAAY,IAAhB,EAAsB;AAClB;;;;;AAKA,gCAAIC,sBAAsB,MAAKpC,aAAL,CAAmBqC,6BAAnB,EAA1B;AACA,gCAAIC,gBAAgBF,sBAAsB,GAAtB,GAA4BD,QAAhD;;AAEA,gCAAInB,eAAe,EAAnB;AACA,gCAAID,WAAWkB,KAAKM,MAApB;;AAEA,gCAAIxB,YAAY,IAAhB,EAAsB;AAClB;AACAC,+CAAe,wBAAwBD,QAAvC;AACH;;AAED,gCAAIC,gBAAgB,EAApB,EAAwB;AACpB,oCAAI,MAAKd,WAAL,CAAiBsC,OAAjB,CAAyBL,QAAzB,CAAJ,EAAwC;AACpC;;;;AAIAM,sCAAE,MAAMzB,YAAR,EAAsB0B,UAAtB,CAAiC,qBAAjC;AACAD,sCAAE,MAAMzB,YAAR,EAAsB0B,UAAtB,CAAiC,cAAjC;;AAEA;AACAD,sCAAE,MAAMzB,YAAR,EAAsB0B,UAAtB,CAAiC,aAAjC,EAAgDJ,aAAhD,EAA+DH,QAA/D;AACH,iCAVD,MAUO,IAAI,MAAKjC,WAAL,CAAiByC,OAAjB,CAAyBR,QAAzB,CAAJ,EAAwC;AAC3C;;;;AAIAM,sCAAE,MAAMzB,YAAR,EAAsB0B,UAAtB,CAAiC,qBAAjC;AACAD,sCAAE,MAAMzB,YAAR,EAAsB0B,UAAtB,CAAiC,cAAjC;;AAEA;AACA,wCAAIE,eAAeC,SAASC,aAAT,CAAuB,OAAvB,CAAnB;AACAF,iDAAaG,QAAb,GAAwB,MAAxB;AACAH,iDAAaI,SAAb,GAAyB,qBAAqBV,aAArB,GAAqC,qBAA9D;AACAG,sCAAE,MAAMzB,YAAR,EAAsB0B,UAAtB,CAAiC,YAAjC,EAA+CE,YAA/C;AACH;AACJ;AACJ;AACJ;AACJ;AACJ;;AAED;AACA,kBAAKhD,SAAL,CAAeqD,IAAf;AACH,SA9DD;AA+DH;;AAED;;;;;;;wCAGgB;AACZ;AACA,gBAAI1C,kBAAkB,KAAKN,cAAL,CAAoBO,qBAApB,EAAtB;;AAEA,gBAAI,KAAKH,OAAL,CAAaC,QAAb,CAAsBI,SAAtB,CAAgCC,MAAhC,CAAuCF,KAAvC,IAAgD,IAApD,EAA0D;AACtD,qBAAKJ,OAAL,CAAaC,QAAb,CAAsBI,SAAtB,CAAgCC,MAAhC,CAAuCF,KAAvC,GAA+C,EAA/C;AACH;AACD,gBAAI,KAAKJ,OAAL,CAAaC,QAAb,CAAsBI,SAAtB,CAAgCC,MAAhC,CAAuCF,KAAvC,GAA+C,CAAnD,EAAsD;AAClD,qBAAKJ,OAAL,CAAaC,QAAb,CAAsBI,SAAtB,CAAgCC,MAAhC,CAAuCF,KAAvC,CAA6CyC,IAA7C,CAAkD3C,gBAAgBD,QAAhB,CAAyBI,SAAzB,CAAmCC,MAAnC,CAA0CF,KAA1C,CAAgD,CAAhD,CAAlD;AACH;AACJ;;;+BAEM;;AAEH,gBAAIA,QAAQ,KAAKJ,OAAL,CAAaC,QAAb,CAAsBI,SAAtB,CAAgCC,MAAhC,CAAuCF,KAAnD;;AAEA,gBAAIA,SAAS,IAAb,EAAmB;;AAEf;AACA,qBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIH,MAAMI,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC,wBAAIE,OAAOL,MAAMG,CAAN,CAAX;;AAEA,wBAAIE,QAAQ,IAAZ,EAAkB;AACd;AACA,+BAAOA,KAAK,cAAL,CAAP;AACA,+BAAOA,KAAK,gBAAL,CAAP;AACA,+BAAOA,KAAK,mBAAL,CAAP;AACH;AACJ;AACJ;;AAED,gBAAIqC,gBAAgB,KAAKhD,UAAL,CAAgB,uBAAhB,CAApB;;AAEA,iBAAKF,cAAL,CAAoBmD,WAApB,CAAgCD,aAAhC;AACA,iBAAKtD,MAAL,CAAYwD,EAAZ,CAAe,cAAf,EAA+B,EAACjD,WAAW,KAAKA,SAAjB,EAA/B;AACH;;AAED;;;;;;;8CAIsBU,I,EAAM;;AAExB,gBAAIA,QAAQ,IAAZ,EAAkB;;AAEd;AACA,oBAAIwC,OAAOxC,KAAKO,cAAhB;;AAEA;;;;;;;AAOAiC,uBAAO,KAAKtD,aAAL,CAAmBuD,wBAAnB,CAA4CD,IAA5C,CAAP;;AAEA;;;;AAIAA,uBAAO,KAAKpD,WAAL,CAAiBsD,eAAjB,CAAiCF,IAAjC,CAAP;;AAEAxC,qBAAKK,OAAL,GAAemC,IAAf;AACH;AACJ;;;;;;AAGL5D,yBAAyB+D,OAAzB,GAAmC,CAC/B,SAD+B,EAE/B,WAF+B,EAG/B,QAH+B,EAI/B,cAJ+B,EAK/B,QAL+B,EAM/B,eAN+B,EAO/B,gBAP+B,EAQ/B,aAR+B,CAAnC;;kBAUe/D,wB","file":"authorNotebookController.js","sourcesContent":["'use strict';\n\nclass AuthorNotebookController {\n\n    constructor($filter,\n                $mdDialog,\n                $state,\n                $stateParams,\n                $scope,\n                ConfigService,\n                ProjectService,\n                UtilService) {\n\n        this.$filter = $filter;\n        this.$mdDialog = $mdDialog;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$scope = $scope;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.UtilService = UtilService;\n        this.$translate = this.$filter('translate');\n        this.projectId = this.$stateParams.projectId;\n        this.project = this.ProjectService.project;\n\n        if (this.project.notebook == null) {\n            // some old projects may not have the notebook settings, so copy default settings from template project.\n            let projectTemplate = this.ProjectService.getNewProjectTemplate();\n            this.project.notebook = projectTemplate.notebook;\n        }\n\n        var notes = this.project.notebook.itemTypes.report.notes;\n\n        if (notes != null) {\n            for (var n = 0; n < notes.length; n++) {\n                var note = notes[n];\n\n                if (note != null) {\n                    var reportId = note.reportId;\n\n                    note.summernoteId = 'summernoteNotebook_' + reportId;\n\n                    var noteContent = this.ProjectService.replaceAssetPaths(note.content);\n                    noteContent = this.UtilService.replaceWISELinks(noteContent);\n\n                    note.summernoteHTML = noteContent;\n\n                    // the tooltip text for the insert WISE asset button\n                    var insertAssetString = this.$translate('INSERT_ASSET');\n\n                    /*\n                     * create the custom button for inserting WISE assets into\n                     * summernote\n                     */\n                    var InsertAssetButton = this.UtilService.createInsertAssetButton(this, this.projectId, null, null, reportId, insertAssetString);\n\n                    /*\n                     * the options that specifies the tools to display in the\n                     * summernote prompt\n                     */\n                    note.summernoteOptions = {\n                        toolbar: [\n                            ['style', ['style']],\n                            ['font', ['bold', 'underline', 'clear']],\n                            ['fontname', ['fontname']],\n                            ['color', ['color']],\n                            ['para', ['ul', 'ol', 'paragraph']],\n                            ['table', ['table']],\n                            ['insert', ['link', 'video']],\n                            ['view', ['fullscreen', 'codeview', 'help']],\n                            ['customButton', ['insertAssetButton']]\n                        ],\n                        height: 300,\n                        disableDragAndDrop: true,\n                        buttons: {\n                            insertAssetButton: InsertAssetButton\n                        }\n                    };\n                }\n            }\n        }\n\n        /*\n         * Listen for the assetSelected event which occurs when the user\n         * selects an asset from the choose asset popup\n         */\n        this.$scope.$on('assetSelected', (event, args) => {\n\n            if (args != null) {\n\n                // make sure the event was fired for this component\n                if (args.projectId == this.projectId) {\n                    // the asset was selected for this component\n                    var assetItem = args.assetItem;\n\n                    if (assetItem != null) {\n                        var fileName = assetItem.fileName;\n\n                        if (fileName != null) {\n                            /*\n                             * get the assets directory path\n                             * e.g.\n                             * /wise/curriculum/3/\n                             */\n                            var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n                            var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n                            var summernoteId = '';\n                            var reportId = args.target;\n\n                            if (reportId != null) {\n                                // the target is the summernote prompt element\n                                summernoteId = 'summernoteNotebook_' + reportId;\n                            }\n\n                            if (summernoteId != '') {\n                                if (this.UtilService.isImage(fileName)) {\n                                    /*\n                                     * move the cursor back to its position when the asset chooser\n                                     * popup was clicked\n                                     */\n                                    $('#' + summernoteId).summernote('editor.restoreRange');\n                                    $('#' + summernoteId).summernote('editor.focus');\n\n                                    // add the image html\n                                    $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                                } else if (this.UtilService.isVideo(fileName)) {\n                                    /*\n                                     * move the cursor back to its position when the asset chooser\n                                     * popup was clicked\n                                     */\n                                    $('#' + summernoteId).summernote('editor.restoreRange');\n                                    $('#' + summernoteId).summernote('editor.focus');\n\n                                    // insert the video element\n                                    var videoElement = document.createElement('video');\n                                    videoElement.controls = 'true';\n                                    videoElement.innerHTML = \"<source ng-src='\" + fullAssetPath + \"' type='video/mp4'>\";\n                                    $('#' + summernoteId).summernote('insertNode', videoElement);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            // close the popup\n            this.$mdDialog.hide();\n        });\n    }\n\n    /**\n     * Adds a new report note item to this project's notebook. Currently we limit 1 report note per project.\n     */\n    addReportNote() {\n        // some old projects may not have the notebook settings, so copy default settings from template project.\n        let projectTemplate = this.ProjectService.getNewProjectTemplate();\n\n        if (this.project.notebook.itemTypes.report.notes == null) {\n            this.project.notebook.itemTypes.report.notes = [];\n        }\n        if (this.project.notebook.itemTypes.report.notes < 1) {\n            this.project.notebook.itemTypes.report.notes.push(projectTemplate.notebook.itemTypes.report.notes[0]);\n        }\n    }\n\n    exit() {\n\n        var notes = this.project.notebook.itemTypes.report.notes;\n\n        if (notes != null) {\n\n            // loop through all the notes\n            for (var n = 0; n < notes.length; n++) {\n                var note = notes[n];\n\n                if (note != null) {\n                    // remove the temporary fields that were used for bookkeeping\n                    delete note['summernoteId'];\n                    delete note['summernoteHTML'];\n                    delete note['summernoteOptions'];\n                }\n            }\n        }\n\n        let commitMessage = this.$translate('madeChangesToNotebook');\n\n        this.ProjectService.saveProject(commitMessage);\n        this.$state.go('root.project', {projectId: this.projectId});\n    }\n\n    /**\n     * A note was changed\n     * @param note the note that was changed\n     */\n    summernoteHTMLChanged(note) {\n\n        if (note != null) {\n\n            // get the summernote html\n            var html = note.summernoteHTML;\n\n            /*\n             * remove the absolute asset paths\n             * e.g.\n             * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n             * will be changed to\n             * <img src='sun.png'/>\n             */\n            html = this.ConfigService.removeAbsoluteAssetPaths(html);\n\n            /*\n             * replace <a> and <button> elements with <wiselink> elements when\n             * applicable\n             */\n            html = this.UtilService.insertWISELinks(html);\n\n            note.content = html;\n        }\n    }\n}\n\nAuthorNotebookController.$inject = [\n    '$filter',\n    '$mdDialog',\n    '$state',\n    '$stateParams',\n    '$scope',\n    'ConfigService',\n    'ProjectService',\n    'UtilService'];\n\nexport default AuthorNotebookController;\n"]}