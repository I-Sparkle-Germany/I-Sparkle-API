{"version":3,"sources":["projectController.es6"],"names":[],"mappings":"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","file":"projectController.js","sourcesContent":["class ProjectController {\n\n    constructor($scope, $state, $stateParams, ProjectService, ConfigService) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.ProjectService = ProjectService;\n        this.ConfigService = ConfigService;\n\n        this.title = \"project controller\";\n        this.project = this.ProjectService.getProject();\n        this.items = this.ProjectService.idToOrder;\n        this.nodeIds = this.ProjectService.getFlattenedProjectAsNodeIds();\n\n        this.updateProjectAsText();\n\n        $scope.$watch(angular.bind(this, function() {\n            return this.projectAsText;\n        }), angular.bind(this, function () {\n            try {\n                this.project = JSON.parse(this.projectAsText);\n            } catch(exp) {\n                //Exception handler\n            };\n        }));\n\n        this.showCommitHistory();\n    };\n\n    // updates projectAsText field, which is the string representation of the project that we'll show in the textarea\n    updateProjectAsText() {\n        this.projectAsText = JSON.stringify(this.project, null, 4);\n    };\n\n    previewProject() {\n        let previewProjectURL = this.ConfigService.getConfigParam(\"previewProjectURL\");\n        window.open(previewProjectURL);\n    };\n\n    saveProject() {\n        let projectJSONString = JSON.stringify(this.project, null, 4);\n        let commitMessage = $(\"#commitMessageInput\").val();\n        try {\n            // if projectJSONString is bad json, it will throw an exception and not save.\n            JSON.parse(projectJSONString);\n\n            this.ProjectService.saveProject(projectJSONString, commitMessage).then(angular.bind(this, function(commitHistoryArray) {\n                this.commitHistory = commitHistoryArray;\n                $(\"#commitMessageInput\").val(\"\");  // clear field after commit\n            }));\n        } catch (error) {\n            alert(\"Invalid JSON. Please check syntax. Aborting save.\");\n            return;\n        }\n    };\n\n    showCommitHistory() {\n        this.ProjectService.getCommitHistory().then(angular.bind(this, function (commitHistoryArray) {\n            this.commitHistory = commitHistoryArray;\n        }));\n    }\n\n    /**\n     * Get the node position\n     * @param nodeId the node id\n     * @returns the node position\n     */\n    getNodePositionById(nodeId) {\n        return this.ProjectService.getNodePositionById(nodeId);\n    };\n\n    /**\n     * Get the node title for a node\n     * @param nodeId the node id\n     * @returns the node title\n     */\n    getNodeTitleByNodeId(nodeId) {\n        return this.ProjectService.getNodeTitleByNodeId(nodeId);\n    };\n\n    /**\n     * Check if a node id is for a group\n     * @param nodeId\n     * @returns whether the node is a group node\n     */\n    isGroupNode(nodeId) {\n        return this.ProjectService.isGroupNode(nodeId);\n    };\n\n    /**\n     * A node was clicked so we will go to the node authoring view\n     * @param nodeId\n     */\n    nodeClicked(nodeId) {\n        this.$state.go('root.node', {nodeId:nodeId});\n    };\n}\n\nProjectController.$inject = ['$scope', '$state', '$stateParams', 'ProjectService', 'ConfigService'];\n\nexport default ProjectController;\n"]}