{"version":3,"sources":["wiseLinkAuthoringController.es6"],"names":["WISELinkAuthoringController","$rootScope","$stateParams","$mdDialog","ProjectService","projectId","nodeId","componentId","target","items","idToOrder","wiseLinkNodeId","wiseLinkType","wiseLinkText","wiseLinkClass","position","getNodePositionById","title","getNodeTitleByNodeId","isGroupNode","alert","params","$broadcast","hide","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,2B;AAEF,yCAAYC,UAAZ,EACYC,YADZ,EAEYC,SAFZ,EAGYC,cAHZ,EAG4B;AAAA;;AAExB,aAAKH,UAAL,GAAkBA,UAAlB;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKC,SAAL,GAAiBA,SAAjB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;;AAEA;;;;AAIA,aAAKC,SAAL,GAAiBH,aAAaG,SAA9B;AACA,aAAKC,MAAL,GAAcJ,aAAaI,MAA3B;AACA,aAAKC,WAAL,GAAmBL,aAAaK,WAAhC;AACA,aAAKC,MAAL,GAAcN,aAAaM,MAA3B;;AAEA;;;;AAIA,aAAKC,KAAL,GAAa,KAAKL,cAAL,CAAoBM,SAAjC;;AAEA;AACA,aAAKC,cAAL,GAAsB,EAAtB;AACA,aAAKC,YAAL,GAAoB,MAApB;AACA,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAKC,aAAL,GAAqB,EAArB;AACH;;AAED;;;;;;;gDAGwB;;AAEpB,gBAAI,KAAKH,cAAL,IAAuB,IAAvB,IAA+B,KAAKA,cAAL,IAAuB,EAA1D,EAA8D;;AAE1D;AACA,oBAAII,WAAW,KAAKC,mBAAL,CAAyB,KAAKL,cAA9B,CAAf;;AAEA;AACA,oBAAIM,QAAQ,KAAKC,oBAAL,CAA0B,KAAKP,cAA/B,CAAZ;;AAEA;AACA,qBAAKE,YAAL,GAAoBE,WAAW,IAAX,GAAkBE,KAAtC;AACH;AACJ;;AAED;;;;;;;;4CAKoBX,M,EAAQ;AACxB,mBAAO,KAAKF,cAAL,CAAoBY,mBAApB,CAAwCV,MAAxC,CAAP;AACH;;;;;AAED;;;;;6CAKqBA,M,EAAQ;AACzB,mBAAO,KAAKF,cAAL,CAAoBc,oBAApB,CAAyCZ,MAAzC,CAAP;AACH;;;;;AAED;;;;;oCAKYA,M,EAAQ;AAChB,mBAAO,KAAKF,cAAL,CAAoBe,WAApB,CAAgCb,MAAhC,CAAP;AACH;;;;;AAED;;;;;yCAKiB;;AAEb,gBAAI,KAAKK,cAAL,IAAuB,IAAvB,IAA+B,KAAKA,cAAL,IAAuB,EAA1D,EAA8D;AAC1D;AACAS,sBAAM,yBAAN;AACH,aAHD,MAGO,IAAI,KAAKP,YAAL,IAAqB,IAArB,IAA6B,KAAKA,YAAL,IAAqB,EAAtD,EAA0D;AAC7D;AACAO,sBAAM,sBAAN;AACH,aAHM,MAGA;AACH;AACA,oBAAIC,SAAS;AACThB,+BAAW,KAAKA,SADP;AAETC,4BAAQ,KAAKA,MAFJ;AAGTC,iCAAa,KAAKA,WAHT;AAITC,4BAAQ,KAAKA,MAJJ;AAKTG,oCAAgB,KAAKA,cALZ;AAMTC,kCAAc,KAAKA,YANV;AAOTC,kCAAc,KAAKA,YAPV;AAQTC,mCAAe,KAAKA;AARX,iBAAb;AAUA,qBAAKb,UAAL,CAAgBqB,UAAhB,CAA2B,gBAA3B,EAA6CD,MAA7C;AACH;AACJ;;AAED;;;;;;yCAGiB;AACb;AACA,iBAAKlB,SAAL,CAAeoB,IAAf;AACH;;;;;;AAGLvB,4BAA4BwB,OAA5B,GAAsC,CAClC,YADkC,EAElC,cAFkC,EAGlC,WAHkC,EAIlC,gBAJkC,CAAtC;;kBAOexB,2B","file":"wiseLinkAuthoringController.js","sourcesContent":["'use strict';\n\nclass WISELinkAuthoringController {\n\n    constructor($rootScope,\n                $stateParams,\n                $mdDialog,\n                ProjectService) {\n\n        this.$rootScope = $rootScope;\n        this.$stateParams = $stateParams;\n        this.$mdDialog = $mdDialog;\n        this.ProjectService = ProjectService;\n\n        /*\n         * get the node id and component id of the component that has opened\n         * the WISE link authoring popup\n         */\n        this.projectId = $stateParams.projectId;\n        this.nodeId = $stateParams.nodeId;\n        this.componentId = $stateParams.componentId;\n        this.target = $stateParams.target;\n\n        /*\n         * get the mapping of node id to order which is used to display\n         * the steps in the drop down\n         */\n        this.items = this.ProjectService.idToOrder;\n\n        // the model fields for the WISE link authoring\n        this.wiseLinkNodeId = '';\n        this.wiseLinkType = 'link';\n        this.wiseLinkText = '';\n        this.wiseLinkClass = '';\n    }\n\n    /**\n     * The node id changed\n     */\n    wiseLinkNodeIdChanged() {\n\n        if (this.wiseLinkNodeId != null && this.wiseLinkNodeId != '') {\n\n            // get the position of the step\n            var position = this.getNodePositionById(this.wiseLinkNodeId);\n\n            // get the title of the step\n            var title = this.getNodeTitleByNodeId(this.wiseLinkNodeId);\n\n            // set the link text to display the position and title\n            this.wiseLinkText = position + ': ' + title;\n        }\n    }\n\n    /**\n     * Get the node position for a node\n     * @param nodeId the node id\n     * @returns the node position\n     */\n    getNodePositionById(nodeId) {\n        return this.ProjectService.getNodePositionById(nodeId);\n    };\n\n    /**\n     * Get the node title for a node\n     * @param nodeId the node id\n     * @returns the node title\n     */\n    getNodeTitleByNodeId(nodeId) {\n        return this.ProjectService.getNodeTitleByNodeId(nodeId);\n    };\n\n    /**\n     * Check if a node id is for a group\n     * @param nodeId\n     * @returns whether the node is a group node\n     */\n    isGroupNode(nodeId) {\n        return this.ProjectService.isGroupNode(nodeId);\n    };\n\n    /**\n     * Fire an event to create the WISE Link. Listeners will be the ones that\n     * actually create the WISE Link. The event that is fired will provide\n     * the parameters for the WISE Link.\n     */\n    createWISELink() {\n\n        if (this.wiseLinkNodeId == null || this.wiseLinkNodeId == '') {\n            // a step was not chosen yet\n            alert('You must select a step.');\n        } else if (this.wiseLinkText == null || this.wiseLinkText == '') {\n            // link text is empty and must be provided\n            alert('You must enter text.');\n        } else {\n            // fire the event to notify listeners that a WISE Link should be created\n            var params = {\n                projectId: this.projectId,\n                nodeId: this.nodeId,\n                componentId: this.componentId,\n                target: this.target,\n                wiseLinkNodeId: this.wiseLinkNodeId,\n                wiseLinkType: this.wiseLinkType,\n                wiseLinkText: this.wiseLinkText,\n                wiseLinkClass: this.wiseLinkClass\n            };\n            this.$rootScope.$broadcast('createWISELink', params);\n        }\n    }\n\n    /**\n     * Cancel the WISE Link authoring\n     */\n    cancelWISELink() {\n        // hide the dialog popup\n        this.$mdDialog.hide();\n    }\n}\n\nWISELinkAuthoringController.$inject = [\n    '$rootScope',\n    '$stateParams',\n    '$mdDialog',\n    'ProjectService'\n]\n\nexport default WISELinkAuthoringController;\n"]}