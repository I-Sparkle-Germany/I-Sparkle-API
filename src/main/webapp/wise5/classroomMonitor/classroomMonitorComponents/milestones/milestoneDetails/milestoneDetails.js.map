{"version":3,"sources":["milestoneDetails.es6"],"names":["MilestoneDetailsController","$filter","ConfigService","ProjectService","$translate","$onInit","requirements","getRequirementsText","requiredText","requiredActivities","requiredSteps","items","milestone","angular","forEach","value","key","checked","isGroupNode","itemNumber","nodeIdToNumber","itemText","workgroupId","getDisplayUserNamesByWorkgroupId","getAvatarColorForWorkgroupId","workgroup","onShowWorkgroup","$inject","MilestoneDetails","bindings","template","controller"],"mappings":"AAAA;;;;;;;;;;IAEMA,0B;AACF,wCAAYC,OAAZ,EACYC,aADZ,EAEYC,cAFZ,EAE4B;AAAA;;AAAA;;AACxB,aAAKF,OAAL,GAAeA,OAAf;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;;AAEA,aAAKC,UAAL,GAAkB,KAAKH,OAAL,CAAa,WAAb,CAAlB;;AAEA,aAAKI,OAAL,GAAe,YAAM;AACjB,kBAAKC,YAAL,GAAoB,MAAKC,mBAAL,EAApB;AACH,SAFD;AAGH;;;;;;AAED;;;;;8CAKsB;AAAA;;AAClB,gBAAIC,eAAe,EAAnB;AACA,gBAAIC,qBAAqB,EAAzB;AACA,gBAAIC,gBAAgB,EAApB;AACA,gBAAIC,QAAQ,KAAKC,SAAL,CAAeD,KAA3B;;AAEAE,oBAAQC,OAAR,CAAgBH,KAAhB,EAAuB,UAACI,KAAD,EAAQC,GAAR,EAAgB;AACnC,oBAAID,MAAME,OAAV,EAAmB;AACf,wBAAIC,cAAc,OAAKf,cAAL,CAAoBe,WAApB,CAAgCF,GAAhC,CAAlB;AACA,wBAAIG,aAAa,OAAKhB,cAAL,CAAoBiB,cAApB,CAAmCJ,GAAnC,CAAjB;AACA,wBAAIK,WAAW,EAAf;;AAEA,wBAAIH,WAAJ,EAAiB;AACbG,mCAAW,OAAKjB,UAAL,CAAgB,oBAAhB,IAAwC,GAAxC,GAA8Ce,UAAzD;AACH,qBAFD,MAEO;AACHE,mCAAWF,UAAX;AACH;;AAED,wBAAIX,iBAAiB,EAArB,EAAyB;AACrBA,wCAAgBa,QAAhB;AACH,qBAFD,MAEO;AACHb,wCAAgB,OAAOa,QAAvB;AACH;AACJ;AACJ,aAlBD;;AAoBA,mBAAOb,YAAP;AACH;;AAED;;;;;;;;yDAKiCc,W,EAAa;AAC1C,mBAAO,KAAKpB,aAAL,CAAmBqB,gCAAnB,CAAoDD,WAApD,CAAP;AACH;;AAED;;;;;;;;qDAK6BA,W,EAAa;AACtC,mBAAO,KAAKpB,aAAL,CAAmBsB,4BAAnB,CAAgDF,WAAhD,CAAP;AACH;;;sCAEaG,S,EAAW;AACrB,iBAAKC,eAAL,CAAqB,EAAEX,OAAOU,SAAT,EAArB;AACH;;;;;;AAGLzB,2BAA2B2B,OAA3B,GAAqC,CACjC,SADiC,EAEjC,eAFiC,EAGjC,gBAHiC,CAArC;;AAMA,IAAMC,mBAAmB;AACrBC,cAAU;AACNjB,mBAAW,GADL;AAENc,yBAAiB;AAFX,KADW;AAKrBI,qqEALqB;AAqCrBC,gBAAY/B;AArCS,CAAzB;;kBAwCe4B,gB","file":"milestoneDetails.js","sourcesContent":["\"use strict\";\n\nclass MilestoneDetailsController {\n    constructor($filter,\n                ConfigService,\n                ProjectService) {\n        this.$filter = $filter;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n\n        this.$translate = this.$filter('translate');\n\n        this.$onInit = () => {\n            this.requirements = this.getRequirementsText();\n        }\n    };\n\n    /**\n     * Loop through all the requirements for this milestone and return a\n     * string that lists each one by number in the project\n     * @return string List of requirements\n     */\n    getRequirementsText() {\n        let requiredText = '';\n        let requiredActivities = [];\n        let requiredSteps = [];\n        let items = this.milestone.items;\n\n        angular.forEach(items, (value, key) => {\n            if (value.checked) {\n                let isGroupNode = this.ProjectService.isGroupNode(key);\n                let itemNumber = this.ProjectService.nodeIdToNumber[key];\n                let itemText = '';\n\n                if (isGroupNode) {\n                    itemText = this.$translate('activityLabelShort') + ' ' + itemNumber;\n                } else {\n                    itemText = itemNumber;\n                }\n\n                if (requiredText === '') {\n                    requiredText += itemText;\n                } else {\n                    requiredText += ', ' + itemText;\n                }\n            }\n        });\n\n        return requiredText;\n    }\n\n    /**\n     * Get the user names for a workgroup id\n     * @param workgroupId the workgroup id\n     * @return the user names in the workgroup\n     */\n    getDisplayUserNamesByWorkgroupId(workgroupId) {\n        return this.ConfigService.getDisplayUserNamesByWorkgroupId(workgroupId);\n    }\n\n    /**\n     * Get the avatar coloer for a workgroup id\n     * @param workgroupId the workgroup id\n     * @return the avatar color for the workgroup\n     */\n    getAvatarColorForWorkgroupId(workgroupId) {\n        return this.ConfigService.getAvatarColorForWorkgroupId(workgroupId);\n    }\n\n    showWorkgroup(workgroup) {\n        this.onShowWorkgroup({ value: workgroup });\n    }\n}\n\nMilestoneDetailsController.$inject = [\n    '$filter',\n    'ConfigService',\n    'ProjectService'\n];\n\nconst MilestoneDetails = {\n    bindings: {\n        milestone: '<',\n        onShowWorkgroup: '&'\n    },\n    template:\n        `<div class=\"milestone-details md-whiteframe-1dp\" layout-padding>\n            <p ng-if=\"$ctrl.milestone.description\"><span class=\"heavy accent-2\">{{ 'description' | translate }}: </span> {{ $ctrl.milestone.description }}</p>\n            <p ng-if=\"$ctrl.milestone.params.targetDate\"><span class=\"heavy accent-2\">{{ 'dueDate' | translate }}: </span> {{ $ctrl.milestone.params.targetDate | date: 'EEE MMM d, yyyy' }}</p>\n            <p><span class=\"heavy accent-2\">{{ 'REQUIREMENTS' | translate }}: </span> {{ $ctrl.requirements }}</p>\n        </div>\n        <div ng-if=\"$ctrl.milestone.isReportAvailable\" class=\"milestone-details md-whiteframe-1dp\" layout-padding>\n        <compile data=\"$ctrl.milestone.generatedReport\"></compile>\n        </div>\n        <md-list class=\"user-list\">\n            <md-list-item class=\"thead md-whiteframe-1dp md-with-secondary\">\n                <p>{{ 'team' | translate }}</p>\n                <div class=\"md-secondary-container\">{{ 'completed' | translate }}</div>\n            </md-list-item>\n            <md-list-item class=\"list-item md-whiteframe-1dp md-with-secondary\"\n                          ng-repeat=\"workgroup in $ctrl.milestone.workgroups | orderBy:'-achievementTime'\"\n                          ng-click=\"$ctrl.showWorkgroup(workgroup)\"\n                          aria-label=\"{{ 'viewTeam' | translate }}\">\n                <div class=\"md-avatar\" hide-xs>\n                    <md-icon class=\"md-36\" style=\"color: {{ $ctrl.getAvatarColorForWorkgroupId(workgroup.workgroupId) }};\"> account_circle </md-icon>\n                </div>\n                <p class=\"heavy\">{{ $ctrl.getDisplayUserNamesByWorkgroupId(workgroup.workgroupId) }}</p>\n                <div class=\"md-secondary-container heavy\">\n                    <span ng-if=\"workgroup.achievementTime !== null\" class=\"success\">\n                        {{ workgroup.achievementTime | amTimeAgo }}\n                    </span>\n                    <span ng-if=\"workgroup.achievementTime === null\" class=\"warn\">\n                        {{ 'notCompleted' | translate }}\n                    </span>\n                </div>\n            </md-list-item>\n        </md-list>`,\n    controller: MilestoneDetailsController\n};\n\nexport default MilestoneDetails;\n"]}