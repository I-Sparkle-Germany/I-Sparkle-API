{"version":3,"sources":["milestoneDetails.es6"],"names":["MilestoneDetailsController","$filter","ConfigService","ProjectService","$translate","$onInit","requirements","getRequirementsText","requiredText","requiredActivities","requiredSteps","items","milestone","angular","forEach","value","key","checked","isGroupNode","itemNumber","nodeIdToNumber","itemText","workgroupId","getDisplayUserNamesByWorkgroupId","getAvatarColorForWorkgroupId","workgroup","onShowWorkgroup","$inject","MilestoneDetails","bindings","template","controller"],"mappings":"AAAA;;;;;;;;;;IAEMA,0B;AACF,wCAAYC,OAAZ,EACYC,aADZ,EAEYC,cAFZ,EAE4B;AAAA;;AAAA;;AACxB,aAAKF,OAAL,GAAeA,OAAf;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;;AAEA,aAAKC,UAAL,GAAkB,KAAKH,OAAL,CAAa,WAAb,CAAlB;;AAEA,aAAKI,OAAL,GAAe,YAAM;AACjB,kBAAKC,YAAL,GAAoB,MAAKC,mBAAL,EAApB;AACH,SAFD;AAGH;;;;;;AAED;;;;;8CAKsB;AAAA;;AAClB,gBAAIC,eAAe,EAAnB;AACA,gBAAIC,qBAAqB,EAAzB;AACA,gBAAIC,gBAAgB,EAApB;AACA,gBAAIC,QAAQ,KAAKC,SAAL,CAAeD,KAA3B;;AAEAE,oBAAQC,OAAR,CAAgBH,KAAhB,EAAuB,UAACI,KAAD,EAAQC,GAAR,EAAgB;AACnC,oBAAID,MAAME,OAAV,EAAmB;AACf,wBAAIC,cAAc,OAAKf,cAAL,CAAoBe,WAApB,CAAgCF,GAAhC,CAAlB;AACA,wBAAIG,aAAa,OAAKhB,cAAL,CAAoBiB,cAApB,CAAmCJ,GAAnC,CAAjB;AACA,wBAAIK,WAAW,EAAf;;AAEA,wBAAIH,WAAJ,EAAiB;AACbG,mCAAW,OAAKjB,UAAL,CAAgB,oBAAhB,IAAwC,GAAxC,GAA8Ce,UAAzD;AACH,qBAFD,MAEO;AACHE,mCAAWF,UAAX;AACH;;AAED,wBAAIX,iBAAiB,EAArB,EAAyB;AACrBA,wCAAgBa,QAAhB;AACH,qBAFD,MAEO;AACHb,wCAAgB,OAAOa,QAAvB;AACH;AACJ;AACJ,aAlBD;;AAoBA,mBAAOb,YAAP;AACH;;AAED;;;;;;;;yDAKiCc,W,EAAa;AAC1C,mBAAO,KAAKpB,aAAL,CAAmBqB,gCAAnB,CAAoDD,WAApD,CAAP;AACH;;AAED;;;;;;;;qDAK6BA,W,EAAa;AACtC,mBAAO,KAAKpB,aAAL,CAAmBsB,4BAAnB,CAAgDF,WAAhD,CAAP;AACH;;;sCAEaG,S,EAAW;AACrB,iBAAKC,eAAL,CAAqB,EAAEX,OAAOU,SAAT,EAArB;AACH;;;;;;AAGLzB,2BAA2B2B,OAA3B,GAAqC,CACjC,SADiC,EAEjC,eAFiC,EAGjC,gBAHiC,CAArC;;AAMA,IAAMC,mBAAmB;AACrBC,cAAU;AACNjB,mBAAW,GADL;AAENc,yBAAiB;AAFX,KADW;AAKrBI,69DALqB;AAkCrBC,gBAAY/B;AAlCS,CAAzB;;kBAqCe4B,gB","file":"milestoneDetails.js","sourcesContent":["\"use strict\";\r\n\r\nclass MilestoneDetailsController {\r\n    constructor($filter,\r\n                ConfigService,\r\n                ProjectService) {\r\n        this.$filter = $filter;\r\n        this.ConfigService = ConfigService;\r\n        this.ProjectService = ProjectService;\r\n\r\n        this.$translate = this.$filter('translate');\r\n\r\n        this.$onInit = () => {\r\n            this.requirements = this.getRequirementsText();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Loop through all the requirements for this milestone and return a\r\n     * string that lists each one by number in the project\r\n     * @return string List of requirements\r\n     */\r\n    getRequirementsText() {\r\n        let requiredText = '';\r\n        let requiredActivities = [];\r\n        let requiredSteps = [];\r\n        let items = this.milestone.items;\r\n\r\n        angular.forEach(items, (value, key) => {\r\n            if (value.checked) {\r\n                let isGroupNode = this.ProjectService.isGroupNode(key);\r\n                let itemNumber = this.ProjectService.nodeIdToNumber[key];\r\n                let itemText = '';\r\n\r\n                if (isGroupNode) {\r\n                    itemText = this.$translate('activityLabelShort') + ' ' + itemNumber;\r\n                } else {\r\n                    itemText = itemNumber;\r\n                }\r\n\r\n                if (requiredText === '') {\r\n                    requiredText += itemText;\r\n                } else {\r\n                    requiredText += ', ' + itemText;\r\n                }\r\n            }\r\n        });\r\n\r\n        return requiredText;\r\n    }\r\n\r\n    /**\r\n     * Get the user names for a workgroup id\r\n     * @param workgroupId the workgroup id\r\n     * @return the user names in the workgroup\r\n     */\r\n    getDisplayUserNamesByWorkgroupId(workgroupId) {\r\n        return this.ConfigService.getDisplayUserNamesByWorkgroupId(workgroupId);\r\n    }\r\n\r\n    /**\r\n     * Get the avatar coloer for a workgroup id\r\n     * @param workgroupId the workgroup id\r\n     * @return the avatar color for the workgroup\r\n     */\r\n    getAvatarColorForWorkgroupId(workgroupId) {\r\n        return this.ConfigService.getAvatarColorForWorkgroupId(workgroupId);\r\n    }\r\n\r\n    showWorkgroup(workgroup) {\r\n        this.onShowWorkgroup({ value: workgroup });\r\n    }\n}\r\n\r\nMilestoneDetailsController.$inject = [\r\n    '$filter',\r\n    'ConfigService',\r\n    'ProjectService'\r\n];\r\n\r\nconst MilestoneDetails = {\r\n    bindings: {\r\n        milestone: '<',\r\n        onShowWorkgroup: '&'\r\n    },\r\n    template:\r\n        `<div class=\"milestone-details md-whiteframe-1dp\" layout-padding>\r\n            <p ng-if=\"$ctrl.milestone.description\"><span class=\"heavy accent-2\">{{ 'description' | translate }}: </span> {{ $ctrl.milestone.description }}</p>\r\n            <p ng-if=\"$ctrl.milestone.params.targetDate\"><span class=\"heavy accent-2\">{{ 'dueDate' | translate }}: </span> {{ $ctrl.milestone.params.targetDate | date: 'EEE MMM d, yyyy' }}</p>\r\n            <p><span class=\"heavy accent-2\">{{ 'REQUIREMENTS' | translate }}: </span> {{ $ctrl.requirements }}</p>\r\n        </div>\r\n        <md-list class=\"user-list\">\r\n            <md-list-item class=\"thead md-whiteframe-1dp md-with-secondary\">\r\n                <p>{{ 'team' | translate }}</p>\r\n                <div class=\"md-secondary-container\">{{ 'completed' | translate }}</div>\r\n            </md-list-item>\r\n            <md-list-item class=\"list-item md-whiteframe-1dp md-with-secondary\"\r\n                          ng-repeat=\"workgroup in $ctrl.milestone.workgroups | orderBy:'-achievementTime'\"\r\n                          ng-click=\"$ctrl.showWorkgroup(workgroup)\"\r\n                          aria-label=\"{{ 'viewTeam' | translate }}\">\r\n                <div class=\"md-avatar\" hide-xs>\r\n                    <md-icon class=\"md-36\" style=\"color: {{ $ctrl.getAvatarColorForWorkgroupId(workgroup.workgroupId) }};\"> account_circle </md-icon>\r\n                </div>\r\n                <p class=\"heavy\">{{ $ctrl.getDisplayUserNamesByWorkgroupId(workgroup.workgroupId) }}</p>\r\n                <div class=\"md-secondary-container heavy\">\r\n                    <span ng-if=\"workgroup.achievementTime !== null\" class=\"success\">\r\n                        {{ workgroup.achievementTime | amTimeAgo }}\r\n                    </span>\r\n                    <span ng-if=\"workgroup.achievementTime === null\" class=\"warn\">\r\n                        {{ 'notCompleted' | translate }}\r\n                    </span>\r\n                </div>\r\n            </md-list-item>\r\n        </md-list>`,\r\n    controller: MilestoneDetailsController\r\n};\r\n\r\nexport default MilestoneDetails;\r\n"]}