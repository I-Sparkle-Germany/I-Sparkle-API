{"version":3,"sources":["src/main/webapp/wise5/classroomMonitor/classroomMonitorComponents/milestones/milestoneDetails/milestoneDetails.es6"],"names":["MilestoneDetailsController","$filter","$scope","$state","ConfigService","ProjectService","TeacherDataService","$translate","periodId","getCurrentPeriod","$onInit","requirements","getRequirements","$on","event","args","currentPeriod","items","milestone","angular","forEach","value","key","checked","push","nodeId","nodeIdToNumber","getNodeTitleByNodeId","workgroupId","getDisplayUserNamesByWorkgroupId","getAvatarColorForWorkgroupId","workgroup","onShowWorkgroup","onVisitNodeGrading","$inject","MilestoneDetails","bindings","template","controller"],"mappings":"AAAA;;;;;;;;;;IAEMA,0B;AACF,wCAAYC,OAAZ,EACYC,MADZ,EAEYC,MAFZ,EAGYC,aAHZ,EAIYC,cAJZ,EAKYC,kBALZ,EAKgC;AAAA;;AAAA;;AAC5B,aAAKL,OAAL,GAAeA,OAAf;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;;AAEA,aAAKC,UAAL,GAAkB,KAAKN,OAAL,CAAa,WAAb,CAAlB;AACA,aAAKO,QAAL,GAAgB,KAAKF,kBAAL,CAAwBG,gBAAxB,GAA2CD,QAA3D;;AAEA,aAAKE,OAAL,GAAe,YAAM;AACjB,kBAAKC,YAAL,GAAoB,MAAKC,eAAL,EAApB;AACH,SAFD;;AAIA,aAAKV,MAAL,CAAYW,GAAZ,CAAgB,sBAAhB,EAAwC,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACrD,kBAAKP,QAAL,GAAgBO,KAAKC,aAAL,CAAmBR,QAAnC;AACH,SAFD;AAGH;;;;0CAEiB;AACd,gBAAIG,eAAe,EAAnB;AACA,gBAAIM,QAAQ,KAAKC,SAAL,CAAeD,KAA3B;;AAEAE,oBAAQC,OAAR,CAAgBH,KAAhB,EAAuB,UAACI,KAAD,EAAQC,GAAR,EAAgB;AACnC,oBAAID,MAAME,OAAV,EAAmB;AACfZ,iCAAaa,IAAb,CAAkBF,GAAlB;AACH;AACJ,aAJD;;AAMA,mBAAOX,YAAP;AACH;;;8CAEqBc,M,EAAQ;AAC1B,mBAAO,KAAKpB,cAAL,CAAoBqB,cAApB,CAAmCD,MAAnC,CAAP;AACH;;;6CAEoBA,M,EAAQ;AACzB,mBAAO,KAAKpB,cAAL,CAAoBsB,oBAApB,CAAyCF,MAAzC,CAAP;AACH;;AAED;;;;;;;;yDAKiCG,W,EAAa;AAC1C,mBAAO,KAAKxB,aAAL,CAAmByB,gCAAnB,CAAoDD,WAApD,CAAP;AACH;;AAED;;;;;;;;qDAK6BA,W,EAAa;AACtC,mBAAO,KAAKxB,aAAL,CAAmB0B,4BAAnB,CAAgDF,WAAhD,CAAP;AACH;;;sCAEaG,S,EAAW;AACrB,iBAAKC,eAAL,CAAqB,EAAEX,OAAOU,SAAT,EAArB;AACH;;;2CAEkB;AACf,iBAAKE,kBAAL;AACH;;;;;;AAGLjC,2BAA2BkC,OAA3B,GAAqC,CACjC,SADiC,EAEjC,QAFiC,EAGjC,QAHiC,EAIjC,eAJiC,EAKjC,gBALiC,EAMjC,oBANiC,CAArC;;AASA,IAAMC,mBAAmB;AACrBC,cAAU;AACNlB,mBAAW,GADL;AAENc,yBAAiB,GAFX;AAGNC,4BAAoB;AAHd,KADW;AAMrBI,q4IANqB;AAuErBC,gBAAYtC;AAvES,CAAzB;;kBA0EemC,gB","file":"milestoneDetails.js","sourcesContent":["\"use strict\";\n\nclass MilestoneDetailsController {\n    constructor($filter,\n                $scope,\n                $state,\n                ConfigService,\n                ProjectService,\n                TeacherDataService) {\n        this.$filter = $filter;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.TeacherDataService = TeacherDataService;\n\n        this.$translate = this.$filter('translate');\n        this.periodId = this.TeacherDataService.getCurrentPeriod().periodId;\n\n        this.$onInit = () => {\n            this.requirements = this.getRequirements();\n        }\n\n        this.$scope.$on('currentPeriodChanged', (event, args) => {\n            this.periodId = args.currentPeriod.periodId;\n        });\n    };\n\n    getRequirements() {\n        let requirements = [];\n        let items = this.milestone.items;\n\n        angular.forEach(items, (value, key) => {\n            if (value.checked) {\n                requirements.push(key);\n            }\n        });\n\n        return requirements;\n    }\n\n    getNodeNumberByNodeId(nodeId) {\n        return this.ProjectService.nodeIdToNumber[nodeId];\n    }\n\n    getNodeTitleByNodeId(nodeId) {\n        return this.ProjectService.getNodeTitleByNodeId(nodeId);\n    }\n\n    /**\n     * Get the user names for a workgroup id\n     * @param workgroupId the workgroup id\n     * @return the user names in the workgroup\n     */\n    getDisplayUserNamesByWorkgroupId(workgroupId) {\n        return this.ConfigService.getDisplayUserNamesByWorkgroupId(workgroupId);\n    }\n\n    /**\n     * Get the avatar coloer for a workgroup id\n     * @param workgroupId the workgroup id\n     * @return the avatar color for the workgroup\n     */\n    getAvatarColorForWorkgroupId(workgroupId) {\n        return this.ConfigService.getAvatarColorForWorkgroupId(workgroupId);\n    }\n\n    showWorkgroup(workgroup) {\n        this.onShowWorkgroup({ value: workgroup });\n    }\n\n    visitNodeGrading() {\n        this.onVisitNodeGrading();\n    }\n}\n\nMilestoneDetailsController.$inject = [\n    '$filter',\n    '$scope',\n    '$state',\n    'ConfigService',\n    'ProjectService',\n    'TeacherDataService'\n];\n\nconst MilestoneDetails = {\n    bindings: {\n        milestone: '<',\n        onShowWorkgroup: '&',\n        onVisitNodeGrading: '&'\n    },\n    template:\n        `<div class=\"milestone-details md-whiteframe-1dp\">\n            <span layout=\"row\" layout-align=\"start center\">\n                <period-select custom-class=\"'md-no-underline md-button toolbar__select'\"></period-select>\n                <span flex></span>\n                <span layout=\"row\" layout-align=\"start center\">\n                    <md-progress-linear class=\"milestone-details__progress\" md-mode=\"determinate\" value=\"{{ $ctrl.milestone.percentageCompleted }}\"></md-progress-linear>\n                    <span class=\"md-body-2 text-secondary ng-binding\">\n                        {{ $ctrl.milestone.percentageCompleted }}%\n                    </span>\n                </span>\n            </span>\n            <p ng-if=\"$ctrl.milestone.description\">\n              <span class=\"heavy\">{{ 'description' | translate }}: </span>&nbsp;\n              <compile data=\"$ctrl.milestone.description\"></compile>\n            </p>\n            <p ng-if=\"$ctrl.milestone.params.targetDate\"><span class=\"heavy\">{{ 'dueDate' | translate }}: </span> {{ $ctrl.milestone.params.targetDate | date: 'EEE MMM d, yyyy' }}</p>\n            <p ng-if=\"$ctrl.requirements.length\">\n                <span class=\"heavy\">{{ 'REQUIREMENTS' | translate }}: </span>\n                <a ng-repeat=\"requirement in $ctrl.requirements\" ui-sref=\"root.project({nodeId: \\'{{ requirement }}\\'})\" ng-click=\"$ctrl.visitNodeGrading(event)\">\n                    {{ $ctrl.getNodeNumberByNodeId(requirement) }}: {{ $ctrl.getNodeTitleByNodeId(requirement) }}<span ng-if=\"!$last\">, </span>\n                </a>\n            </p>\n        </div>\n        <div ng-if=\"$ctrl.milestone.type === 'milestoneReport'\"\n             class=\"milestone-details md-whiteframe-1dp\">\n            <div class=\"milestone-details__header accent-2 md-body-2 gray-lightest-bg\">{{ 'classReport' | translate }}</div>\n            <div ng-if=\"!$ctrl.milestone.isReportAvailable\"\n                class=\"center\">\n                <p>{{ 'milestoneReportExplanation' | translate }} {{ 'milestoneReportAvailability' | translate }}</p>\n                <p class=\"bold\" ng-if=\"$ctrl.milestone.satisfyConditional === 'any'\">\n                    {{ 'milestoneReportAvailabilityRequirementsAny' | translate: { num: $ctrl.milestone.satisfyMinNumWorkgroups, percent: $ctrl.milestone.satisfyMinPercentage } }}\n                </p>\n                <p class=\"bold\" ng-if=\"$ctrl.milestone.satisfyConditional === 'all'\">\n                    {{ 'milestoneReportAvailabilityRequirementsAll' | translate: { num: $ctrl.milestone.satisfyMinNumWorkgroups, percent: $ctrl.milestone.satisfyMinPercentage } }}\n                </p>\n            </div>\n            <div ng-if=\"$ctrl.milestone.isReportAvailable\">\n                <compile data=\"$ctrl.milestone.generatedReport\"></compile>\n            </div>\n        </div>\n        <div class=\"milestone-details md-whiteframe-1dp\">\n            <div class=\"milestone-details__header accent-2 md-body-2 gray-lightest-bg\">{{ 'studentCompletion' | translate }}</div>\n            <md-list class=\"user-list md-whiteframe-1dp\">\n                <md-list-item class=\"thead md-with-secondary gray-lightest-bg md-body-1\">\n                    <p>{{ 'team' | translate }}</p>\n                    <div class=\"md-secondary-container\">{{ 'completed' | translate }}</div>\n                </md-list-item>\n                <md-list-item class=\"list-item md-with-secondary\"\n                            ng-repeat=\"workgroup in $ctrl.milestone.workgroups | orderBy:'-achievementTime'\">\n                    <div class=\"md-avatar\" hide-xs>\n                        <md-icon class=\"md-36\" style=\"color: {{ $ctrl.getAvatarColorForWorkgroupId(workgroup.workgroupId) }};\"> account_circle </md-icon>\n                    </div>\n                    <p class=\"heavy\">{{ $ctrl.getDisplayUserNamesByWorkgroupId(workgroup.workgroupId) }}</p>\n                    <div class=\"md-secondary-container heavy\">\n                        <span ng-if=\"workgroup.achievementTime !== null\" class=\"success\">\n                            {{ workgroup.achievementTime | amTimeAgo }}\n                        </span>\n                        <span ng-if=\"workgroup.achievementTime === null\" class=\"warn\">\n                            {{ 'notCompleted' | translate }}\n                        </span>\n                    </div>\n                </md-list-item>\n            </md-list>\n        </div>`,\n    controller: MilestoneDetailsController\n};\n\nexport default MilestoneDetails;\n"]}