{"version":3,"sources":["milestoneEdit.es6"],"names":["MilestoneDetailsController","$filter","$scope","AchievementService","ProjectService","UtilService","moment","$translate","$onInit","milestone","createMilestone","date","Date","params","targetDate","projectAchievements","getAchievementItems","tomorrow","add","hours","minutes","seconds","id","getAvailableAchievementId","name","description","type","nodeIds","valueOf","icon","image","items","makeCopyOfJSONObject","idToOrder","isVisible","item","nodeId","$key","checked","indexOf","push","n","length","splice","change","groupId","showSteps","childIds","getChildNodeIdsById","c","childId","show","isGroupNode","getNodePositionAndTitleByNodeId","getTime","itemsArray","Object","keys","map","it","valid","milestoneEditForm","$valid","onChange","$inject","MilestoneDetails","bindings","template","controller"],"mappings":"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","file":"milestoneEdit.js","sourcesContent":["\"use strict\";\n\nclass MilestoneDetailsController {\n    constructor($filter,\n                $scope,\n                AchievementService,\n                ProjectService,\n                UtilService,\n                moment) {\n        this.$filter = $filter;\n        this.$scope = $scope;\n        this.AchievementService = AchievementService;\n        this.ProjectService = ProjectService;\n        this.UtilService = UtilService;\n        this.moment = moment;\n\n        this.$translate = this.$filter('translate');\n\n        this.$onInit = () => {\n            if (!this.milestone) {\n                // no milestone was passed in, so we'll create a new one\n                this.createMilestone();\n            }\n\n            // set the date object that we'll use with md-datepicker\n            if (this.milestone) {\n                this.date = new Date(this.milestone.params.targetDate);\n            }\n        }\n    };\n\n    /**\n     * Create a new milestone\n     */\n    createMilestone() {\n        const projectAchievements = this.ProjectService.getAchievementItems();\n        if (projectAchievements != null) {\n\n            // get the time of tomorrow at 3pm\n            let tomorrow = this.moment().add('days', 1).hours(23).minutes(11).seconds(59);\n\n            // create a new milestone object\n            this.milestone = {\n                id: this.AchievementService.getAvailableAchievementId(),\n                name: '',\n                description: '',\n                type: \"milestone\",\n                params: {\n                    nodeIds: [],\n                    targetDate: tomorrow.valueOf()\n                },\n                icon: {\n                    image: \"\"\n                },\n                items: this.UtilService.makeCopyOfJSONObject(this.ProjectService.idToOrder),\n                isVisible: true\n            };\n        }\n    }\n\n    /**\n     * The checkbox for an activity or step was clicked\n     * @param milestone the milestone that is being edited\n     * @param item the activity or step that was clicked\n     */\n    itemChanged(item) {\n\n        if (this.milestone && this.milestone.params && this.milestone.params.nodeIds) {\n\n            // get the node ids that are currently required for the milestone\n            let nodeIds = this.milestone.params.nodeIds;\n\n            // get the node id of the item that was clicked\n            let nodeId = item.$key;\n\n            if (item.checked) {\n                if (nodeIds.indexOf(nodeId) == -1) {\n                    // add the node id\n                    this.milestone.params.nodeIds.push(nodeId);\n                }\n            } else {\n                // remove the node id\n\n                // loop through all the node ids and remove the node id\n                for (var n = nodeIds.length - 1; n >= 0; n--) {\n                    if (nodeId == nodeIds[n]) {\n                        nodeIds.splice(n, 1);\n                    }\n                }\n            }\n\n            this.change();\n        }\n    }\n\n    /**\n     * Show the steps for an activity\n     * @param groupId the node id for the activity\n     */\n    toggleSteps(groupId) {\n\n        if (groupId) {\n            let showSteps = !this.milestone.items[groupId].showSteps;\n            this.milestone.items[groupId].showSteps = showSteps;\n\n            // get all the child ids of the group\n            let childIds = this.ProjectService.getChildNodeIdsById(groupId);\n\n            // loop through all the child ids\n            for (let c = 0; c < childIds.length; c++) {\n                let childId = childIds[c];\n\n                if (this.milestone.items[childId] != null) {\n                    // show the step\n                    this.milestone.items[childId].show = showSteps;\n                }\n            }\n        }\n    }\n\n    /**\n     * Check if a node id is for a group\n     * @param nodeId\n     * @returns whether the node is a group node\n     */\n    isGroupNode(nodeId) {\n        return this.ProjectService.isGroupNode(nodeId);\n    };\n\n    /**\n     * Get the node position and title\n     * @param nodeId\n     * @returns whether node position and id display\n     */\n    getNodePositionAndTitleByNodeId(nodeId) {\n        return this.ProjectService.getNodePositionAndTitleByNodeId(nodeId);\n    };\n\n    /**\n     * The date input for this milestone has changed, update in milestone object\n     */\n    dateChange() {\n        this.milestone.params.targetDate = this.date.getTime();\n        this.change();\n    }\n\n    /**\n     * Data for this milestone has changed, so run the onChange callback\n     */\n    change() {\n        let itemsArray = Object.keys(this.milestone.items).map(it => this.milestone.items[it]);\n        let valid = this.$scope.milestoneEditForm.$valid && this.$filter('filter')(itemsArray, {'checked':true}).length > 0;\n        this.onChange({ milestone: this.milestone, valid: valid });\n    }\n}\n\nMilestoneDetailsController.$inject = [\n    '$filter',\n    '$scope',\n    'AchievementService',\n    'ProjectService',\n    'UtilService',\n    'moment'\n];\n\nconst MilestoneDetails = {\n    bindings: {\n        milestone: '<',\n        onChange: '&'\n    },\n    template:\n        `<div class=\"milestone-details md-whiteframe-1dp\" layout-padding>\n            <form name=\"milestoneEditForm\">\n                <h6>{{ 'DETAILS' | translate }}</h6>\n                <div layout-gt-xs=\"row\">\n                    <md-input-container class=\"md-block\" flex>\n                        <label>{{ 'name' | translate }}</label>\n                        <input name=\"milestoneName\" ng-model=\"$ctrl.milestone.name\" ng-change=\"$ctrl.change()\" required>\n                    </md-input-container>\n\n                    <md-input-container>\n                        <label>{{ 'dueDate' | translate }}</label>\n                        <md-datepicker name=\"date\" ng-model=\"$ctrl.date\" ng-change=\"$ctrl.dateChange()\" required></md-datepicker>\n                    </md-input-container>\n                </div>\n                <md-input-container class=\"md-block\" flex>\n                    <label>{{ 'DESCRIPTION' | translate }}</label>\n                    <textarea ng-model=\"$ctrl.milestone.description\" ng-change=\"$ctrl.change()\" rows=\"1\" md-select-on-focus></textarea>\n                </md-input-container>\n            </form>\n        </div>\n        <div class=\"milestone-details md-whiteframe-1dp\" layout-padding>\n            <form name=\"milestoneRequirementsForm\">\n                <h6>{{ 'REQUIREMENTS' | translate }}</h6>\n                <div ng-repeat=\"item in $ctrl.milestone.items | toArray | orderBy : 'order'\"\n                     ng-class=\"{ 'layout-margin': !$ctrl.isGroupNode(item.$key) }\"\n                     ng-show=\"$ctrl.isGroupNode(item.$key) || item.show\">\n\n                    <md-checkbox ng-model=\"item.checked\"\n                                 ng-if=\"item.order !== 0\"\n                                 ng-change=\"$ctrl.itemChanged(item)\"\n                                 aria-label=\"{{ $ctrl.getNodePositionAndTitleByNodeId(item.$key) }}\">\n                        <span class=\"md-body-2\">{{ $ctrl.getNodePositionAndTitleByNodeId(item.$key) }}</span>\n                    </md-checkbox>\n                    <md-button class=\"md-primary md-icon-button\"\n                               ng-if=\"item.order!==0 && $ctrl.isGroupNode(item.$key)\"\n                               ng-click=\"$ctrl.toggleSteps(item.$key)\"\n                               aria-label=\"{{ $ctrl.milestone.items[item.$key].showSteps ? ('hideSteps' | translate) : ('showSteps' | translate) }}\">\n                        <md-icon ng-if=\"!$ctrl.milestone.items[item.$key].showSteps\"> add </md-icon>\n                        <md-icon ng-if=\"$ctrl.milestone.items[item.$key].showSteps\"> remove </md-icon>\n                    </button>\n                </div>\n            </form>\n        </div>`,\n    controller: MilestoneDetailsController\n};\n\nexport default MilestoneDetails;\n"]}