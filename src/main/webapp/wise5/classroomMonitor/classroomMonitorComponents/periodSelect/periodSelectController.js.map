{"version":3,"sources":["periodSelectController.es6"],"names":["PeriodSelectController","$scope","$translate","TeacherDataService","currentPeriod","periods","initializePeriods","$on","event","args","getPeriods","getCurrentPeriod","length","setCurrentPeriod","period","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,sB;AACF,oCAAYC,MAAZ,EACYC,UADZ,EAEYC,kBAFZ,EAEgC;AAAA;;AAAA;;AAC5B,aAAKF,MAAL,GAAcA,MAAd;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;;AAEA,aAAKC,aAAL,GAAqB,IAArB;AACA,aAAKC,OAAL,GAAe,EAAf;AACA,aAAKC,iBAAL;;AAEA;;;AAGA,aAAKL,MAAL,CAAYM,GAAZ,CAAgB,sBAAhB,EAAwC,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACrD,kBAAKL,aAAL,GAAqBK,KAAKL,aAA1B;AACH,SAFD;AAGH;;;;;;AAED;;;4CAGoB;AAChB,iBAAKC,OAAL,GAAe,KAAKF,kBAAL,CAAwBO,UAAxB,EAAf;;AAEA;AACA,gBAAI,KAAKC,gBAAL,EAAJ,EAA6B;AACzB,qBAAKP,aAAL,GAAqB,KAAKO,gBAAL,EAArB;AACH,aAFD,MAEO;AACH,oBAAI,KAAKN,OAAL,IAAgB,IAAhB,IAAwB,KAAKA,OAAL,CAAaO,MAAb,GAAsB,CAAlD,EAAqD;AACjD;AACA,yBAAKC,gBAAL,CAAsB,KAAKR,OAAL,CAAa,CAAb,CAAtB;AACH;AACJ;AACJ;;AAED;;;;;;+CAGuB;AACnB,iBAAKQ,gBAAL,CAAsB,KAAKT,aAA3B;AACH;;AAED;;;;;;;yCAIiBU,M,EAAQ;AACrB,iBAAKX,kBAAL,CAAwBU,gBAAxB,CAAyCC,MAAzC;AACH;;AAED;;;;;;2CAGmB;AACf,mBAAO,KAAKX,kBAAL,CAAwBQ,gBAAxB,EAAP;AACH;;;;;;AAGLX,uBAAuBe,OAAvB,GAAiC,CAC7B,QAD6B,EAE7B,YAF6B,EAG7B,oBAH6B,CAAjC;;kBAMef,sB","file":"periodSelectController.js","sourcesContent":["\"use strict\";\n\nclass PeriodSelectController {\n    constructor($scope,\n                $translate,\n                TeacherDataService) {\n        this.$scope = $scope;\n        this.$translate = $translate;\n        this.TeacherDataService = TeacherDataService;\n\n        this.currentPeriod = null;\n        this.periods = [];\n        this.initializePeriods();\n\n        /**\n         * Listen for current period changed event\n         */\n        this.$scope.$on('currentPeriodChanged', (event, args) => {\n            this.currentPeriod = args.currentPeriod;\n        });\n    };\n\n    /**\n     * Initialize the periods\n     */\n    initializePeriods() {\n        this.periods = this.TeacherDataService.getPeriods();\n\n        // set the current period if it hasn't been set yet\n        if (this.getCurrentPeriod()) {\n            this.currentPeriod = this.getCurrentPeriod();\n        } else {\n            if (this.periods != null && this.periods.length > 0) {\n                // set it to the all periods option\n                this.setCurrentPeriod(this.periods[0]);\n            }\n        }\n    }\n\n    /**\n     * The current period was changed\n     */\n    currentPeriodChanged() {\n        this.setCurrentPeriod(this.currentPeriod);\n    }\n\n    /**\n     * Set the current period\n     * @param period the period object\n     */\n    setCurrentPeriod(period) {\n        this.TeacherDataService.setCurrentPeriod(period);\n    }\n\n    /**\n     * Get the current period\n     */\n    getCurrentPeriod() {\n        return this.TeacherDataService.getCurrentPeriod();\n    }\n}\n\nPeriodSelectController.$inject = [\n    '$scope',\n    '$translate',\n    'TeacherDataService'\n];\n\nexport default PeriodSelectController;\n"]}