{"version":3,"sources":["componentRevisionsInfo.es6"],"names":["ComponentRevisionsInfoController","$filter","$mdDialog","$scope","AnnotationService","ConfigService","TeacherDataService","$translate","$onInit","runId","getRunId","toUserInfo","getUserInfoByWorkgroupId","toWorkgroupId","periodId","userNamesArray","getUserNamesByWorkgroupId","userNames","map","obj","name","join","$onChanges","changes","maxScore","currentValue","componentStates","getComponentStatesByWorkgroupIdAndComponentId","componentId","total","length","latest","serverSaveTime","latestComponentStateTime","convertToClientTimestamp","latestComponentStateIsSubmit","isSubmit","processAnnotations","$on","event","args","annotation","annotationNodeId","nodeId","annotationComponentId","latestAnnotations","getLatestComponentAnnotations","comment","latestComment","type","data","value","score","latestTeacherAnnotationTime","getLatestTeacherAnnotationTime","hasNewWork","checkHasNewWork","result","latestScore","latestTeacherComment","latestTeacherScore","commentSaveTime","scoreSaveTime","getLatestTeacherAnnotation","time","$event","workgroupId","show","parent","angular","element","document","body","targetEvent","fullscreen","template","locals","controller","RevisionsController","close","hide","$inject","ComponentRevisionsInfo","bindings","componentStateId"],"mappings":"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","file":"componentRevisionsInfo.js","sourcesContent":["'use strict';\r\n\r\nclass ComponentRevisionsInfoController {\r\n    constructor($filter,\r\n                $mdDialog,\r\n                $scope,\r\n                AnnotationService,\r\n                ConfigService,\r\n                TeacherDataService) {\r\n        this.$filter = $filter;\r\n        this.$mdDialog = $mdDialog;\r\n        this.$scope = $scope;\r\n        this.AnnotationService = AnnotationService;\r\n        this.ConfigService = ConfigService;\r\n        this.TeacherDataService = TeacherDataService;\r\n\r\n        this.$translate = this.$filter('translate');\r\n\r\n        this.$onInit = () => {\r\n            this.runId = this.ConfigService.getRunId();\r\n\r\n            let toUserInfo = this.ConfigService.getUserInfoByWorkgroupId(this.toWorkgroupId);\r\n            if (toUserInfo) {\r\n                // set the period id\r\n                this.periodId = toUserInfo.periodId;\r\n            }\r\n\r\n            // get the workgroup user names\r\n            let userNamesArray = this.ConfigService.getUserNamesByWorkgroupId(this.toWorkgroupId);\r\n            this.userNames = userNamesArray.map( (obj) => {\r\n                return obj.name;\r\n            }).join(', ');\r\n        };\r\n\r\n        this.$onChanges = (changes) => {\r\n\r\n            if (changes.maxScore) {\r\n                this.maxScore = typeof changes.maxScore.currentValue === 'number' ? changes.maxScore.currentValue : 0;\r\n            }\r\n\n            // get all the componentStates for this workgroup\r\n            this.componentStates = this.TeacherDataService.getComponentStatesByWorkgroupIdAndComponentId(this.toWorkgroupId, this.componentId);\r\n            let total = this.componentStates.length;\r\n\n            if (total > 0) {\r\n                let latest = this.componentStates[total-1];\r\n\r\n                if (latest) {\r\n                    // calculate the save time of the latest component state\r\n                    let serverSaveTime = latest.serverSaveTime;\r\n                    this.latestComponentStateTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\r\n\r\n                    // check if the latest component state is a submit\r\n                    this.latestComponentStateIsSubmit = latest.isSubmit;\r\n                }\r\n            }\r\n\r\n            this.processAnnotations();\r\n        };\r\n\r\n        this.$scope.$on('annotationSavedToServer', (event, args) => {\r\n            // TODO: we're watching this here and in the parent component's controller; probably want to optimize!\r\n            if (args != null ) {\r\n\r\n                // get the annotation that was saved to the server\r\n                let annotation = args.annotation;\r\n\r\n                if (annotation != null) {\r\n\r\n                    // get the node id and component id of the annotation\r\n                    let annotationNodeId = annotation.nodeId;\r\n                    let annotationComponentId = annotation.componentId;\r\n\r\n                    // make sure the annotation was for this component\r\n                    if (this.nodeId === annotationNodeId &&\r\n                        this.componentId === annotationComponentId) {\r\n\r\n                        // get latest score and comment annotations for this component\r\n                        this.processAnnotations();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    processAnnotations() {\r\n        this.latestAnnotations = this.AnnotationService.getLatestComponentAnnotations(this.nodeId, this.componentId, this.toWorkgroupId);\r\n\r\n        if (this.latestAnnotations && this.latestAnnotations.comment) {\r\n            let latestComment = this.latestAnnotations.comment;\r\n            if (latestComment.type === 'comment') {\r\n                this.comment = latestComment.data.value;\r\n            }\r\n        }\r\n\r\n        if (this.latestAnnotations && this.latestAnnotations.score) {\r\n            this.score = this.latestAnnotations.score.data.value;\r\n        }\r\n\r\n        this.latestTeacherAnnotationTime = this.getLatestTeacherAnnotationTime();\r\n\r\n        this.hasNewWork = this.checkHasNewWork();\r\n    }\r\n\r\n    checkHasNewWork() {\r\n        let result = false;\r\n\r\n        if (this.latestComponentStateTime) {\r\n            // there is work for this component\r\n\r\n            if (this.latestTeacherAnnotationTime) {\r\n                if (this.latestComponentStateTime > this.latestTeacherAnnotationTime) {\r\n                    // latest component state is newer than latest annotation, so work is new\r\n                    result = true;\r\n                    this.comment = null;\r\n                }\r\n            } else {\r\n                // there are no annotations, so work is new\r\n                result = true;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Get the most recent teacher annotation (from the current score and comment annotations)\r\n     * @return Object (latest teacher annotation)\r\n     */\r\n    getLatestTeacherAnnotation() {\r\n        let latest = null;\r\n        let latestComment = this.latestAnnotations.comment;\r\n        let latestScore = this.latestAnnotations.score;\r\n        let latestTeacherComment = (latestComment && latestComment.type === 'comment') ? latestComment : null;\r\n        let latestTeacherScore = (latestScore && latestScore.type === 'score') ? latestScore : null;\r\n\r\n        if (latestTeacherComment || latestTeacherScore) {\r\n            let commentSaveTime = latestTeacherComment ? latestTeacherComment.serverSaveTime : 0;\r\n            let scoreSaveTime = latestTeacherScore ? latestTeacherScore.serverSaveTime : 0;\r\n\r\n            if (commentSaveTime >= scoreSaveTime) {\r\n                latest = latestTeacherComment;\r\n            } else if (scoreSaveTime > commentSaveTime) {\r\n                latest = latestTeacherScore;\r\n            }\r\n        }\r\n\r\n        return latest;\r\n    }\r\n\r\n    /**\r\n     * Calculate the save time of the latest teacher annotation\r\n     * @return Number (latest teacher annotation post time)\r\n     */\r\n    getLatestTeacherAnnotationTime() {\r\n        let latest = this.getLatestTeacherAnnotation();\r\n        let time = 0;\r\n\r\n        if (latest) {\r\n            let serverSaveTime = latest.serverSaveTime;\r\n            time = this.ConfigService.convertToClientTimestamp(serverSaveTime)\r\n        }\r\n\r\n        return time;\r\n    }\r\n\r\n    showRevisions($event) {\r\n        let workgroupId = this.toWorkgroupId;\r\n        let componentId = this.componentId;\r\n        let maxScore  = this.maxScore;\r\n        let userNames = this.userNames;\r\n\r\n        this.$mdDialog.show({\r\n            parent: angular.element(document.body),\r\n            targetEvent: $event,\r\n            fullscreen: true,\r\n            template:\r\n                `<md-dialog aria-label=\"{{ 'revisionsForTeam' | translate:{teamNames: userNames} }}\" class=\"dialog--wider\">\r\n                    <md-toolbar>\r\n                        <div class=\"md-toolbar-tools\">\r\n                            <h2 class=\"overflow--ellipsis\">{{ 'revisionsForTeam' | translate:{teamNames: userNames} }}</h2>\r\n                        </div>\r\n                    </md-toolbar>\r\n                    <md-dialog-content>\r\n                        <div class=\"md-dialog-content gray-lighter-bg\">\r\n                            <workgroup-component-revisions workgroup-id=\"workgroupId\" component-id=\"{{ componentId }}\" max-score=\"maxScore\"></workgroup-component-revisions>\r\n                        </div>\r\n                    </md-dialog-content>\r\n                    <md-dialog-actions layout=\"row\" layout-align=\"end center\">\r\n                        <md-button class=\"md-primary\" ng-click=\"close()\" aria-label=\"{{ 'close' | translate }}\">{{ 'close' | translate }}</md-button>\r\n                    </md-dialog-actions>\r\n                </md-dialog>`,\r\n            locals: {\r\n                workgroupId: workgroupId,\r\n                componentId: componentId,\r\n                maxScore: maxScore,\r\n                userNames: userNames\r\n            },\r\n            controller: RevisionsController\r\n        });\r\n        function RevisionsController($scope, $mdDialog, workgroupId, componentId, maxScore, userNames) {\r\n            $scope.workgroupId = workgroupId;\r\n            $scope.componentId = componentId;\r\n            $scope.maxScore = maxScore;\r\n            $scope.userNames = userNames;\r\n            $scope.close = () => {\r\n                $mdDialog.hide();\r\n            };\r\n        }\r\n        RevisionsController.$inject = [\"$scope\", \"$mdDialog\", \"workgroupId\", \"componentId\", \"maxScore\", \"userNames\"];\r\n    }\r\n}\r\n\r\nComponentRevisionsInfoController.$inject = [\r\n    '$filter',\r\n    '$mdDialog',\r\n    '$scope',\r\n    'AnnotationService',\r\n    'ConfigService',\r\n    'TeacherDataService'\r\n];\r\n\r\nconst ComponentRevisionsInfo = {\r\n    bindings: {\r\n        nodeId: '<',\r\n        componentId: '<',\r\n        maxScore: '<',\r\n        toWorkgroupId: '<',\r\n        componentStateId: '<'\r\n    },\r\n    template:\r\n        `<div class=\"component__actions__info component--grading__actions__info md-caption\">\r\n            <span ng-if=\"$ctrl.componentStates.length > 0\">\r\n                <span ng-if=\"$ctrl.latestComponentStateIsSubmit\">{{ 'SUBMITTED' | translate }} </span>\r\n                <span ng-if=\"!$ctrl.latestComponentStateIsSubmit\">{{ 'SAVED' | translate }} </span>\r\n                <span>\r\n                    <span class=\"component__actions__more\" am-time-ago=\"$ctrl.latestComponentStateTime\"></span>\r\n                    <md-tooltip md-direction=\"top\">{{ $ctrl.latestComponentStateTime | amDateFormat:'ddd, MMM D YYYY, h:mm a' }}</md-tooltip>\r\n                </span>\r\n            </span>\r\n            <span ng-if=\"$ctrl.componentStates.length === 0\">{{ 'TEAM_HAS_NOT_SAVED_ANY_WORK' | translate }}</span>\r\n            <span ng-if=\"$ctrl.componentStates.length > 0\">\r\n                &#8226;&nbsp;<a ng-click=\"$ctrl.showRevisions($event)\" translate=\"SEE_REVISIONS\" translate-value-number=\"{{($ctrl.componentStates.length - 1)}}\"></a>\r\n           </span>\r\n    </div>`,\r\n    controller: ComponentRevisionsInfoController\r\n};\r\n\r\nexport default ComponentRevisionsInfo;\r\n"]}