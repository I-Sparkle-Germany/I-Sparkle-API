{"version":3,"sources":["topBar.es6"],"names":["TopBarController","$rootScope","ConfigService","ProjectService","TeacherDataService","workgroupId","getWorkgroupId","parseInt","Math","random","avatarColor","getAvatarColorForWorkgroupId","userName","getMyUserName","$onChanges","changesObj","notifications","setNotifications","themePath","getThemePath","userNotifications","filter","notification","toWorkgroupId","newNotifications","timeDismissed","dismissedNotifications","isAnyPeriodPaused","context","nodeId","componentId","componentType","category","event","eventData","saveEvent","$broadcast","$inject","TopBar","bindings","logoPath","projectId","projectTitle","runId","controller","template"],"mappings":"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","file":"topBar.js","sourcesContent":["\"use strict\";\r\n\r\nclass TopBarController {\r\n    constructor($rootScope,\r\n                ConfigService,\r\n                ProjectService,\r\n                TeacherDataService) {\r\n        this.$rootScope = $rootScope;\r\n        this.ConfigService = ConfigService;\r\n        this.ProjectService = ProjectService;\r\n        this.TeacherDataService = TeacherDataService;\r\n\r\n        // get the teacher workgroup id\r\n        this.workgroupId = this.ConfigService.getWorkgroupId();\r\n\r\n        if (this.workgroupId == null) {\r\n            /*\r\n             * the teacher doesn't have a workgroup id so we will use a random\r\n             * number\r\n             */\r\n            this.workgroupId = parseInt(100 * Math.random());\r\n        }\r\n\r\n        // get the avatar color for the teacher\r\n        this.avatarColor = this.ConfigService.getAvatarColorForWorkgroupId(this.workgroupId);\r\n\r\n        // get the teacher name and user name\r\n        this.userName = this.ConfigService.getMyUserName();\r\n\r\n        this.$onChanges = (changesObj) => {\r\n            if (changesObj.notifications) {\r\n                this.setNotifications();\r\n            }\r\n        }\r\n\r\n        this.themePath = this.ProjectService.getThemePath();\r\n    }\r\n\r\n    /**\r\n     * Find all teacher notifications and separate into new and dismissed arrays\r\n     * TODO: move to TeacherDataService?\r\n     */\r\n    setNotifications() {\r\n        // get all notifications for the logged in teacher\r\n        // TODO: take into account shared teacher users!\r\n        let userNotifications = this.notifications.filter(\r\n            notification => {\r\n                return (notification.toWorkgroupId === this.workgroupId);\r\n            }\r\n        );\r\n\r\n        this.newNotifications = userNotifications.filter(\r\n            notification => {\r\n                return (notification.timeDismissed == null);\r\n            }\r\n        );\r\n\r\n        this.dismissedNotifications = userNotifications.filter(\r\n            notification => {\r\n                return (notification.timeDismissed != null);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check whether any period in the run is paused\r\n     * @return Boolean whether any of the periods are paused\r\n     */\r\n    isAnyPeriodPaused() {\r\n        return this.TeacherDataService.isAnyPeriodPaused();\r\n    }\r\n\r\n    /**\r\n     * Navigate the teacher to the teacher home page\r\n     */\r\n    goHome() {\r\n        // save goHome event\r\n        var context = \"ClassroomMonitor\";\r\n        var nodeId = null;\r\n        var componentId = null;\r\n        var componentType = null;\r\n        var category = \"Navigation\";\r\n        var event = \"goHomeButtonClicked\";\r\n        var eventData = {};\r\n        this.TeacherDataService.saveEvent(context, nodeId, componentId, componentType, category, event, eventData);\r\n\r\n        // fire the goHome event\r\n        this.$rootScope.$broadcast('goHome');\r\n    };\r\n\r\n    /**\r\n     * Log the teacher out of WISE\r\n     */\r\n    logOut() {\r\n        // save logOut event\r\n        var context = \"ClassroomMonitor\";\r\n        var nodeId = null;\r\n        var componentId = null;\r\n        var componentType = null;\r\n        var category = \"Navigation\";\r\n        var event = \"logOutButtonClicked\";\r\n        var eventData = {};\r\n        this.TeacherDataService.saveEvent(context, nodeId, componentId, componentType, category, event, eventData);\r\n\r\n        // fire the logOut event\r\n        this.$rootScope.$broadcast('logOut');\r\n    };\r\n}\r\n\r\nTopBarController.$inject = [\r\n    '$rootScope',\r\n    'ConfigService',\r\n    'ProjectService',\r\n    'TeacherDataService'\r\n];\r\n\r\nconst TopBar = {\r\n    bindings: {\r\n        logoPath: '@',\r\n        notifications: '<',\r\n        projectId: '<',\r\n        projectTitle: '<',\r\n        runId: '<'\r\n    },\r\n    controller: TopBarController,\r\n    template:\r\n        `<md-toolbar class=\"l-header\">\r\n            <div class=\"md-toolbar-tools\">\r\n                <span class=\"md-button logo-link\">\r\n                    <img ng-src=\"{{ $ctrl.logoPath }}\" alt=\"{{ 'WISE_LOGO' | translate }}\" class=\"logo\" />\r\n                </span>\r\n                <h3>{{ $ctrl.projectTitle }} <span class=\"md-caption\">({{ 'RUN_ID_DISPLAY' | translate:{id: $ctrl.runId} }})</span></h3>\r\n                <span flex></span>\r\n                <md-menu md-position-mode=\"target-right target\" md-offset=\"52 26\">\r\n                    <md-button aria-label=\"{{ 'ALERTS' | translate }}\" class=\"md-icon-button notification-btn\" ng-click=\"$mdMenu.open($event)\">\r\n                        <span ng-show=\"$ctrl.newNotifications.length\" class=\"notification-count\">{{$ctrl.newNotifications.length}}</span>\r\n                        <md-icon md-menu-origin> notifications </md-icon>\r\n                    </md-button>\r\n                    <md-menu-content width=\"5\" class=\"account-menu\">\r\n                        <notifications-menu new-notifications=\"$ctrl.newNotifications\" dismissed-notifications=\"$ctrl.dismissedNotifications\" with-pause=\"true\"></notifications-menu>\r\n                    </md-menu-content>\r\n                </md-menu>\r\n                <md-menu md-position-mode=\"target-right target\" md-offset=\"40 26\">\r\n                    <md-button aria-label=\"{{ 'USER_MENU' | translate }}\"\r\n                               class=\"md-icon-button\"\r\n                               ng-class=\"{ 'has-indicator has-indicator--icon-button': $ctrl.isAnyPeriodPaused() }\"\r\n                               ng-click=\"$mdMenu.open($event)\">\r\n                        <md-icon md-menu-origin ng-if=\"$ctrl.isAnyPeriodPaused()\"> lock </md-icon>\r\n                        <md-icon md-menu-origin ng-if=\"!$ctrl.isAnyPeriodPaused()\"> lock_open </md-icon>\r\n                    </md-button>\r\n                    <md-menu-content width=\"5\" class=\"account-menu\">\r\n                        <pause-screens-menu></pause-screens-menu>\r\n                    </md-menu-content>\r\n                </md-menu>\r\n                <md-menu id='accountMenu' md-position-mode=\"target-right target\" md-offset=\"8 26\">\r\n                    <md-button aria-label=\"{{ 'USER_MENU' | translate }}\" class=\"md-icon-button\" ng-click=\"$mdMenu.open($event)\">\r\n                        <md-icon md-menu-origin> account_box </md-icon>\r\n                    </md-button>\r\n                    <md-menu-content width=\"5\" class=\"account-menu\">\r\n                        <ng-include src=\"$ctrl.themePath + '/templates/teacherAccountMenu.html'\"></ng-include>\r\n                    </md-menu-content>\r\n                </md-menu>\r\n            </div>\r\n        </md-toolbar>\r\n`\r\n};\r\n\r\nexport default TopBar;\r\n"]}