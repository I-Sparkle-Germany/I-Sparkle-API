{"version":3,"sources":["workgroupSelect.es6"],"names":["WorkgroupSelectController","$filter","$scope","orderBy","ConfigService","TeacherDataService","$translate","$onInit","canViewStudentNames","getPermissions","workgroups","angular","copy","getClassmateUserInfos","periodId","getCurrentPeriod","selectedItem","getCurrentWorkgroup","n","length","i","workgroup","displayNames","id","workgroupId","$on","event","args","currentPeriod","setCurrentWorkgroup","query","items","sortByStudentId","byTeam","search","RegExp","push","names","split","l","x","name","trim","indexOfSpace","indexOf","firstName","substring","lastName","current","ids","userIds","userId","orderedItems","$inject","WorkgroupSelect","bindings","template","controller"],"mappings":"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","file":"workgroupSelect.js","sourcesContent":["\"use strict\";\r\n\r\nclass WorkgroupSelectController {\r\n    constructor($filter,\r\n                $scope,\r\n                orderBy,\r\n                ConfigService,\r\n                TeacherDataService) {\r\n        this.$filter = $filter;\r\n        this.$scope = $scope;\r\n        this.orderBy = orderBy;\r\n        this.ConfigService = ConfigService;\r\n        this.TeacherDataService = TeacherDataService;\r\n\r\n        this.$translate = this.$filter('translate');\r\n\r\n        this.$onInit = () => {\r\n            this.canViewStudentNames = this.ConfigService.getPermissions().canViewStudentNames;\r\n            this.workgroups = angular.copy(this.ConfigService.getClassmateUserInfos());\r\n            this.periodId = this.TeacherDataService.getCurrentPeriod().periodId;\r\n            this.selectedItem = this.getCurrentWorkgroup();\r\n            let n = this.workgroups.length;\r\n            for (let i = 0; i < n; i++) {\r\n                let workgroup = this.workgroups[i];\r\n                if (this.canViewStudentNames) {\r\n                    workgroup.displayNames += ' (' + this.$translate('teamId', { id: workgroup.workgroupId}) + ')';\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Listen for current period changed event\r\n         */\r\n        this.$scope.$on('currentPeriodChanged', (event, args) => {\r\n            this.periodId = args.currentPeriod.periodId;\r\n            this.selectedItem = this.getCurrentWorkgroup();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the currently selected workgroup\r\n     * @param workgroup the workgroup object\r\n     */\r\n    setCurrentWorkgroup(workgroup) {\r\n        this.TeacherDataService.setCurrentWorkgroup(workgroup);\r\n    }\r\n\r\n    /**\r\n     * Get the current workgroup\r\n     * @return workgroup object\r\n     */\r\n    getCurrentWorkgroup() {\r\n        return this.TeacherDataService.getCurrentWorkgroup();\r\n    }\r\n\r\n    /**\r\n     * Return workgroups with username text that query string matches\r\n     * @param query String to search for\r\n     * @return Array of workgroups\r\n     */\r\n    querySearch(query) {\r\n        let items = [];\r\n        let n = this.workgroups.length;\r\n        let sortByStudentId = false;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            let workgroup = this.workgroups[i];\r\n            let periodId = workgroup.periodId;\r\n            if (this.periodId === -1 || periodId === this.periodId) {\r\n                let displayNames = workgroup.displayNames;\r\n                if (this.byTeam) {\r\n                    if (displayNames.search(new RegExp(query, 'i')) > -1 || !query) {\r\n                        items.push(workgroup);\r\n                    }\r\n                } else {\r\n                    if (this.canViewStudentNames) {\r\n                        let names = displayNames.split(',');\r\n                        let l = names.length;\r\n                        for (let x = 0; x < l; x++) {\r\n                            let name = names[x].trim();\r\n                            // get the index of the first empty space\r\n                            let indexOfSpace = name.indexOf(' ');\r\n                            // get the student first name e.g. \"Spongebob\"\r\n                            let firstName = name.substring(0, indexOfSpace);\r\n                            let lastName = name.substring(indexOfSpace+1);\r\n\r\n                            let current = angular.copy(workgroup);\r\n                            current.displayNames = lastName + ', ' + firstName;\r\n                            if (current.displayNames.search(new RegExp(query, 'i')) > -1 || !query) {\r\n                                items.push(current);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        sortByStudentId = true;\r\n                        let ids = workgroup.userIds;\r\n                        let l = ids.length;\r\n                        for (let x = 0; x < l; x++) {\r\n                            let id = ids[x];\r\n                            let name = this.$translate('studentId', { id: id });\r\n\r\n                            let current = angular.copy(workgroup);\r\n                            current.displayNames = name;\r\n                            current.userId = id;\r\n                            if (current.displayNames.search(new RegExp(query, 'i')) > -1 || !query) {\r\n                                items.push(current);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let orderedItems = sortByStudentId ? this.orderBy(items, 'userId') : this.orderBy(items, 'workgroupId');\r\n\r\n        return orderedItems;\r\n    }\r\n\r\n    selectedItemChange() {\r\n        this.setCurrentWorkgroup(this.selectedItem);\r\n    }\r\n}\r\n\r\nWorkgroupSelectController.$inject = [\r\n    '$filter',\r\n    '$scope',\r\n    'orderByFilter',\r\n    'ConfigService',\r\n    'TeacherDataService'\r\n];\r\n\r\nconst WorkgroupSelect = {\r\n    bindings: {\r\n        byTeam: '<'\r\n    },\r\n    template:\r\n        `<md-autocomplete class=\"autocomplete\"\r\n                          md-no-cache=\"true\"\r\n                          md-selected-item=\"$ctrl.selectedItem\"\r\n                          md-search-text=\"$ctrl.searchText\"\r\n                          md-selected-item-change=\"$ctrl.selectedItemChange()\"\r\n                          md-items=\"workgroup in $ctrl.querySearch($ctrl.searchText)\"\r\n                          md-item-text=\"workgroup.displayNames\"\r\n                          md-min-length=\"0\"\r\n                          ng-init=\"$ctrl.searchText=$ctrl.selectedItem.displayNames\"\r\n                          placeholder=\"{{'findAStudent' | translate}}\"\r\n                          title=\"{{'findAStudent' | translate}}\">\r\n            <md-item-template>\r\n                <span md-highlight-text=\"$ctrl.searchText\"\r\n                      md-highlight-flags=\"ig\">{{ workgroup.displayNames }}</span>\r\n            </md-item-template>\r\n            <md-not-found>\r\n                {{'noMatchesFound' | translate}}\r\n            </md-not-found>\r\n        </md-autocomplete>`,\r\n    controller: WorkgroupSelectController\r\n};\r\n\r\nexport default WorkgroupSelect;\r\n"]}