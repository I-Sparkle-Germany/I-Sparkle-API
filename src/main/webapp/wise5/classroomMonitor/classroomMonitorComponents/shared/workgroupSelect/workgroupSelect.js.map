{"version":3,"sources":["workgroupSelect.es6"],"names":["WorkgroupSelectController","$filter","$scope","orderBy","ConfigService","TeacherDataService","$translate","$onInit","placeholder","customPlaceholder","canViewStudentNames","getPermissions","workgroups","angular","copy","getClassmateUserInfos","periodId","getCurrentPeriod","selectedItem","getCurrentWorkgroup","setWorkgroups","$on","event","args","workgroup","currentWorkgroup","currentPeriod","byStudent","students","sortByStudentId","n","length","i","names","displayNames","split","l","x","name","trim","indexOfSpace","indexOf","firstName","substring","lastName","current","push","ids","userIds","id","userId","workgroupId","setCurrentWorkgroup","localGroup","query","items","search","RegExp","searchTerm","$inject","WorkgroupSelect","bindings","customClass","useAutocomplete","template","controller"],"mappings":"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","file":"workgroupSelect.js","sourcesContent":["\"use strict\";\r\n\r\nclass WorkgroupSelectController {\r\n    constructor($filter,\r\n                $scope,\r\n                orderBy,\r\n                ConfigService,\r\n                TeacherDataService) {\r\n        this.$filter = $filter;\r\n        this.$scope = $scope;\r\n        this.orderBy = orderBy;\r\n        this.ConfigService = ConfigService;\r\n        this.TeacherDataService = TeacherDataService;\r\n        this.$translate = this.$filter('translate');\r\n\r\n        this.$onInit = () => {\r\n            this.placeholder = this.customPlaceholder ? this.customPlaceholder : this.$translate('findAStudent');\r\n            this.canViewStudentNames = this.ConfigService.getPermissions().canViewStudentNames;\r\n            this.workgroups = angular.copy(this.ConfigService.getClassmateUserInfos());\r\n            this.periodId = this.TeacherDataService.getCurrentPeriod().periodId;\r\n            this.selectedItem = this.getCurrentWorkgroup();\r\n            this.setWorkgroups();\r\n        };\r\n\r\n        /**\r\n         * Listen for current workgroup changed event\r\n         */\r\n        this.$scope.$on('currentWorkgroupChanged', (event, args) => {\r\n            let workgroup = args.currentWorkgroup;\r\n            if (workgroup != null) {\r\n                this.selectedItem = this.getCurrentWorkgroup();\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Listen for current period changed event\r\n         */\r\n        this.$scope.$on('currentPeriodChanged', (event, args) => {\r\n            this.periodId = args.currentPeriod.periodId;\r\n            this.selectedItem = this.getCurrentWorkgroup();\r\n            this.setWorkgroups();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Setup the workgroups data model based on whether we're showing\r\n     * individual students and whether current user can view student names\r\n     */\r\n    setWorkgroups() {\r\n        if (this.byStudent) {\r\n            let students = [];\r\n            let sortByStudentId = false;\r\n            let n = this.workgroups.length;\r\n            for (let i = 0; i < n; i++) {\r\n                let workgroup = this.workgroups[i];\r\n                if (this.canViewStudentNames) {\r\n                    let names = workgroup.displayNames.split(',');\r\n                    let l = names.length;\r\n                    for (let x = 0; x < l; x++) {\r\n                        let name = names[x].trim();\r\n                        // get the index of the first empty space\r\n                        let indexOfSpace = name.indexOf(' ');\r\n                        // get the student first name e.g. \"Spongebob\"\r\n                        let firstName = name.substring(0, indexOfSpace);\r\n                        let lastName = name.substring(indexOfSpace+1);\r\n                        let current = angular.copy(workgroup);\r\n                        current.displayNames = lastName + ', ' + firstName;\r\n                        students.push(current);\r\n                    }\r\n                } else {\r\n                    sortByStudentId = true;\r\n                    let ids = workgroup.userIds;\r\n                    let l = ids.length;\r\n                    for (let x = 0; x < l; x++) {\r\n                        let id = ids[x];\r\n                        let name = this.$translate('studentId', { id: id });\r\n                        let current = angular.copy(workgroup);\r\n                        current.displayNames = name;\r\n                        current.userId = id;\r\n                        students.push(current);\r\n                    }\r\n                }\r\n            }\r\n            this.workgroups = sortByStudentId ? this.orderBy(students, 'userId') : this.orderBy(students, 'displayNames');\r\n        } else {\r\n            let n = this.workgroups.length;\r\n            for (let i = 0; i < n; i++) {\r\n                let workgroup = this.workgroups[i];\r\n                if (this.canViewStudentNames) {\r\n                    workgroup.displayNames += ' (' + this.$translate('teamId', { id: workgroup.workgroupId}) + ')';\r\n                }\r\n            }\r\n            this.workgroups = this.orderBy(this.workgroups, 'workgroupId');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the currently selected workgroup\r\n     * @param workgroup the workgroup object\r\n     */\r\n    setCurrentWorkgroup(workgroup) {\r\n        this.TeacherDataService.setCurrentWorkgroup(workgroup);\r\n    }\r\n\r\n    /**\r\n     * Get the current workgroup\r\n     * @return workgroup object\r\n     */\r\n    getCurrentWorkgroup() {\r\n        let localGroup = null;\r\n        let currentWorkgroup = this.TeacherDataService.getCurrentWorkgroup();\r\n        if (currentWorkgroup) {\r\n            let n = this.workgroups.length;\r\n            for (let i = 0; i < n; i++) {\r\n                let workgroup = this.workgroups[i];\r\n                if (currentWorkgroup.workgroupId === workgroup.workgroupId) {\r\n                    if (this.byStudent &&\r\n                        (currentWorkgroup.displayNames === workgroup.displayNames)) {\r\n                        localGroup = workgroup;\r\n                    } else {\r\n                        localGroup = workgroup;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return localGroup;\r\n    }\r\n\r\n    /**\r\n     * Return workgroups with username text that query string matches\r\n     * @param query String to search for\r\n     * @return Array of workgroups\r\n     */\r\n    querySearch(query) {\r\n        let items = [];\r\n        let n = this.workgroups.length;\r\n        for (let i = 0; i < n; i++) {\r\n            let workgroup = this.workgroups[i];\r\n            let periodId = workgroup.periodId;\r\n            if (this.periodId === -1 || periodId === this.periodId) {\r\n                let displayNames = workgroup.displayNames;\r\n                if (displayNames.search(new RegExp(query, 'i')) > -1 || !query) {\r\n                    items.push(workgroup);\r\n                }\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    selectedItemChange() {\r\n        this.setCurrentWorkgroup(this.selectedItem);\r\n    }\r\n\r\n    clearSearchTerm() {\r\n        this.searchTerm = '';\r\n    }\r\n}\r\n\r\nWorkgroupSelectController.$inject = [\r\n    '$filter',\r\n    '$scope',\r\n    'orderByFilter',\r\n    'ConfigService',\r\n    'TeacherDataService'\r\n];\r\n\r\nconst WorkgroupSelect = {\r\n    bindings: {\r\n        byStudent: '<',\r\n        customClass: '<',\r\n        customPlaceholder: '<',\r\n        useAutocomplete: '<'\r\n    },\r\n    template:\r\n        `<md-autocomplete ng-if=\"$ctrl.useAutocomplete\"\r\n                          class=\"autocomplete\"\r\n                          ng-class=\"$ctrl.customClass\"\r\n                          md-no-cache=\"true\"\r\n                          md-selected-item=\"$ctrl.selectedItem\"\r\n                          md-search-text=\"$ctrl.searchText\"\r\n                          md-selected-item-change=\"$ctrl.selectedItemChange()\"\r\n                          md-items=\"workgroup in $ctrl.querySearch($ctrl.searchText)\"\r\n                          md-item-text=\"workgroup.displayNames\"\r\n                          md-min-length=\"0\"\r\n                          ng-init=\"$ctrl.searchText=$ctrl.selectedItem.displayNames\"\r\n                          placeholder=\"{{ $ctrl.placeholder }}\"\r\n                          title=\"{{ $ctrl.placeholder }}\">\r\n            <md-item-template>\r\n                <span md-highlight-text=\"$ctrl.searchText\"\r\n                      md-highlight-flags=\"ig\">{{ workgroup.displayNames }}</span>\r\n            </md-item-template>\r\n            <md-not-found>\r\n                {{ 'noMatchesFound' | translate }}\r\n            </md-not-found>\r\n        </md-autocomplete>\r\n        <md-select ng-if=\"!$ctrl.useAutocomplete\"\r\n                   md-theme=\"default\"\r\n                   ng-class=\"$ctrl.customClass\"\r\n                   aria-label=\"{{ $ctrl.placeholder }}\"\r\n                   ng-model=\"$ctrl.selectedItem\"\r\n                   ng-change=\"$ctrl.selectedItemChange()\"\r\n                   md-on-close=\"$ctrl.clearSearchTerm()\"\r\n                   md-selected-text=\"$ctrl.selectedItem.displayNames\">\r\n            <md-select-header class=\"select__header\" layout=\"row\" flex>\r\n                <input ng-model=\"$ctrl.searchTerm\"\r\n                       type=\"search\"\r\n                       placeholder=\"{{ 'findAStudent' | translate }}\"\r\n                       ng-keydown=\"$event.stopPropagation()\">\r\n            </md-select-header>\r\n            <md-divider></md-divider>\r\n            <md-opt-group>\r\n                <md-option ng-repeat=\"workgroup in $ctrl.workgroups |\r\n                    filter:$ctrl.searchTerm\"\r\n                    ng-value=\"workgroup\">\r\n                    <!-- TODO: add avatar? -->\r\n                    <span class=\"node-select__text\">{{ workgroup.displayNames }}</span>\r\n                </md-option>\r\n            </md-opt-group>\r\n        </md-select>`,\r\n    controller: WorkgroupSelectController\r\n};\r\n\r\nexport default WorkgroupSelect;\r\n"]}