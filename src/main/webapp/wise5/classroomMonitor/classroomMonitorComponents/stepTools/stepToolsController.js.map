{"version":3,"sources":["stepToolsController.es6"],"names":["StepToolsCtrl","$scope","NodeService","ProjectService","TeacherDataService","$mdSidenav","idToOrder","updateModel","$watch","toNodeId","newId","oldId","endCurrentNodeAndSetCurrentNodeByNodeId","$on","event","args","nodeId","getCurrentNodeId","isGroupNode","icon","getIcon","prevId","getPrevNodeId","nextId","getNextNodeId","then","getNodeIconByNodeId","showPosition","getNodePositionById","getNodeTitleByNodeId","goToPrevNode","goToNextNode","closeNode","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,a;AACF,2BAAYC,MAAZ,EACYC,WADZ,EAEYC,cAFZ,EAGYC,kBAHZ,EAIYC,UAJZ,EAIwB;AAAA;;AAAA;;AAEpB,aAAKJ,MAAL,GAAcA,MAAd;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;AACA;;AAEA;AACA,aAAKE,SAAL,GAAiB,KAAKH,cAAL,CAAoBG,SAArC;;AAEA,aAAKC,WAAL;;AAEA,aAAKN,MAAL,CAAYO,MAAZ,CACI,YAAM;AAAE,mBAAO,MAAKC,QAAZ;AAAuB,SADnC,EAEI,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACd,gBAAID,UAAUC,KAAd,EAAqB;AACjB;AACA,sBAAKP,kBAAL,CAAwBQ,uCAAxB,CAAgEF,KAAhE;AACH;AACJ,SAPL;;AAUA,aAAKT,MAAL,CAAYY,GAAZ,CAAgB,oBAAhB,EAAsC,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACnD,kBAAKR,WAAL;AACH,SAFD;AAGH;;AAED;;;;;;;sCAKc;AAAA;;AACV,gBAAIS,SAAS,KAAKZ,kBAAL,CAAwBa,gBAAxB,EAAb;AACA,gBAAI,CAAC,KAAKd,cAAL,CAAoBe,WAApB,CAAgCF,MAAhC,CAAL,EAA8C;AAC1C,qBAAKA,MAAL,GAAcA,MAAd;AACA,qBAAKG,IAAL,GAAY,KAAKC,OAAL,CAAa,KAAKJ,MAAlB,CAAZ;;AAEA,qBAAKK,MAAL,GAAc,KAAKnB,WAAL,CAAiBoB,aAAjB,EAAd;AACA,qBAAKC,MAAL,GAAc,IAAd;AACA,qBAAKrB,WAAL,CAAiBsB,aAAjB,GAAiCC,IAAjC,CAAsC,UAACT,MAAD,EAAY;AAC9C,2BAAKO,MAAL,GAAcP,MAAd;AACH,iBAFD;;AAIA;AACA,qBAAKP,QAAL,GAAgB,KAAKO,MAArB;AACH;AACJ;;;gCAEOA,M,EAAQ;AACZ,mBAAO,KAAKb,cAAL,CAAoBuB,mBAApB,CAAwCV,MAAxC,CAAP;AACH;;;0CAEiB;AACd,mBAAO,CAAC,KAAKW,YAAL,IAAqB,KAAKC,mBAAL,CAAyB,KAAKZ,MAA9B,CAArB,GAA6D,KAAKY,mBAAL,CAAyB,KAAKZ,MAA9B,IAAwC,IAArG,GAA4G,EAA7G,IAAmH,KAAKa,oBAAL,CAA0B,KAAKb,MAA/B,CAA1H;AACH;;;6CAEoBA,M,EAAQ;AACzB,mBAAO,KAAKb,cAAL,CAAoB0B,oBAApB,CAAyCb,MAAzC,CAAP;AACH;;;4CAEmBA,M,EAAQ;AACxB,mBAAO,KAAKb,cAAL,CAAoByB,mBAApB,CAAwCZ,MAAxC,CAAP;AACH;;;oCAEWA,M,EAAQ;AAChB,mBAAO,KAAKb,cAAL,CAAoBe,WAApB,CAAgCF,MAAhC,CAAP;AACH;;;uCAEc;AACX,iBAAKd,WAAL,CAAiB4B,YAAjB;AACH;;;uCAEc;AACX,iBAAK5B,WAAL,CAAiB6B,YAAjB;AACH;;;oCAEW;AACR,iBAAK7B,WAAL,CAAiB8B,SAAjB;AACH;;;;;;AAGLhC,cAAciC,OAAd,GAAwB,CACpB,QADoB,EAEpB,aAFoB,EAGpB,gBAHoB,EAIpB,oBAJoB,EAKpB,YALoB,CAAxB;;kBAQejC,a","file":"stepToolsController.js","sourcesContent":["\"use strict\";\n\nclass StepToolsCtrl {\n    constructor($scope,\n                NodeService,\n                ProjectService,\n                TeacherDataService,\n                $mdSidenav) {\n\n        this.$scope = $scope;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.TeacherDataService = TeacherDataService;\n        //this.$mdSidenav = $mdSidenav;\n\n        // service objects and utility functions\n        this.idToOrder = this.ProjectService.idToOrder;\n\n        this.updateModel();\n\n        this.$scope.$watch(\n            () => { return this.toNodeId; },\n            (newId, oldId) => {\n                if (newId !== oldId) {\n                    // selected node id has changed, so open new node\n                    this.TeacherDataService.endCurrentNodeAndSetCurrentNodeByNodeId(newId);\n                }\n            }\n        );\n\n        this.$scope.$on('currentNodeChanged', (event, args) => {\n            this.updateModel();\n        });\n    }\n\n    /*toggleStepNav() {\n        this.$mdSidenav('stepNav')\n          .toggle();\n    }*/\n\n    updateModel() {\n        var nodeId = this.TeacherDataService.getCurrentNodeId();\n        if (!this.ProjectService.isGroupNode(nodeId)) {\n            this.nodeId = nodeId;\n            this.icon = this.getIcon(this.nodeId);\n\n            this.prevId = this.NodeService.getPrevNodeId();\n            this.nextId = null;\n            this.NodeService.getNextNodeId().then((nodeId) => {\n                this.nextId = nodeId;\n            });\n\n            // model variable for selected node id\n            this.toNodeId = this.nodeId;\n        }\n    }\n\n    getIcon(nodeId) {\n        return this.ProjectService.getNodeIconByNodeId(nodeId);\n    }\n\n    getSelectedText() {\n        return (this.showPosition && this.getNodePositionById(this.nodeId) ? this.getNodePositionById(this.nodeId) + ': ' : '') + this.getNodeTitleByNodeId(this.nodeId);\n    }\n\n    getNodeTitleByNodeId(nodeId) {\n        return this.ProjectService.getNodeTitleByNodeId(nodeId);\n    }\n\n    getNodePositionById(nodeId) {\n        return this.ProjectService.getNodePositionById(nodeId);\n    }\n\n    isGroupNode(nodeId) {\n        return this.ProjectService.isGroupNode(nodeId);\n    }\n\n    goToPrevNode() {\n        this.NodeService.goToPrevNode();\n    }\n\n    goToNextNode() {\n        this.NodeService.goToNextNode();\n    }\n\n    closeNode() {\n        this.NodeService.closeNode();\n    }\n}\n\nStepToolsCtrl.$inject = [\n    '$scope',\n    'NodeService',\n    'ProjectService',\n    'TeacherDataService',\n    '$mdSidenav'\n];\n\nexport default StepToolsCtrl;\n"]}