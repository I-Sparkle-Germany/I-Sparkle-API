{"version":3,"sources":["classroomMonitorController.es6"],"names":[],"mappings":"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","file":"classroomMonitorController.js","sourcesContent":["'use strict';\n\nclass ClassroomMonitorController {\n\n    constructor($mdDialog,\n                $rootScope,\n                $scope,\n                $state,\n                $stateParams,\n                $translate,\n                ConfigService,\n                NotificationService,\n                ProjectService,\n                SessionService,\n                TeacherDataService,\n                TeacherWebSocketService) {\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.NotificationService = NotificationService;\n        this.ProjectService = ProjectService;\n        this.SessionService = SessionService;\n        this.TeacherDataService = TeacherDataService;\n        this.TeacherWebSocketService = TeacherWebSocketService;\n        this.$translate('pauseStudentScreens').then((pauseStudentScreens) => {\n            this.pauseScreenButtonText = pauseStudentScreens;\n        });\n\n        $scope.$on('showSessionWarning', () => {\n            // Appending dialog to document.body\n            let confirm = $mdDialog.confirm()\n                .parent(angular.element(document.body))\n                .title('Session Timeout')\n                .content('You have been inactive for a long time. Do you want to stay logged in?')\n                .ariaLabel('Session Timeout')\n                .ok('YES')\n                .cancel('No');\n            $mdDialog.show(confirm).then(() => {\n                this.SessionService.renewSession();\n            }, () => {\n                this.SessionService.forceLogOut();\n            });\n        });\n\n        // listen for the periodChanged event\n        $scope.$on('periodChanged', (event, args) => {\n            // the period has changed so we will update the paused/unpaused button\n            this.updatePauseButton();\n        });\n\n        // update the text of the pause/unpause button\n        this.updatePauseButton();\n\n        this.themePath = this.ProjectService.getThemePath();\n\n        this.notifications = this.NotificationService.notifications;\n        // watch for changes in notifications\n        this.$scope.$watch(\n            () => {\n                return this.NotificationService.notifications.length;\n            },\n            (newValue, oldValue) => {\n                this.notifications = this.NotificationService.notifications;\n            }\n        );\n    };\n\n    hello() {\n        ocpu.seturl(\"//128.32.189.240:81/ocpu/user/wiser/library/wiser/R\");\n        // perform the request\n        var req = ocpu.call(\"hello\", {\n            \"name\": \"Hiroki\"\n        }, (session) => {\n            session.getStdout((returnedCSVString) => {\n                var csvBlob = new Blob([returnedCSVString], {type: 'text/csv'});\n                var csvUrl = URL.createObjectURL(csvBlob);\n                var a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style = \"display: none\";\n                a.href = csvUrl;\n                a.download = \"export_\" + runId + \".csv\";\n                a.click();\n\n                // timeout is required for FF.\n                window.setTimeout(() => {\n                    URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n                }, 3000);\n            });\n        });\n    };\n\n    /**\n     * Export all or latest work for this run in CSV format\n     */\n    export(exportType) {\n        this.TeacherDataService.getExport(exportType).then((result) => {\n            if (result == null) {\n                alert(\"Error retrieving result\");\n                return;\n            }\n            var COLUMN_INDEX_NODE_ID = 1;\n            var COLUMN_INDEX_COMPONENT_ID = 2;\n            var COLUMN_INDEX_STEP_NUMBER = 4;\n            var COLUMN_INDEX_STEP_TITLE = 5;\n            var COLUMN_INDEX_COMPONENT_PART_NUMBER = 6;\n            var COLUMN_INDEX_STUDENT_DATA = 11;\n            var COLUMN_INDEX_WORKGROUP_ID = 14;\n            var COLUMN_INDEX_WISE_IDS = 18;\n            var COLUMN_INDEX_WISE_ID_1 = 18;\n            var COLUMN_INDEX_WISE_ID_2 = 19;\n            var COLUMN_INDEX_WISE_ID_3 = 20;\n            var COLUMN_INDEX_STUDENT_RESPONSE = 21;\n            var runId = this.ConfigService.getRunId();\n\n            var exportFilename = \"\";\n            if (exportType === \"latestStudentWork\") {\n                var hash = {};  // store latestStudentWork. Assume that key = (nodeId, componentId, workgroupId)\n                result = result.reverse().filter( (studentWorkRow) => {\n                    var hashKey = studentWorkRow[COLUMN_INDEX_NODE_ID] + \"_\" + studentWorkRow[COLUMN_INDEX_COMPONENT_ID] + \"_\" + studentWorkRow[COLUMN_INDEX_WORKGROUP_ID];\n                    if (!hash.hasOwnProperty(hashKey)) {\n                        // remember in hash\n                        hash[hashKey] = studentWorkRow;\n                        return true;\n                    } else {\n                        // we already have the latest, so we can disregard this studentWorkRow.\n                        return false;\n                    }\n                }).reverse();\n                exportFilename = \"latest_work_\" + runId + \".csv\";\n            } else {\n                exportFilename = \"all_work_\" + runId + \".csv\";\n            }\n\n            var csvString = \"\";  // resulting csv string\n\n            for (var rowIndex = 0; rowIndex < result.length; rowIndex++) {\n\n                var row = result[rowIndex];\n\n                if (rowIndex === 0) {\n                    // append additional header columns\n                    row[COLUMN_INDEX_WISE_ID_1] = \"WISE ID 1\";\n                    row[COLUMN_INDEX_WISE_ID_2] = \"WISE ID 2\";\n                    row[COLUMN_INDEX_WISE_ID_3] = \"WISE ID 3\";\n                    row[COLUMN_INDEX_STUDENT_RESPONSE] = \"response\";\n                } else {\n                    // for all non-header rows, fill in step numbers, titles, and component part numbers.\n                    var nodeId = row[COLUMN_INDEX_NODE_ID];\n                    var componentId = row[COLUMN_INDEX_COMPONENT_ID];\n                    row[COLUMN_INDEX_STEP_NUMBER] = this.ProjectService.getNodePositionById(nodeId);\n                    row[COLUMN_INDEX_STEP_TITLE] = this.ProjectService.getNodeTitleByNodeId(nodeId);\n                    row[COLUMN_INDEX_COMPONENT_PART_NUMBER] = this.ProjectService.getComponentPositionByNodeIdAndComponentId(nodeId, componentId) + 1; // make it 1-indexed for researchers\n                    var workgroupId = row[COLUMN_INDEX_WORKGROUP_ID];\n                    var wiseIDs = row[COLUMN_INDEX_WISE_IDS];\n                    var wiseIDsArray = wiseIDs.split(\",\");\n                    row[COLUMN_INDEX_WISE_ID_1] = wiseIDsArray[0];\n                    row[COLUMN_INDEX_WISE_ID_2] = wiseIDsArray[1] || \"\";\n                    row[COLUMN_INDEX_WISE_ID_3] = wiseIDsArray[2] || \"\";\n\n                    // get the student data JSON and extract responses into its own column\n                    var studentDataJSONCell = row[COLUMN_INDEX_STUDENT_DATA];\n                    row[COLUMN_INDEX_STUDENT_RESPONSE] = studentDataJSONCell.response || \"\";\n                }\n\n                // append row to csvString\n                for (var cellIndex = 0; cellIndex < row.length; cellIndex++) {\n                    var cell = row[cellIndex];\n                    if (typeof cell === \"object\") {\n                        cell = \"\\\"\" + JSON.stringify(cell).replace(/\"/g, '\"\"') + \"\\\"\";\n                    } else if (typeof cell === \"string\") {\n                        cell = \"\\\"\" + cell + \"\\\"\";\n                    }\n                    csvString += cell + \",\";\n                }\n                csvString += \"\\r\\n\";\n            }\n\n            var csvBlob = new Blob([csvString], {type: 'text/csv'});\n            var csvUrl = URL.createObjectURL(csvBlob);\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.href = csvUrl;\n            a.download = exportFilename;\n            a.click();\n\n            // timeout is required for FF.\n            window.setTimeout(() => {\n                URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n            }, 3000);\n\n            /* TODO: get OCPU working again\n            //ocpu.seturl(\"//localhost:1234/ocpu/library/wise/R\");\n            ocpu.seturl(\"http://128.32.189.240:81/ocpu/user/wiser/library/wiser/R\");\n            //perform the request\n            var request = ocpu.call(\"extractchoices\", {\n                \"csvFile\": csvFile\n            }, (session) => {\n                session.getStdout((returnedCSVString) => {\n                    var csvBlob = new Blob([returnedCSVString], {type: 'text/csv'});\n                    var csvUrl = URL.createObjectURL(csvBlob);\n                    var a = document.createElement(\"a\");\n                    document.body.appendChild(a);\n                    a.href = csvUrl;\n                    a.download = \"export_\" + runId + \".csv\";\n                    a.click();\n\n                    // timeout is required for FF.\n                    window.setTimeout(() => {\n                        URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n                    }, 3000);\n\n                    //return returnedCSVString;\n                });\n            });\n\n            //if R returns an error, alert the error message\n            request.fail(() => {\n                alert(\"Server error: \" + request.responseText);\n            });\n            */\n        });\n    }\n\n    /**\n     * Export all events for this run in CSV format\n     */\n    exportEvents() {\n        this.TeacherDataService.getExport(\"events\").then((result) => {\n            if (result == null) {\n                alert(\"Error retrieving result\");\n                return;\n            }\n            var COLUMN_INDEX_NODE_ID = 1;\n            var COLUMN_INDEX_COMPONENT_ID = 2;\n            var COLUMN_INDEX_STEP_NUMBER = 4;\n            var COLUMN_INDEX_STEP_TITLE = 5;\n            var COLUMN_INDEX_COMPONENT_PART_NUMBER = 6;\n            var COLUMN_INDEX_DATA = 12;\n            var COLUMN_INDEX_WORKGROUP_ID = 15;\n            var COLUMN_INDEX_WISE_IDS = 19;\n            var COLUMN_INDEX_WISE_ID_1 = 19;\n            var COLUMN_INDEX_WISE_ID_2 = 20;\n            var COLUMN_INDEX_WISE_ID_3 = 21;\n            var runId = this.ConfigService.getRunId();\n\n            var exportFilename = \"events_\" + runId + \".csv\";\n\n            var csvString = \"\";  // resulting csv string\n\n            for (var rowIndex = 0; rowIndex < result.length; rowIndex++) {\n\n                var row = result[rowIndex];\n\n                if (rowIndex === 0) {\n                    // append additional header columns\n                    row[COLUMN_INDEX_WISE_ID_1] = \"WISE ID 1\";\n                    row[COLUMN_INDEX_WISE_ID_2] = \"WISE ID 2\";\n                    row[COLUMN_INDEX_WISE_ID_3] = \"WISE ID 3\";\n                } else {\n                    // for all non-header rows, fill in step numbers, titles, and component part numbers.\n                    var nodeId = row[COLUMN_INDEX_NODE_ID];\n                    var componentId = row[COLUMN_INDEX_COMPONENT_ID];\n                    row[COLUMN_INDEX_STEP_NUMBER] = this.ProjectService.getNodePositionById(nodeId);\n                    row[COLUMN_INDEX_STEP_TITLE] = this.ProjectService.getNodeTitleByNodeId(nodeId);\n                    row[COLUMN_INDEX_COMPONENT_PART_NUMBER] = this.ProjectService.getComponentPositionByNodeIdAndComponentId(nodeId, componentId) + 1; // make it 1-indexed for researchers\n                    var workgroupId = row[COLUMN_INDEX_WORKGROUP_ID];\n                    var wiseIDs = row[COLUMN_INDEX_WISE_IDS];\n                    var wiseIDsArray = wiseIDs.split(\",\");\n                    row[COLUMN_INDEX_WISE_ID_1] = wiseIDsArray[0];\n                    row[COLUMN_INDEX_WISE_ID_2] = wiseIDsArray[1] || \"\";\n                    row[COLUMN_INDEX_WISE_ID_3] = wiseIDsArray[2] || \"\";\n                }\n\n                // append row to csvString\n                for (var cellIndex = 0; cellIndex < row.length; cellIndex++) {\n                    var cell = row[cellIndex];\n                    if (typeof cell === \"object\") {\n                        cell = \"\\\"\" + JSON.stringify(cell).replace(/\"/g, '\"\"') + \"\\\"\";\n                    } else if (typeof cell === \"string\") {\n                        cell = \"\\\"\" + cell + \"\\\"\";\n                    }\n                    csvString += cell + \",\";\n                }\n                csvString += \"\\r\\n\";\n            }\n\n            var csvBlob = new Blob([csvString], {type: 'text/csv'});\n            var csvUrl = URL.createObjectURL(csvBlob);\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.href = csvUrl;\n            a.download = exportFilename;\n            a.click();\n\n            // timeout is required for FF.\n            window.setTimeout(() => {\n                URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n            }, 3000);\n        });\n    }\n\n    /**\n     * The pause screen button was clicked. This button is used to toggle\n     * pause screen on and off.\n     */\n    pauseScreenButtonClicked() {\n\n        // get the currently selected period\n        var currentPeriod = this.TeacherDataService.getCurrentPeriod();\n        var periodId = currentPeriod.periodId;\n\n        // get the previous value of whether the period was paused or unpaused\n        var isPaused = this.TeacherDataService.isPeriodPaused(periodId);\n\n        // toggle the value\n        var newIsPausedValue = !isPaused;\n\n        // update the run status\n        this.TeacherDataService.updatePausedRunStatusValue(periodId, newIsPausedValue);\n\n        // update the pause/unpause button text\n        this.updatePauseButton();\n\n        if (newIsPausedValue) {\n            // pause the student screens\n            this.TeacherWebSocketService.pauseScreens(periodId);\n        } else {\n            // unpause the student screens\n            this.TeacherWebSocketService.unPauseScreens(periodId);\n        }\n\n        // save the run status to the server\n        this.TeacherDataService.sendRunStatus();\n    }\n\n    /**\n     * Update the pause button to reflect the pause/unpaused state of the period\n     */\n    updatePauseButton() {\n        // get the currently selected period\n        var currentPeriod = this.TeacherDataService.getCurrentPeriod();\n\n        // default to all periods\n        var periodId = -1;\n\n        if (currentPeriod != null) {\n            periodId = currentPeriod.periodId;\n        }\n\n        // whether the period is paused or unpaused\n        var isPaused = this.TeacherDataService.isPeriodPaused(periodId);\n\n        // update the paused/unpaused button text\n        if (isPaused) {\n            this.displayUnPauseButton();\n        } else if (!isPaused) {\n            this.displayPauseButton();\n        }\n    }\n\n    /**\n     * Change the text of the button to display 'Pause Screens'\n     */\n    displayPauseButton() {\n        this.$translate('pauseStudentScreens').then((pauseStudentScreens) => {\n            this.pauseScreenButtonText = pauseStudentScreens;\n        });\n    }\n\n    /**\n     * Change the text of the button to display 'Unpause Screens'\n     */\n    displayUnPauseButton() {\n        this.$translate('unPauseStudentScreens').then((unPauseStudentScreens) => {\n            this.pauseScreenButtonText = unPauseStudentScreens;\n        });\n    }\n\n    /**\n     * Returns true iff there are new notifications\n     */\n    hasNewNotifications() {\n        return this.getNewNotifications().length > 0;\n    }\n\n    /**\n     * Returns all notifications that have not been dismissed yet\n     */\n    getNewNotifications() {\n        return this.notifications.filter(\n            function(notification) {\n                return notification.timeDismissed == null;\n            }\n        );\n    }\n\n    /**\n     * Show confirmation dialog before dismissing all notifications\n     */\n    confirmDismissAllNotifications(ev) {\n        if (this.getNewNotifications().length > 1) {\n            this.$translate([\"dismissNotificationsTitle\", \"dismissNotificationsMessage\", \"yes\", \"no\"]).then((translations) => {\n                let confirm = this.$mdDialog.confirm()\n                    .parent(angular.element($('._md-open-menu-container._md-active')))// TODO: hack for now (showing md-dialog on top of md-menu)\n                    .ariaLabel(translations.dismissNotificationsTitle)\n                    .textContent(translations.dismissNotificationsMessage)\n                    .targetEvent(ev)\n                    .ok(translations.yes)\n                    .cancel(translations.no);\n\n                this.$mdDialog.show(confirm).then(() => {\n                    this.dismissAllNotifications();\n                });\n            });\n        } else {\n            this.dismissAllNotifications();\n        }\n    }\n\n    /**\n     * Dismiss all new notifications\n     */\n    dismissAllNotifications() {\n        let newNotifications = this.getNewNotifications();\n        newNotifications.map((newNotification) => {\n            this.dismissNotification(newNotification);\n        });\n    }\n\n    /**\n     * Dismiss the specified notification\n     * @param notification\n     */\n    dismissNotification(notification) {\n        this.NotificationService.dismissNotification(notification);\n    }\n\n    /**\n     * The user has moved the mouse so we will notify the Session Service\n     * so that it can refresh the session\n     */\n    mouseMoved() {\n        /*\n         * notify the Session Service that the user has moved the mouse\n         * so we can refresh the session\n         */\n        this.SessionService.mouseMoved();\n    }\n}\n\nClassroomMonitorController.$inject = [\n    '$mdDialog',\n    '$rootScope',\n    '$scope',\n    '$state',\n    '$stateParams',\n    '$translate',\n    'ConfigService',\n    'NotificationService',\n    'ProjectService',\n    'SessionService',\n    'TeacherDataService',\n    'TeacherWebSocketService'\n];\n\nexport default ClassroomMonitorController;\n"]}