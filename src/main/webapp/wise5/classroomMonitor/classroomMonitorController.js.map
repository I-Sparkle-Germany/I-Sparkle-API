{"version":3,"sources":["classroomMonitorController.es6"],"names":["ClassroomMonitorController","$filter","$mdDialog","$rootScope","$scope","$state","$stateParams","ConfigService","NotebookService","NotificationService","ProjectService","SessionService","TeacherDataService","TeacherWebSocketService","$translate","projectTitle","getProjectTitle","runId","getRunId","numberProject","menuOpen","showSideMenu","showToolbar","showStepTools","views","name","label","icon","type","active","isNotebookEnabled","$on","confirm","parent","angular","element","document","body","title","content","ariaLabel","ok","cancel","show","then","renewSession","forceLogOut","ev","alert","translations","serverUpdate","textContent","targetEvent","event","toState","toParams","fromState","fromParams","processUI","logoPath","getThemePath","themePath","notifications","context","nodeId","componentId","componentType","category","data","saveEvent","viewName","$current","currentViewName","params","isApplicationNode","mouseMoved","$inject"],"mappings":"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","file":"classroomMonitorController.js","sourcesContent":["'use strict';\n\nclass ClassroomMonitorController {\n\n    constructor($filter,\n                $mdDialog,\n                $rootScope,\n                $scope,\n                $state,\n                $stateParams,\n                ConfigService,\n                NotebookService,\n                NotificationService,\n                ProjectService,\n                SessionService,\n                TeacherDataService,\n                TeacherWebSocketService) {\n\n        this.$filter = $filter;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.ConfigService = ConfigService;\n        this.NotebookService = NotebookService;\n        this.NotificationService = NotificationService;\n        this.ProjectService = ProjectService;\n        this.SessionService = SessionService;\n        this.TeacherDataService = TeacherDataService;\n        this.TeacherWebSocketService = TeacherWebSocketService;\n\n        this.$translate = this.$filter('translate');\n\n        this.projectTitle = this.ProjectService.getProjectTitle();\n        this.runId = this.ConfigService.getRunId();\n\n        this.numberProject = true; // TODO: make dynamic or remove\n\n        this.menuOpen = false; // boolean to indicate whether monitor nav menu is open\n        this.showSideMenu = true; // boolean to indicate whether to show the monitor side menu\n        this.showToolbar = true; // boolean to indicate whether to show the monitor toolbar\n        this.showStepTools = false; // boolean to indicate whether to show the step toolbar\n\n        // ui-views and their corresponding names, labels, and icons\n        this.views = {\n            'root.dashboard': {\n                name: this.$translate('dashboardView'),\n                label: this.$translate('dashboardViewLabel'),\n                icon: 'dashboard',\n                type: 'primary',\n                active: false\n            },\n            'root.nodeProgress': {\n                name: this.$translate('projectView'),\n                label: this.$translate('projectViewLabel'),\n                icon: 'assignment_turned_in',\n                type: 'primary',\n                active: true\n            },\n            'root.studentProgress': {\n                name: this.$translate('studentView'),\n                label: this.$translate('studentViewLabel'),\n                icon: 'people',\n                type: 'primary',\n                active: true\n            },\n            'root.notebooks': {\n                name: this.$translate('notebookView'),\n                label: this.$translate('notebookViewLabel'),\n                icon: 'chrome_reader_mode',\n                type: 'primary',\n                active: this.NotebookService.isNotebookEnabled()\n            },\n            'root.export': {\n                name: this.$translate('exportView'),\n                label: this.$translate('exportViewLabel'),\n                icon: 'file_download',\n                type: 'secondary',\n                active: true\n            },\n            'root.notes': {\n                name: this.$translate('notesTipsView'),\n                label: this.$translate('notesTipsViewLabel'),\n                icon: 'speaker_notes',\n                type: 'secondary',\n                active: false\n            },\n            'root.milestones': {\n                name: this.$translate('milestonesView'),\n                label: this.$translate('milestonesViewLabel'),\n                icon: 'flag',\n                type: 'primary',\n                active: true\n            }\n        };\n\n        // alert user when inactive for a long time\n        this.$scope.$on('showSessionWarning', () => {\n            // Appending dialog to document.body\n            let confirm = $mdDialog.confirm()\n                .parent(angular.element(document.body))\n                .title(this.$translate('SESSION_TIMEOUT'))\n                .content(this.$translate('SESSION_TIMEOUT_MESSAGE'))\n                .ariaLabel(this.$translate('SESSION_TIMEOUT'))\n                .ok(this.$translate('YES'))\n                .cancel(this.$translate('NO'));\n            $mdDialog.show(confirm).then(() => {\n                this.SessionService.renewSession();\n            }, () => {\n                this.SessionService.forceLogOut();\n            });\n        });\n\n        // alert user when server is going to be updated\n        this.$scope.$on('showRequestLogout', (ev) => {\n            let alert = $mdDialog.confirm()\n                .parent(angular.element(document.body))\n                .title(translations.serverUpdate)\n                .textContent(this.$translate('serverUpdateRequestLogoutMessage'))\n                .ariaLabel(this.$translate('serverUpdate'))\n                .targetEvent(ev)\n                .ok(this.$translate('ok'));\n\n            $mdDialog.show(alert).then(() => {\n                // do nothing\n            }, () => {\n                // do nothing\n            });\n        });\n\n        // listen for state change events\n        this.$rootScope.$on('$stateChangeSuccess', (event, toState, toParams, fromState, fromParams) => {\n            // close the menu when the state changes\n            this.menuOpen = false;\n\n            this.processUI();\n        });\n\n        // TODO: make dynamic, set somewhere like in config?\n        this.logoPath = this.ProjectService.getThemePath() + '/images/WISE-logo-ffffff.svg';\n\n        this.processUI();\n\n        this.themePath = this.ProjectService.getThemePath();\n\n        this.notifications = this.NotificationService.notifications;\n\n        // save event when classroom monitor session is started\n        let context = \"ClassroomMonitor\", nodeId = null, componentId = null, componentType = null,\n            category = \"Navigation\", event = \"sessionStarted\", data = {};\n        this.TeacherDataService.saveEvent(context, nodeId, componentId, componentType, category, event, data);\n    }\n\n    /**\n     * Update UI items based on state, show or hide relevant menus and toolbars\n     * TODO: remove/rework this and put items in their own ui states?\n     */\n    processUI() {\n        let viewName = this.$state.$current.name;\n        this.currentViewName = this.views[viewName].name;\n\n        if (viewName === 'root.nodeProgress') {\n            let nodeId = this.$state.params.nodeId;\n            this.showStepTools = this.ProjectService.isApplicationNode(nodeId);\n        } else {\n            this.showStepTools = false;\n        }\n    };\n\n    /**\n     * Toggle the classroom monitor main menu\n     */\n    toggleMenu() {\n        this.menuOpen = !this.menuOpen;\n    }\n\n    /**\n     * The user has moved the mouse so we will notify the Session Service\n     * so that it can refresh the session\n     */\n    mouseMoved() {\n        /*\n         * notify the Session Service that the user has moved the mouse\n         * so we can refresh the session\n         */\n        this.SessionService.mouseMoved();\n    }\n}\n\nClassroomMonitorController.$inject = [\n    '$filter',\n    '$mdDialog',\n    '$rootScope',\n    '$scope',\n    '$state',\n    '$stateParams',\n    'ConfigService',\n    'NotebookService',\n    'NotificationService',\n    'ProjectService',\n    'SessionService',\n    'TeacherDataService',\n    'TeacherWebSocketService'\n];\n\nexport default ClassroomMonitorController;\n"]}