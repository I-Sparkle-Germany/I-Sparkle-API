{"version":3,"sources":["classroomMonitorController.es6"],"names":["ClassroomMonitorController","$filter","$mdDialog","$rootScope","$scope","$state","$stateParams","ConfigService","NotificationService","ProjectService","SessionService","TeacherDataService","TeacherWebSocketService","$translate","projectName","getProjectTitle","runId","getRunId","numberProject","menuOpen","showSideMenu","showMonitorToolbar","showStepToolbar","views","name","label","icon","type","active","$on","confirm","parent","angular","element","document","body","title","content","ariaLabel","ok","cancel","show","then","renewSession","forceLogOut","ev","alert","translations","serverUpdate","textContent","targetEvent","event","toState","toParams","fromState","fromParams","processUI","themePath","getThemePath","notifications","$watch","length","newValue","oldValue","context","nodeId","componentId","componentType","category","data","saveEvent","$current","params","showMenu","isApplicationNode","getNewNotifications","filter","notification","timeDismissed","toWorkgroupId","getWorkgroupId","$","dismissAllNotifications","newNotifications","map","newNotification","dismissNotification","mouseMoved","$inject"],"mappings":"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","file":"classroomMonitorController.js","sourcesContent":["'use strict';\n\nclass ClassroomMonitorController {\n\n    constructor($filter,\n                $mdDialog,\n                $rootScope,\n                $scope,\n                $state,\n                $stateParams,\n                ConfigService,\n                NotificationService,\n                ProjectService,\n                SessionService,\n                TeacherDataService,\n                TeacherWebSocketService) {\n\n        this.$filter = $filter;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.ConfigService = ConfigService;\n        this.NotificationService = NotificationService;\n        this.ProjectService = ProjectService;\n        this.SessionService = SessionService;\n        this.TeacherDataService = TeacherDataService;\n        this.TeacherWebSocketService = TeacherWebSocketService;\n\n        this.$translate = this.$filter('translate');\n\n        this.projectName = this.ProjectService.getProjectTitle();\n        this.runId = this.ConfigService.getRunId();\n\n        this.numberProject = true; // TODO: make dynamic or remove\n\n        this.menuOpen = false; // boolean to indicate whether monitor nav menu is open\n        this.showSideMenu = true; // boolean to indicate whether to show the monitor side menu\n        this.showMonitorToolbar = true; // boolean to indicate whether to show the monitor toolbar\n        this.showStepToolbar = false; // boolean to indicate whether to show the step toolbar\n\n        // ui-views and their corresponding names, labels, and icons\n        this.views = {\n            'root.dashboard': {\n                name: this.$translate('dashboardView'),\n                label: this.$translate('dashboardViewLabel'),\n                icon: 'dashboard',\n                type: 'primary',\n                active: false\n            },\n            'root.nodeProgress': {\n                name: this.$translate('projectView'),\n                label: this.$translate('projectViewLabel'),\n                icon: 'assignment_turned_in',\n                type: 'primary',\n                active: true\n            },\n            'root.studentProgress': {\n                name: this.$translate('studentView'),\n                label: this.$translate('studentViewLabel'),\n                icon: 'people',\n                type: 'primary',\n                active: true\n            },\n            'root.notebooks': {\n                name: this.$translate('notebookView'),\n                label: this.$translate('notebookViewLabel'),\n                icon: 'chrome_reader_mode',\n                type: 'secondary',\n                active: false\n            },\n            'root.export': {\n                name: this.$translate('exportView'),\n                label: this.$translate('exportViewLabel'),\n                icon: 'file_download',\n                type: 'secondary',\n                active: true\n            },\n            'root.notes': {\n                name: this.$translate('notesTipsView'),\n                label: this.$translate('notesTipsViewLabel'),\n                icon: 'speaker_notes',\n                type: 'secondary',\n                active: false\n            }\n        };\n\n        this.$scope.$on('showSessionWarning', () => {\n            // Appending dialog to document.body\n            let confirm = $mdDialog.confirm()\n                .parent(angular.element(document.body))\n                .title('Session Timeout')\n                .content('You have been inactive for a long time. Do you want to stay logged in?')\n                .ariaLabel('Session Timeout')\n                .ok('YES')\n                .cancel('No');\n            $mdDialog.show(confirm).then(() => {\n                this.SessionService.renewSession();\n            }, () => {\n                this.SessionService.forceLogOut();\n            });\n        });\n\n        // alert user when inactive for a long time\n        this.$scope.$on('showRequestLogout', (ev) => {\n            let alert = $mdDialog.confirm()\n                .parent(angular.element(document.body))\n                .title(translations.serverUpdate)\n                .textContent(this.$translate('serverUpdateRequestLogoutMessage'))\n                .ariaLabel(this.$translate('serverUpdate'))\n                .targetEvent(ev)\n                .ok(this.$translate('ok'));\n\n            $mdDialog.show(alert).then(() => {\n                // do nothing\n            }, () => {\n                // do nothing\n            });\n        });\n\n        // listen for state change events\n        this.$rootScope.$on('$stateChangeSuccess', (event, toState, toParams, fromState, fromParams) => {\n            // close the menu when the state changes\n            this.menuOpen = false;\n\n            this.processUI();\n        });\n\n        // update UI items; TODO: remove eventually\n        this.processUI();\n\n        this.themePath = this.ProjectService.getThemePath();\n\n        this.notifications = this.NotificationService.notifications;\n        // watch for changes in notifications\n        this.$scope.$watch(\n            () => {\n                return this.NotificationService.notifications.length;\n            },\n            (newValue, oldValue) => {\n                this.notifications = this.NotificationService.notifications;\n            }\n        );\n\n        // save event when classroom monitor session is started\n        let context = \"ClassroomMonitor\", nodeId = null, componentId = null, componentType = null,\n            category = \"Navigation\", event = \"sessionStarted\", data = {};\n        this.TeacherDataService.saveEvent(context, nodeId, componentId, componentType, category, event, data);\n    }\n\n    /**\n     * Update UI items based on state, show or hide relevant menus and toolbars\n     * TODO: remove/rework this and put items in their own ui states\n     */\n    processUI() {\n        if (this.$state.$current.name === 'root.nodeProgress') {\n            let nodeId = this.$state.params.nodeId;\n            let showMenu = true;\n            let showMonitorToolbar = true;\n            let showStepToolbar = false;\n            if (nodeId) {\n                if (this.ProjectService.isApplicationNode(nodeId)) {\n                    showMenu = false;\n                    showMonitorToolbar = false;\n                    showStepToolbar = true;\n                }\n            }\n            this.showSideMenu = showMenu;\n            this.showMonitorToolbar = showMonitorToolbar;\n            this.showStepToolbar = showStepToolbar;\n        }\n    };\n\n    /**\n     * Returns true iff there are new notifications\n     * TODO: move to TeacherDataService\n     */\n    hasNewNotifications() {\n        return this.getNewNotifications().length > 0;\n    }\n\n    /**\n     * Returns all teacher notifications that have not been dismissed yet\n     * TODO: move to TeacherDataService, take into account shared teacher users\n     */\n    getNewNotifications() {\n        return this.notifications.filter(\n            notification => {\n                return (notification.timeDismissed == null && notification.toWorkgroupId === this.ConfigService.getWorkgroupId());\n            }\n        );\n    }\n\n    /**\n     * Show confirmation dialog before dismissing all notifications\n     */\n    confirmDismissAllNotifications(ev) {\n        if (this.getNewNotifications().length > 1) {\n            let confirm = this.$mdDialog.confirm()\n                .parent(angular.element($('._md-open-menu-container._md-active')))// TODO: hack for now (showing md-dialog on top of md-menu)\n                .ariaLabel(this.$translate('dismissNotificationsTitle'))\n                .textContent(this.$translate('dismissNotificationsMessage'))\n                .targetEvent(ev)\n                .ok(this.$translate('yes'))\n                .cancel(this.$translate('no'));\n\n            this.$mdDialog.show(confirm).then(() => {\n                this.dismissAllNotifications();\n            });\n        } else {\n            this.dismissAllNotifications();\n        }\n    }\n\n    /**\n     * Dismiss all new notifications\n     */\n    dismissAllNotifications() {\n        let newNotifications = this.getNewNotifications();\n        newNotifications.map((newNotification) => {\n            this.dismissNotification(newNotification);\n        });\n    }\n\n    /**\n     * Dismiss the specified notification\n     * @param notification\n     */\n    dismissNotification(notification) {\n        this.NotificationService.dismissNotification(notification);\n    }\n    /**\n     * The user has moved the mouse so we will notify the Session Service\n     * so that it can refresh the session\n     */\n    mouseMoved() {\n        /*\n         * notify the Session Service that the user has moved the mouse\n         * so we can refresh the session\n         */\n        this.SessionService.mouseMoved();\n    }\n}\n\nClassroomMonitorController.$inject = [\n    '$filter',\n    '$mdDialog',\n    '$rootScope',\n    '$scope',\n    '$state',\n    '$stateParams',\n    'ConfigService',\n    'NotificationService',\n    'ProjectService',\n    'SessionService',\n    'TeacherDataService',\n    'TeacherWebSocketService'\n];\n\nexport default ClassroomMonitorController;\n"]}