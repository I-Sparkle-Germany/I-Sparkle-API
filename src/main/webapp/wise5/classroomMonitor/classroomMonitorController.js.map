{"version":3,"sources":["classroomMonitorController.es6"],"names":["ClassroomMonitorController","$filter","$mdDialog","$mdToast","$rootScope","$scope","$state","$stateParams","ConfigService","NotebookService","NotificationService","ProjectService","SessionService","TeacherDataService","TeacherWebSocketService","$translate","projectTitle","getProjectTitle","runId","getRunId","numberProject","menuOpen","showSideMenu","showToolbar","showStepTools","views","name","label","icon","type","active","isNotebookEnabled","connectionLostDisplay","build","template","hideDelay","connectionLostShown","$on","confirm","parent","angular","element","document","body","title","content","ariaLabel","ok","cancel","show","then","renewSession","forceLogOut","ev","alert","translations","serverUpdate","textContent","targetEvent","event","toState","toParams","fromState","fromParams","processUI","handleServerDisconnect","handleServerReconnect","logoPath","getThemePath","themePath","notifications","context","nodeId","componentId","componentType","category","data","saveEvent","viewName","$current","currentViewName","params","isApplicationNode","mouseMoved","hide","$inject"],"mappings":"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","file":"classroomMonitorController.js","sourcesContent":["'use strict';\r\n\r\nclass ClassroomMonitorController {\r\n\r\n    constructor($filter,\r\n                $mdDialog,\r\n                $mdToast,\r\n                $rootScope,\r\n                $scope,\r\n                $state,\r\n                $stateParams,\r\n                ConfigService,\r\n                NotebookService,\r\n                NotificationService,\r\n                ProjectService,\r\n                SessionService,\r\n                TeacherDataService,\r\n                TeacherWebSocketService) {\r\n\r\n        this.$filter = $filter;\r\n        this.$mdToast = $mdToast;\r\n        this.$rootScope = $rootScope;\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.$stateParams = $stateParams;\r\n        this.ConfigService = ConfigService;\r\n        this.NotebookService = NotebookService;\r\n        this.NotificationService = NotificationService;\r\n        this.ProjectService = ProjectService;\r\n        this.SessionService = SessionService;\r\n        this.TeacherDataService = TeacherDataService;\r\n        this.TeacherWebSocketService = TeacherWebSocketService;\r\n\r\n        this.$translate = this.$filter('translate');\r\n\r\n        this.projectTitle = this.ProjectService.getProjectTitle();\r\n        this.runId = this.ConfigService.getRunId();\r\n\r\n        this.numberProject = true; // TODO: make dynamic or remove\r\n\r\n        this.menuOpen = false; // boolean to indicate whether monitor nav menu is open\r\n        this.showSideMenu = true; // boolean to indicate whether to show the monitor side menu\r\n        this.showToolbar = true; // boolean to indicate whether to show the monitor toolbar\r\n        this.showStepTools = false; // boolean to indicate whether to show the step toolbar\r\n\r\n        // ui-views and their corresponding names, labels, and icons\r\n        this.views = {\r\n            'root.dashboard': {\r\n                name: this.$translate('dashboardView'),\r\n                label: this.$translate('dashboardViewLabel'),\r\n                icon: 'dashboard',\r\n                type: 'primary',\r\n                active: false\r\n            },\r\n            'root.nodeProgress': {\r\n                name: this.$translate('projectView'),\r\n                label: this.$translate('projectViewLabel'),\r\n                icon: 'assignment_turned_in',\r\n                type: 'primary',\r\n                active: true\r\n            },\r\n            'root.studentProgress': {\r\n                name: this.$translate('studentView'),\r\n                label: this.$translate('studentViewLabel'),\r\n                icon: 'people',\r\n                type: 'primary',\r\n                active: true\r\n            },\r\n            'root.notebooks': {\r\n                name: this.$translate('notebookView'),\r\n                label: this.$translate('notebookViewLabel'),\r\n                icon: 'chrome_reader_mode',\r\n                type: 'primary',\r\n                active: this.NotebookService.isNotebookEnabled()\r\n            },\r\n            'root.export': {\r\n                name: this.$translate('exportView'),\r\n                label: this.$translate('exportViewLabel'),\r\n                icon: 'file_download',\r\n                type: 'secondary',\r\n                active: true\r\n            },\r\n            'root.notes': {\r\n                name: this.$translate('notesTipsView'),\r\n                label: this.$translate('notesTipsViewLabel'),\r\n                icon: 'speaker_notes',\r\n                type: 'secondary',\r\n                active: false\r\n            },\r\n            'root.milestones': {\r\n                name: this.$translate('milestonesView'),\r\n                label: this.$translate('milestonesViewLabel'),\r\n                icon: 'flag',\r\n                type: 'primary',\r\n                active: true\r\n            }\r\n        };\r\n\r\n        // build server disconnect display\r\n        this.connectionLostDisplay = this.$mdToast.build({\r\n            template: `<md-toast>\r\n                        <span>{{ 'ERROR_CHECK_YOUR_INTERNET_CONNECTION' | translate }}</span>\r\n                      </md-toast>`,\r\n            hideDelay: 0\r\n        });\r\n        this.connectionLostShown = false;\r\n\r\n        // alert user when inactive for a long time\r\n        this.$scope.$on('showSessionWarning', () => {\r\n            // Appending dialog to document.body\r\n            let confirm = $mdDialog.confirm()\r\n                .parent(angular.element(document.body))\r\n                .title(this.$translate('SESSION_TIMEOUT'))\r\n                .content(this.$translate('SESSION_TIMEOUT_MESSAGE'))\r\n                .ariaLabel(this.$translate('SESSION_TIMEOUT'))\r\n                .ok(this.$translate('YES'))\r\n                .cancel(this.$translate('NO'));\r\n            $mdDialog.show(confirm).then(() => {\r\n                this.SessionService.renewSession();\r\n            }, () => {\r\n                this.SessionService.forceLogOut();\r\n            });\r\n        });\r\n\r\n        // alert user when server is going to be updated\r\n        this.$scope.$on('showRequestLogout', (ev) => {\r\n            let alert = $mdDialog.confirm()\r\n                .parent(angular.element(document.body))\r\n                .title(translations.serverUpdate)\r\n                .textContent(this.$translate('serverUpdateRequestLogoutMessage'))\r\n                .ariaLabel(this.$translate('serverUpdate'))\r\n                .targetEvent(ev)\r\n                .ok(this.$translate('ok'));\r\n\r\n            $mdDialog.show(alert).then(() => {\r\n                // do nothing\r\n            }, () => {\r\n                // do nothing\r\n            });\r\n        });\r\n\r\n        // listen for state change events\r\n        this.$rootScope.$on('$stateChangeSuccess', (event, toState, toParams, fromState, fromParams) => {\r\n            // close the menu when the state changes\r\n            this.menuOpen = false;\r\n\r\n            this.processUI();\r\n        });\r\n\r\n        // alert user when server loses connection\r\n        this.$scope.$on('serverDisconnected', () => {\r\n            this.handleServerDisconnect();\r\n        });\r\n\r\n        // remove alert when server regains connection\r\n        this.$scope.$on('serverConnected', () => {\r\n            this.handleServerReconnect();\r\n        });\r\n\r\n        // TODO: make dynamic, set somewhere like in config?\r\n        this.logoPath = this.ProjectService.getThemePath() + '/images/WISE-logo-ffffff.svg';\r\n\r\n        this.processUI();\r\n\r\n        this.themePath = this.ProjectService.getThemePath();\r\n\r\n        this.notifications = this.NotificationService.notifications;\r\n\r\n        // save event when classroom monitor session is started\r\n        let context = \"ClassroomMonitor\", nodeId = null, componentId = null, componentType = null,\r\n            category = \"Navigation\", event = \"sessionStarted\", data = {};\r\n        this.TeacherDataService.saveEvent(context, nodeId, componentId, componentType, category, event, data);\r\n    }\r\n\r\n    /**\r\n     * Update UI items based on state, show or hide relevant menus and toolbars\r\n     * TODO: remove/rework this and put items in their own ui states?\r\n     */\r\n    processUI() {\r\n        let viewName = this.$state.$current.name;\r\n        this.currentViewName = this.views[viewName].name;\r\n\r\n        if (viewName === 'root.nodeProgress') {\r\n            let nodeId = this.$state.params.nodeId;\r\n            this.showStepTools = this.ProjectService.isApplicationNode(nodeId);\r\n        } else {\r\n            this.showStepTools = false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Toggle the classroom monitor main menu\r\n     */\r\n    toggleMenu() {\r\n        this.menuOpen = !this.menuOpen;\r\n    }\r\n\r\n    /**\r\n     * The user has moved the mouse so we will notify the Session Service\r\n     * so that it can refresh the session\r\n     */\r\n    mouseMoved() {\r\n        /*\r\n         * notify the Session Service that the user has moved the mouse\r\n         * so we can refresh the session\r\n         */\r\n        this.SessionService.mouseMoved();\r\n    }\r\n\r\n    // show server error alert when connection is lost\r\n    handleServerDisconnect() {\r\n        if (!this.connectionLostShown) {\r\n          this.$mdToast.show(this.connectionLostDisplay);\r\n          this.connectionLostShown = true;\r\n        }\r\n    }\r\n\r\n    // hide server error alert when connection is restored\r\n    handleServerReconnect() {\r\n        this.$mdToast.hide(this.connectionLostDisplay);\r\n        this.connectionLostShown = false;\r\n    }\r\n}\r\n\r\nClassroomMonitorController.$inject = [\r\n    '$filter',\r\n    '$mdDialog',\r\n    '$mdToast',\r\n    '$rootScope',\r\n    '$scope',\r\n    '$state',\r\n    '$stateParams',\r\n    'ConfigService',\r\n    'NotebookService',\r\n    'NotificationService',\r\n    'ProjectService',\r\n    'SessionService',\r\n    'TeacherDataService',\r\n    'TeacherWebSocketService'\r\n];\r\n\r\nexport default ClassroomMonitorController;\r\n"]}