{"version":3,"sources":["classroomMonitorController.es6"],"names":["ClassroomMonitorController","$mdDialog","$rootScope","$scope","$state","$stateParams","$translate","ConfigService","NotificationService","ProjectService","SessionService","TeacherDataService","TeacherWebSocketService","projectName","getProjectTitle","runId","getRunId","numberProject","menuOpen","showSideMenu","showMonitorToolbar","showStepToolbar","then","translation","views","name","dashboardView","label","dashboardViewLabel","icon","type","projectView","projectViewLabel","studentView","studentViewLabel","notebookView","notebookViewLabel","exportView","exportViewLabel","notesTipsView","notesTipsViewLabel","$on","confirm","parent","angular","element","document","body","title","content","ariaLabel","ok","cancel","show","renewSession","forceLogOut","event","toState","toParams","fromState","fromParams","processUI","themePath","getThemePath","notifications","$watch","length","newValue","oldValue","context","nodeId","componentId","componentType","category","data","saveEvent","$current","params","showMenu","isApplicationNode","ocpu","seturl","req","call","session","getStdout","returnedCSVString","csvBlob","Blob","csvUrl","URL","createObjectURL","a","createElement","appendChild","style","href","download","click","window","setTimeout","revokeObjectURL","exportType","getExport","result","alert","exportFilename","csvString","COLUMN_INDEX_NODE_ID","COLUMN_INDEX_COMPONENT_ID","COLUMN_INDEX_STEP_NUMBER","COLUMN_INDEX_STEP_TITLE","COLUMN_INDEX_COMPONENT_PART_NUMBER","COLUMN_INDEX_STUDENT_DATA","COLUMN_INDEX_WORKGROUP_ID","COLUMN_INDEX_WISE_IDS","COLUMN_INDEX_WISE_ID_1","COLUMN_INDEX_WISE_ID_2","COLUMN_INDEX_WISE_ID_3","COLUMN_INDEX_STUDENT_RESPONSE","hash","reverse","filter","studentWorkRow","hashKey","hasOwnProperty","rowIndex","row","getNodePositionById","getNodeTitleByNodeId","getComponentPositionByNodeIdAndComponentId","workgroupId","wiseIDs","wiseIDsArray","split","studentDataJSONCell","response","cellIndex","cell","JSON","stringify","replace","COLUMN_INDEX_TYPE","text","COLUMN_INDEX_DATA","getNewNotifications","notification","timeDismissed","toWorkgroupId","getWorkgroupId","ev","translations","$","dismissNotificationsTitle","textContent","dismissNotificationsMessage","targetEvent","yes","no","dismissAllNotifications","newNotifications","map","newNotification","dismissNotification","mouseMoved","$inject"],"mappings":"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","file":"classroomMonitorController.js","sourcesContent":["'use strict';\n\nclass ClassroomMonitorController {\n\n    constructor($mdDialog,\n                $rootScope,\n                $scope,\n                $state,\n                $stateParams,\n                $translate,\n                ConfigService,\n                NotificationService,\n                ProjectService,\n                SessionService,\n                TeacherDataService,\n                TeacherWebSocketService) {\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.NotificationService = NotificationService;\n        this.ProjectService = ProjectService;\n        this.SessionService = SessionService;\n        this.TeacherDataService = TeacherDataService;\n        this.TeacherWebSocketService = TeacherWebSocketService;\n\n        this.projectName = this.ProjectService.getProjectTitle();\n        this.runId = this.ConfigService.getRunId();\n\n        this.numberProject = true; // TODO: make dynamic or remove\n\n        this.menuOpen = false; // boolean to indicate whether monitor nav menu is open\n        this.showSideMenu = true; // boolean to indicate whether to show the monitor side menu\n        this.showMonitorToolbar = true; // boolean to indicate whether to show the monitor toolbar\n        this.showStepToolbar = false; // boolean to indicate whether to show the step toolbar\n\n        // ui-views and their corresponding names, labels, and icons\n        this.$translate(['dashboardView', 'dashboardViewLabel', 'projectView', 'projectViewLabel',\n            'studentView', 'studentViewLabel', 'notebookView', 'notebookViewLabel',\n            'exportView', 'exportViewLabel', 'notesTipsView', 'notesTipsViewLabel']).then((translation) => {\n            this.views = {\n                'root.dashboard': {\n                    name: translation.dashboardView,\n                    label: translation.dashboardViewLabel,\n                    icon: 'dashboard',\n                    type: 'primary'\n                },\n                'root.nodeProgress': {\n                    name: translation.projectView,\n                    label: translation.projectViewLabel,\n                    icon: 'assignment_turned_in',\n                    type: 'primary'\n                },\n                'root.studentProgress': {\n                    name: translation.studentView,\n                    label: translation.studentViewLabel,\n                    icon: 'people',\n                    type: 'primary'\n                },\n                'root.notebooks': {\n                    name: translation.notebookView,\n                    label: translation.notebookViewLabel,\n                    icon: 'chrome_reader_mode',\n                    type: 'secondary'\n                },\n                'root.export': {\n                    name: translation.exportView,\n                    label: translation.exportViewLabel,\n                    icon: 'file_download',\n                    type: 'secondary'\n                },\n                'root.notes': {\n                    name: translation.notesTipsView,\n                    label: translation.notesTipsViewLabel,\n                    icon: 'speaker_notes',\n                    type: 'secondary'\n                }\n            };\n        });\n\n        this.$scope.$on('showSessionWarning', () => {\n            // Appending dialog to document.body\n            let confirm = $mdDialog.confirm()\n                .parent(angular.element(document.body))\n                .title('Session Timeout')\n                .content('You have been inactive for a long time. Do you want to stay logged in?')\n                .ariaLabel('Session Timeout')\n                .ok('YES')\n                .cancel('No');\n            $mdDialog.show(confirm).then(() => {\n                this.SessionService.renewSession();\n            }, () => {\n                this.SessionService.forceLogOut();\n            });\n        });\n\n        // listen for state change events\n        this.$rootScope.$on('$stateChangeSuccess', (event, toState, toParams, fromState, fromParams) => {\n            // close the menu when the state changes\n            this.menuOpen = false;\n\n            this.processUI();\n        });\n\n        // update UI items; TODO: remove eventually\n        this.processUI();\n\n        this.themePath = this.ProjectService.getThemePath();\n\n        this.notifications = this.NotificationService.notifications;\n        // watch for changes in notifications\n        this.$scope.$watch(\n            () => {\n                return this.NotificationService.notifications.length;\n            },\n            (newValue, oldValue) => {\n                this.notifications = this.NotificationService.notifications;\n            }\n        );\n\n        // save event when classroom monitor session is started\n        let context = \"ClassroomMonitor\", nodeId = null, componentId = null, componentType = null,\n            category = \"Navigation\", event = \"sessionStarted\", data = {};\n        this.TeacherDataService.saveEvent(context, nodeId, componentId, componentType, category, event, data);\n    }\n\n    /**\n     * Update UI items based on state, show or hide relevant menus and toolbars\n     * TODO: remove/rework this and put items in their own ui states\n     */\n    processUI() {\n        if (this.$state.$current.name === 'root.nodeProgress') {\n            let nodeId = this.$state.params.nodeId;\n            let showMenu = true;\n            let showMonitorToolbar = true;\n            let showStepToolbar = false;\n            if (nodeId) {\n                if (this.ProjectService.isApplicationNode(nodeId)) {\n                    showMenu = false;\n                    showMonitorToolbar = false;\n                    showStepToolbar = true;\n                }\n            }\n            this.showSideMenu = showMenu;\n            this.showMonitorToolbar = showMonitorToolbar;\n            this.showStepToolbar = showStepToolbar;\n        }\n    };\n\n    hello() {\n        ocpu.seturl(\"//128.32.189.240:81/ocpu/user/wiser/library/wiser/R\");\n        // perform the request\n        var req = ocpu.call(\"hello\", {\n            \"name\": \"Hiroki\"\n        }, (session) => {\n            session.getStdout((returnedCSVString) => {\n                var csvBlob = new Blob([returnedCSVString], {type: 'text/csv'});\n                var csvUrl = URL.createObjectURL(csvBlob);\n                var a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style = \"display: none\";\n                a.href = csvUrl;\n                a.download = \"export_\" + runId + \".csv\";\n                a.click();\n\n                // timeout is required for FF.\n                window.setTimeout(() => {\n                    URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n                }, 3000);\n            });\n        });\n    };\n\n    /**\n     * Export all or latest work for this run in CSV format\n     */\n    export(exportType) {\n        this.TeacherDataService.getExport(exportType).then((result) => {\n            if (result == null) {\n                alert(\"Error retrieving result\");\n                return;\n            }\n\n            if (exportType === \"studentAssets\") {\n                return; // no further processing necessary\n            }\n            var runId = this.ConfigService.getRunId();\n            var exportFilename = \"\";\n\n            var csvString = \"\";  // resulting csv string\n\n            if (exportType === \"latestStudentWork\" || exportType === \"allStudentWork\") {\n                var COLUMN_INDEX_NODE_ID = 1;\n                var COLUMN_INDEX_COMPONENT_ID = 2;\n                var COLUMN_INDEX_STEP_NUMBER = 4;\n                var COLUMN_INDEX_STEP_TITLE = 5;\n                var COLUMN_INDEX_COMPONENT_PART_NUMBER = 6;\n                var COLUMN_INDEX_STUDENT_DATA = 11;\n                var COLUMN_INDEX_WORKGROUP_ID = 14;\n                var COLUMN_INDEX_WISE_IDS = 18;\n                var COLUMN_INDEX_WISE_ID_1 = 18;\n                var COLUMN_INDEX_WISE_ID_2 = 19;\n                var COLUMN_INDEX_WISE_ID_3 = 20;\n                var COLUMN_INDEX_STUDENT_RESPONSE = 21;\n\n                if (exportType === \"latestStudentWork\") {\n                    var hash = {};  // store latestStudentWork. Assume that key = (nodeId, componentId, workgroupId)\n                    result = result.reverse().filter( (studentWorkRow) => {\n                        var hashKey = studentWorkRow[COLUMN_INDEX_NODE_ID] + \"_\" + studentWorkRow[COLUMN_INDEX_COMPONENT_ID] + \"_\" + studentWorkRow[COLUMN_INDEX_WORKGROUP_ID];\n                        if (!hash.hasOwnProperty(hashKey)) {\n                            // remember in hash\n                            hash[hashKey] = studentWorkRow;\n                            return true;\n                        } else {\n                            // we already have the latest, so we can disregard this studentWorkRow.\n                            return false;\n                        }\n                    }).reverse();\n                    exportFilename = \"latest_work_\" + runId + \".csv\";\n                } else if (exportType === \"allStudentWork\") {\n                    exportFilename = \"all_work_\" + runId + \".csv\";\n                }\n\n                for (var rowIndex = 0; rowIndex < result.length; rowIndex++) {\n                    var row = result[rowIndex];\n\n                    if (rowIndex === 0) {\n                        // append additional header columns\n                        row[COLUMN_INDEX_WISE_ID_1] = \"WISE ID 1\";\n                        row[COLUMN_INDEX_WISE_ID_2] = \"WISE ID 2\";\n                        row[COLUMN_INDEX_WISE_ID_3] = \"WISE ID 3\";\n                        row[COLUMN_INDEX_STUDENT_RESPONSE] = \"response\";\n                    } else {\n                        // for all non-header rows, fill in step numbers, titles, and component part numbers.\n                        var nodeId = row[COLUMN_INDEX_NODE_ID];\n                        var componentId = row[COLUMN_INDEX_COMPONENT_ID];\n                        row[COLUMN_INDEX_STEP_NUMBER] = this.ProjectService.getNodePositionById(nodeId);\n                        row[COLUMN_INDEX_STEP_TITLE] = this.ProjectService.getNodeTitleByNodeId(nodeId);\n                        row[COLUMN_INDEX_COMPONENT_PART_NUMBER] = this.ProjectService.getComponentPositionByNodeIdAndComponentId(nodeId, componentId) + 1; // make it 1-indexed for researchers\n                        var workgroupId = row[COLUMN_INDEX_WORKGROUP_ID];\n                        var wiseIDs = row[COLUMN_INDEX_WISE_IDS];\n                        var wiseIDsArray = wiseIDs.split(\",\");\n                        row[COLUMN_INDEX_WISE_ID_1] = wiseIDsArray[0];\n                        row[COLUMN_INDEX_WISE_ID_2] = wiseIDsArray[1] || \"\";\n                        row[COLUMN_INDEX_WISE_ID_3] = wiseIDsArray[2] || \"\";\n\n                        // get the student data JSON and extract responses into its own column\n                        var studentDataJSONCell = row[COLUMN_INDEX_STUDENT_DATA];\n                        row[COLUMN_INDEX_STUDENT_RESPONSE] = studentDataJSONCell.response || \"\";\n                    }\n\n                    // append row to csvString\n                    for (let cellIndex = 0; cellIndex < row.length; cellIndex++) {\n                        let cell = row[cellIndex];\n                        if (typeof cell === \"object\") {\n                            cell = \"\\\"\" + JSON.stringify(cell).replace(/\"/g, '\"\"') + \"\\\"\";\n                        } else if (typeof cell === \"string\") {\n                            cell = \"\\\"\" + cell + \"\\\"\";\n                        }\n                        csvString += cell + \",\";\n                    }\n                    csvString += \"\\r\\n\";\n                }\n\n            } else if (exportType === \"notebookItems\") {\n                exportFilename = \"notebook_\" + runId + \".csv\";\n\n                let COLUMN_INDEX_NODE_ID = 1;\n                let COLUMN_INDEX_COMPONENT_ID = 2;\n                let COLUMN_INDEX_STEP_NUMBER = 3;\n                let COLUMN_INDEX_STEP_TITLE = 4;\n                let COLUMN_INDEX_COMPONENT_PART_NUMBER = 5;\n                let COLUMN_INDEX_TYPE = 8;\n                let COLUMN_INDEX_STUDENT_DATA = 9;\n                let COLUMN_INDEX_WISE_IDS = 16;\n                let COLUMN_INDEX_WISE_ID_1 = 16;\n                let COLUMN_INDEX_WISE_ID_2 = 17;\n                let COLUMN_INDEX_WISE_ID_3 = 18;\n                let COLUMN_INDEX_STUDENT_RESPONSE = 19;\n\n                for (let rowIndex = 0; rowIndex < result.length; rowIndex++) {\n                    let row = result[rowIndex];\n\n                    if (rowIndex === 0) {\n                        // append additional header columns\n                        row[COLUMN_INDEX_WISE_ID_1] = \"WISE ID 1\";\n                        row[COLUMN_INDEX_WISE_ID_2] = \"WISE ID 2\";\n                        row[COLUMN_INDEX_WISE_ID_3] = \"WISE ID 3\";\n                        row[COLUMN_INDEX_STUDENT_RESPONSE] = \"response\";\n                    } else {\n                        // for all non-header rows, fill in step numbers, titles, and component part numbers.\n                        let nodeId = row[COLUMN_INDEX_NODE_ID];\n                        let componentId = row[COLUMN_INDEX_COMPONENT_ID];\n                        row[COLUMN_INDEX_STEP_NUMBER] = this.ProjectService.getNodePositionById(nodeId);\n                        row[COLUMN_INDEX_STEP_TITLE] = this.ProjectService.getNodeTitleByNodeId(nodeId);\n                        row[COLUMN_INDEX_COMPONENT_PART_NUMBER] = this.ProjectService.getComponentPositionByNodeIdAndComponentId(nodeId, componentId) + 1; // make it 1-indexed for researchers\n                        let wiseIDs = row[COLUMN_INDEX_WISE_IDS];\n                        let wiseIDsArray = wiseIDs.split(\",\");\n                        row[COLUMN_INDEX_WISE_ID_1] = wiseIDsArray[0];\n                        row[COLUMN_INDEX_WISE_ID_2] = wiseIDsArray[1] || \"\";\n                        row[COLUMN_INDEX_WISE_ID_3] = wiseIDsArray[2] || \"\";\n\n                        // get the student data JSON and extract responses into its own column\n                        let studentDataJSONCell = row[COLUMN_INDEX_STUDENT_DATA];\n                        if (row[COLUMN_INDEX_TYPE] === \"report\") {\n                            row[COLUMN_INDEX_STUDENT_RESPONSE] = studentDataJSONCell.content || \"\";\n                        } else if (row[COLUMN_INDEX_TYPE] === \"note\") {\n                            row[COLUMN_INDEX_STUDENT_RESPONSE] = studentDataJSONCell.text || \"\";\n                        }\n                    }\n\n                    // append row to csvString\n                    for (let cellIndex = 0; cellIndex < row.length; cellIndex++) {\n                        let cell = row[cellIndex];\n                        if (typeof cell === \"object\") {\n                            cell = \"\\\"\" + JSON.stringify(cell).replace(/\"/g, '\"\"') + \"\\\"\";\n                        } else if (typeof cell === \"string\") {\n                            cell = \"\\\"\" + cell + \"\\\"\";\n                        }\n                        csvString += cell + \",\";\n                    }\n                    csvString += \"\\r\\n\";\n                }\n            }\n\n            var csvBlob = new Blob([csvString], {type: 'text/csv'});\n            var csvUrl = URL.createObjectURL(csvBlob);\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.href = csvUrl;\n            a.download = exportFilename;\n            a.click();\n\n            // timeout is required for FF.\n            window.setTimeout(() => {\n                URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n            }, 3000);\n\n            /* TODO: get OCPU working again\n            //ocpu.seturl(\"//localhost:1234/ocpu/library/wise/R\");\n            ocpu.seturl(\"http://128.32.189.240:81/ocpu/user/wiser/library/wiser/R\");\n            //perform the request\n            var request = ocpu.call(\"extractchoices\", {\n                \"csvFile\": csvFile\n            }, (session) => {\n                session.getStdout((returnedCSVString) => {\n                    var csvBlob = new Blob([returnedCSVString], {type: 'text/csv'});\n                    var csvUrl = URL.createObjectURL(csvBlob);\n                    var a = document.createElement(\"a\");\n                    document.body.appendChild(a);\n                    a.href = csvUrl;\n                    a.download = \"export_\" + runId + \".csv\";\n                    a.click();\n\n                    // timeout is required for FF.\n                    window.setTimeout(() => {\n                        URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n                    }, 3000);\n\n                    //return returnedCSVString;\n                });\n            });\n\n            //if R returns an error, alert the error message\n            request.fail(() => {\n                alert(\"Server error: \" + request.responseText);\n            });\n            */\n        });\n    }\n\n    /**\n     * Export all events for this run in CSV format\n     */\n    exportEvents() {\n        this.TeacherDataService.getExport(\"events\").then((result) => {\n            if (result == null) {\n                alert(\"Error retrieving result\");\n                return;\n            }\n            var COLUMN_INDEX_NODE_ID = 1;\n            var COLUMN_INDEX_COMPONENT_ID = 2;\n            var COLUMN_INDEX_STEP_NUMBER = 4;\n            var COLUMN_INDEX_STEP_TITLE = 5;\n            var COLUMN_INDEX_COMPONENT_PART_NUMBER = 6;\n            var COLUMN_INDEX_DATA = 12;\n            var COLUMN_INDEX_WORKGROUP_ID = 15;\n            var COLUMN_INDEX_WISE_IDS = 19;\n            var COLUMN_INDEX_WISE_ID_1 = 19;\n            var COLUMN_INDEX_WISE_ID_2 = 20;\n            var COLUMN_INDEX_WISE_ID_3 = 21;\n            var runId = this.ConfigService.getRunId();\n\n            var exportFilename = \"events_\" + runId + \".csv\";\n\n            var csvString = \"\";  // resulting csv string\n\n            for (var rowIndex = 0; rowIndex < result.length; rowIndex++) {\n\n                var row = result[rowIndex];\n\n                if (rowIndex === 0) {\n                    // append additional header columns\n                    row[COLUMN_INDEX_WISE_ID_1] = \"WISE ID 1\";\n                    row[COLUMN_INDEX_WISE_ID_2] = \"WISE ID 2\";\n                    row[COLUMN_INDEX_WISE_ID_3] = \"WISE ID 3\";\n                } else {\n                    // for all non-header rows, fill in step numbers, titles, and component part numbers.\n                    var nodeId = row[COLUMN_INDEX_NODE_ID];\n                    var componentId = row[COLUMN_INDEX_COMPONENT_ID];\n                    row[COLUMN_INDEX_STEP_NUMBER] = this.ProjectService.getNodePositionById(nodeId);\n                    row[COLUMN_INDEX_STEP_TITLE] = this.ProjectService.getNodeTitleByNodeId(nodeId);\n                    row[COLUMN_INDEX_COMPONENT_PART_NUMBER] = this.ProjectService.getComponentPositionByNodeIdAndComponentId(nodeId, componentId) + 1; // make it 1-indexed for researchers\n                    var workgroupId = row[COLUMN_INDEX_WORKGROUP_ID];\n                    var wiseIDs = row[COLUMN_INDEX_WISE_IDS];\n                    var wiseIDsArray = wiseIDs.split(\",\");\n                    row[COLUMN_INDEX_WISE_ID_1] = wiseIDsArray[0];\n                    row[COLUMN_INDEX_WISE_ID_2] = wiseIDsArray[1] || \"\";\n                    row[COLUMN_INDEX_WISE_ID_3] = wiseIDsArray[2] || \"\";\n                }\n\n                // append row to csvString\n                for (var cellIndex = 0; cellIndex < row.length; cellIndex++) {\n                    var cell = row[cellIndex];\n                    if (typeof cell === \"object\") {\n                        cell = \"\\\"\" + JSON.stringify(cell).replace(/\"/g, '\"\"') + \"\\\"\";\n                    } else if (typeof cell === \"string\") {\n                        cell = \"\\\"\" + cell + \"\\\"\";\n                    }\n                    csvString += cell + \",\";\n                }\n                csvString += \"\\r\\n\";\n            }\n\n            var csvBlob = new Blob([csvString], {type: 'text/csv'});\n            var csvUrl = URL.createObjectURL(csvBlob);\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.href = csvUrl;\n            a.download = exportFilename;\n            a.click();\n\n            // timeout is required for FF.\n            window.setTimeout(() => {\n                URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n            }, 3000);\n        });\n    }\n\n    /**\n     * Returns true iff there are new notifications\n     * TODO: move to TeacherDataService\n     */\n    hasNewNotifications() {\n        return this.getNewNotifications().length > 0;\n    }\n\n    /**\n     * Returns all teacher notifications that have not been dismissed yet\n     * TODO: move to TeacherDataService, take into account shared teacher users\n     */\n    getNewNotifications() {\n        return this.notifications.filter(\n            notification => {\n                return (notification.timeDismissed == null && notification.toWorkgroupId === this.ConfigService.getWorkgroupId());\n            }\n        );\n    }\n\n    /**\n     * Show confirmation dialog before dismissing all notifications\n     */\n    confirmDismissAllNotifications(ev) {\n        if (this.getNewNotifications().length > 1) {\n            this.$translate([\"dismissNotificationsTitle\", \"dismissNotificationsMessage\", \"yes\", \"no\"]).then((translations) => {\n                let confirm = this.$mdDialog.confirm()\n                    .parent(angular.element($('._md-open-menu-container._md-active')))// TODO: hack for now (showing md-dialog on top of md-menu)\n                    .ariaLabel(translations.dismissNotificationsTitle)\n                    .textContent(translations.dismissNotificationsMessage)\n                    .targetEvent(ev)\n                    .ok(translations.yes)\n                    .cancel(translations.no);\n\n                this.$mdDialog.show(confirm).then(() => {\n                    this.dismissAllNotifications();\n                });\n            });\n        } else {\n            this.dismissAllNotifications();\n        }\n    }\n\n    /**\n     * Dismiss all new notifications\n     */\n    dismissAllNotifications() {\n        let newNotifications = this.getNewNotifications();\n        newNotifications.map((newNotification) => {\n            this.dismissNotification(newNotification);\n        });\n    }\n\n    /**\n     * Dismiss the specified notification\n     * @param notification\n     */\n    dismissNotification(notification) {\n        this.NotificationService.dismissNotification(notification);\n    }\n    /**\n     * The user has moved the mouse so we will notify the Session Service\n     * so that it can refresh the session\n     */\n    mouseMoved() {\n        /*\n         * notify the Session Service that the user has moved the mouse\n         * so we can refresh the session\n         */\n        this.SessionService.mouseMoved();\n    }\n}\n\nClassroomMonitorController.$inject = [\n    '$mdDialog',\n    '$rootScope',\n    '$scope',\n    '$state',\n    '$stateParams',\n    '$translate',\n    'ConfigService',\n    'NotificationService',\n    'ProjectService',\n    'SessionService',\n    'TeacherDataService',\n    'TeacherWebSocketService'\n];\n\nexport default ClassroomMonitorController;\n"]}