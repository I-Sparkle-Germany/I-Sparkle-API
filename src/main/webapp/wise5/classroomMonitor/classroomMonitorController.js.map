{"version":3,"sources":["classroomMonitorController.es6"],"names":["ClassroomMonitorController","$mdDialog","$rootScope","$scope","$state","$stateParams","$translate","ConfigService","NotificationService","ProjectService","SessionService","TeacherDataService","TeacherWebSocketService","then","pauseStudentScreens","pauseScreenButtonText","$on","confirm","parent","angular","element","document","body","title","content","ariaLabel","ok","cancel","show","renewSession","forceLogOut","event","args","updatePauseButton","themePath","getThemePath","notifications","$watch","length","newValue","oldValue","ocpu","seturl","req","call","session","getStdout","returnedCSVString","csvBlob","Blob","type","csvUrl","URL","createObjectURL","a","createElement","appendChild","style","href","download","runId","click","window","setTimeout","revokeObjectURL","exportType","getExport","result","alert","COLUMN_INDEX_NODE_ID","COLUMN_INDEX_COMPONENT_ID","COLUMN_INDEX_STEP_NUMBER","COLUMN_INDEX_STEP_TITLE","COLUMN_INDEX_COMPONENT_PART_NUMBER","COLUMN_INDEX_STUDENT_DATA","COLUMN_INDEX_WORKGROUP_ID","COLUMN_INDEX_WISE_IDS","COLUMN_INDEX_WISE_ID_1","COLUMN_INDEX_WISE_ID_2","COLUMN_INDEX_WISE_ID_3","COLUMN_INDEX_STUDENT_RESPONSE","getRunId","exportFilename","hash","reverse","filter","studentWorkRow","hashKey","hasOwnProperty","csvString","rowIndex","row","nodeId","componentId","getNodePositionById","getNodeTitleByNodeId","getComponentPositionByNodeIdAndComponentId","workgroupId","wiseIDs","wiseIDsArray","split","studentDataJSONCell","response","cellIndex","cell","JSON","stringify","replace","COLUMN_INDEX_DATA","currentPeriod","getCurrentPeriod","periodId","isPaused","isPeriodPaused","newIsPausedValue","updatePausedRunStatusValue","pauseScreens","unPauseScreens","sendRunStatus","displayUnPauseButton","displayPauseButton","unPauseStudentScreens","getNewNotifications","notification","timeDismissed","ev","translations","$","dismissNotificationsTitle","textContent","dismissNotificationsMessage","targetEvent","yes","no","dismissAllNotifications","newNotifications","map","newNotification","dismissNotification","mouseMoved","$inject"],"mappings":"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","file":"classroomMonitorController.js","sourcesContent":["'use strict';\n\nclass ClassroomMonitorController {\n\n    constructor($mdDialog,\n                $rootScope,\n                $scope,\n                $state,\n                $stateParams,\n                $translate,\n                ConfigService,\n                NotificationService,\n                ProjectService,\n                SessionService,\n                TeacherDataService,\n                TeacherWebSocketService) {\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.NotificationService = NotificationService;\n        this.ProjectService = ProjectService;\n        this.SessionService = SessionService;\n        this.TeacherDataService = TeacherDataService;\n        this.TeacherWebSocketService = TeacherWebSocketService;\n        this.$translate('pauseStudentScreens').then((pauseStudentScreens) => {\n            this.pauseScreenButtonText = pauseStudentScreens;\n        });\n\n        $scope.$on('showSessionWarning', () => {\n            // Appending dialog to document.body\n            let confirm = $mdDialog.confirm()\n                .parent(angular.element(document.body))\n                .title('Session Timeout')\n                .content('You have been inactive for a long time. Do you want to stay logged in?')\n                .ariaLabel('Session Timeout')\n                .ok('YES')\n                .cancel('No');\n            $mdDialog.show(confirm).then(() => {\n                this.SessionService.renewSession();\n            }, () => {\n                this.SessionService.forceLogOut();\n            });\n        });\n\n        // listen for the periodChanged event\n        $scope.$on('periodChanged', (event, args) => {\n            // the period has changed so we will update the paused/unpaused button\n            this.updatePauseButton();\n        });\n\n        // update the text of the pause/unpause button\n        this.updatePauseButton();\n\n        this.themePath = this.ProjectService.getThemePath();\n\n        this.notifications = this.NotificationService.notifications;\n        // watch for changes in notifications\n        this.$scope.$watch(\n            () => {\n                return this.NotificationService.notifications.length;\n            },\n            (newValue, oldValue) => {\n                this.notifications = this.NotificationService.notifications;\n            }\n        );\n    };\n\n    hello() {\n        ocpu.seturl(\"//128.32.189.240:81/ocpu/user/wiser/library/wiser/R\");\n        // perform the request\n        var req = ocpu.call(\"hello\", {\n            \"name\": \"Hiroki\"\n        }, (session) => {\n            session.getStdout((returnedCSVString) => {\n                var csvBlob = new Blob([returnedCSVString], {type: 'text/csv'});\n                var csvUrl = URL.createObjectURL(csvBlob);\n                var a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style = \"display: none\";\n                a.href = csvUrl;\n                a.download = \"export_\" + runId + \".csv\";\n                a.click();\n\n                // timeout is required for FF.\n                window.setTimeout(() => {\n                    URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n                }, 3000);\n            });\n        });\n    };\n\n    /**\n     * Export all or latest work for this run in CSV format\n     */\n    export(exportType) {\n        this.TeacherDataService.getExport(exportType).then((result) => {\n            if (result == null) {\n                alert(\"Error retrieving result\");\n                return;\n            }\n            var COLUMN_INDEX_NODE_ID = 1;\n            var COLUMN_INDEX_COMPONENT_ID = 2;\n            var COLUMN_INDEX_STEP_NUMBER = 4;\n            var COLUMN_INDEX_STEP_TITLE = 5;\n            var COLUMN_INDEX_COMPONENT_PART_NUMBER = 6;\n            var COLUMN_INDEX_STUDENT_DATA = 11;\n            var COLUMN_INDEX_WORKGROUP_ID = 14;\n            var COLUMN_INDEX_WISE_IDS = 18;\n            var COLUMN_INDEX_WISE_ID_1 = 18;\n            var COLUMN_INDEX_WISE_ID_2 = 19;\n            var COLUMN_INDEX_WISE_ID_3 = 20;\n            var COLUMN_INDEX_STUDENT_RESPONSE = 21;\n            var runId = this.ConfigService.getRunId();\n\n            var exportFilename = \"\";\n            if (exportType === \"latestStudentWork\") {\n                var hash = {};  // store latestStudentWork. Assume that key = (nodeId, componentId, workgroupId)\n                result = result.reverse().filter( (studentWorkRow) => {\n                    var hashKey = studentWorkRow[COLUMN_INDEX_NODE_ID] + \"_\" + studentWorkRow[COLUMN_INDEX_COMPONENT_ID] + \"_\" + studentWorkRow[COLUMN_INDEX_WORKGROUP_ID];\n                    if (!hash.hasOwnProperty(hashKey)) {\n                        // remember in hash\n                        hash[hashKey] = studentWorkRow;\n                        return true;\n                    } else {\n                        // we already have the latest, so we can disregard this studentWorkRow.\n                        return false;\n                    }\n                }).reverse();\n                exportFilename = \"latest_work_\" + runId + \".csv\";\n            } else {\n                exportFilename = \"all_work_\" + runId + \".csv\";\n            }\n\n            var csvString = \"\";  // resulting csv string\n\n            for (var rowIndex = 0; rowIndex < result.length; rowIndex++) {\n\n                var row = result[rowIndex];\n\n                if (rowIndex === 0) {\n                    // append additional header columns\n                    row[COLUMN_INDEX_WISE_ID_1] = \"WISE ID 1\";\n                    row[COLUMN_INDEX_WISE_ID_2] = \"WISE ID 2\";\n                    row[COLUMN_INDEX_WISE_ID_3] = \"WISE ID 3\";\n                    row[COLUMN_INDEX_STUDENT_RESPONSE] = \"response\";\n                } else {\n                    // for all non-header rows, fill in step numbers, titles, and component part numbers.\n                    var nodeId = row[COLUMN_INDEX_NODE_ID];\n                    var componentId = row[COLUMN_INDEX_COMPONENT_ID];\n                    row[COLUMN_INDEX_STEP_NUMBER] = this.ProjectService.getNodePositionById(nodeId);\n                    row[COLUMN_INDEX_STEP_TITLE] = this.ProjectService.getNodeTitleByNodeId(nodeId);\n                    row[COLUMN_INDEX_COMPONENT_PART_NUMBER] = this.ProjectService.getComponentPositionByNodeIdAndComponentId(nodeId, componentId) + 1; // make it 1-indexed for researchers\n                    var workgroupId = row[COLUMN_INDEX_WORKGROUP_ID];\n                    var wiseIDs = row[COLUMN_INDEX_WISE_IDS];\n                    var wiseIDsArray = wiseIDs.split(\",\");\n                    row[COLUMN_INDEX_WISE_ID_1] = wiseIDsArray[0];\n                    row[COLUMN_INDEX_WISE_ID_2] = wiseIDsArray[1] || \"\";\n                    row[COLUMN_INDEX_WISE_ID_3] = wiseIDsArray[2] || \"\";\n\n                    // get the student data JSON and extract responses into its own column\n                    var studentDataJSONCell = row[COLUMN_INDEX_STUDENT_DATA];\n                    row[COLUMN_INDEX_STUDENT_RESPONSE] = studentDataJSONCell.response || \"\";\n                }\n\n                // append row to csvString\n                for (var cellIndex = 0; cellIndex < row.length; cellIndex++) {\n                    var cell = row[cellIndex];\n                    if (typeof cell === \"object\") {\n                        cell = \"\\\"\" + JSON.stringify(cell).replace(/\"/g, '\"\"') + \"\\\"\";\n                    } else if (typeof cell === \"string\") {\n                        cell = \"\\\"\" + cell + \"\\\"\";\n                    }\n                    csvString += cell + \",\";\n                }\n                csvString += \"\\r\\n\";\n            }\n\n            var csvBlob = new Blob([csvString], {type: 'text/csv'});\n            var csvUrl = URL.createObjectURL(csvBlob);\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.href = csvUrl;\n            a.download = exportFilename;\n            a.click();\n\n            // timeout is required for FF.\n            window.setTimeout(() => {\n                URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n            }, 3000);\n\n            /* TODO: get OCPU working again\n            //ocpu.seturl(\"//localhost:1234/ocpu/library/wise/R\");\n            ocpu.seturl(\"http://128.32.189.240:81/ocpu/user/wiser/library/wiser/R\");\n            //perform the request\n            var request = ocpu.call(\"extractchoices\", {\n                \"csvFile\": csvFile\n            }, (session) => {\n                session.getStdout((returnedCSVString) => {\n                    var csvBlob = new Blob([returnedCSVString], {type: 'text/csv'});\n                    var csvUrl = URL.createObjectURL(csvBlob);\n                    var a = document.createElement(\"a\");\n                    document.body.appendChild(a);\n                    a.href = csvUrl;\n                    a.download = \"export_\" + runId + \".csv\";\n                    a.click();\n\n                    // timeout is required for FF.\n                    window.setTimeout(() => {\n                        URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n                    }, 3000);\n\n                    //return returnedCSVString;\n                });\n            });\n\n            //if R returns an error, alert the error message\n            request.fail(() => {\n                alert(\"Server error: \" + request.responseText);\n            });\n            */\n        });\n    }\n\n    /**\n     * Export all events for this run in CSV format\n     */\n    exportEvents() {\n        this.TeacherDataService.getExport(\"events\").then((result) => {\n            if (result == null) {\n                alert(\"Error retrieving result\");\n                return;\n            }\n            var COLUMN_INDEX_NODE_ID = 1;\n            var COLUMN_INDEX_COMPONENT_ID = 2;\n            var COLUMN_INDEX_STEP_NUMBER = 4;\n            var COLUMN_INDEX_STEP_TITLE = 5;\n            var COLUMN_INDEX_COMPONENT_PART_NUMBER = 6;\n            var COLUMN_INDEX_DATA = 12;\n            var COLUMN_INDEX_WORKGROUP_ID = 15;\n            var COLUMN_INDEX_WISE_IDS = 19;\n            var COLUMN_INDEX_WISE_ID_1 = 19;\n            var COLUMN_INDEX_WISE_ID_2 = 20;\n            var COLUMN_INDEX_WISE_ID_3 = 21;\n            var runId = this.ConfigService.getRunId();\n\n            var exportFilename = \"events_\" + runId + \".csv\";\n\n            var csvString = \"\";  // resulting csv string\n\n            for (var rowIndex = 0; rowIndex < result.length; rowIndex++) {\n\n                var row = result[rowIndex];\n\n                if (rowIndex === 0) {\n                    // append additional header columns\n                    row[COLUMN_INDEX_WISE_ID_1] = \"WISE ID 1\";\n                    row[COLUMN_INDEX_WISE_ID_2] = \"WISE ID 2\";\n                    row[COLUMN_INDEX_WISE_ID_3] = \"WISE ID 3\";\n                } else {\n                    // for all non-header rows, fill in step numbers, titles, and component part numbers.\n                    var nodeId = row[COLUMN_INDEX_NODE_ID];\n                    var componentId = row[COLUMN_INDEX_COMPONENT_ID];\n                    row[COLUMN_INDEX_STEP_NUMBER] = this.ProjectService.getNodePositionById(nodeId);\n                    row[COLUMN_INDEX_STEP_TITLE] = this.ProjectService.getNodeTitleByNodeId(nodeId);\n                    row[COLUMN_INDEX_COMPONENT_PART_NUMBER] = this.ProjectService.getComponentPositionByNodeIdAndComponentId(nodeId, componentId) + 1; // make it 1-indexed for researchers\n                    var workgroupId = row[COLUMN_INDEX_WORKGROUP_ID];\n                    var wiseIDs = row[COLUMN_INDEX_WISE_IDS];\n                    var wiseIDsArray = wiseIDs.split(\",\");\n                    row[COLUMN_INDEX_WISE_ID_1] = wiseIDsArray[0];\n                    row[COLUMN_INDEX_WISE_ID_2] = wiseIDsArray[1] || \"\";\n                    row[COLUMN_INDEX_WISE_ID_3] = wiseIDsArray[2] || \"\";\n                }\n\n                // append row to csvString\n                for (var cellIndex = 0; cellIndex < row.length; cellIndex++) {\n                    var cell = row[cellIndex];\n                    if (typeof cell === \"object\") {\n                        cell = \"\\\"\" + JSON.stringify(cell).replace(/\"/g, '\"\"') + \"\\\"\";\n                    } else if (typeof cell === \"string\") {\n                        cell = \"\\\"\" + cell + \"\\\"\";\n                    }\n                    csvString += cell + \",\";\n                }\n                csvString += \"\\r\\n\";\n            }\n\n            var csvBlob = new Blob([csvString], {type: 'text/csv'});\n            var csvUrl = URL.createObjectURL(csvBlob);\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.href = csvUrl;\n            a.download = exportFilename;\n            a.click();\n\n            // timeout is required for FF.\n            window.setTimeout(() => {\n                URL.revokeObjectURL(csvUrl);  // tell browser to release URL reference\n            }, 3000);\n        });\n    }\n\n    /**\n     * The pause screen button was clicked. This button is used to toggle\n     * pause screen on and off.\n     */\n    pauseScreenButtonClicked() {\n\n        // get the currently selected period\n        var currentPeriod = this.TeacherDataService.getCurrentPeriod();\n        var periodId = currentPeriod.periodId;\n\n        // get the previous value of whether the period was paused or unpaused\n        var isPaused = this.TeacherDataService.isPeriodPaused(periodId);\n\n        // toggle the value\n        var newIsPausedValue = !isPaused;\n\n        // update the run status\n        this.TeacherDataService.updatePausedRunStatusValue(periodId, newIsPausedValue);\n\n        // update the pause/unpause button text\n        this.updatePauseButton();\n\n        if (newIsPausedValue) {\n            // pause the student screens\n            this.TeacherWebSocketService.pauseScreens(periodId);\n        } else {\n            // unpause the student screens\n            this.TeacherWebSocketService.unPauseScreens(periodId);\n        }\n\n        // save the run status to the server\n        this.TeacherDataService.sendRunStatus();\n    }\n\n    /**\n     * Update the pause button to reflect the pause/unpaused state of the period\n     */\n    updatePauseButton() {\n        // get the currently selected period\n        var currentPeriod = this.TeacherDataService.getCurrentPeriod();\n\n        // default to all periods\n        var periodId = -1;\n\n        if (currentPeriod != null) {\n            periodId = currentPeriod.periodId;\n        }\n\n        // whether the period is paused or unpaused\n        var isPaused = this.TeacherDataService.isPeriodPaused(periodId);\n\n        // update the paused/unpaused button text\n        if (isPaused) {\n            this.displayUnPauseButton();\n        } else if (!isPaused) {\n            this.displayPauseButton();\n        }\n    }\n\n    /**\n     * Change the text of the button to display 'Pause Screens'\n     */\n    displayPauseButton() {\n        this.$translate('pauseStudentScreens').then((pauseStudentScreens) => {\n            this.pauseScreenButtonText = pauseStudentScreens;\n        });\n    }\n\n    /**\n     * Change the text of the button to display 'Unpause Screens'\n     */\n    displayUnPauseButton() {\n        this.$translate('unPauseStudentScreens').then((unPauseStudentScreens) => {\n            this.pauseScreenButtonText = unPauseStudentScreens;\n        });\n    }\n\n    /**\n     * Returns true iff there are new notifications\n     */\n    hasNewNotifications() {\n        return this.getNewNotifications().length > 0;\n    }\n\n    /**\n     * Returns all notifications that have not been dismissed yet\n     */\n    getNewNotifications() {\n        return this.notifications.filter(\n            function(notification) {\n                return notification.timeDismissed == null;\n            }\n        );\n    }\n\n    /**\n     * Show confirmation dialog before dismissing all notifications\n     */\n    confirmDismissAllNotifications(ev) {\n        if (this.getNewNotifications().length > 1) {\n            this.$translate([\"dismissNotificationsTitle\", \"dismissNotificationsMessage\", \"yes\", \"no\"]).then((translations) => {\n                let confirm = this.$mdDialog.confirm()\n                    .parent(angular.element($('._md-open-menu-container._md-active')))// TODO: hack for now (showing md-dialog on top of md-menu)\n                    .ariaLabel(translations.dismissNotificationsTitle)\n                    .textContent(translations.dismissNotificationsMessage)\n                    .targetEvent(ev)\n                    .ok(translations.yes)\n                    .cancel(translations.no);\n\n                this.$mdDialog.show(confirm).then(() => {\n                    this.dismissAllNotifications();\n                });\n            });\n        } else {\n            this.dismissAllNotifications();\n        }\n    }\n\n    /**\n     * Dismiss all new notifications\n     */\n    dismissAllNotifications() {\n        let newNotifications = this.getNewNotifications();\n        newNotifications.map((newNotification) => {\n            this.dismissNotification(newNotification);\n        });\n    }\n\n    /**\n     * Dismiss the specified notification\n     * @param notification\n     */\n    dismissNotification(notification) {\n        this.NotificationService.dismissNotification(notification);\n    }\n\n    /**\n     * The user has moved the mouse so we will notify the Session Service\n     * so that it can refresh the session\n     */\n    mouseMoved() {\n        /*\n         * notify the Session Service that the user has moved the mouse\n         * so we can refresh the session\n         */\n        this.SessionService.mouseMoved();\n    }\n}\n\nClassroomMonitorController.$inject = [\n    '$mdDialog',\n    '$rootScope',\n    '$scope',\n    '$state',\n    '$stateParams',\n    '$translate',\n    'ConfigService',\n    'NotificationService',\n    'ProjectService',\n    'SessionService',\n    'TeacherDataService',\n    'TeacherWebSocketService'\n];\n\nexport default ClassroomMonitorController;\n"]}