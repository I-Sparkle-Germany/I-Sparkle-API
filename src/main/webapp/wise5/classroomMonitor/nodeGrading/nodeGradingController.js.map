{"version":3,"sources":["nodeGradingController.es6"],"names":[],"mappings":"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","file":"nodeGradingController.js","sourcesContent":["class NodeGradingController {\n    constructor($state, $stateParams, AnnotationService, ConfigService, NodeService, ProjectService, TeacherDataService) {\n\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.AnnotationService = AnnotationService;\n        this.ConfigService = ConfigService;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.TeacherDataService = TeacherDataService;\n\n        this.nodeId = this.$stateParams.nodeId;\n\n        this.nodeTitle = null;\n\n        // field that will hold the node content\n        this.nodeContent = null;\n\n        this.teacherWorkgroupId = this.ConfigService.getWorkgroupId();\n\n        this.periods = [];\n\n        var node = this.ProjectService.getNodeById(this.nodeId);\n\n        if (node != null) {\n            var position = this.ProjectService.getPositionById(this.nodeId);\n\n            if (position != null) {\n                this.nodeTitle = position + ' ' + node.title;\n            } else {\n                this.nodeTitle = node.title;\n            }\n\n\n            // field that will hold the node content\n            this.nodeContent = node.content;\n        }\n\n        // render components in show student work only mode\n        //this.mode = \"showStudentWorkOnly\";\n\n        //var vleStates = this.TeacherDataService.getVLEStates();\n        var vleStates = null;\n\n        this.workgroupIds = this.ConfigService.getClassmateWorkgroupIds();\n\n        this.annotationMappings = {};\n\n        this.componentStateHistory = [];\n        // initialize the periods\n        this.initializePeriods();\n\n        // scroll to the top of the page when the page loads\n        document.body.scrollTop = document.documentElement.scrollTop = 0;\n    }\n\n\n    /**\n     * Get the html template for the component\n     * @param componentType the component type\n     * @return the path to the html template for the component\n     */\n    getComponentTemplatePath(componentType) {\n        return this.NodeService.getComponentTemplatePath(componentType);\n    };\n\n    /**\n     * Get the components for this node.\n     * @return an array that contains the content for the components\n     */\n    getComponents() {\n        var components = null;\n\n        if (this.nodeContent != null) {\n            components = this.nodeContent.components;\n        }\n\n        if (components != null && this.isDisabled) {\n            for (var c = 0; c < components.length; c++) {\n                var component = components[c];\n\n                component.isDisabled = true;\n            }\n        }\n\n        if (components != null && this.nodeContent.lockAfterSubmit) {\n            for (c = 0; c < components.length; c++) {\n                component = components[c];\n\n                component.lockAfterSubmit = true;\n            }\n        }\n\n        return components;\n    };\n\n    getComponentById(componentId) {\n        var component = null;\n\n        if (componentId != null) {\n            var components = this.getComponents();\n\n            if (components != null) {\n                for (var c = 0; c < components.length; c++) {\n                    var tempComponent = components[c];\n\n                    if (tempComponent != null) {\n                        if (componentId === tempComponent.id) {\n                            component = tempComponent;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return component;\n    };\n\n    /**\n     * Get the student data for a specific part\n     * @param the componentId\n     * @param the workgroupId id of Workgroup who created the component state\n     * @return the student data for the given component\n     */\n    getLatestComponentStateByWorkgroupIdAndComponentId(workgroupId,  componentId) {\n        var componentState = null;\n\n        if (workgroupId != null && componentId != null) {\n            // get the latest component state for the component\n            componentState = this.TeacherDataService.getLatestComponentStateByWorkgroupIdNodeIdAndComponentId(workgroupId, this.nodeId, componentId);\n        }\n\n        return componentState;\n    };\n\n    /**\n     * Get the student data for a specific part\n     * @param the componentId\n     * @param the workgroupId id of Workgroup who created the component state\n     * @return the student data for the given component\n     */\n    getLatestComponentStateByWorkgroupIdAndNodeIdAndComponentId(workgroupId, nodeId, componentId) {\n        var componentState = null;\n\n        if (workgroupId != null && nodeId != null && componentId != null) {\n\n            // get the latest component state for the component\n            componentState = this.TeacherDataService.getLatestComponentStateByWorkgroupIdNodeIdAndComponentId(workgroupId, nodeId, componentId);\n        }\n\n        return componentState;\n    };\n\n    getComponentStatesByWorkgroupIdAndNodeId(workgroupId, nodeId) {\n        var componentStates = this.TeacherDataService.getComponentStatesByWorkgroupIdAndNodeId(workgroupId, nodeId);\n\n        //AnnotationService.populateAnnotationMappings(this.annotationMappings, workgroupId, componentStates);\n\n        return componentStates;\n    };\n\n    getUserNameByWorkgroupId(workgroupId) {\n        var userName = null;\n        var userInfo = this.ConfigService.getUserInfoByWorkgroupId(workgroupId);\n\n        if (userInfo != null) {\n            userName = userInfo.userName;\n        }\n\n        return userName;\n    };\n\n    getAnnotationByStepWorkIdAndType(stepWorkId, type) {\n        var annotation = this.AnnotationService.getAnnotationByStepWorkIdAndType(stepWorkId, type);\n        return annotation;\n    };\n\n    scoreChanged(stepWorkId) {\n        var annotation = this.annotationMappings[stepWorkId + '-score'];\n        this.AnnotationService.saveAnnotation(annotation);\n    };\n\n    commentChanged(stepWorkId) {\n        var annotation = this.annotationMappings[stepWorkId + '-comment'];\n        this.AnnotationService.saveAnnotation(annotation);\n    }\n\n    setupComponentStateHistory() {\n        this.getComponentStatesByWorkgroupIdAndNodeId()\n    };\n\n    /**\n     * Get the period id for a workgroup id\n     * @param workgroupId the workgroup id\n     * @returns the period id for the workgroup id\n     */\n    getPeriodIdByWorkgroupId(workgroupId) {\n        return this.ConfigService.getPeriodIdByWorkgroupId(workgroupId);\n    };\n\n    /**\n     * Initialize the periods\n     */\n    initializePeriods() {\n\n        // create an option for all periods\n        var allPeriodOption = {\n            periodId: -1,\n            periodName: 'All'\n        };\n\n        this.periods.push(allPeriodOption);\n\n        this.periods = this.periods.concat(this.ConfigService.getPeriods());\n\n        // set the current period if it hasn't been set yet\n        if (this.getCurrentPeriod() == null) {\n            if (this.periods != null && this.periods.length > 0) {\n                // set it to the all periods option\n                this.setCurrentPeriod(this.periods[0]);\n            }\n        }\n    };\n\n    /**\n     * Set the current period\n     * @param period the period object\n     */\n    setCurrentPeriod(period) {\n        this.TeacherDataService.setCurrentPeriod(period);\n    };\n\n    /**\n     * Get the current period\n     */\n    getCurrentPeriod() {\n        return this.TeacherDataService.getCurrentPeriod();\n    };\n}\n\nNodeGradingController.$inject = ['$state', '$stateParams', 'AnnotationService', 'ConfigService', 'NodeService', 'ProjectService', 'TeacherDataService'];\n\nexport default NodeGradingController;"]}