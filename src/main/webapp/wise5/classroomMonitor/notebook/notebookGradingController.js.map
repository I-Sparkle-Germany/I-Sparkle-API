{"version":3,"sources":["notebookGradingController.es6"],"names":["NotebookGradingController","$rootScope","$scope","$state","ConfigService","NotebookService","ProjectService","StudentStatusService","TeacherDataService","TeacherWebSocketService","teacherWorkgroupId","getWorkgroupId","workgroups","getClassmateUserInfos","canViewStudentNames","canGradeStudentWork","role","getTeacherRole","periods","getPeriods","getCurrentPeriod","length","setCurrentPeriod","notebookItems","retrieveNotebookItems","then","context","nodeId","componentId","componentType","category","event","data","saveEvent","period","$broadcast","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,yB;AAEF,uCAAYC,UAAZ,EACYC,MADZ,EAEYC,MAFZ,EAGYC,aAHZ,EAIYC,eAJZ,EAKYC,cALZ,EAMYC,oBANZ,EAOYC,kBAPZ,EAQYC,uBARZ,EAQqC;AAAA;;AAAA;;AACjC,aAAKR,UAAL,GAAkBA,UAAlB;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKC,eAAL,GAAuBA,eAAvB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACA,aAAKC,oBAAL,GAA4BA,oBAA5B;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;AACA,aAAKC,uBAAL,GAA+BA,uBAA/B;;AAEA,aAAKC,kBAAL,GAA0B,KAAKN,aAAL,CAAmBO,cAAnB,EAA1B;;AAEA;AACA,aAAKC,UAAL,GAAkB,KAAKR,aAAL,CAAmBS,qBAAnB,EAAlB;;AAEA,aAAKC,mBAAL,GAA2B,IAA3B;AACA,aAAKC,mBAAL,GAA2B,IAA3B;;AAEA;AACA,YAAIC,OAAO,KAAKZ,aAAL,CAAmBa,cAAnB,CAAkC,KAAKP,kBAAvC,CAAX;;AAEA,YAAIM,SAAS,OAAb,EAAsB;AAClB;AACA,iBAAKF,mBAAL,GAA2B,IAA3B;AACA,iBAAKC,mBAAL,GAA2B,IAA3B;AACH,SAJD,MAIO,IAAIC,SAAS,OAAb,EAAsB;AACzB;AACA,iBAAKF,mBAAL,GAA2B,IAA3B;AACA,iBAAKC,mBAAL,GAA2B,IAA3B;AACH,SAJM,MAIA,IAAIC,SAAS,MAAb,EAAqB;AACxB;AACA,iBAAKF,mBAAL,GAA2B,KAA3B;AACA,iBAAKC,mBAAL,GAA2B,KAA3B;AACH;;AAED,aAAKG,OAAL,GAAe,KAAKd,aAAL,CAAmBe,UAAnB,EAAf;;AAEA;AACA,YAAI,KAAKC,gBAAL,MAA2B,IAA/B,EAAqC;AACjC,gBAAI,KAAKF,OAAL,IAAgB,IAAhB,IAAwB,KAAKA,OAAL,CAAaG,MAAb,GAAsB,CAAlD,EAAqD;AACjD;AACA,qBAAKC,gBAAL,CAAsB,KAAKJ,OAAL,CAAa,CAAb,CAAtB;AACH;AACJ;;AAED,aAAKK,aAAL;;AAEA,aAAKlB,eAAL,CAAqBmB,qBAArB,GAA6CC,IAA7C,CAAkD,UAACF,aAAD,EAAmB;AACjE,kBAAKA,aAAL,GAAqBA,aAArB;AACH,SAFD;;AAIA;AACA,YAAIG,UAAU,kBAAd;AAAA,YAAkCC,SAAS,IAA3C;AAAA,YAAiDC,cAAc,IAA/D;AAAA,YAAqEC,gBAAgB,IAArF;AAAA,YACIC,WAAW,YADf;AAAA,YAC6BC,QAAQ,uBADrC;AAAA,YAC8DC,OAAO,EADrE;AAEA,aAAKxB,kBAAL,CAAwByB,SAAxB,CAAkCP,OAAlC,EAA2CC,MAA3C,EAAmDC,WAAnD,EAAgEC,aAAhE,EAA+EC,QAA/E,EAAyFC,KAAzF,EAAgGC,IAAhG;AACH;;AAED;;;;;;;2CAGmB;AACf,mBAAO,KAAKxB,kBAAL,CAAwBY,gBAAxB,EAAP;AACH;;;;;AAED;;;;yCAIiBc,M,EAAQ;AACrB,iBAAK1B,kBAAL,CAAwBc,gBAAxB,CAAyCY,MAAzC;AACA,iBAAKjC,UAAL,CAAgBkC,UAAhB,CAA2B,eAA3B,EAA4C,EAACD,QAAQA,MAAT,EAA5C;AACH;;;;;;AAILlC,0BAA0BoC,OAA1B,GAAoC,CAChC,YADgC,EAEhC,QAFgC,EAGhC,QAHgC,EAIhC,eAJgC,EAKhC,iBALgC,EAMhC,gBANgC,EAOhC,sBAPgC,EAQhC,oBARgC,EAShC,yBATgC,CAApC;;kBAYepC,yB","file":"notebookGradingController.js","sourcesContent":["'use strict';\n\nclass NotebookGradingController {\n\n    constructor($rootScope,\n                $scope,\n                $state,\n                ConfigService,\n                NotebookService,\n                ProjectService,\n                StudentStatusService,\n                TeacherDataService,\n                TeacherWebSocketService) {\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.ConfigService = ConfigService;\n        this.NotebookService = NotebookService;\n        this.ProjectService = ProjectService;\n        this.StudentStatusService = StudentStatusService;\n        this.TeacherDataService = TeacherDataService;\n        this.TeacherWebSocketService = TeacherWebSocketService;\n\n        this.teacherWorkgroupId = this.ConfigService.getWorkgroupId();\n\n        // get the workgroups sorted alphabetically\n        this.workgroups = this.ConfigService.getClassmateUserInfos();\n\n        this.canViewStudentNames = true;\n        this.canGradeStudentWork = true;\n\n        // get the role of the teacher for the run e.g. 'owner', 'write', 'read'\n        let role = this.ConfigService.getTeacherRole(this.teacherWorkgroupId);\n\n        if (role === 'owner') {\n            // the teacher is the owner of the run and has full access\n            this.canViewStudentNames = true;\n            this.canGradeStudentWork = true;\n        } else if (role === 'write') {\n            // the teacher is a shared teacher that can grade the student work\n            this.canViewStudentNames = true;\n            this.canGradeStudentWork = true;\n        } else if (role === 'read') {\n            // the teacher is a shared teacher that can only view the student work\n            this.canViewStudentNames = false;\n            this.canGradeStudentWork = false;\n        }\n\n        this.periods = this.ConfigService.getPeriods();\n\n        // set the current period if it hasn't been set yet\n        if (this.getCurrentPeriod() == null) {\n            if (this.periods != null && this.periods.length > 0) {\n                // set it to the all periods option\n                this.setCurrentPeriod(this.periods[0]);\n            }\n        }\n\n        this.notebookItems;\n\n        this.NotebookService.retrieveNotebookItems().then((notebookItems) => {\n            this.notebookItems = notebookItems;\n        });\n\n        // save event when notebook grading view is displayed\n        let context = \"ClassroomMonitor\", nodeId = null, componentId = null, componentType = null,\n            category = \"Navigation\", event = \"notebookViewDisplayed\", data = {};\n        this.TeacherDataService.saveEvent(context, nodeId, componentId, componentType, category, event, data);\n    }\n\n    /**\n     * Get the current period\n     */\n    getCurrentPeriod() {\n        return this.TeacherDataService.getCurrentPeriod();\n    };\n\n    /**\n     * Set the current period\n     * @param period the period object\n     */\n    setCurrentPeriod(period) {\n        this.TeacherDataService.setCurrentPeriod(period);\n        this.$rootScope.$broadcast('periodChanged', {period: period});\n    };\n\n}\n\nNotebookGradingController.$inject = [\n    '$rootScope',\n    '$scope',\n    '$state',\n    'ConfigService',\n    'NotebookService',\n    'ProjectService',\n    'StudentStatusService',\n    'TeacherDataService',\n    'TeacherWebSocketService'\n];\n\nexport default NotebookGradingController;\n"]}