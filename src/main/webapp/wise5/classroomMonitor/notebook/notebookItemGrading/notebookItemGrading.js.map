{"version":3,"sources":["notebookItemGrading.es6"],"names":["NotebookItemGradingController","$filter","$mdDialog","$scope","AnnotationService","ConfigService","NotebookService","TeacherDataService","UtilService","$translate","notebookItemId","notebookItem","id","localNotebookItemId","toWorkgroupId","workgroupId","maxScore","content","reportId","reportNoteContent","getReportNoteContentByReportId","$onInit","runId","getRunId","toUserInfo","getUserInfoByWorkgroupId","periodId","userNamesArray","getUserNamesByWorkgroupId","userNames","map","obj","name","join","$onChanges","changes","hasMaxScore","componentStates","getComponentStatesByWorkgroupIdAndComponentId","componentId","latestComponentStateTime","getLatestComponentStateTime","processAnnotations","$on","event","args","annotation","annotationNodeId","nodeId","annotationComponentId","latestAnnotations","getLatestComponentAnnotations","comment","latestComment","type","data","value","score","latestTeacherAnnotationTime","getLatestTeacherAnnotationTime","latest","latestScore","latestTeacherComment","latestTeacherScore","commentSaveTime","serverSaveTime","scoreSaveTime","getLatestTeacherAnnotation","time","convertToClientTimestamp","total","length","clientSaveTime","Date","getTime","fromWorkgroupId","getWorkgroupId","convertStringToNumber","componentStateId","createAnnotation","annotationId","saveAnnotation","$inject","NotebookItemGrading","bindings","templateUrl","controller"],"mappings":"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","file":"notebookItemGrading.js","sourcesContent":["'use strict';\n\nclass NotebookItemGradingController {\n    constructor($filter,\n                $mdDialog,\n                $scope,\n                AnnotationService,\n                ConfigService,\n                NotebookService,\n                TeacherDataService,\n                UtilService,) {\n        this.$filter = $filter;\n        this.$mdDialog = $mdDialog;\n        this.$scope = $scope;\n        this.AnnotationService = AnnotationService;\n        this.ConfigService = ConfigService;\n        this.NotebookService = NotebookService;\n        this.TeacherDataService = TeacherDataService;\n        this.UtilService = UtilService;\n        this.$translate = this.$filter('translate');\n        this.notebookItemId = this.notebookItem.id;\n        this.localNotebookItemId = this.notebookItem.localNotebookItemId;\n        this.toWorkgroupId = this.notebookItem.workgroupId;\n        this.maxScore = 0;\n        if (this.notebookItem != null && this.notebookItem.content != null && this.notebookItem.content.reportId != null) {\n            let reportNoteContent = this.NotebookService.getReportNoteContentByReportId(this.notebookItem.content.reportId);\n            if (reportNoteContent != null && reportNoteContent.maxScore != null) {\n                this.maxScore = reportNoteContent.maxScore;\n            }\n        }\n\n        this.$onInit = () => {\n            this.runId = this.ConfigService.getRunId();\n\n            let toUserInfo = this.ConfigService.getUserInfoByWorkgroupId(this.toWorkgroupId);\n            if (toUserInfo) {\n                // set the period id\n                this.periodId = toUserInfo.periodId;\n            }\n\n            // get the workgroup user names\n            let userNamesArray = this.ConfigService.getUserNamesByWorkgroupId(this.toWorkgroupId);\n            this.userNames = userNamesArray.map( (obj) => {\n                return obj.name;\n            }).join(', ');\n        };\n\n        this.$onChanges = (changes) => {\n\n            if (changes.maxScore) {\n                this.hasMaxScore = (typeof this.notebookItem.maxScore === 'number' || this.notebookItem.maxScore == null);\n            }\n\n            this.componentStates = this.TeacherDataService.getComponentStatesByWorkgroupIdAndComponentId(this.toWorkgroupId, this.componentId);\n            this.latestComponentStateTime = this.getLatestComponentStateTime();\n\n            this.processAnnotations();\n        };\n\n        this.$scope.$on('annotationSavedToServer', (event, args) => {\n            // TODO: we're watching this here and in the parent component's controller; probably want to optimize!\n            if (args != null ) {\n\n                // get the annotation that was saved to the server\n                let annotation = args.annotation;\n\n                if (annotation != null) {\n\n                    // get the node id and component id of the annotation\n                    let annotationNodeId = annotation.nodeId;\n                    let annotationComponentId = annotation.componentId;\n\n                    // make sure the annotation was for this component\n                    if (this.nodeId === annotationNodeId &&\n                        this.componentId === annotationComponentId) {\n\n                        // get latest score and comment annotations for this component\n                        this.processAnnotations();\n                    }\n                }\n            }\n        });\n    }\n\n    processAnnotations() {\n        this.latestAnnotations = this.AnnotationService.getLatestComponentAnnotations(this.nodeId, this.componentId, this.toWorkgroupId);\n\n        if (this.latestAnnotations && this.latestAnnotations.comment) {\n            let latestComment = this.latestAnnotations.comment;\n            if (latestComment.type === 'comment') {\n                this.comment = latestComment.data.value;\n            } else {\n                this.comment = null;\n            }\n        }\n\n        if (this.latestAnnotations && this.latestAnnotations.score) {\n            this.score = this.latestAnnotations.score.data.value;\n        }\n\n        this.latestTeacherAnnotationTime = this.getLatestTeacherAnnotationTime();\n    }\n\n    /**\n     * Get the most recent teacher annotation (from the current score and comment annotations)\n     * @return Object (latest teacher annotation)\n     */\n    getLatestTeacherAnnotation() {\n        let latest = null;\n        let latestComment = this.latestAnnotations.comment;\n        let latestScore = this.latestAnnotations.score;\n        let latestTeacherComment = (latestComment && latestComment.type === 'comment') ? latestComment : null;\n        let latestTeacherScore = (latestScore && latestScore.type === 'score') ? latestScore : null;\n\n        if (latestTeacherComment || latestTeacherScore) {\n            let commentSaveTime = latestTeacherComment ? latestTeacherComment.serverSaveTime : 0;\n            let scoreSaveTime = latestTeacherScore ? latestTeacherScore.serverSaveTime : 0;\n\n            if (commentSaveTime >= scoreSaveTime) {\n                latest = latestTeacherComment;\n            } else if (scoreSaveTime > commentSaveTime) {\n                latest = latestTeacherScore;\n            }\n        }\n\n        return latest;\n    }\n\n    /**\n     * Calculate the save time of the latest teacher annotation\n     * @return Number (latest teacher annotation post time)\n     */\n    getLatestTeacherAnnotationTime() {\n        let latest = this.getLatestTeacherAnnotation();\n        let time = 0;\n\n        if (latest) {\n            let serverSaveTime = latest.serverSaveTime;\n            time = this.ConfigService.convertToClientTimestamp(serverSaveTime)\n        }\n\n        return time;\n    }\n\n    /**\n     * Calculate the save time of the latest component state\n     * @return Number (latest annotation post time)\n     */\n    getLatestComponentStateTime() {\n        let total = this.componentStates.length;\n        let time = null;\n\n        if (total) {\n            let latest = this.componentStates[total-1];\n\n            if (latest) {\n                let serverSaveTime = latest.serverSaveTime;\n                time = this.ConfigService.convertToClientTimestamp(serverSaveTime)\n            }\n        }\n\n        return time;\n    }\n\n    /**\n     * Save the annotation to the server\n     * @param type String to indicate which type of annotation to post [score,comment]\n     */\n    postAnnotation(type) {\n\n        if (this.runId != null &&\n            this.periodId != null &&\n            this.notebookItemId != null &&\n            this.toWorkgroupId != null &&\n            type) {\n            let clientSaveTime = new Date().getTime();\n            let fromWorkgroupId = this.ConfigService.getWorkgroupId();\n            let value = null;\n            if (type === 'score') {\n                value = this.UtilService.convertStringToNumber(this.score);\n            } else if (type === 'comment') {\n                value = this.comment;\n            }\n\n            if ((type === 'comment' && value) || (type === 'score' && typeof value === 'number' && value >= 0)) {\n                let data = {\n                    value: value\n                };\n                let componentStateId = null;\n                let annotation = this.AnnotationService.createAnnotation(\n                    this.annotationId,\n                    this.runId,\n                    this.periodId,\n                    fromWorkgroupId,\n                    this.toWorkgroupId,\n                    this.nodeId,\n                    this.componentId,\n                    componentStateId,\n                    this.localNotebookItemId,\n                    this.notebookItemId,\n                    type,\n                    data,\n                    clientSaveTime);\n\n                this.AnnotationService.saveAnnotation(annotation);\n            }\n        }\n    }\n}\n\nNotebookItemGradingController.$inject = [\n    '$filter',\n    '$mdDialog',\n    '$scope',\n    'AnnotationService',\n    'ConfigService',\n    'NotebookService',\n    'TeacherDataService',\n    'UtilService'\n];\n\nconst NotebookItemGrading = {\n    bindings: {\n        maxScore: '<',\n        notebookItem: '<'\n    },\n    templateUrl: 'wise5/classroomMonitor/notebook/notebookItemGrading/notebookItemGrading.html',\n    controller: NotebookItemGradingController\n};\n\nexport default NotebookItemGrading;\n"]}