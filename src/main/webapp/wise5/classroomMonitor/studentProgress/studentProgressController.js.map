{"version":3,"sources":["studentProgressController.es6"],"names":[],"mappings":"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","file":"studentProgressController.js","sourcesContent":["class StudentProgressController {\n    constructor($rootScope,\n                $state,\n                ConfigService,\n                StudentStatusService,\n                TeacherDataService,\n                TeacherWebSocketService) {\n        this.$rootScope = $rootScope;\n        this.$state = $state;\n        this.ConfigService = ConfigService;\n        this.StudentStatusService = StudentStatusService;\n        this.TeacherDataService = TeacherDataService;\n        this.TeacherWebSocketService = TeacherWebSocketService;\n\n        this.title = 'Grade By Student ';\n\n        this.workgroups = this.ConfigService.getClassmateUserInfos();\n\n        this.studentStatuses = this.StudentStatusService.getStudentStatuses();\n\n        this.periods = [];\n\n        // create an option for all periods\n        var allPeriodOption = {\n            periodId: -1,\n            periodName: 'All'\n        };\n\n        this.periods.push(allPeriodOption);\n\n        this.periods = this.periods.concat(this.ConfigService.getPeriods());\n\n        // set the current period if it hasn't been set yet\n        if (this.getCurrentPeriod() == null) {\n            if (this.periods != null && this.periods.length > 0) {\n                // set it to the all periods option\n                this.setCurrentPeriod(this.periods[0]);\n            }\n        }\n\n        this.studentsOnline = this.TeacherWebSocketService.getStudentsOnline();\n\n        /**\n         * Listen for the studentsOnlineReceived event\n         */\n        $rootScope.$on('studentsOnlineReceived', angular.bind(this, function (event, args) {\n            this.studentsOnline = args.studentsOnline;\n        }));\n\n    }\n\n    getNewNodeVisits() {\n        return this.StudentStatusService.getNewNodeVisits();\n    };\n\n    getCurrentNodeForWorkgroupId(workgroupId) {\n        return this.StudentStatusService.getCurrentNodeTitleForWorkgroupId(workgroupId);\n    };\n\n    getStudentProjectCompletion(workgroupId) {\n        return this.StudentStatusService.getStudentProjectCompletion(workgroupId);\n    };\n\n    studentRowClicked(workgroup) {\n        var workgroupId = workgroup.workgroupId;\n\n        $state.go('root.studentGrading', {workgroupId: workgroupId});\n    };\n\n    isWorkgroupOnline(workgroupId) {\n        return this.studentsOnline.indexOf(workgroupId) != -1;\n    };\n\n    /**\n     * Set the current period\n     * @param period the period object\n     */\n    setCurrentPeriod(period) {\n        this.TeacherDataService.setCurrentPeriod(period);\n    };\n\n    /**\n     * Get the current period\n     */\n    getCurrentPeriod() {\n        return this.TeacherDataService.getCurrentPeriod();\n    };\n\n}\n\nStudentProgressController.$inject = ['$rootScope', '$state', 'ConfigService', 'StudentStatusService', 'TeacherDataService','TeacherWebSocketService'];\n\nexport default StudentProgressController;"]}