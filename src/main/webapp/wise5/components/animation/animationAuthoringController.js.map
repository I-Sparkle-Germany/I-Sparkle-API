{"version":3,"sources":["animationAuthoringController.es6"],"names":["AnimationAuthoringController","$filter","$mdDialog","$q","$rootScope","$scope","$timeout","AnimationService","AnnotationService","ConfigService","CRaterService","NodeService","NotebookService","NotificationService","ProjectService","StudentAssetService","StudentDataService","UtilService","allowedConnectedComponentTypes","type","$watch","authoringComponentContent","bind","newValue","oldValue","componentContent","injectAssetPaths","submitCounter","studentResponse","latestAnnotations","isDirty","isSubmitDirty","isSaveButtonVisible","showSaveButton","isSubmitButtonVisible","showSubmitButton","starterSentence","removeAllObjects","initializeCoordinates","setup","$on","event","args","nodeId","componentId","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","summernoteId","target","targetObject","image","imageMovingLeft","imageMovingRight","isImage","$","summernote","isVideo","videoElement","document","createElement","controls","innerHTML","authoringViewComponentChanged","hide","cRater","scoringRules","newScoringRule","score","feedbackText","push","index","scoringRule","splice","length","answer","confirm","$translate","notificationSettings","notifications","newNotification","notificationType","enableCriteria","scoreSequence","isAmbient","dismissCode","isNotifyTeacher","isNotifyStudent","notificationMessageToStudent","notificationMessageToTeacher","multipleAttemptScoringRules","newMultipleAttemptScoringRule","multipleAttemptScoringRule","previousScore","currentScore","notification","enableCRater","itemType","itemId","scoreOn","showScore","showFeedback","enableMultipleAttemptScoringRules","setShowSubmitButtonValue","enableNotifications","objects","newObject","id","generateKey","object","dataSource","data","newDataPoint","dataPoint","component","getComponentByNodeIdAndComponentId","trialIndex","seriesIndex","tColumnIndex","xColumnIndex","params","isPopup","$broadcast","text","width","height","imageMovingUp","imageMovingDown","$inject"],"mappings":"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","file":"animationAuthoringController.js","sourcesContent":["'use strict';\n\nimport AnimationController from './animationController';\n\nclass AnimationAuthoringController extends AnimationController {\n  constructor($filter,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              $timeout,\n              AnimationService,\n              AnnotationService,\n              ConfigService,\n              CRaterService,\n              NodeService,\n              NotebookService,\n              NotificationService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    super($filter,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $timeout,\n      AnimationService,\n      AnnotationService,\n      ConfigService,\n      CRaterService,\n      NodeService,\n      NotebookService,\n      NotificationService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService);\n\n    // the component types we are allowed to connect to\n    this.allowedConnectedComponentTypes = [\n      {\n        type: 'Animation'\n      },\n      {\n        type: 'Graph'\n      }\n    ];\n\n    $scope.$watch(function() {\n      return this.authoringComponentContent;\n    }.bind(this), function(newValue, oldValue) {\n      // inject the asset paths into the new component content\n      this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n\n      /*\n       * reset the values so that the preview is refreshed with\n       * the new content\n       */\n      this.submitCounter = 0;\n      this.studentResponse = '';\n      this.latestAnnotations = null;\n      this.isDirty = false;\n      this.isSubmitDirty = false;\n      this.isSaveButtonVisible = this.componentContent.showSaveButton;\n      this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n\n      if (this.componentContent.starterSentence != null) {\n        /*\n         * the student has not done any work and there is a starter sentence\n         * so we will populate the textarea with the starter sentence\n         */\n        this.studentResponse = this.componentContent.starterSentence;\n      }\n\n      // remove all the old objects\n      this.removeAllObjects();\n\n      // initialize all the coordinates\n      this.initializeCoordinates();\n\n      // re-render the svg div\n      this.setup();\n    }.bind(this), true);\n\n    /*\n     * Listen for the assetSelected event which occurs when the user\n     * selects an asset from the choose asset popup\n     */\n    this.$scope.$on('assetSelected', (event, args) => {\n\n      if (args != null) {\n\n        // make sure the event was fired for this component\n        if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n          // the asset was selected for this component\n          var assetItem = args.assetItem;\n\n          if (assetItem != null) {\n            var fileName = assetItem.fileName;\n\n            if (fileName != null) {\n              /*\n               * get the assets directory path\n               * e.g.\n               * /wise/curriculum/3/\n               */\n              var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n              var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n              var summernoteId = '';\n\n              if (args.target == 'prompt') {\n                // the target is the summernote prompt element\n                summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n              } else if (args.target == 'rubric') {\n                // the target is the summernote rubric element\n                summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n              } else if (args.target == 'image') {\n                // the target is the image\n                if (args.targetObject != null) {\n                  args.targetObject.image = fileName;\n                }\n              } else if (args.target == 'imageMovingLeft') {\n                // the target is the image moving left\n                if (args.targetObject != null) {\n                  args.targetObject.imageMovingLeft = fileName;\n                }\n              } else if (args.target == 'imageMovingRight') {\n                // the target is the image moving right\n                if (args.targetObject != null) {\n                  args.targetObject.imageMovingRight = fileName;\n                }\n              }\n\n              if (summernoteId != '') {\n                if (this.UtilService.isImage(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // add the image html\n                  $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                } else if (this.UtilService.isVideo(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // insert the video element\n                  var videoElement = document.createElement('video');\n                  videoElement.controls = 'true';\n                  videoElement.innerHTML = '<source ng-src=\"' + fullAssetPath + '\" type=\"video/mp4\">';\n                  $('#' + summernoteId).summernote('insertNode', videoElement);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n\n      // close the popup\n      this.$mdDialog.hide();\n    });\n  }\n\n  /**\n   * Add a scoring rule\n   */\n  authoringAddScoringRule() {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.scoringRules != null) {\n\n      // create a scoring rule object\n      var newScoringRule = {};\n      newScoringRule.score = '';\n      newScoringRule.feedbackText = '';\n\n      // add the new scoring rule object\n      this.authoringComponentContent.cRater.scoringRules.push(newScoringRule);\n\n      /*\n       * the author has made changes so we will save the component\n       * content\n       */\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move a scoring rule up\n   * @param index the index of the scoring rule\n   */\n  authoringViewScoringRuleUpClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.scoringRules != null) {\n\n      // make sure the scoring rule is not already at the top\n      if (index != 0) {\n        // the scoring rule is not at the top so we can move it up\n\n        // get the scoring rule\n        var scoringRule = this.authoringComponentContent.cRater.scoringRules[index];\n\n        // remove the scoring rule\n        this.authoringComponentContent.cRater.scoringRules.splice(index, 1);\n\n        // add the scoring rule back at the position one index back\n        this.authoringComponentContent.cRater.scoringRules.splice(index - 1, 0, scoringRule);\n\n        /*\n         * the author has made changes so we will save the component\n         * content\n         */\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Move a scoring rule down\n   * @param index the index of the scoring rule\n   */\n  authoringViewScoringRuleDownClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.scoringRules != null) {\n\n      // make sure the scoring rule is not already at the end\n      if (index != this.authoringComponentContent.cRater.scoringRules.length - 1) {\n\n        // get the scoring rule\n        var scoringRule = this.authoringComponentContent.cRater.scoringRules[index];\n\n        // remove the scoring rule\n        this.authoringComponentContent.cRater.scoringRules.splice(index, 1);\n\n        // add the scoring rule back at the position one index forward\n        this.authoringComponentContent.cRater.scoringRules.splice(index + 1, 0, scoringRule);\n\n        /*\n         * the author has made changes so we will save the component\n         * content\n         */\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Delete a scoring rule\n   * @param index the index of the scoring rule\n   */\n  authoringViewScoringRuleDeleteClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.scoringRules != null) {\n\n      // get the scoring rule\n      var scoringRule = this.authoringComponentContent.cRater.scoringRules[index];\n\n      if (scoringRule != null) {\n\n        // get the score and feedback text\n        var score = scoringRule.score;\n        var feedbackText = scoringRule.feedbackText;\n\n        // make sure the author really wants to delete the scoring rule\n        //var answer = confirm('Are you sure you want to delete this scoring rule?\\n\\nScore: ' + score + '\\n\\n' + 'Feedback Text: ' + feedbackText);\n        var answer = confirm(this.$translate('animation.areYouSureYouWantToDeleteThisScoringRule', {score: score, feedbackText: feedbackText}));\n\n        if (answer) {\n          // the author answered yes to delete the scoring rule\n          this.authoringComponentContent.cRater.scoringRules.splice(index, 1);\n\n          /*\n           * the author has made changes so we will save the component\n           * content\n           */\n          this.authoringViewComponentChanged();\n        }\n      }\n    }\n  }\n\n  /**\n   * Add a new notification. Currently assumes this is a notification based on CRaterResult, but\n   * we can add different types in the future.\n   */\n  authoringAddNotification() {\n\n    if (this.authoringComponentContent.notificationSettings != null &&\n      this.authoringComponentContent.notificationSettings.notifications != null) {\n\n      // create a new notification\n      let newNotification = {\n        notificationType: 'CRaterResult',\n        enableCriteria: {\n          scoreSequence: ['', '']\n        },\n        isAmbient: false,\n        dismissCode: 'apple',\n        isNotifyTeacher: true,\n        isNotifyStudent: true,\n        notificationMessageToStudent: '{{username}}, ' + this.$translate('animation.youGotAScoreOf') + ' {{score}}. ' + this.$translate('animation.pleaseTalkToYourTeacher') + '.',\n        notificationMessageToTeacher: '{{username}} ' + this.$translate('animation.gotAScoreOf') + ' {{score}}.'\n      };\n\n      // add the new notification\n      this.authoringComponentContent.notificationSettings.notifications.push(newNotification);\n\n      // the author has made changes so we will save the component content\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Add a multiple attempt scoring rule\n   */\n  authoringAddMultipleAttemptScoringRule() {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.multipleAttemptScoringRules != null) {\n\n      // create a new multiple attempt scoring rule\n      var newMultipleAttemptScoringRule = {};\n      newMultipleAttemptScoringRule.scoreSequence = ['', ''];\n      newMultipleAttemptScoringRule.feedbackText = '';\n\n      // add the new multiple attempt scoring rule\n      this.authoringComponentContent.cRater.multipleAttemptScoringRules.push(newMultipleAttemptScoringRule);\n\n      /*\n       * the author has made changes so we will save the component\n       * content\n       */\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move a multiple attempt scoring rule up\n   * @param index\n   */\n  authoringViewMultipleAttemptScoringRuleUpClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.multipleAttemptScoringRules != null) {\n\n      // make sure the multiple attempt scoring rule is not already at the top\n      if (index != 0) {\n        // the multiple attempt scoring rule is not at the top\n\n        // get the multiple attempt scoring rule\n        var multipleAttemptScoringRule = this.authoringComponentContent.cRater.multipleAttemptScoringRules[index];\n\n        // remove the multiple attempt scoring rule\n        this.authoringComponentContent.cRater.multipleAttemptScoringRules.splice(index, 1);\n\n        // add the multiple attempt scoring rule back at the position one index back\n        this.authoringComponentContent.cRater.multipleAttemptScoringRules.splice(index - 1, 0, multipleAttemptScoringRule);\n\n        /*\n         * the author has made changes so we will save the component\n         * content\n         */\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Move a multiple attempt scoring rule down\n   * @param index the index of the multiple attempt scoring rule\n   */\n  authoringViewMultipleAttemptScoringRuleDownClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.multipleAttemptScoringRules != null) {\n\n      // make sure the multiple attempt scoring rule is not at the end\n      if (index != this.authoringComponentContent.cRater.multipleAttemptScoringRules.length - 1) {\n        // the multiple attempt scoring rule is not at the end\n\n        // get the multiple attempt scoring rule\n        var multipleAttemptScoringRule = this.authoringComponentContent.cRater.multipleAttemptScoringRules[index];\n\n        // remove the multiple attempt scoring rule\n        this.authoringComponentContent.cRater.multipleAttemptScoringRules.splice(index, 1);\n\n        // add the multiple attempt scoring rule back at the position one index forward\n        this.authoringComponentContent.cRater.multipleAttemptScoringRules.splice(index + 1, 0, multipleAttemptScoringRule);\n\n        /*\n         * the author has made changes so we will save the component\n         * content\n         */\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Delete a multiple attempt scoring rule\n   * @param index the index of the mulitple attempt scoring rule\n   */\n  authoringViewMultipleAttemptScoringRuleDeleteClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.multipleAttemptScoringRules != null) {\n\n      // get the multiple attempt scoring rule\n      var multipleAttemptScoringRule = this.authoringComponentContent.cRater.multipleAttemptScoringRules[index];\n\n      if (multipleAttemptScoringRule != null) {\n\n        // get the score sequence\n        var scoreSequence = multipleAttemptScoringRule.scoreSequence;\n        var previousScore = '';\n        var currentScore = '';\n\n        if (scoreSequence != null) {\n          previousScore = scoreSequence[0];\n          currentScore = scoreSequence[1];\n        }\n\n        // get the feedback text\n        var feedbackText = multipleAttemptScoringRule.feedbackText;\n\n        // make sure the author really wants to delete the multiple attempt scoring rule\n        var answer = confirm(this.$translate('animation.areYouSureYouWantToDeleteThisMultipleAttemptScoringRule', {previousScore: previousScore, currentScore: currentScore, feedbackText: feedbackText}));\n\n        if (answer) {\n          // the author answered yes to delete the multiple attempt scoring rule\n          this.authoringComponentContent.cRater.multipleAttemptScoringRules.splice(index, 1);\n\n          /*\n           * the author has made changes so we will save the component\n           * content\n           */\n          this.authoringViewComponentChanged();\n        }\n      }\n    }\n  }\n\n  /**\n   * Move a notification up\n   * @param index of the notification\n   */\n  authoringViewNotificationUpClicked(index) {\n\n    if (this.authoringComponentContent.notificationSettings != null &&\n      this.authoringComponentContent.notificationSettings.notifications != null) {\n\n      // make sure the notification is not already at the top\n      if (index != 0) {\n        // the notification is not at the top\n\n        // get the notification\n        var notification = this.authoringComponentContent.notificationSettings.notifications[index];\n\n        // remove the notification\n        this.authoringComponentContent.notificationSettings.notifications.splice(index, 1);\n\n        // add the notification back at the position one index back\n        this.authoringComponentContent.notificationSettings.notifications.splice(index - 1, 0, notification);\n\n        // the author has made changes so we will save the component content\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Move a notification down\n   * @param index the index of the notification\n   */\n  authoringViewNotificationDownClicked(index) {\n\n    if (this.authoringComponentContent.notificationSettings != null &&\n      this.authoringComponentContent.notificationSettings.notifications != null) {\n\n      // make sure the notification is not at the end\n      if (index != this.authoringComponentContent.notificationSettings.notifications.length - 1) {\n        // the notification is not at the end\n\n        // get the notification\n        var notification = this.authoringComponentContent.notificationSettings.notifications[index];\n\n        // remove the notification\n        this.authoringComponentContent.notificationSettings.notifications.splice(index, 1);\n\n        // add the notification back at the position one index forward\n        this.authoringComponentContent.notificationSettings.notifications.splice(index + 1, 0, notification);\n\n        // the author has made changes so we will save the component content\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Delete a notification\n   * @param index the index of the notification\n   */\n  authoringViewNotificationDeleteClicked(index) {\n\n    if (this.authoringComponentContent.notificationSettings != null &&\n      this.authoringComponentContent.notificationSettings.notifications != null) {\n\n      // get the notification\n      var notification = this.authoringComponentContent.notificationSettings.notifications[index];\n\n      if (notification != null) {\n\n        // get the score sequence\n        var scoreSequence = notification.enableCriteria.scoreSequence;\n        var previousScore = '';\n        var currentScore = '';\n\n        if (scoreSequence != null) {\n          previousScore = scoreSequence[0];\n          currentScore = scoreSequence[1];\n        }\n\n        // make sure the author really wants to delete the notification\n        var answer = confirm(this.$translate('animation.areYouSureYouWantToDeleteThisNotification', {previousScore: previousScore, currentScore: currentScore}));\n\n        if (answer) {\n          // the author answered yes to delete the notification\n          this.authoringComponentContent.notificationSettings.notifications.splice(index, 1);\n\n          // the author has made changes so we will save the component content\n          this.authoringViewComponentChanged();\n        }\n      }\n    }\n  }\n\n  /**\n   * The \"Enable CRater\" checkbox was clicked\n   */\n  authoringViewEnableCRaterClicked() {\n\n    if (this.authoringComponentContent.enableCRater) {\n      // CRater was turned on\n\n      if (this.authoringComponentContent.cRater == null) {\n        /*\n         * the cRater object does not exist in the component content\n         * so we will create it\n         */\n\n        // create the cRater object\n        var cRater = {};\n        cRater.itemType = 'CRATER';\n        cRater.itemId = '';\n        cRater.scoreOn = 'submit';\n        cRater.showScore = true;\n        cRater.showFeedback = true;\n        cRater.scoringRules = [];\n        cRater.enableMultipleAttemptScoringRules = false;\n        cRater.multipleAttemptScoringRules = []\n\n        // set the cRater object into the component content\n        this.authoringComponentContent.cRater = cRater;\n      }\n\n      // turn on the submit button\n      //this.authoringComponentContent.showSubmitButton = true;\n      this.setShowSubmitButtonValue(true);\n    } else {\n      // CRater was turned off\n\n      // turn off the submit button\n      this.setShowSubmitButtonValue(false);\n    }\n\n    /*\n     * the author has made changes so we will save the component\n     * content\n     */\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The \"Enable Multiple Attempt Feedback\" checkbox was clicked\n   */\n  enableMultipleAttemptScoringRulesClicked() {\n\n    // get the cRater object from the component content\n    var cRater = this.authoringComponentContent.cRater;\n\n    if (cRater != null && cRater.multipleAttemptScoringRules == null) {\n      /*\n       * the multiple attempt scoring rules array does not exist so\n       * we will create it\n       */\n      cRater.multipleAttemptScoringRules = [];\n    }\n\n    /*\n     * the author has made changes so we will save the component\n     * content\n     */\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The \"Enable Notifications\" checkbox was clicked\n   */\n  authoringViewEnableNotificationsClicked() {\n\n    if (this.authoringComponentContent.enableNotifications) {\n      // Notifications was turned on\n\n      if (this.authoringComponentContent.notificationSettings == null) {\n        /*\n         * the NotificationSettings object does not exist in the component content\n         * so we will create it\n         */\n        this.authoringComponentContent.notificationSettings = {\n          notifications: []\n        };\n      }\n    }\n\n    /*\n     * the author has made changes so we will save the component\n     * content\n     */\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Add a new object\n   */\n  authoringAddObjectClicked() {\n\n    // initialize the objects array if necessary\n    if (this.authoringComponentContent.objects == null) {\n      this.authoringComponentContent.objects = [];\n    }\n\n    // create a new object\n    var newObject = {};\n    newObject.id = this.UtilService.generateKey(10);\n    newObject.type = 'image';\n\n    // add the object to our array of objects\n    this.authoringComponentContent.objects.push(newObject);\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Add a data point to an object\n   * @param object add a data point to this object\n   */\n  authoringAddDataPointClicked(object) {\n    if (object != null) {\n\n      if (object.dataSource != null) {\n        // the object already has a data source\n\n        // ask the user if they are sure they want to delete the data source\n        var answer = confirm('You can only have Data Points or a Data Source. If you add a Data Point, the Data Source will be deleted. Are you sure you want to add a Data Point?');\n\n        if (answer) {\n          // the author answered yes to delete the data source\n          delete object.dataSource;\n\n          // initialize the data array if necessary\n          if (object.data == null) {\n            object.data = [];\n          }\n\n          // create a new data point\n          var newDataPoint = {};\n\n          // add the new data point\n          object.data.push(newDataPoint);\n        }\n      } else {\n        // the object does not have a data source so we can add a data point\n\n        // initialize the data array if necessary\n        if (object.data == null) {\n          object.data = [];\n        }\n\n        // create a new data point\n        var newDataPoint = {};\n\n        // add the new data point\n        object.data.push(newDataPoint);\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Delete a data point from an object\n   * @param object the object to delete a data point from\n   * @param index the index of the data point to delete\n   */\n  authoringDeleteObjectDataPointClicked(object, index) {\n\n    if (object != null && object.data != null) {\n\n      // ask the author if they are sure they want to delete the point\n      var answer = confirm(this.$translate('animation.areYouSureYouWantToDeleteThisDataPoint'));\n\n      if (answer) {\n        // delete the data point at the given index\n        object.data.splice(index, 1);\n\n        // the authoring component content has changed so we will save the project\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Move a data point up\n   * @param object the object the data point belongs to\n   * @param index the index of the data point in the object\n   */\n  authoringMoveObjectDataPointUpClicked(object, index) {\n    if (object != null && object.data != null) {\n\n      if (index > 0) {\n        // the data point is not at the top so we can move it up\n\n        // remember the data point we are moving\n        var dataPoint = object.data[index];\n\n        // remove the data point at the given index\n        object.data.splice(index, 1);\n\n        // insert the data point back in at one index back\n        object.data.splice(index - 1, 0, dataPoint);\n      }\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move a data point down\n   * @param object the object the data point belongs to\n   * @param index the index of the data point in the object\n   */\n  authoringMoveObjectDataPointDownClicked(object, index) {\n    if (object != null && object.data != null) {\n\n      if (index < object.data.length - 1) {\n        // the data point is not at the bottom so we can move it down\n\n        // remember the data point we are moving\n        var dataPoint = object.data[index];\n\n        // remove the data point at the given index\n        object.data.splice(index, 1);\n\n        // insert the data point back in at one index forward\n        object.data.splice(index + 1, 0, dataPoint);\n      }\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move an object up\n   * @param index the index of the object\n   */\n  authoringMoveObjectUpClicked(index) {\n\n    if (this.authoringComponentContent != null) {\n\n      var objects = this.authoringComponentContent.objects;\n\n      if (objects != null) {\n\n        if (index > 0) {\n          // the object is not at the top so we can move it up\n\n          // remember the object we are moving\n          var object = objects[index];\n\n          // remove the object\n          objects.splice(index, 1);\n\n          // insert the object back in at one index back\n          objects.splice(index - 1, 0, object);\n        }\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Move an object down\n   * @param index the index of the object\n   */\n  authoringMoveObjectDownClicked(index) {\n\n    if (this.authoringComponentContent != null) {\n\n      var objects = this.authoringComponentContent.objects;\n\n      if (objects != null) {\n\n        if (index < objects.length - 1) {\n          // the object is not at the bottom so we can move it down\n\n          // remember the object we are moving\n          var object = objects[index];\n\n          // remove the object\n          objects.splice(index, 1);\n\n          // insert the object back in at one index forward\n          objects.splice(index + 1, 0, object);\n        }\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Delete an object\n   * @param index the index of the object\n   */\n  authoringDeleteObjectClicked(index) {\n\n    if (this.authoringComponentContent != null) {\n\n      var answer = confirm(this.$translate('animation.areYouSureYouWantToDeleteThisObject'));\n\n      if (answer) {\n        var objects = this.authoringComponentContent.objects;\n\n        if (objects != null) {\n          // remove the object from the array of objects\n          objects.splice(index, 1);\n        }\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The add data source button was clicked\n   * @param object the object we will add the data source to\n   */\n  authoringAddDataSourceClicked(object) {\n\n    if (object != null && object.data != null && object.data.length > 0) {\n      /*\n       * the object has data so we will ask the author if they are sure\n       * they want to add a data source which will remove the data\n       */\n\n      var answer = confirm('You can only have Data Points or a Data Source. If you add a Data Source, the Data Points will be deleted. Are you sure you want to add a Data Source?');\n\n      if (answer) {\n        // the author answered yes to delete the data points\n\n        // delete the data points\n        delete object.data;\n\n        // add the data source\n        object.dataSource = {};\n      }\n    } else {\n      // there are no data points so we can add the data source\n\n      // delete the data points\n      delete object.data;\n\n      // add the data source\n      object.dataSource = {};\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The delete data source button was clicked\n   * @param object the object to delete the data source from\n   */\n  authoringDeleteDataSourceClicked(object) {\n\n    // ask the author if they are sure they want to delete the data source\n    var answer = confirm('Are you sure you want to delete the Data Source?');\n\n    if (answer) {\n      // the author answered yes to delete the data source\n      delete object.dataSource;\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The data source node has changed\n   * @param object the object that has changed\n   */\n  dataSourceNodeChanged(object) {\n\n    if (object != null) {\n\n      // remember the node id\n      var nodeId = object.dataSource.nodeId;\n\n      // clear the dataSource object except for the node id\n      object.dataSource = {\n        nodeId: nodeId\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The data source component has changed\n   * @param object the object that has changed\n   */\n  dataSourceComponentChanged(object) {\n\n    if (object != null) {\n\n      // remember the node id and component id\n      var nodeId = object.dataSource.nodeId;\n      var componentId = object.dataSource.componentId;\n\n      // get the component\n      var component = this.getComponentByNodeIdAndComponentId(nodeId, componentId);\n\n      // clear the dataSource object except for the node id and component id\n      object.dataSource = {\n        nodeId: nodeId,\n        componentId: componentId\n      };\n\n      if (component != null && component.type == 'Graph') {\n        // set the default parameters for a graph data source\n        object.dataSource.trialIndex = 0;\n        object.dataSource.seriesIndex = 0;\n        object.dataSource.tColumnIndex = 0;\n        object.dataSource.xColumnIndex = 1;\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose the image\n   */\n  chooseImage(object) {\n\n    // generate the parameters\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'image';\n    params.targetObject = object;\n\n    // display the asset chooser\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose the image moving left\n   * @param object the object to set the image moving left\n   */\n  chooseImageMovingLeft(object) {\n\n    // generate the parameters\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'imageMovingLeft';\n    params.targetObject = object;\n\n    // display the asset chooser\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose the image moving right\n   * @param object the object to set the image moving right\n   */\n  chooseImageMovingRight(object) {\n\n    // generate the parameters\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'imageMovingRight';\n    params.targetObject = object;\n\n    // display the asset chooser\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * The type for an object changed\n   * @param object the object that changed\n   */\n  authoringObjectTypeChanged(object) {\n\n    if (object != null) {\n      if (object.type == 'image') {\n        // the type changed to an image so we will delete the text field\n        delete object.text;\n      } else if (object.type == 'text') {\n        // the type changed to text so we will delete the image fields\n        delete object.image;\n        delete object.width;\n        delete object.height;\n        delete object.imageMovingLeft;\n        delete object.imageMovingRight;\n        delete object.imageMovingUp;\n        delete object.imageMovingDown;\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n}\n\nAnimationAuthoringController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$timeout',\n  'AnimationService',\n  'AnnotationService',\n  'ConfigService',\n  'CRaterService',\n  'NodeService',\n  'NotebookService',\n  'NotificationService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default AnimationAuthoringController;\n"]}