{"version":3,"sources":["animationAuthoringController.es6"],"names":["AnimationAuthoringController","$filter","$mdDialog","$q","$rootScope","$scope","$timeout","AnimationService","AnnotationService","ConfigService","CRaterService","NodeService","NotebookService","NotificationService","ProjectService","StudentAssetService","StudentDataService","UtilService","isPromptVisible","isSaveButtonVisible","componentContent","showSaveButton","isSubmitButtonVisible","showSubmitButton","summernoteRubricId","nodeId","componentId","summernoteRubricHTML","rubric","insertAssetString","$translate","InsertAssetButton","createInsertAssetButton","summernoteRubricOptions","toolbar","height","disableDragAndDrop","buttons","insertAssetButton","themePath","getThemePath","tinymceOptions","menubar","plugins","autoresize_bottom_margin","autoresize_min_height","image_advtab","content_css","setup","ed","on","e","$","target","editorContainer","addClass","parent","id","removeClass","connectedComponentUpdateOnOptions","value","text","allowedConnectedComponentTypes","type","updateAdvancedAuthoringView","$watch","authoringComponentContent","bind","newValue","oldValue","injectAssetPaths","submitCounter","studentResponse","latestAnnotations","isDirty","isSubmitDirty","starterSentence","removeAllObjects","initializeCoordinates","$on","event","args","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","summernoteId","targetObject","image","imageMovingLeft","imageMovingRight","isImage","summernote","isVideo","videoElement","document","createElement","controls","innerHTML","authoringViewComponentChanged","hide","showAdvancedAuthoring","$parent","nodeAuthoringController","authoringViewNodeChanged","editedComponentContent","angular","fromJson","authoringComponentContentJSONString","replaceComponent","showSaveErrorAdvancedAuthoring","toJson","cRater","scoringRules","newScoringRule","score","feedbackText","push","index","scoringRule","splice","length","answer","confirm","notificationSettings","notifications","newNotification","notificationType","enableCriteria","scoreSequence","isAmbient","dismissCode","isNotifyTeacher","isNotifyStudent","notificationMessageToStudent","notificationMessageToTeacher","multipleAttemptScoringRules","newMultipleAttemptScoringRule","multipleAttemptScoringRule","previousScore","currentScore","notification","enableCRater","itemType","itemId","scoreOn","showScore","showFeedback","enableMultipleAttemptScoringRules","setShowSubmitButtonValue","enableNotifications","html","removeAbsoluteAssetPaths","insertWISELinks","newConnectedComponent","updateOn","connectedComponents","show","$emit","objects","newObject","generateKey","object","dataSource","data","newDataPoint","dataPoint","component","getComponentByNodeIdAndComponentId","trialIndex","seriesIndex","tColumnIndex","xColumnIndex","params","isPopup","$broadcast","width","imageMovingUp","imageMovingDown","tags","tag","authoringAutomaticallySetConnectedComponentComponentIdIfPossible","connectedComponent","components","getComponentsByNodeId","numberOfAllowedComponents","allowedComponent","isConnectedComponentTypeAllowed","connectedComponentType","componentType","a","allowedConnectedComponentType","showJSONAuthoring","jsonStringChanged","advancedAuthoringViewComponentChanged","$inject"],"mappings":"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","file":"animationAuthoringController.js","sourcesContent":["'use strict';\n\nimport AnimationController from './animationController';\n\nclass AnimationAuthoringController extends AnimationController {\n  constructor($filter,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              $timeout,\n              AnimationService,\n              AnnotationService,\n              ConfigService,\n              CRaterService,\n              NodeService,\n              NotebookService,\n              NotificationService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    super($filter,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $timeout,\n      AnimationService,\n      AnnotationService,\n      ConfigService,\n      CRaterService,\n      NodeService,\n      NotebookService,\n      NotificationService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService);\n\n    this.isPromptVisible = true;\n    this.isSaveButtonVisible = this.componentContent.showSaveButton;\n    this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n\n    // generate the summernote rubric element id\n    this.summernoteRubricId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n\n    // set the component rubric into the summernote rubric\n    this.summernoteRubricHTML = this.componentContent.rubric;\n\n    // the tooltip text for the insert WISE asset button\n    var insertAssetString = this.$translate('INSERT_ASSET');\n\n    /*\n     * create the custom button for inserting WISE assets into\n     * summernote\n     */\n    var InsertAssetButton = this.UtilService.createInsertAssetButton(this, null, this.nodeId, this.componentId, 'rubric', insertAssetString);\n\n    /*\n     * the options that specifies the tools to display in the\n     * summernote prompt\n     */\n    this.summernoteRubricOptions = {\n      toolbar: [\n        ['style', ['style']],\n        ['font', ['bold', 'underline', 'clear']],\n        ['fontname', ['fontname']],\n        ['fontsize', ['fontsize']],\n        ['color', ['color']],\n        ['para', ['ul', 'ol', 'paragraph']],\n        ['table', ['table']],\n        ['insert', ['link', 'video']],\n        ['view', ['fullscreen', 'codeview', 'help']],\n        ['customButton', ['insertAssetButton']]\n      ],\n      height: 300,\n      disableDragAndDrop: true,\n      buttons: {\n        insertAssetButton: InsertAssetButton\n      }\n    };\n\n\n    let themePath = this.ProjectService.getThemePath();\n\n    // TODO: make toolbar items and plugins customizable by authors (OR strip down to only special characters, support for equations)\n    // Rich text editor options\n    this.tinymceOptions = {\n      //onChange: function(e) {\n      //scope.studentDataChanged();\n      //},\n      menubar: false,\n      plugins: 'link image media autoresize', //imagetools\n      toolbar: 'undo redo | bold italic | superscript subscript | bullist numlist | alignleft aligncenter alignright | link image media',\n      autoresize_bottom_margin: '0',\n      autoresize_min_height: '100',\n      image_advtab: true,\n      content_css: themePath + '/style/tinymce.css',\n      setup: function (ed) {\n        ed.on('focus', function (e) {\n          $(e.target.editorContainer).addClass('input--focused').parent().addClass('input-wrapper--focused');\n          $('label[for=\"' + e.target.id + '\"]').addClass('input-label--focused');\n        });\n\n        ed.on('blur', function (e) {\n          $(e.target.editorContainer).removeClass('input--focused').parent().removeClass('input-wrapper--focused');\n          $('label[for=\"' + e.target.id + '\"]').removeClass('input-label--focused');\n        });\n      }\n    };\n\n    // the options for when to update this component from a connected component\n    this.connectedComponentUpdateOnOptions = [\n      {\n        value: 'change',\n        text: 'Change'\n      },\n      {\n        value: 'submit',\n        text: 'Submit'\n      }\n    ];\n\n    // the component types we are allowed to connect to\n    this.allowedConnectedComponentTypes = [\n      {\n        type: 'Animation'\n      },\n      {\n        type: 'Graph'\n      }\n    ];\n\n    this.updateAdvancedAuthoringView();\n\n    $scope.$watch(function() {\n      return this.authoringComponentContent;\n    }.bind(this), function(newValue, oldValue) {\n      // inject the asset paths into the new component content\n      this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n\n      /*\n       * reset the values so that the preview is refreshed with\n       * the new content\n       */\n      this.submitCounter = 0;\n      this.studentResponse = '';\n      this.latestAnnotations = null;\n      this.isDirty = false;\n      this.isSubmitDirty = false;\n      this.isSaveButtonVisible = this.componentContent.showSaveButton;\n      this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n\n      if (this.componentContent.starterSentence != null) {\n        /*\n         * the student has not done any work and there is a starter sentence\n         * so we will populate the textarea with the starter sentence\n         */\n        this.studentResponse = this.componentContent.starterSentence;\n      }\n\n      // remove all the old objects\n      this.removeAllObjects();\n\n      // initialize all the coordinates\n      this.initializeCoordinates();\n\n      // re-render the svg div\n      this.setup();\n    }.bind(this), true);\n\n    /*\n     * Listen for the assetSelected event which occurs when the user\n     * selects an asset from the choose asset popup\n     */\n    this.$scope.$on('assetSelected', (event, args) => {\n\n      if (args != null) {\n\n        // make sure the event was fired for this component\n        if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n          // the asset was selected for this component\n          var assetItem = args.assetItem;\n\n          if (assetItem != null) {\n            var fileName = assetItem.fileName;\n\n            if (fileName != null) {\n              /*\n               * get the assets directory path\n               * e.g.\n               * /wise/curriculum/3/\n               */\n              var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n              var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n              var summernoteId = '';\n\n              if (args.target == 'prompt') {\n                // the target is the summernote prompt element\n                summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n              } else if (args.target == 'rubric') {\n                // the target is the summernote rubric element\n                summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n              } else if (args.target == 'image') {\n                // the target is the image\n                if (args.targetObject != null) {\n                  args.targetObject.image = fileName;\n                }\n              } else if (args.target == 'imageMovingLeft') {\n                // the target is the image moving left\n                if (args.targetObject != null) {\n                  args.targetObject.imageMovingLeft = fileName;\n                }\n              } else if (args.target == 'imageMovingRight') {\n                // the target is the image moving right\n                if (args.targetObject != null) {\n                  args.targetObject.imageMovingRight = fileName;\n                }\n              }\n\n              if (summernoteId != '') {\n                if (this.UtilService.isImage(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // add the image html\n                  $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                } else if (this.UtilService.isVideo(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // insert the video element\n                  var videoElement = document.createElement('video');\n                  videoElement.controls = 'true';\n                  videoElement.innerHTML = '<source ng-src=\"' + fullAssetPath + '\" type=\"video/mp4\">';\n                  $('#' + summernoteId).summernote('insertNode', videoElement);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n\n      // close the popup\n      this.$mdDialog.hide();\n    });\n\n    /*\n     * The advanced button for a component was clicked. If the button was\n     * for this component, we will show the advanced authoring.\n     */\n    this.$scope.$on('componentAdvancedButtonClicked', (event, args) => {\n      if (args != null) {\n        let componentId = args.componentId;\n        if (this.componentId === componentId) {\n          this.showAdvancedAuthoring = !this.showAdvancedAuthoring;\n        }\n      }\n    });\n  }\n\n  /**\n   * The component has changed in the regular authoring view so we will save the project\n   */\n  authoringViewComponentChanged() {\n\n    // update the JSON string in the advanced authoring view textarea\n    this.updateAdvancedAuthoringView();\n\n    /*\n     * notify the parent node that the content has changed which will save\n     * the project to the server\n     */\n    this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n  };\n\n  /**\n   * The component has changed in the advanced authoring view so we will update\n   * the component and save the project.\n   */\n  advancedAuthoringViewComponentChanged() {\n\n    try {\n      /*\n       * create a new component by converting the JSON string in the advanced\n       * authoring view into a JSON object\n       */\n      var editedComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n      // replace the component in the project\n      this.ProjectService.replaceComponent(this.nodeId, this.componentId, editedComponentContent);\n\n      // set the new component into the controller\n      this.componentContent = editedComponentContent;\n\n      /*\n       * notify the parent node that the content has changed which will save\n       * the project to the server\n       */\n      this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n    } catch(e) {\n      this.$scope.$parent.nodeAuthoringController.showSaveErrorAdvancedAuthoring();\n    }\n  };\n\n  /**\n   * Update the component JSON string that will be displayed in the advanced authoring view textarea\n   */\n  updateAdvancedAuthoringView() {\n    this.authoringComponentContentJSONString = angular.toJson(this.authoringComponentContent, 4);\n  };\n\n\n  /**\n   * Add a scoring rule\n   */\n  authoringAddScoringRule() {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.scoringRules != null) {\n\n      // create a scoring rule object\n      var newScoringRule = {};\n      newScoringRule.score = '';\n      newScoringRule.feedbackText = '';\n\n      // add the new scoring rule object\n      this.authoringComponentContent.cRater.scoringRules.push(newScoringRule);\n\n      /*\n       * the author has made changes so we will save the component\n       * content\n       */\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move a scoring rule up\n   * @param index the index of the scoring rule\n   */\n  authoringViewScoringRuleUpClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.scoringRules != null) {\n\n      // make sure the scoring rule is not already at the top\n      if (index != 0) {\n        // the scoring rule is not at the top so we can move it up\n\n        // get the scoring rule\n        var scoringRule = this.authoringComponentContent.cRater.scoringRules[index];\n\n        // remove the scoring rule\n        this.authoringComponentContent.cRater.scoringRules.splice(index, 1);\n\n        // add the scoring rule back at the position one index back\n        this.authoringComponentContent.cRater.scoringRules.splice(index - 1, 0, scoringRule);\n\n        /*\n         * the author has made changes so we will save the component\n         * content\n         */\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Move a scoring rule down\n   * @param index the index of the scoring rule\n   */\n  authoringViewScoringRuleDownClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.scoringRules != null) {\n\n      // make sure the scoring rule is not already at the end\n      if (index != this.authoringComponentContent.cRater.scoringRules.length - 1) {\n\n        // get the scoring rule\n        var scoringRule = this.authoringComponentContent.cRater.scoringRules[index];\n\n        // remove the scoring rule\n        this.authoringComponentContent.cRater.scoringRules.splice(index, 1);\n\n        // add the scoring rule back at the position one index forward\n        this.authoringComponentContent.cRater.scoringRules.splice(index + 1, 0, scoringRule);\n\n        /*\n         * the author has made changes so we will save the component\n         * content\n         */\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Delete a scoring rule\n   * @param index the index of the scoring rule\n   */\n  authoringViewScoringRuleDeleteClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.scoringRules != null) {\n\n      // get the scoring rule\n      var scoringRule = this.authoringComponentContent.cRater.scoringRules[index];\n\n      if (scoringRule != null) {\n\n        // get the score and feedback text\n        var score = scoringRule.score;\n        var feedbackText = scoringRule.feedbackText;\n\n        // make sure the author really wants to delete the scoring rule\n        //var answer = confirm('Are you sure you want to delete this scoring rule?\\n\\nScore: ' + score + '\\n\\n' + 'Feedback Text: ' + feedbackText);\n        var answer = confirm(this.$translate('animation.areYouSureYouWantToDeleteThisScoringRule', {score: score, feedbackText: feedbackText}));\n\n        if (answer) {\n          // the author answered yes to delete the scoring rule\n          this.authoringComponentContent.cRater.scoringRules.splice(index, 1);\n\n          /*\n           * the author has made changes so we will save the component\n           * content\n           */\n          this.authoringViewComponentChanged();\n        }\n      }\n    }\n  }\n\n  /**\n   * Add a new notification. Currently assumes this is a notification based on CRaterResult, but\n   * we can add different types in the future.\n   */\n  authoringAddNotification() {\n\n    if (this.authoringComponentContent.notificationSettings != null &&\n      this.authoringComponentContent.notificationSettings.notifications != null) {\n\n      // create a new notification\n      let newNotification = {\n        notificationType: 'CRaterResult',\n        enableCriteria: {\n          scoreSequence: ['', '']\n        },\n        isAmbient: false,\n        dismissCode: 'apple',\n        isNotifyTeacher: true,\n        isNotifyStudent: true,\n        notificationMessageToStudent: '{{username}}, ' + this.$translate('animation.youGotAScoreOf') + ' {{score}}. ' + this.$translate('animation.pleaseTalkToYourTeacher') + '.',\n        notificationMessageToTeacher: '{{username}} ' + this.$translate('animation.gotAScoreOf') + ' {{score}}.'\n      };\n\n      // add the new notification\n      this.authoringComponentContent.notificationSettings.notifications.push(newNotification);\n\n      // the author has made changes so we will save the component content\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Add a multiple attempt scoring rule\n   */\n  authoringAddMultipleAttemptScoringRule() {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.multipleAttemptScoringRules != null) {\n\n      // create a new multiple attempt scoring rule\n      var newMultipleAttemptScoringRule = {};\n      newMultipleAttemptScoringRule.scoreSequence = ['', ''];\n      newMultipleAttemptScoringRule.feedbackText = '';\n\n      // add the new multiple attempt scoring rule\n      this.authoringComponentContent.cRater.multipleAttemptScoringRules.push(newMultipleAttemptScoringRule);\n\n      /*\n       * the author has made changes so we will save the component\n       * content\n       */\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move a multiple attempt scoring rule up\n   * @param index\n   */\n  authoringViewMultipleAttemptScoringRuleUpClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.multipleAttemptScoringRules != null) {\n\n      // make sure the multiple attempt scoring rule is not already at the top\n      if (index != 0) {\n        // the multiple attempt scoring rule is not at the top\n\n        // get the multiple attempt scoring rule\n        var multipleAttemptScoringRule = this.authoringComponentContent.cRater.multipleAttemptScoringRules[index];\n\n        // remove the multiple attempt scoring rule\n        this.authoringComponentContent.cRater.multipleAttemptScoringRules.splice(index, 1);\n\n        // add the multiple attempt scoring rule back at the position one index back\n        this.authoringComponentContent.cRater.multipleAttemptScoringRules.splice(index - 1, 0, multipleAttemptScoringRule);\n\n        /*\n         * the author has made changes so we will save the component\n         * content\n         */\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Move a multiple attempt scoring rule down\n   * @param index the index of the multiple attempt scoring rule\n   */\n  authoringViewMultipleAttemptScoringRuleDownClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.multipleAttemptScoringRules != null) {\n\n      // make sure the multiple attempt scoring rule is not at the end\n      if (index != this.authoringComponentContent.cRater.multipleAttemptScoringRules.length - 1) {\n        // the multiple attempt scoring rule is not at the end\n\n        // get the multiple attempt scoring rule\n        var multipleAttemptScoringRule = this.authoringComponentContent.cRater.multipleAttemptScoringRules[index];\n\n        // remove the multiple attempt scoring rule\n        this.authoringComponentContent.cRater.multipleAttemptScoringRules.splice(index, 1);\n\n        // add the multiple attempt scoring rule back at the position one index forward\n        this.authoringComponentContent.cRater.multipleAttemptScoringRules.splice(index + 1, 0, multipleAttemptScoringRule);\n\n        /*\n         * the author has made changes so we will save the component\n         * content\n         */\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Delete a multiple attempt scoring rule\n   * @param index the index of the mulitple attempt scoring rule\n   */\n  authoringViewMultipleAttemptScoringRuleDeleteClicked(index) {\n\n    if (this.authoringComponentContent.cRater != null &&\n      this.authoringComponentContent.cRater.multipleAttemptScoringRules != null) {\n\n      // get the multiple attempt scoring rule\n      var multipleAttemptScoringRule = this.authoringComponentContent.cRater.multipleAttemptScoringRules[index];\n\n      if (multipleAttemptScoringRule != null) {\n\n        // get the score sequence\n        var scoreSequence = multipleAttemptScoringRule.scoreSequence;\n        var previousScore = '';\n        var currentScore = '';\n\n        if (scoreSequence != null) {\n          previousScore = scoreSequence[0];\n          currentScore = scoreSequence[1];\n        }\n\n        // get the feedback text\n        var feedbackText = multipleAttemptScoringRule.feedbackText;\n\n        // make sure the author really wants to delete the multiple attempt scoring rule\n        var answer = confirm(this.$translate('animation.areYouSureYouWantToDeleteThisMultipleAttemptScoringRule', {previousScore: previousScore, currentScore: currentScore, feedbackText: feedbackText}));\n\n        if (answer) {\n          // the author answered yes to delete the multiple attempt scoring rule\n          this.authoringComponentContent.cRater.multipleAttemptScoringRules.splice(index, 1);\n\n          /*\n           * the author has made changes so we will save the component\n           * content\n           */\n          this.authoringViewComponentChanged();\n        }\n      }\n    }\n  }\n\n  /**\n   * Move a notification up\n   * @param index of the notification\n   */\n  authoringViewNotificationUpClicked(index) {\n\n    if (this.authoringComponentContent.notificationSettings != null &&\n      this.authoringComponentContent.notificationSettings.notifications != null) {\n\n      // make sure the notification is not already at the top\n      if (index != 0) {\n        // the notification is not at the top\n\n        // get the notification\n        var notification = this.authoringComponentContent.notificationSettings.notifications[index];\n\n        // remove the notification\n        this.authoringComponentContent.notificationSettings.notifications.splice(index, 1);\n\n        // add the notification back at the position one index back\n        this.authoringComponentContent.notificationSettings.notifications.splice(index - 1, 0, notification);\n\n        // the author has made changes so we will save the component content\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Move a notification down\n   * @param index the index of the notification\n   */\n  authoringViewNotificationDownClicked(index) {\n\n    if (this.authoringComponentContent.notificationSettings != null &&\n      this.authoringComponentContent.notificationSettings.notifications != null) {\n\n      // make sure the notification is not at the end\n      if (index != this.authoringComponentContent.notificationSettings.notifications.length - 1) {\n        // the notification is not at the end\n\n        // get the notification\n        var notification = this.authoringComponentContent.notificationSettings.notifications[index];\n\n        // remove the notification\n        this.authoringComponentContent.notificationSettings.notifications.splice(index, 1);\n\n        // add the notification back at the position one index forward\n        this.authoringComponentContent.notificationSettings.notifications.splice(index + 1, 0, notification);\n\n        // the author has made changes so we will save the component content\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Delete a notification\n   * @param index the index of the notification\n   */\n  authoringViewNotificationDeleteClicked(index) {\n\n    if (this.authoringComponentContent.notificationSettings != null &&\n      this.authoringComponentContent.notificationSettings.notifications != null) {\n\n      // get the notification\n      var notification = this.authoringComponentContent.notificationSettings.notifications[index];\n\n      if (notification != null) {\n\n        // get the score sequence\n        var scoreSequence = notification.enableCriteria.scoreSequence;\n        var previousScore = '';\n        var currentScore = '';\n\n        if (scoreSequence != null) {\n          previousScore = scoreSequence[0];\n          currentScore = scoreSequence[1];\n        }\n\n        // make sure the author really wants to delete the notification\n        var answer = confirm(this.$translate('animation.areYouSureYouWantToDeleteThisNotification', {previousScore: previousScore, currentScore: currentScore}));\n\n        if (answer) {\n          // the author answered yes to delete the notification\n          this.authoringComponentContent.notificationSettings.notifications.splice(index, 1);\n\n          // the author has made changes so we will save the component content\n          this.authoringViewComponentChanged();\n        }\n      }\n    }\n  }\n\n  /**\n   * The \"Enable CRater\" checkbox was clicked\n   */\n  authoringViewEnableCRaterClicked() {\n\n    if (this.authoringComponentContent.enableCRater) {\n      // CRater was turned on\n\n      if (this.authoringComponentContent.cRater == null) {\n        /*\n         * the cRater object does not exist in the component content\n         * so we will create it\n         */\n\n        // create the cRater object\n        var cRater = {};\n        cRater.itemType = 'CRATER';\n        cRater.itemId = '';\n        cRater.scoreOn = 'submit';\n        cRater.showScore = true;\n        cRater.showFeedback = true;\n        cRater.scoringRules = [];\n        cRater.enableMultipleAttemptScoringRules = false;\n        cRater.multipleAttemptScoringRules = []\n\n        // set the cRater object into the component content\n        this.authoringComponentContent.cRater = cRater;\n      }\n\n      // turn on the submit button\n      //this.authoringComponentContent.showSubmitButton = true;\n      this.setShowSubmitButtonValue(true);\n    } else {\n      // CRater was turned off\n\n      // turn off the submit button\n      this.setShowSubmitButtonValue(false);\n    }\n\n    /*\n     * the author has made changes so we will save the component\n     * content\n     */\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The \"Enable Multiple Attempt Feedback\" checkbox was clicked\n   */\n  enableMultipleAttemptScoringRulesClicked() {\n\n    // get the cRater object from the component content\n    var cRater = this.authoringComponentContent.cRater;\n\n    if (cRater != null && cRater.multipleAttemptScoringRules == null) {\n      /*\n       * the multiple attempt scoring rules array does not exist so\n       * we will create it\n       */\n      cRater.multipleAttemptScoringRules = [];\n    }\n\n    /*\n     * the author has made changes so we will save the component\n     * content\n     */\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The \"Enable Notifications\" checkbox was clicked\n   */\n  authoringViewEnableNotificationsClicked() {\n\n    if (this.authoringComponentContent.enableNotifications) {\n      // Notifications was turned on\n\n      if (this.authoringComponentContent.notificationSettings == null) {\n        /*\n         * the NotificationSettings object does not exist in the component content\n         * so we will create it\n         */\n        this.authoringComponentContent.notificationSettings = {\n          notifications: []\n        };\n      }\n    }\n\n    /*\n     * the author has made changes so we will save the component\n     * content\n     */\n    this.authoringViewComponentChanged();\n  }\n\n\n  /**\n   * The author has changed the rubric\n   */\n  summernoteRubricHTMLChanged() {\n\n    // get the summernote rubric html\n    var html = this.summernoteRubricHTML;\n\n    /*\n     * remove the absolute asset paths\n     * e.g.\n     * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n     * will be changed to\n     * <img src='sun.png'/>\n     */\n    html = this.ConfigService.removeAbsoluteAssetPaths(html);\n\n    /*\n     * replace <a> and <button> elements with <wiselink> elements when\n     * applicable\n     */\n    html = this.UtilService.insertWISELinks(html);\n\n    // update the component rubric\n    this.authoringComponentContent.rubric = html;\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Add a connected component\n   */\n  addConnectedComponent() {\n\n    /*\n     * create the new connected component object that will contain a\n     * node id and component id\n     */\n    var newConnectedComponent = {};\n    newConnectedComponent.nodeId = this.nodeId;\n    newConnectedComponent.componentId = null;\n    newConnectedComponent.updateOn = 'change';\n\n    // initialize the array of connected components if it does not exist yet\n    if (this.authoringComponentContent.connectedComponents == null) {\n      this.authoringComponentContent.connectedComponents = [];\n    }\n\n    // add the connected component\n    this.authoringComponentContent.connectedComponents.push(newConnectedComponent);\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Delete a connected component\n   * @param index the index of the component to delete\n   */\n  deleteConnectedComponent(index) {\n\n    if (this.authoringComponentContent.connectedComponents != null) {\n      this.authoringComponentContent.connectedComponents.splice(index, 1);\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Set the show submit button value\n   * @param show whether to show the submit button\n   */\n  setShowSubmitButtonValue(show) {\n\n    if (show == null || show == false) {\n      // we are hiding the submit button\n      this.authoringComponentContent.showSaveButton = false;\n      this.authoringComponentContent.showSubmitButton = false;\n    } else {\n      // we are showing the submit button\n      this.authoringComponentContent.showSaveButton = true;\n      this.authoringComponentContent.showSubmitButton = true;\n    }\n\n    /*\n     * notify the parent node that this component is changing its\n     * showSubmitButton value so that it can show save buttons on the\n     * step or sibling components accordingly\n     */\n    this.$scope.$emit('componentShowSubmitButtonValueChanged', {nodeId: this.nodeId, componentId: this.componentId, showSubmitButton: show});\n  }\n\n  /**\n   * The showSubmitButton value has changed\n   */\n  showSubmitButtonValueChanged() {\n\n    /*\n     * perform additional processing for when we change the showSubmitButton\n     * value\n     */\n    this.setShowSubmitButtonValue(this.authoringComponentContent.showSubmitButton);\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Add a new object\n   */\n  authoringAddObjectClicked() {\n\n    // initialize the objects array if necessary\n    if (this.authoringComponentContent.objects == null) {\n      this.authoringComponentContent.objects = [];\n    }\n\n    // create a new object\n    var newObject = {};\n    newObject.id = this.UtilService.generateKey(10);\n    newObject.type = 'image';\n\n    // add the object to our array of objects\n    this.authoringComponentContent.objects.push(newObject);\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Add a data point to an object\n   * @param object add a data point to this object\n   */\n  authoringAddDataPointClicked(object) {\n    if (object != null) {\n\n      if (object.dataSource != null) {\n        // the object already has a data source\n\n        // ask the user if they are sure they want to delete the data source\n        var answer = confirm('You can only have Data Points or a Data Source. If you add a Data Point, the Data Source will be deleted. Are you sure you want to add a Data Point?');\n\n        if (answer) {\n          // the author answered yes to delete the data source\n          delete object.dataSource;\n\n          // initialize the data array if necessary\n          if (object.data == null) {\n            object.data = [];\n          }\n\n          // create a new data point\n          var newDataPoint = {};\n\n          // add the new data point\n          object.data.push(newDataPoint);\n        }\n      } else {\n        // the object does not have a data source so we can add a data point\n\n        // initialize the data array if necessary\n        if (object.data == null) {\n          object.data = [];\n        }\n\n        // create a new data point\n        var newDataPoint = {};\n\n        // add the new data point\n        object.data.push(newDataPoint);\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Delete a data point from an object\n   * @param object the object to delete a data point from\n   * @param index the index of the data point to delete\n   */\n  authoringDeleteObjectDataPointClicked(object, index) {\n\n    if (object != null && object.data != null) {\n\n      // ask the author if they are sure they want to delete the point\n      var answer = confirm(this.$translate('animation.areYouSureYouWantToDeleteThisDataPoint'));\n\n      if (answer) {\n        // delete the data point at the given index\n        object.data.splice(index, 1);\n\n        // the authoring component content has changed so we will save the project\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  /**\n   * Move a data point up\n   * @param object the object the data point belongs to\n   * @param index the index of the data point in the object\n   */\n  authoringMoveObjectDataPointUpClicked(object, index) {\n    if (object != null && object.data != null) {\n\n      if (index > 0) {\n        // the data point is not at the top so we can move it up\n\n        // remember the data point we are moving\n        var dataPoint = object.data[index];\n\n        // remove the data point at the given index\n        object.data.splice(index, 1);\n\n        // insert the data point back in at one index back\n        object.data.splice(index - 1, 0, dataPoint);\n      }\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move a data point down\n   * @param object the object the data point belongs to\n   * @param index the index of the data point in the object\n   */\n  authoringMoveObjectDataPointDownClicked(object, index) {\n    if (object != null && object.data != null) {\n\n      if (index < object.data.length - 1) {\n        // the data point is not at the bottom so we can move it down\n\n        // remember the data point we are moving\n        var dataPoint = object.data[index];\n\n        // remove the data point at the given index\n        object.data.splice(index, 1);\n\n        // insert the data point back in at one index forward\n        object.data.splice(index + 1, 0, dataPoint);\n      }\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move an object up\n   * @param index the index of the object\n   */\n  authoringMoveObjectUpClicked(index) {\n\n    if (this.authoringComponentContent != null) {\n\n      var objects = this.authoringComponentContent.objects;\n\n      if (objects != null) {\n\n        if (index > 0) {\n          // the object is not at the top so we can move it up\n\n          // remember the object we are moving\n          var object = objects[index];\n\n          // remove the object\n          objects.splice(index, 1);\n\n          // insert the object back in at one index back\n          objects.splice(index - 1, 0, object);\n        }\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Move an object down\n   * @param index the index of the object\n   */\n  authoringMoveObjectDownClicked(index) {\n\n    if (this.authoringComponentContent != null) {\n\n      var objects = this.authoringComponentContent.objects;\n\n      if (objects != null) {\n\n        if (index < objects.length - 1) {\n          // the object is not at the bottom so we can move it down\n\n          // remember the object we are moving\n          var object = objects[index];\n\n          // remove the object\n          objects.splice(index, 1);\n\n          // insert the object back in at one index forward\n          objects.splice(index + 1, 0, object);\n        }\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Delete an object\n   * @param index the index of the object\n   */\n  authoringDeleteObjectClicked(index) {\n\n    if (this.authoringComponentContent != null) {\n\n      var answer = confirm(this.$translate('animation.areYouSureYouWantToDeleteThisObject'));\n\n      if (answer) {\n        var objects = this.authoringComponentContent.objects;\n\n        if (objects != null) {\n          // remove the object from the array of objects\n          objects.splice(index, 1);\n        }\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The add data source button was clicked\n   * @param object the object we will add the data source to\n   */\n  authoringAddDataSourceClicked(object) {\n\n    if (object != null && object.data != null && object.data.length > 0) {\n      /*\n       * the object has data so we will ask the author if they are sure\n       * they want to add a data source which will remove the data\n       */\n\n      var answer = confirm('You can only have Data Points or a Data Source. If you add a Data Source, the Data Points will be deleted. Are you sure you want to add a Data Source?');\n\n      if (answer) {\n        // the author answered yes to delete the data points\n\n        // delete the data points\n        delete object.data;\n\n        // add the data source\n        object.dataSource = {};\n      }\n    } else {\n      // there are no data points so we can add the data source\n\n      // delete the data points\n      delete object.data;\n\n      // add the data source\n      object.dataSource = {};\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The delete data source button was clicked\n   * @param object the object to delete the data source from\n   */\n  authoringDeleteDataSourceClicked(object) {\n\n    // ask the author if they are sure they want to delete the data source\n    var answer = confirm('Are you sure you want to delete the Data Source?');\n\n    if (answer) {\n      // the author answered yes to delete the data source\n      delete object.dataSource;\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The data source node has changed\n   * @param object the object that has changed\n   */\n  dataSourceNodeChanged(object) {\n\n    if (object != null) {\n\n      // remember the node id\n      var nodeId = object.dataSource.nodeId;\n\n      // clear the dataSource object except for the node id\n      object.dataSource = {\n        nodeId: nodeId\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The data source component has changed\n   * @param object the object that has changed\n   */\n  dataSourceComponentChanged(object) {\n\n    if (object != null) {\n\n      // remember the node id and component id\n      var nodeId = object.dataSource.nodeId;\n      var componentId = object.dataSource.componentId;\n\n      // get the component\n      var component = this.getComponentByNodeIdAndComponentId(nodeId, componentId);\n\n      // clear the dataSource object except for the node id and component id\n      object.dataSource = {\n        nodeId: nodeId,\n        componentId: componentId\n      };\n\n      if (component != null && component.type == 'Graph') {\n        // set the default parameters for a graph data source\n        object.dataSource.trialIndex = 0;\n        object.dataSource.seriesIndex = 0;\n        object.dataSource.tColumnIndex = 0;\n        object.dataSource.xColumnIndex = 1;\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose the image\n   */\n  chooseImage(object) {\n\n    // generate the parameters\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'image';\n    params.targetObject = object;\n\n    // display the asset chooser\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose the image moving left\n   * @param object the object to set the image moving left\n   */\n  chooseImageMovingLeft(object) {\n\n    // generate the parameters\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'imageMovingLeft';\n    params.targetObject = object;\n\n    // display the asset chooser\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose the image moving right\n   * @param object the object to set the image moving right\n   */\n  chooseImageMovingRight(object) {\n\n    // generate the parameters\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'imageMovingRight';\n    params.targetObject = object;\n\n    // display the asset chooser\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * The type for an object changed\n   * @param object the object that changed\n   */\n  authoringObjectTypeChanged(object) {\n\n    if (object != null) {\n      if (object.type == 'image') {\n        // the type changed to an image so we will delete the text field\n        delete object.text;\n      } else if (object.type == 'text') {\n        // the type changed to text so we will delete the image fields\n        delete object.image;\n        delete object.width;\n        delete object.height;\n        delete object.imageMovingLeft;\n        delete object.imageMovingRight;\n        delete object.imageMovingUp;\n        delete object.imageMovingDown;\n      }\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Add a tag\n   */\n  addTag() {\n\n    if (this.authoringComponentContent.tags == null) {\n      // initialize the tags array\n      this.authoringComponentContent.tags = [];\n    }\n\n    // add a tag\n    this.authoringComponentContent.tags.push('');\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Move a tag up\n   * @param index the index of the tag to move up\n   */\n  moveTagUp(index) {\n\n    if (index > 0) {\n      // the index is not at the top so we can move it up\n\n      // remember the tag\n      let tag = this.authoringComponentContent.tags[index];\n\n      // remove the tag\n      this.authoringComponentContent.tags.splice(index, 1);\n\n      // insert the tag one index back\n      this.authoringComponentContent.tags.splice(index - 1, 0, tag);\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Move a tag down\n   * @param index the index of the tag to move down\n   */\n  moveTagDown(index) {\n\n    if (index < this.authoringComponentContent.tags.length - 1) {\n      // the index is not at the bottom so we can move it down\n\n      // remember the tag\n      let tag = this.authoringComponentContent.tags[index];\n\n      // remove the tag\n      this.authoringComponentContent.tags.splice(index, 1);\n\n      // insert the tag one index forward\n      this.authoringComponentContent.tags.splice(index + 1, 0, tag);\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Delete a tag\n   * @param index the index of the tag to delete\n   */\n  deleteTag(index) {\n\n    // ask the author if they are sure they want to delete the tag\n    let answer = confirm(this.$translate('areYouSureYouWantToDeleteThisTag'));\n\n    if (answer) {\n      // the author answered yes to delete the tag\n\n      // remove the tag\n      this.authoringComponentContent.tags.splice(index, 1);\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Add a connected component\n   */\n  authoringAddConnectedComponent() {\n\n    /*\n     * create the new connected component object that will contain a\n     * node id and component id\n     */\n    var newConnectedComponent = {};\n    newConnectedComponent.nodeId = this.nodeId;\n    newConnectedComponent.componentId = null;\n    newConnectedComponent.type = null;\n    this.authoringAutomaticallySetConnectedComponentComponentIdIfPossible(newConnectedComponent);\n\n    // initialize the array of connected components if it does not exist yet\n    if (this.authoringComponentContent.connectedComponents == null) {\n      this.authoringComponentContent.connectedComponents = [];\n    }\n\n    // add the connected component\n    this.authoringComponentContent.connectedComponents.push(newConnectedComponent);\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Automatically set the component id for the connected component if there\n   * is only one viable option.\n   * @param connectedComponent the connected component object we are authoring\n   */\n  authoringAutomaticallySetConnectedComponentComponentIdIfPossible(connectedComponent) {\n    if (connectedComponent != null) {\n      let components = this.getComponentsByNodeId(connectedComponent.nodeId);\n      if (components != null) {\n        let numberOfAllowedComponents = 0;\n        let allowedComponent = null;\n        for (let component of components) {\n          if (component != null) {\n            if (this.isConnectedComponentTypeAllowed(component.type) &&\n              component.id != this.componentId) {\n              // we have found a viable component we can connect to\n              numberOfAllowedComponents += 1;\n              allowedComponent = component;\n            }\n          }\n        }\n\n        if (numberOfAllowedComponents == 1) {\n          /*\n           * there is only one viable component to connect to so we\n           * will use it\n           */\n          connectedComponent.componentId = allowedComponent.id;\n          connectedComponent.type = 'importWork';\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete a connected component\n   * @param index the index of the component to delete\n   */\n  authoringDeleteConnectedComponent(index) {\n\n    // ask the author if they are sure they want to delete the connected component\n    let answer = confirm(this.$translate('areYouSureYouWantToDeleteThisConnectedComponent'));\n\n    if (answer) {\n      // the author answered yes to delete\n\n      if (this.authoringComponentContent.connectedComponents != null) {\n        this.authoringComponentContent.connectedComponents.splice(index, 1);\n      }\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Get the connected component type\n   * @param connectedComponent get the component type of this connected component\n   * @return the connected component type\n   */\n  authoringGetConnectedComponentType(connectedComponent) {\n\n    var connectedComponentType = null;\n\n    if (connectedComponent != null) {\n\n      // get the node id and component id of the connected component\n      var nodeId = connectedComponent.nodeId;\n      var componentId = connectedComponent.componentId;\n\n      // get the component\n      var component = this.ProjectService.getComponentByNodeIdAndComponentId(nodeId, componentId);\n\n      if (component != null) {\n        // get the component type\n        connectedComponentType = component.type;\n      }\n    }\n\n    return connectedComponentType;\n  }\n\n  /**\n   * The connected component node id has changed\n   * @param connectedComponent the connected component that has changed\n   */\n  authoringConnectedComponentNodeIdChanged(connectedComponent) {\n    if (connectedComponent != null) {\n      connectedComponent.componentId = null;\n      connectedComponent.type = null;\n      this.authoringAutomaticallySetConnectedComponentComponentIdIfPossible(connectedComponent);\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * The connected component component id has changed\n   * @param connectedComponent the connected component that has changed\n   */\n  authoringConnectedComponentComponentIdChanged(connectedComponent) {\n\n    if (connectedComponent != null) {\n\n      // default the type to import work\n      connectedComponent.type = 'importWork';\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * The connected component type has changed\n   * @param connectedComponent the connected component that changed\n   */\n  authoringConnectedComponentTypeChanged(connectedComponent) {\n\n    if (connectedComponent != null) {\n\n      if (connectedComponent.type == 'importWork') {\n        /*\n         * the type has changed to import work\n         */\n      } else if (connectedComponent.type == 'showWork') {\n        /*\n         * the type has changed to show work\n         */\n      }\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Check if we are allowed to connect to this component type\n   * @param componentType the component type\n   * @return whether we can connect to the component type\n   */\n  isConnectedComponentTypeAllowed(componentType) {\n\n    if (componentType != null) {\n\n      let allowedConnectedComponentTypes = this.allowedConnectedComponentTypes;\n\n      // loop through the allowed connected component types\n      for (let a = 0; a < allowedConnectedComponentTypes.length; a++) {\n        let allowedConnectedComponentType = allowedConnectedComponentTypes[a];\n\n        if (allowedConnectedComponentType != null) {\n          if (componentType == allowedConnectedComponentType.type) {\n            // the component type is allowed\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * The show JSON button was clicked to show or hide the JSON authoring\n   */\n  showJSONButtonClicked() {\n    // toggle the JSON authoring textarea\n    this.showJSONAuthoring = !this.showJSONAuthoring;\n\n    if (this.jsonStringChanged && !this.showJSONAuthoring) {\n      /*\n       * the author has changed the JSON and has just closed the JSON\n       * authoring view so we will save the component\n       */\n      this.advancedAuthoringViewComponentChanged();\n\n      // scroll to the top of the component\n      this.$rootScope.$broadcast('scrollToComponent', { componentId: this.componentId });\n\n      this.jsonStringChanged = false;\n    }\n  }\n\n  /**\n   * The author has changed the JSON manually in the advanced view\n   */\n  authoringJSONChanged() {\n    this.jsonStringChanged = true;\n  }\n}\n\nAnimationAuthoringController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$timeout',\n  'AnimationService',\n  'AnnotationService',\n  'ConfigService',\n  'CRaterService',\n  'NodeService',\n  'NotebookService',\n  'NotificationService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default AnimationAuthoringController;\n"]}