{"version":3,"sources":["audioOscillatorAuthoringController.es6"],"names":["AudioOscillatorAuthoringController","$filter","$mdDialog","$q","$rootScope","$scope","$timeout","AnnotationService","AudioOscillatorService","ConfigService","NodeService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","allowedConnectedComponentTypes","type","authoringProcessCheckedOscillatorTypes","$watch","authoringComponentContent","bind","newValue","oldValue","stop","componentContent","injectAssetPaths","submitCounter","isSaveButtonVisible","showSaveButton","isSubmitButtonVisible","showSubmitButton","setParametersFromComponentContent","drawOscilloscopeGrid","$on","event","args","nodeId","componentId","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","summernoteId","target","isImage","$","summernote","isVideo","videoElement","document","createElement","controls","innerHTML","hide","showOscillatorTypeChooser","oscillatorTypeToAdd","oscillatorTypes","indexOf","alert","$translate","push","authoringViewComponentChanged","index","splice","authoringSineChecked","authoringSquareChecked","authoringTriangleChecked","authoringSawtoothChecked","$inject"],"mappings":"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","file":"audioOscillatorAuthoringController.js","sourcesContent":["'use strict';\n\nimport AudioOscillatorController from \"./audioOscillatorController\";\n\nclass AudioOscillatorAuthoringController extends AudioOscillatorController {\n  constructor($filter,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              $timeout,\n              AnnotationService,\n              AudioOscillatorService,\n              ConfigService,\n              NodeService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    super($filter,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $timeout,\n      AnnotationService,\n      AudioOscillatorService,\n      ConfigService,\n      NodeService,\n      NotebookService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService);\n\n    // the component types we are allowed to connect to\n    this.allowedConnectedComponentTypes = [\n      {\n        type: 'AudioOscillator'\n      }\n    ];\n\n    // update which oscillator types should be checked\n    this.authoringProcessCheckedOscillatorTypes();\n\n    $scope.$watch(function() {\n      return this.authoringComponentContent;\n    }.bind(this), function(newValue, oldValue) {\n\n      // stop the audio if it is playing\n      this.stop();\n\n      // inject asset paths if necessary\n      this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n\n      this.submitCounter = 0;\n      this.isSaveButtonVisible = this.componentContent.showSaveButton;\n      this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n\n      // load the parameters into the component\n      this.setParametersFromComponentContent();\n\n      // draw the oscilloscope gride after the view has rendered\n      $timeout(() => {this.drawOscilloscopeGrid()}, 0);\n    }.bind(this), true);\n\n    /*\n     * Listen for the assetSelected event which occurs when the user\n     * selects an asset from the choose asset popup\n     */\n    this.$scope.$on('assetSelected', (event, args) => {\n\n      if (args != null) {\n\n        // make sure the event was fired for this component\n        if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n          // the asset was selected for this component\n          var assetItem = args.assetItem;\n\n          if (assetItem != null) {\n            var fileName = assetItem.fileName;\n\n            if (fileName != null) {\n              /*\n               * get the assets directory path\n               * e.g.\n               * /wise/curriculum/3/\n               */\n              var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n              var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n              var summernoteId = '';\n\n              if (args.target == 'prompt') {\n                // the target is the summernote prompt element\n                summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n              } else if (args.target == 'rubric') {\n                // the target is the summernote rubric element\n                summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n              }\n\n              if (summernoteId != '') {\n                if (this.UtilService.isImage(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // add the image html\n                  $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                } else if (this.UtilService.isVideo(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // insert the video element\n                  var videoElement = document.createElement('video');\n                  videoElement.controls = 'true';\n                  videoElement.innerHTML = '<source ng-src=\"' + fullAssetPath + '\" type=\"video/mp4\">';\n                  $('#' + summernoteId).summernote('insertNode', videoElement);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      // close the popup\n      this.$mdDialog.hide();\n    });\n  }\n\n  /**\n   * Show the controls for adding an oscillator type\n   */\n  authoringOpenAddOscillatorType() {\n    this.showOscillatorTypeChooser = true;\n  }\n\n  /**\n   * The author has clicked the add button to add an oscillator type\n   */\n  authoringAddOscillatorTypeClicked() {\n    var oscillatorTypeToAdd = this.oscillatorTypeToAdd;\n\n    if (this.authoringComponentContent.oscillatorTypes.indexOf(oscillatorTypeToAdd) != -1) {\n      // the oscillator type is already in the array of oscillator types\n\n      alert(this.$translate('audioOscillator.errorYouHaveAlreadyAddedOscillatorType', { oscillatorTypeToAdd: oscillatorTypeToAdd }));\n    } else {\n      // the oscillator type is not already in the array of oscillator types\n      this.authoringComponentContent.oscillatorTypes.push(oscillatorTypeToAdd);\n\n      // hide the oscillator type chooser\n      this.showOscillatorTypeChooser = false;\n\n      // perform preview updating and project saving\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * The author has clicked the cancel button for adding an oscillator type\n   */\n  authoringCancelOscillatorTypeClicked() {\n    // hide the oscillator type chooser\n    this.showOscillatorTypeChooser = false;\n  }\n\n  /**\n   * The author has clicked the delete button for removing an oscillator type\n   * @param index the index of the oscillator type to remove\n   */\n  authoringDeleteOscillatorTypeClicked(index) {\n\n    // remove the oscillator type at the given index\n    this.authoringComponentContent.oscillatorTypes.splice(index, 1);\n\n    // perform preview updating and project saving\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * One of the oscillator types was clicked in the authoring view\n   */\n  authoringViewOscillatorTypeClicked() {\n\n    /*\n     * clear the oscillator types so we can repopulate it with the\n     * ones that are checked\n     */\n    this.authoringComponentContent.oscillatorTypes = [];\n\n    if (this.authoringSineChecked) {\n      // sine is checked\n      this.authoringComponentContent.oscillatorTypes.push('sine');\n    }\n\n    if (this.authoringSquareChecked) {\n      // square is checked\n      this.authoringComponentContent.oscillatorTypes.push('square');\n    }\n\n    if (this.authoringTriangleChecked) {\n      // triangle is checked\n      this.authoringComponentContent.oscillatorTypes.push('triangle');\n    }\n\n    if (this.authoringSawtoothChecked) {\n      // sawtooth is checked\n      this.authoringComponentContent.oscillatorTypes.push('sawtooth');\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Determine which oscillator types should be checked\n   */\n  authoringProcessCheckedOscillatorTypes() {\n\n    if (this.authoringComponentContent.oscillatorTypes.indexOf('sine') != -1) {\n      this.authoringSineChecked = true;\n    }\n\n    if (this.authoringComponentContent.oscillatorTypes.indexOf('square') != -1) {\n      this.authoringSquareChecked = true;\n    }\n\n    if (this.authoringComponentContent.oscillatorTypes.indexOf('triangle') != -1) {\n      this.authoringTriangleChecked = true;\n    }\n\n    if (this.authoringComponentContent.oscillatorTypes.indexOf('sawtooth') != -1) {\n      this.authoringSawtoothChecked = true;\n    }\n  }\n};\n\nAudioOscillatorAuthoringController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$timeout',\n  'AnnotationService',\n  'AudioOscillatorService',\n  'ConfigService',\n  'NodeService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default AudioOscillatorAuthoringController;\n"]}