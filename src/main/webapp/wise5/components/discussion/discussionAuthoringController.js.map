{"version":3,"sources":["discussionAuthoringController.es6"],"names":["DiscussionAuthoringController","$filter","$mdDialog","$q","$rootScope","$scope","AnnotationService","ConfigService","DiscussionService","NodeService","NotebookService","NotificationService","ProjectService","StudentAssetService","StudentDataService","StudentWebSocketService","UtilService","$mdMedia","allowedConnectedComponentTypes","type","$watch","authoringComponentContent","bind","newValue","oldValue","componentContent","injectAssetPaths","$on","event","args","nodeId","componentId","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","summernoteId","target","isImage","$","summernote","isVideo","videoElement","document","createElement","controls","innerHTML","hide","editedComponentContent","angular","fromJson","authoringComponentContentJSONString","replaceComponent","$parent","nodeAuthoringController","authoringViewNodeChanged","$broadcast","jsonStringChanged","e","showSaveErrorAdvancedAuthoring","showJSONAuthoring","isJSONValid","saveJSONAuthoringViewChanges","toggleJSONAuthoringView","hideJSONValidMessage","answer","confirm","$translate","showJSONValidMessage","showJSONInvalidMessage","$inject"],"mappings":"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","file":"discussionAuthoringController.js","sourcesContent":["'use strict';\n\nimport DiscussionController from \"./discussionController\";\n\nclass DiscussionAuthoringController extends DiscussionController {\n  constructor($filter,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              AnnotationService,\n              ConfigService,\n              DiscussionService,\n              NodeService,\n              NotebookService,\n              NotificationService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              StudentWebSocketService,\n              UtilService,\n              $mdMedia) {\n    super($filter,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      AnnotationService,\n      ConfigService,\n      DiscussionService,\n      NodeService,\n      NotebookService,\n      NotificationService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      StudentWebSocketService,\n      UtilService,\n      $mdMedia);\n\n    // the component types we are allowed to connect to\n    this.allowedConnectedComponentTypes = [\n      {\n        type: 'Discussion'\n      }\n    ];\n\n    $scope.$watch(function() {\n      return this.authoringComponentContent;\n    }.bind(this), function(newValue, oldValue) {\n      this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n    }.bind(this), true);\n\n    /*\n     * Listen for the assetSelected event which occurs when the user\n     * selects an asset from the choose asset popup\n     */\n    this.$scope.$on('assetSelected', (event, args) => {\n\n      if (args != null) {\n\n        // make sure the event was fired for this component\n        if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n          // the asset was selected for this component\n          var assetItem = args.assetItem;\n\n          if (assetItem != null) {\n            var fileName = assetItem.fileName;\n\n            if (fileName != null) {\n              /*\n               * get the assets directory path\n               * e.g.\n               * /wise/curriculum/3/\n               */\n              var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n              var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n              var summernoteId = '';\n\n              if (args.target == 'prompt') {\n                // the target is the summernote prompt element\n                summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n              } else if (args.target == 'rubric') {\n                // the target is the summernote rubric element\n                summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n              }\n\n              if (summernoteId != '') {\n                if (this.UtilService.isImage(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // add the image html\n                  $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                } else if (this.UtilService.isVideo(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // insert the video element\n                  var videoElement = document.createElement('video');\n                  videoElement.controls = 'true';\n                  videoElement.innerHTML = '<source ng-src=\"' + fullAssetPath + '\" type=\"video/mp4\">';\n                  $('#' + summernoteId).summernote('insertNode', videoElement);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      // close the popup\n      this.$mdDialog.hide();\n    });\n  }\n\n  /**\n   * The component has changed in the advanced authoring view so we will update\n   * the component and save the project.\n   */\n  saveJSONAuthoringViewChanges() {\n    try {\n      /*\n       * create a new component by converting the JSON string in the advanced\n       * authoring view into a JSON object\n       */\n      var editedComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n      // replace the component in the project\n      this.ProjectService.replaceComponent(this.nodeId, this.componentId, editedComponentContent);\n\n      // set the new component into the controller\n      this.componentContent = editedComponentContent;\n\n      /*\n       * notify the parent node that the content has changed which will save\n       * the project to the server\n       */\n      this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n\n      // scroll to the top of the component\n      this.$rootScope.$broadcast('scrollToComponent', { componentId: this.componentId });\n      this.jsonStringChanged = false;\n    } catch(e) {\n      this.$scope.$parent.nodeAuthoringController.showSaveErrorAdvancedAuthoring();\n    }\n  };\n\n  /**\n   * The show JSON button was clicked to show or hide the JSON authoring\n   */\n  showJSONButtonClicked() {\n    if (this.showJSONAuthoring) {\n      // we were showing the JSON authoring view and now we want to hide it\n      if (this.isJSONValid()) {\n        this.saveJSONAuthoringViewChanges();\n        this.toggleJSONAuthoringView();\n        this.UtilService.hideJSONValidMessage();\n      } else {\n        let answer = confirm(this.$translate('jsonInvalidErrorMessage'));\n        if (answer) {\n          // the author wants to revert back to the last valid JSON\n          this.toggleJSONAuthoringView();\n          this.UtilService.hideJSONValidMessage();\n          this.jsonStringChanged = true;\n        }\n      }\n    } else {\n      // we were not showing the JSON authoring view and now we want to show it\n      this.toggleJSONAuthoringView();\n    }\n  }\n\n  toggleJSONAuthoringView() {\n    this.showJSONAuthoring = !this.showJSONAuthoring;\n  }\n\n  /**\n   * The author has changed the JSON manually in the advanced view\n   */\n  authoringJSONChanged() {\n    this.jsonStringChanged = true;\n    if (this.isJSONValid()) {\n      this.UtilService.showJSONValidMessage();\n    } else {\n      this.UtilService.showJSONInvalidMessage();\n    }\n  }\n\n  isJSONValid() {\n    try {\n      angular.fromJson(this.authoringComponentContentJSONString);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\nDiscussionAuthoringController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  'AnnotationService',\n  'ConfigService',\n  'DiscussionService',\n  'NodeService',\n  'NotebookService',\n  'NotificationService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'StudentWebSocketService',\n  'UtilService',\n  '$mdMedia'\n];\n\nexport default DiscussionAuthoringController;\n"]}