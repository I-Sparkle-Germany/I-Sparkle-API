{"version":3,"sources":["discussionAuthoringController.es6"],"names":["DiscussionAuthoringController","$filter","$mdDialog","$q","$rootScope","$scope","AnnotationService","ConfigService","DiscussionService","NodeService","NotebookService","NotificationService","ProjectService","StudentAssetService","StudentDataService","StudentWebSocketService","UtilService","$mdMedia","allowedConnectedComponentTypes","type","connectedComponent","component","getComponentByNodeIdAndComponentId","nodeId","componentId","changeAllDiscussionConnectedComponentTypesToMatch","authoringViewComponentChanged","connectedComponentType","authoringComponentContent","connectedComponents","firstConnectedComponent","DiscussionController","$inject"],"mappings":"AAAA;;;;;;;;AAEA;;;;;;;;;;;;IAEMA,6B;;;AACJ,yCAAYC,OAAZ,EACYC,SADZ,EAEYC,EAFZ,EAGYC,UAHZ,EAIYC,MAJZ,EAKYC,iBALZ,EAMYC,aANZ,EAOYC,iBAPZ,EAQYC,WARZ,EASYC,eATZ,EAUYC,mBAVZ,EAWYC,cAXZ,EAYYC,mBAZZ,EAaYC,kBAbZ,EAcYC,uBAdZ,EAeYC,WAfZ,EAgBYC,QAhBZ,EAgBsB;AAAA;;AAAA,8JACdhB,OADc,EAElBC,SAFkB,EAGlBC,EAHkB,EAIlBC,UAJkB,EAKlBC,MALkB,EAMlBC,iBANkB,EAOlBC,aAPkB,EAQlBC,iBARkB,EASlBC,WATkB,EAUlBC,eAVkB,EAWlBC,mBAXkB,EAYlBC,cAZkB,EAalBC,mBAbkB,EAclBC,kBAdkB,EAelBC,uBAfkB,EAgBlBC,WAhBkB,EAiBlBC,QAjBkB;;AAkBpB,UAAKC,8BAAL,GAAsC,CACpC,EAAEC,MAAM,YAAR,EADoC,CAAtC;AAlBoB;AAqBrB;;;;2DAEsCC,kB,EAAoB;AACzD,UAAMC,YAAY,KAAKT,cAAL,CAAoBU,kCAApB,CACdF,mBAAmBG,MADL,EACaH,mBAAmBI,WADhC,CAAlB;AAEA,WAAKC,iDAAL,CAAuDL,mBAAmBD,IAA1E;AACA,WAAKO,6BAAL;AACD;;;sEAEiDC,sB,EAAwB;AAAA;AAAA;AAAA;;AAAA;AACxE,6BAAiC,KAAKC,yBAAL,CAA+BC,mBAAhE,8HAAqF;AAAA,cAA1ET,kBAA0E;;AACnF,cAAMC,YAAY,KAAKT,cAAL,CAAoBU,kCAApB,CACdF,mBAAmBG,MADL,EACaH,mBAAmBI,WADhC,CAAlB;AAEAJ,6BAAmBD,IAAnB,GAA0BQ,sBAA1B;AACD;AALuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMzE;;;8EAEyDP,kB,EAAoB;AAC5E,UAAIA,mBAAmBI,WAAnB,IAAkC,IAAtC,EAA4C;AAC1C,YAAMM,0BAA0B,KAAKF,yBAAL,CAA+BC,mBAA/B,CAAmD,CAAnD,CAAhC;AACAT,2BAAmBD,IAAnB,GAA0BW,wBAAwBX,IAAlD;AACD;AACF;;;;EA5DyCY,8B;;AA+D5C/B,8BAA8BgC,OAA9B,GAAwC,CACtC,SADsC,EAEtC,WAFsC,EAGtC,IAHsC,EAItC,YAJsC,EAKtC,QALsC,EAMtC,mBANsC,EAOtC,eAPsC,EAQtC,mBARsC,EAStC,aATsC,EAUtC,iBAVsC,EAWtC,qBAXsC,EAYtC,gBAZsC,EAatC,qBAbsC,EActC,oBAdsC,EAetC,yBAfsC,EAgBtC,aAhBsC,EAiBtC,UAjBsC,CAAxC;;kBAoBehC,6B","file":"discussionAuthoringController.js","sourcesContent":["'use strict';\n\nimport DiscussionController from \"./discussionController\";\n\nclass DiscussionAuthoringController extends DiscussionController {\n  constructor($filter,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              AnnotationService,\n              ConfigService,\n              DiscussionService,\n              NodeService,\n              NotebookService,\n              NotificationService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              StudentWebSocketService,\n              UtilService,\n              $mdMedia) {\n    super($filter,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      AnnotationService,\n      ConfigService,\n      DiscussionService,\n      NodeService,\n      NotebookService,\n      NotificationService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      StudentWebSocketService,\n      UtilService,\n      $mdMedia);\n    this.allowedConnectedComponentTypes = [\n      { type: 'Discussion' }\n    ];\n  }\n\n  authoringConnectedComponentTypeChanged(connectedComponent) {\n    const component = this.ProjectService.getComponentByNodeIdAndComponentId(\n        connectedComponent.nodeId, connectedComponent.componentId);\n    this.changeAllDiscussionConnectedComponentTypesToMatch(connectedComponent.type);\n    this.authoringViewComponentChanged();\n  }\n\n  changeAllDiscussionConnectedComponentTypesToMatch(connectedComponentType) {\n    for (const connectedComponent of this.authoringComponentContent.connectedComponents) {\n      const component = this.ProjectService.getComponentByNodeIdAndComponentId(\n          connectedComponent.nodeId, connectedComponent.componentId);\n      connectedComponent.type = connectedComponentType;\n    }\n  }\n\n  authoringAutomaticallySetConnectedComponentTypeIfPossible(connectedComponent) {\n    if (connectedComponent.componentId != null) {\n      const firstConnectedComponent = this.authoringComponentContent.connectedComponents[0];\n      connectedComponent.type = firstConnectedComponent.type;\n    }\n  }\n}\n\nDiscussionAuthoringController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  'AnnotationService',\n  'ConfigService',\n  'DiscussionService',\n  'NodeService',\n  'NotebookService',\n  'NotificationService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'StudentWebSocketService',\n  'UtilService',\n  '$mdMedia'\n];\n\nexport default DiscussionAuthoringController;\n"]}