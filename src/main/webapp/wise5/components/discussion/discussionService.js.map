{"version":3,"sources":["discussionService.es6"],"names":[],"mappings":"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","file":"discussionService.js","sourcesContent":["import NodeService from '../../services/nodeService';\n\nclass DiscussionService extends NodeService {\n    constructor($http,\n                $q,\n                ConfigService,\n                TeacherDataService,\n                UtilService) {\n        super();\n\n        this.$http = $http;\n        this.$q = $q;\n        this.ConfigService = ConfigService;\n        this.TeacherDataService = TeacherDataService;\n        this.UtilService = UtilService;\n    }\n\n    /**\n     * Create a Discussion component object\n     * @returns a new Discussion component object\n     */\n    createComponent() {\n\n        var component = {};\n        component.id = this.UtilService.generateKey();\n        component.type = 'Discussion';\n        component.prompt = 'Enter prompt here';\n        component.showSaveButton = false;\n        component.showSubmitButton = true;\n        component.isStudentAttachmentEnabled = true;\n        component.gateClassmateResponses = true;\n\n        return component;\n    }\n\n    populateComponentState(componentStateFromOtherComponent, otherComponentType) {\n        var componentState = null;\n\n        if (componentStateFromOtherComponent != null && otherComponentType != null) {\n            componentState = StudentDataService.createComponentState();\n\n            if (otherComponentType === 'OpenResponse') {\n                componentState.studentData = componentStateFromOtherComponent.studentData;\n            }\n        }\n\n        return componentState;\n    };\n\n    getClassmateResponses(runId, periodId, nodeId, componentId) {\n\n        if (runId != null && periodId != null && nodeId != null && componentId != null) {\n            return this.$q(angular.bind(this, function(resolve, reject) {\n\n                var httpParams = {};\n                httpParams.method = 'GET';\n                httpParams.url = this.ConfigService.getConfigParam('studentDataURL');\n\n                var params = {};\n                params.runId = runId;\n                params.periodId = periodId;\n                params.nodeId = nodeId;\n                params.componentId = componentId;\n                params.getStudentWork = true;\n                httpParams.params = params;\n\n                this.$http(httpParams).then(angular.bind(this, function(result) {\n                    var classmateData = result.data;\n\n                    //console.log(classmateData);\n\n                    resolve(classmateData);\n                }));\n            }));\n        }\n    };\n\n    /**\n     * Check if the component was completed\n     * @param component the component object\n     * @param componentStates the component states for the specific component\n     * @param componentEvents the events for the specific component\n     * @param nodeEvents the events for the parent node of the component\n     * @returns whether the component was completed\n     */\n    isCompleted(component, componentStates, componentEvents, nodeEvents) {\n        var result = false;\n\n        if (componentStates != null) {\n\n            // loop through all the component states\n            for (var c = 0; c < componentStates.length; c++) {\n\n                // the component state\n                var componentState = componentStates[c];\n\n                // get the student data from the component state\n                var studentData = componentState.studentData;\n\n                if (studentData != null) {\n                    var response = studentData.response;\n\n                    if (response != null) {\n                        // there is a response so the component is completed\n                        result = true;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Get all the posts associated with a workgroup id. This will\n     * get all the posts and replies that the workgroup posted\n     * or replied to as well as all the other replies classmates made.\n     * @param componentId the component id\n     * @param workgroupId the workgroup id\n     * @returns an array containing all the component states for\n     * top level posts and replies that are associated with the\n     * workgroup\n     */\n    getPostsAssociatedWithWorkgroupId(componentId, workgroupId) {\n        var allPosts = [];\n\n        var topLevelComponentIdsFound = [];\n\n        // get all the component states for the workgroup id\n        var componentStates = this.TeacherDataService.getComponentStatesByWorkgroupIdAndComponentId(workgroupId, componentId);\n\n        if (componentStates != null) {\n\n            // loop through all the component states\n            for (var c = 0; c < componentStates.length; c++) {\n\n                var componentState = componentStates[c];\n\n                if (componentState != null) {\n                    var studentData = componentState.studentData;\n\n                    if (studentData != null) {\n                        if (studentData.componentStateIdReplyingTo == null) {\n\n                            // check if we have already added the top level post\n                            if (topLevelComponentIdsFound.indexOf(componentState.id) == -1) {\n                                // we haven't found the top level post yet so\n\n                                /*\n                                 * the component state is a top level post so we will\n                                 * get the post and all the replies to the post\n                                 */\n                                allPosts = allPosts.concat(this.getPostAndAllReplies(componentId, componentState.id));\n\n                                topLevelComponentIdsFound.push(componentState.id);\n                            }\n                        } else {\n\n                            // check if we have already added the top level post\n                            if (topLevelComponentIdsFound.indexOf(studentData.componentStateIdReplyingTo) == -1) {\n                                // we haven't found the top level post yet so\n\n                                /*\n                                 * the component state is a reply so we will get the\n                                 * top level post and all the replies to it\n                                 */\n                                allPosts = allPosts.concat(this.getPostAndAllReplies(componentId, studentData.componentStateIdReplyingTo));\n\n                                topLevelComponentIdsFound.push(studentData.componentStateIdReplyingTo);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return allPosts;\n    }\n\n    /**\n     * Get the top level post and all the replies to it\n     * @param componentId the component id\n     * @param componentStateId the component state id\n     * @returns an array containing the top level post and all the replies\n     */\n    getPostAndAllReplies(componentId, componentStateId) {\n        var postAndAllReplies = [];\n\n        // get all the component states for the node\n        var componentStatesForNodeId = this.TeacherDataService.getComponentStatesByComponentId(componentId);\n\n        for (var c = 0; c < componentStatesForNodeId.length; c++) {\n            var tempComponentState = componentStatesForNodeId[c];\n\n            if (tempComponentState != null) {\n                if (componentStateId === tempComponentState.id) {\n                    // we have found the top level post\n                    postAndAllReplies.push(tempComponentState);\n                } else {\n                    // check if the component state is a reply to the post we are looking for\n                    var studentData = tempComponentState.studentData;\n\n                    if (studentData != null) {\n                        var componentStateIdReplyingTo = studentData.componentStateIdReplyingTo;\n\n                        if (componentStateIdReplyingTo != null) {\n                            if (componentStateId === componentStateIdReplyingTo) {\n                                // this is a reply to the post we are looking for\n                                postAndAllReplies.push(tempComponentState);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return postAndAllReplies;\n    };\n}\n\nDiscussionService.$inject = [\n    '$http',\n    '$q',\n    'ConfigService',\n    'TeacherDataService',\n    'UtilService'\n];\n\nexport default DiscussionService;\n"]}