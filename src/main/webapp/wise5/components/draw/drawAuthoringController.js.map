{"version":3,"sources":["drawAuthoringController.es6"],"names":["DrawAuthoringController","$filter","$injector","$mdDialog","$q","$rootScope","$scope","$timeout","AnnotationService","ConfigService","DrawService","NodeService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","allowedConnectedComponentTypes","type","isResetButtonVisible","drawingToolId","nodeId","componentId","$watch","authoringComponentContent","bind","newValue","oldValue","componentContent","injectAssetPaths","submitCounter","initializeDrawingTool","isSaveButtonVisible","showSaveButton","isSubmitButtonVisible","showSubmitButton","$on","event","args","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","summernoteId","target","background","authoringViewBackgroundChanged","stampIndex","targetObject","setStampImage","isImage","$","summernote","isVideo","videoElement","document","createElement","controls","innerHTML","hide","stamps","Stamps","push","authoringViewComponentChanged","index","stamp","splice","length","answer","confirm","$translate","tools","select","line","shape","freeHand","text","strokeColor","fillColor","clone","strokeWidth","sendBack","sendForward","undo","redo","delete","drawData","getDrawData","starterDrawData","drawingTool","clear","width","starterDrawDataJSONObject","angular","fromJson","dt","toJson","height","params","isPopup","$broadcast","starterDrawDataJSON","canvas","backgroundImage","src","projectAssetsDirectoryPath","newSrc","setBackgroundImage","connectedComponent","components","getComponentsByNodeId","numberOfAllowedComponents","allowedComponent","component","isConnectedComponentTypeAllowed","id","authoringSetImportWorkAsBackgroundIfApplicable","componentType","authoringGetConnectedComponentType","importWorkAsBackground","$inject"],"mappings":"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","file":"drawAuthoringController.js","sourcesContent":["'use strict';\n\nimport DrawController from \"./drawController\";\nimport drawingTool from 'lib/drawingTool/drawing-tool';\nimport drawingToolVendor from 'lib/drawingTool/vendor.min';\nimport html2canvas from 'html2canvas';\n\nclass DrawAuthoringController extends DrawController {\n  constructor($filter,\n              $injector,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              $timeout,\n              AnnotationService,\n              ConfigService,\n              DrawService,\n              NodeService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    super($filter,\n      $injector,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $timeout,\n      AnnotationService,\n      ConfigService,\n      DrawService,\n      NodeService,\n      NotebookService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService);\n\n    // the component types we are allowed to connect to\n    this.allowedConnectedComponentTypes = [\n      { type: 'ConceptMap' },\n      { type: 'Draw' },\n      { type: 'Embedded' },\n      { type: 'Graph' },\n      { type: 'Label' },\n      { type: 'Table' }\n    ];\n\n    this.isResetButtonVisible = true;\n\n    this.drawingToolId = 'drawingtool_' + this.nodeId + '_' + this.componentId;\n\n    $scope.$watch(function() {\n      return this.authoringComponentContent;\n    }.bind(this), function(newValue, oldValue) {\n      this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n      this.submitCounter = 0;\n      this.initializeDrawingTool();\n      this.isSaveButtonVisible = this.componentContent.showSaveButton;\n      this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n    }.bind(this), true);\n\n    /*\n     * Listen for the assetSelected event which occurs when the user\n     * selects an asset from the choose asset popup\n     */\n    this.$scope.$on('assetSelected', (event, args) => {\n\n      if (args != null) {\n\n        // make sure the event was fired for this component\n        if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n          // the asset was selected for this component\n          var assetItem = args.assetItem;\n\n          if (assetItem != null) {\n            var fileName = assetItem.fileName;\n\n            if (fileName != null) {\n              /*\n               * get the assets directory path\n               * e.g.\n               * /wise/curriculum/3/\n               */\n              var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n              var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n              var summernoteId = '';\n\n              if (args.target == 'prompt') {\n                // the target is the summernote prompt element\n                summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n              } else if (args.target == 'rubric') {\n                // the target is the summernote rubric element\n                summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n              } else if (args.target == 'background') {\n                // the target is the background image\n\n                // set the background file name\n                this.authoringComponentContent.background = fileName;\n\n                /*\n                 * the authoring view background has changed so we will\n                 * perform any changes if needed and then save the project\n                 */\n                this.authoringViewBackgroundChanged();\n              } else if (args.target == 'stamp') {\n                // the target is a stamp\n\n                // get the index of the stamp\n                var stampIndex = args.targetObject;\n\n                // get the file name\n                var fileName = assetItem.fileName;\n\n                // set the stamp image\n                this.setStampImage(stampIndex, fileName);\n\n                /*\n                 * the authoring view background has changed so we will\n                 * perform any changes if needed and then save the project\n                 */\n                this.authoringViewBackgroundChanged();\n              }\n\n              if (summernoteId != '') {\n                if (this.UtilService.isImage(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // add the image html\n                  $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                } else if (this.UtilService.isVideo(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // insert the video element\n                  var videoElement = document.createElement('video');\n                  videoElement.controls = 'true';\n                  videoElement.innerHTML = '<source ng-src=\"' + fullAssetPath + '\" type=\"video/mp4\">';\n                  $('#' + summernoteId).summernote('insertNode', videoElement);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      // close the popup\n      this.$mdDialog.hide();\n    });\n  }\n\n  /**\n   * Add a stamp in the authoring\n   */\n  authoringAddStampButtonClicked() {\n\n    // create the stamps field in the content if it does not exist\n    if (this.authoringComponentContent != null) {\n\n      // create a stamps object if it does not exist\n      if (this.authoringComponentContent.stamps == null) {\n        this.authoringComponentContent.stamps = {};\n      }\n\n      // create the Stamps array if it does not exist\n      if (this.authoringComponentContent.stamps.Stamps == null) {\n        this.authoringComponentContent.stamps.Stamps = [];\n      }\n    }\n\n    /*\n     * create the stamp as an empty string that the author will replace\n     * with a file name or url\n     */\n    this.authoringComponentContent.stamps.Stamps.push('');\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Move a stamp up in the authoring view\n   * @param index the index of the stamp\n   */\n  authoringStampUpClicked(index) {\n\n    // check if the stamp is not already at the top\n    if (index != 0) {\n      // the stamp is not at the top\n\n      // get the stamp string\n      var stamp = this.authoringComponentContent.stamps.Stamps[index];\n\n      // remove the stamp\n      this.authoringComponentContent.stamps.Stamps.splice(index, 1);\n\n      // insert the stamp back into the array\n      this.authoringComponentContent.stamps.Stamps.splice(index - 1, 0, stamp);\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move the stamp down in the authoring view\n   * @param index the index of the stamp\n   */\n  authoringStampDownClicked(index) {\n\n    // check if the stamp is already at the bottom\n    if (index != this.authoringComponentContent.stamps.Stamps.length - 1) {\n      // the stamp is not at the bottom\n\n      // get the stamp string\n      var stamp = this.authoringComponentContent.stamps.Stamps[index];\n\n      // remove the stamp\n      this.authoringComponentContent.stamps.Stamps.splice(index, 1);\n\n      // insert the stamp back into the array\n      this.authoringComponentContent.stamps.Stamps.splice(index + 1, 0, stamp);\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Delete a stamp from the authoring view\n   * @param index the index of the stamp\n   */\n  authoringDeleteStampClicked(index) {\n\n    // ask the author if they are sure they want to delete the stamp\n    var answer = confirm(this.$translate('draw.areYouSureYouWantToDeleteThisStamp') + '\\n\\n' + this.authoringComponentContent.stamps.Stamps[index]);\n\n    if (answer) {\n\n      // remove the stamp\n      this.authoringComponentContent.stamps.Stamps.splice(index, 1);\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Enable all the tools\n   */\n  authoringEnableAllToolsButtonClicked() {\n\n    if (this.authoringComponentContent.tools == null) {\n      this.authoringComponentContent.tools = {};\n    }\n\n    // enable all the tools\n    this.authoringComponentContent.tools.select = true;\n    this.authoringComponentContent.tools.line = true;\n    this.authoringComponentContent.tools.shape = true;\n    this.authoringComponentContent.tools.freeHand = true;\n    this.authoringComponentContent.tools.text = true;\n    this.authoringComponentContent.tools.stamp = true;\n    this.authoringComponentContent.tools.strokeColor = true;\n    this.authoringComponentContent.tools.fillColor = true;\n    this.authoringComponentContent.tools.clone = true;\n    this.authoringComponentContent.tools.strokeWidth = true;\n    this.authoringComponentContent.tools.sendBack = true;\n    this.authoringComponentContent.tools.sendForward = true;\n    this.authoringComponentContent.tools.undo = true;\n    this.authoringComponentContent.tools.redo = true;\n    this.authoringComponentContent.tools.delete = true;\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Disable all the tools\n   */\n  authoringDisableAllToolsButtonClicked() {\n\n    if (this.authoringComponentContent.tools == null) {\n      this.authoringComponentContent.tools = {};\n    }\n\n    // disable all the tools\n    this.authoringComponentContent.tools.select = false;\n    this.authoringComponentContent.tools.line = false;\n    this.authoringComponentContent.tools.shape = false;\n    this.authoringComponentContent.tools.freeHand = false;\n    this.authoringComponentContent.tools.text = false;\n    this.authoringComponentContent.tools.stamp = false;\n    this.authoringComponentContent.tools.strokeColor = false;\n    this.authoringComponentContent.tools.fillColor = false;\n    this.authoringComponentContent.tools.clone = false;\n    this.authoringComponentContent.tools.strokeWidth = false;\n    this.authoringComponentContent.tools.sendBack = false;\n    this.authoringComponentContent.tools.sendForward = false;\n    this.authoringComponentContent.tools.undo = false;\n    this.authoringComponentContent.tools.redo = false;\n    this.authoringComponentContent.tools.delete = false;\n  }\n\n  /**\n   * Save the starter draw data\n   */\n  authoringSaveStarterDrawData() {\n\n    let answer = confirm(this.$translate('draw.areYouSureYouWantToSaveTheStarterDrawing'));\n\n    if (answer) {\n      // get the draw data\n      var drawData = this.getDrawData();\n\n      // set the starter draw data\n      this.authoringComponentContent.starterDrawData = drawData;\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Delete the starter draw data\n   */\n  authoringDeleteStarterDrawData() {\n\n    let answer = confirm(this.$translate('draw.areYouSureYouWantToDeleteTheStarterDrawing'));\n\n    if (answer) {\n      // remove the starter draw data\n      this.authoringComponentContent.starterDrawData = null;\n\n      // clear the drawing\n      this.drawingTool.clear();\n\n      /*\n       * the author has made changes so we will save the component\n       * content\n       */\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * The author has changed the width\n   */\n  authoringViewWidthChanged() {\n\n    // update the width\n    this.width = this.authoringComponentContent.width;\n\n    // update the starter draw data if there is any\n    if (this.authoringComponentContent.starterDrawData != null) {\n\n      // get the starter draw data as a JSON object\n      var starterDrawDataJSONObject = angular.fromJson(this.authoringComponentContent.starterDrawData);\n\n      if (starterDrawDataJSONObject != null && starterDrawDataJSONObject.dt != null) {\n\n        // update the width in the starter draw data\n        starterDrawDataJSONObject.dt.width = this.width;\n\n        // set the starter draw data back into the component content\n        this.authoringComponentContent.starterDrawData = angular.toJson(starterDrawDataJSONObject);\n      }\n    }\n\n    /*\n     * the author has made changes so we will save the component\n     * content\n     */\n    this.authoringViewComponentChanged();\n\n    // re-initialize the drawing tool so the width is updated\n    this.$timeout(angular.bind(this, this.initializeDrawingTool));\n  }\n\n  /**\n   * The author has changed the height\n   */\n  authoringViewHeightChanged() {\n\n    // update the height\n    this.height = this.authoringComponentContent.height;\n\n    // update the starter draw data if there is any\n    if (this.authoringComponentContent.starterDrawData != null) {\n\n      // get the starter draw data as a JSON object\n      var starterDrawDataJSONObject = angular.fromJson(this.authoringComponentContent.starterDrawData);\n\n      if (starterDrawDataJSONObject != null && starterDrawDataJSONObject.dt != null) {\n\n        // update the height in the starter draw data\n        starterDrawDataJSONObject.dt.height = this.height;\n\n        // set the starter draw data back into the component content\n        this.authoringComponentContent.starterDrawData = angular.toJson(starterDrawDataJSONObject);\n      }\n    }\n\n    /*\n     * the author has made changes so we will save the component\n     * content\n     */\n    this.authoringViewComponentChanged();\n\n    // re-initialize the drawing tool so the height is updated\n    this.$timeout(angular.bind(this, this.initializeDrawingTool));\n  }\n\n  /**\n   * The author has enabled or disabled a tool\n   */\n  authoringViewToolClicked() {\n\n    /*\n     * the author has made changes so we will save the component\n     * content\n     */\n    this.authoringViewComponentChanged();\n\n    // re-initialize the drawing tool so the height is updated\n    this.$timeout(angular.bind(this, this.initializeDrawingTool));\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose the background image\n   */\n  chooseBackgroundImage() {\n\n    // generate the parameters\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'background';\n\n    // display the asset chooser\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * The background has changed so we will update the starter draw data if\n   * it has been set and then save the project\n   */\n  authoringViewBackgroundChanged() {\n\n    // get the starter draw data string\n    var starterDrawData = this.authoringComponentContent.starterDrawData;\n\n    if (starterDrawData != null) {\n\n      // get the starter draw data JSON object\n      var starterDrawDataJSON = angular.fromJson(starterDrawData);\n\n      if (starterDrawDataJSON != null &&\n        starterDrawDataJSON.canvas != null &&\n        starterDrawDataJSON.canvas.backgroundImage != null &&\n        starterDrawDataJSON.canvas.backgroundImage.src != null) {\n\n        // get the background\n        var background = this.authoringComponentContent.background;\n\n        /*\n         * get the project assets directory path\n         * e.g. https://www.berkeley.edu/curriculum/25/assets\n         */\n        var projectAssetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath(true);\n\n        /*\n         * generate the absolute path to the background image\n         * e.g. https://www.berkeley.edu/curriculum/25/assets/earth.png\n         */\n        var newSrc = projectAssetsDirectoryPath + '/' + background;\n\n        // set the new src\n        starterDrawDataJSON.canvas.backgroundImage.src = newSrc;\n\n        // convert the starter draw data back into a string\n        this.authoringComponentContent.starterDrawData = angular.toJson(starterDrawDataJSON);\n      }\n    }\n\n    // save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Open the asset choose to select an image for the stamp\n   * @param index the index of the stamp\n   */\n  chooseStampImage(index) {\n\n    // generate the parameters\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'stamp';\n    params.targetObject = index;\n\n    // display the asset chooser\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * Set the stamp image\n   * @param index the index of the stamp\n   * @param fileName the file name of the image\n   */\n  setStampImage(index, fileName) {\n    this.authoringComponentContent.stamps.Stamps[index] = fileName;\n  }\n\n  handleConnectedComponentsPostProcess() {\n    if (this.componentContent != null &&\n      this.componentContent.background != null) {\n      this.drawingTool.setBackgroundImage(this.componentContent.background);\n    }\n  }\n\n  /**\n   * Automatically set the component id for the connected component if there\n   * is only one viable option.\n   * @param connectedComponent the connected component object we are authoring\n   */\n  authoringAutomaticallySetConnectedComponentComponentIdIfPossible(connectedComponent) {\n    if (connectedComponent != null) {\n      let components = this.getComponentsByNodeId(connectedComponent.nodeId);\n      if (components != null) {\n        let numberOfAllowedComponents = 0;\n        let allowedComponent = null;\n        for (let component of components) {\n          if (component != null) {\n            if (this.isConnectedComponentTypeAllowed(component.type) &&\n              component.id != this.componentId) {\n              // we have found a viable component we can connect to\n              numberOfAllowedComponents += 1;\n              allowedComponent = component;\n            }\n          }\n        }\n\n        if (numberOfAllowedComponents == 1) {\n          /*\n           * there is only one viable component to connect to so we\n           * will use it\n           */\n          connectedComponent.componentId = allowedComponent.id;\n          connectedComponent.type = 'importWork';\n          this.authoringSetImportWorkAsBackgroundIfApplicable(connectedComponent);\n        }\n      }\n    }\n  }\n\n  /**\n   * The connected component component id has changed\n   * @param connectedComponent the connected component that has changed\n   */\n  authoringConnectedComponentComponentIdChanged(connectedComponent) {\n\n    if (connectedComponent != null) {\n\n      // default the type to import work\n      connectedComponent.type = 'importWork';\n      this.authoringSetImportWorkAsBackgroundIfApplicable(connectedComponent);\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * If the component type is a certain type, we will set the importWorkAsBackground\n   * field to true.\n   * @param connectedComponent The connected component object.\n   */\n  authoringSetImportWorkAsBackgroundIfApplicable(connectedComponent) {\n    let componentType = this.authoringGetConnectedComponentType(connectedComponent);\n    if (componentType == 'ConceptMap' ||\n      componentType == 'Embedded' ||\n      componentType == 'Graph' ||\n      componentType == 'Label' ||\n      componentType == 'Table') {\n      connectedComponent.importWorkAsBackground = true;\n    } else {\n      delete connectedComponent.importWorkAsBackground;\n    }\n  }\n\n  /**\n   * The \"Import Work As Background\" checkbox was clicked.\n   * @param connectedComponent The connected component associated with the\n   * checkbox.\n   */\n  authoringImportWorkAsBackgroundClicked(connectedComponent) {\n    if (!connectedComponent.importWorkAsBackground) {\n      delete connectedComponent.importWorkAsBackground;\n    }\n    this.authoringViewComponentChanged();\n  }\n}\n\nDrawAuthoringController.$inject = [\n  '$filter',\n  '$injector',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$timeout',\n  'AnnotationService',\n  'ConfigService',\n  'DrawService',\n  'NodeService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'];\n\nexport default DrawAuthoringController;\n"]}