{"version":3,"sources":["drawController.es6"],"names":["DrawController","$filter","$injector","$mdDialog","$q","$rootScope","$scope","$timeout","AnnotationService","ConfigService","DrawService","NodeService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","isResetButtonVisible","notebookConfig","getNotebookConfig","drawingTool","latestConnectedComponentState","latestConnectedComponentParams","width","height","componentContent","componentType","type","isStudentMode","isSaveButtonVisible","showSaveButton","isSubmitButtonVisible","showSubmitButton","drawingToolId","nodeId","componentId","isGradingMode","isGradingRevisionMode","isOnlyShowWorkMode","componentState","id","angular","bind","initializeDrawingTool","initializeScopeGetComponentState","$on","event","args","isEventTargetThisComponent","imageObject","getImageObject","requestImageCallbackArgs","$emit","requester","notebookItem","studentWorkId","content","studentWorkIds","importWorkByStudentWorkId","broadcastDoneRenderingComponent","studentWork","isForThisComponent","isConnectedComponent","connectedComponentParams","getConnectedComponentParams","updateOn","isSubmit","performUpdate","makeCopyOfJSONObject","isCanvasEmpty","confirm","$translate","includeBackground","removeBackgroundFromComponentState","setDrawData","drawController","isDirty","isSubmitDirty","submit","DrawingTool","stamps","parseSVG","state","$","on","setBackgroundImage","val","resizeBackgroundToCanvas","resizeCanvasToBackground","shrinkBackgroundToCanvas","clear","save","removeAttr","load","hasShowWorkConnectedComponent","handleConnectedComponents","componentStateHasStudentWork","setStudentWork","hasConnectedComponent","starterDrawData","background","isAuthoringMode","hasMaxSubmitCount","hasSubmitsLeft","isSubmitButtonDisabled","disableComponentIfNecessary","studentDataChanged","toolName","category","data","selectedToolName","saveComponentEvent","find","hide","setupTools","tools","setupSelectTool","setupLineTool","setupShapeTool","setupFreeHandTool","setupTextTool","setupStampTool","setupCloneTool","setupStrokeColorTool","setupFillColorTool","setupStrokeWidthTool","setupSendBackTool","setupSendForwardTool","setupUndoTool","setupRedoTool","setupDeleteTool","isDisabled","selectTitle","select","show","lineTitle","line","shapeTitle","shape","freeHandTitle","freeHand","textTitle","text","stampTitle","stamp","cloneTitle","clone","strokeColorTitle","strokeColor","fillColorTitle","fillColor","strokeWidthTitle","strokeWidth","sendBackTitle","sendBack","sendForwardTitle","sendForward","undoTitle","undo","redoTitle","redo","deleteTitle","delete","processLatestStudentWork","parentStudentWorkIds","action","deferred","defer","createNewComponentState","studentData","studentDataJSONString","getDrawData","drawData","submitCounter","createComponentStateAdditionalProcessing","promise","studentAsset","copyAssetForReference","then","copiedAsset","fabric","Image","fromURL","url","oImg","scaleToWidth","studentAssetId","canvas","add","canvasBase64Image","toDataURL","getImageObjectFromBase64String","objects","getObjects","length","$event","element","noteText","addNote","deregisterListener","snipDrawing","saveButtonClicked","getLatestComponentStateByNodeIdAndComponentId","componentStates","mergedComponentState","allDrawCanvasObjects","firstDrawData","c","drawDataJSON","fromJson","concat","connectedComponent","getConnectedComponentByComponentState","importWorkAsBackground","setComponentStateAsBackgroundImage","toJson","generateImageFromComponentState","image","ComponentController","$inject"],"mappings":"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","file":"drawController.js","sourcesContent":["'use strict';\n\nimport ComponentController from \"../componentController\";\nimport drawingTool from 'lib/drawingTool/drawing-tool';\nimport drawingToolVendor from 'lib/drawingTool/vendor.min';\nimport html2canvas from 'html2canvas';\n\nclass DrawController extends ComponentController {\n  constructor($filter,\n      $injector,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $timeout,\n      AnnotationService,\n      ConfigService,\n      DrawService,\n      NodeService,\n      NotebookService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService) {\n    super($filter, $mdDialog, $rootScope, $scope,\n        AnnotationService, ConfigService, NodeService,\n        NotebookService, ProjectService, StudentAssetService,\n        StudentDataService, UtilService);\n    this.$injector = $injector;\n    this.$q = $q;\n    this.$timeout = $timeout;\n    this.DrawService = DrawService;\n\n    this.isResetButtonVisible = false;\n    this.notebookConfig = this.NotebookService.getNotebookConfig();\n    this.drawingTool = null;\n    this.latestConnectedComponentState = null;\n    this.latestConnectedComponentParams = null;\n    this.width = 800;\n    this.height = 600;\n\n    if (this.componentContent.width != null) {\n      this.width = this.componentContent.width;\n    }\n\n    if (this.componentContent.height != null) {\n      this.height = this.componentContent.height;\n    }\n\n    this.componentType = this.componentContent.type;\n\n    if (this.isStudentMode()) {\n      this.isSaveButtonVisible = this.componentContent.showSaveButton;\n      this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n      this.isResetButtonVisible = true;\n      this.drawingToolId = 'drawingtool_' + this.nodeId + '_' + this.componentId;\n    } else if (this.isGradingMode() || this.isGradingRevisionMode() || this.isOnlyShowWorkMode()) {\n      const componentState = this.$scope.componentState;\n      if (componentState != null) {\n        if (this.isGradingRevisionMode()) {\n          this.drawingToolId = 'drawingtool_gradingRevision_' + componentState.id;\n        } else {\n          this.drawingToolId = 'drawingtool_' + componentState.id;\n        }\n      }\n    }\n\n    /*\n     * Running this inside a timeout ensures that the code only runs after the markup is rendered.\n     * Maybe there's a better way to do this, like with an event?\n     */\n    this.$timeout(angular.bind(this, this.initializeDrawingTool));\n\n    this.initializeScopeGetComponentState(this.$scope, 'drawController');\n\n    /*\n     * Listen for the requestImage event which is fired when something needs an image representation\n     * of the student data from a specific component.\n     */\n    this.$scope.$on('requestImage', (event, args) => {\n      if (this.isEventTargetThisComponent(args)) {\n        const imageObject = this.getImageObject();\n        const requestImageCallbackArgs = {\n          nodeId: args.nodeId,\n          componentId: args.componentId,\n          imageObject: imageObject\n        };\n        this.$scope.$emit('requestImageCallback', requestImageCallbackArgs);\n      }\n    });\n\n    this.$scope.$on('notebookItemChosen', (event, args) => {\n      if (args.requester == this.nodeId + '-' + this.componentId) {\n        const notebookItem = args.notebookItem;\n        const studentWorkId = notebookItem.content.studentWorkIds[0];\n        this.importWorkByStudentWorkId(studentWorkId);\n      }\n    });\n\n    this.broadcastDoneRenderingComponent();\n  }\n\n  handleStudentWorkSavedToServerAdditionalProcessing(event, args) {\n    let componentState = args.studentWork;\n    if (this.isForThisComponent(componentState) &&\n        this.ProjectService.isConnectedComponent(\n            this.nodeId, this.componentId, componentState.componentId)) {\n      const connectedComponentParams = this.ProjectService.getConnectedComponentParams(this.componentContent, componentState.componentId);\n      if (connectedComponentParams != null) {\n        if (connectedComponentParams.updateOn === 'save' ||\n            (connectedComponentParams.updateOn === 'submit' && componentState.isSubmit)) {\n          let performUpdate = false;\n          /*\n           * make a copy of the component state so we don't accidentally\n           * change any values in the referenced object\n           */\n          componentState = this.UtilService.makeCopyOfJSONObject(componentState);\n\n          if (this.isCanvasEmpty()) {\n            performUpdate = true;\n          } else {\n            // the student has drawn on the canvas so we will ask them if they want to update it\n            if (confirm(this.$translate('draw.doYouWantToUpdateTheConnectedDrawing'))) {\n              performUpdate = true;\n            }\n          }\n\n          if (performUpdate) {\n            if (!connectedComponentParams.includeBackground) {\n              this.DrawService.removeBackgroundFromComponentState(componentState);\n            }\n            this.setDrawData(componentState);\n            this.$scope.drawController.isDirty = true;\n            this.$scope.drawController.isSubmitDirty = true;\n          }\n\n          /*\n           * remember the component state and connected component params\n           * in case we need to use them again later\n           */\n          this.latestConnectedComponentState = componentState;\n          this.latestConnectedComponentParams = connectedComponentParams;\n        }\n      }\n    }\n  }\n\n  handleNodeSubmit() {\n    this.submit('nodeSubmitButton');\n  }\n\n  initializeDrawingTool() {\n    this.drawingTool = new DrawingTool('#' + this.drawingToolId, {\n      stamps: this.componentContent.stamps || {},\n      parseSVG: true,\n      width: this.width,\n      height: this.height\n    });\n    let state = null;\n    $('#set-background').on('click', () => {\n      this.drawingTool.setBackgroundImage($('#background-src').val());\n    });\n    $('#resize-background').on('click', () => {\n      this.drawingTool.resizeBackgroundToCanvas();\n    });\n    $('#resize-canvas').on('click', () => {\n      this.drawingTool.resizeCanvasToBackground();\n    });\n    $('#shrink-background').on('click', () => {\n      this.drawingTool.shrinkBackgroundToCanvas();\n    });\n    $('#clear').on('click', () => {\n      this.drawingTool.clear(true);\n    });\n    $('#save').on('click', () => {\n      state = drawingTool.save();\n      $('#load').removeAttr('disabled');\n    });\n    $('#load').on('click', () => {\n      if (state === null) return;\n      this.drawingTool.load(state);\n    });\n\n    const componentState = this.$scope.componentState;\n    if (this.isStudentMode()) {\n      if (this.UtilService.hasShowWorkConnectedComponent(this.componentContent)) {\n        this.handleConnectedComponents();\n      }  else if (this.DrawService.componentStateHasStudentWork(componentState, this.componentContent)) {\n        this.setStudentWork(componentState);\n      } else if (this.UtilService.hasConnectedComponent(this.componentContent)) {\n        this.handleConnectedComponents();\n      } else if (componentState == null ||\n             !this.DrawService.componentStateHasStudentWork(componentState, this.componentContent)) {\n        if (this.componentContent.starterDrawData != null) {\n          this.drawingTool.load(this.componentContent.starterDrawData);\n        }\n        if (this.componentContent.background != null) {\n          this.drawingTool.setBackgroundImage(this.componentContent.background);\n        }\n      }\n    } else if (this.isAuthoringMode()) {\n      if (this.componentContent.starterDrawData != null) {\n        this.drawingTool.load(this.componentContent.starterDrawData);\n      }\n      if (this.componentContent.background != null) {\n        this.drawingTool.setBackgroundImage(this.componentContent.background);\n      }\n    } else {\n      this.setStudentWork(componentState);\n    }\n\n    if (this.hasMaxSubmitCount() && this.hasSubmitsLeft()) {\n      this.isSubmitButtonDisabled = true;\n    }\n\n    this.disableComponentIfNecessary();\n\n    /*\n     * Wait before we start listening for the drawing:changed event. We need to wait\n     * because the calls above to this.drawingTool.setBackgroundImage() will cause\n     * the drawing:changed event to be fired from the drawingTool, but when that happens,\n     * we don't want to call this.studentDataChanged() because it marks the student work\n     * as dirty. We only want to call this.studentDataChanged() when the drawing:changed\n     * event occurs in response to the student changing the drawing and this timeout\n     * will help make sure of that.\n     */\n    this.$timeout(angular.bind(this, () => {\n      this.drawingTool.on('drawing:changed', angular.bind(this, this.studentDataChanged));\n    }), 500);\n\n    if (this.isStudentMode()) {\n      this.drawingTool.on('tool:changed', (toolName) => {\n        const category = 'Tool';\n        const event = 'toolSelected';\n        const data = {\n          selectedToolName: toolName\n        };\n        this.StudentDataService.saveComponentEvent(this, category, event, data);\n      });\n    }\n\n    if (this.isGradingMode() || this.isGradingRevisionMode() || this.isOnlyShowWorkMode()) {\n      $('#' + this.drawingToolId).find('.dt-tools').hide();\n    } else {\n      this.setupTools();\n    }\n  }\n\n  handleConnectedComponentsPostProcess() {\n    if (this.componentContent.background != null) {\n      this.drawingTool.setBackgroundImage(this.componentContent.background);\n    }\n  }\n\n  /**\n   * Setup the tools that we will make available to the student\n   */\n  setupTools() {\n    const tools = this.componentContent.tools;\n    if (tools == null) {\n      // we will display all the tools\n    } else {\n      // we will only display the tools the authored specified to show\n      const drawingTool = $('#' + this.drawingToolId);\n      this.setupSelectTool(drawingTool, tools);\n      this.setupLineTool(drawingTool, tools);\n      this.setupShapeTool(drawingTool, tools);\n      this.setupFreeHandTool(drawingTool, tools);\n      this.setupTextTool(drawingTool, tools);\n      this.setupStampTool(drawingTool, tools);\n      this.setupCloneTool(drawingTool, tools);\n      this.setupStrokeColorTool(drawingTool, tools);\n      this.setupFillColorTool(drawingTool, tools);\n      this.setupStrokeWidthTool(drawingTool, tools);\n      this.setupSendBackTool(drawingTool, tools);\n      this.setupSendForwardTool(drawingTool, tools);\n      this.setupUndoTool(drawingTool, tools);\n      this.setupRedoTool(drawingTool, tools);\n      this.setupDeleteTool(drawingTool, tools);\n      if (this.isDisabled) {\n        drawingTool.find('.dt-tools').hide();\n      }\n    }\n  }\n\n  setupSelectTool(drawingTool, tools) {\n    const selectTitle = this.$translate('draw.selectToolTooltip');\n    if (tools.select) {\n      drawingTool.find('[title=\"' + selectTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + selectTitle + '\"]').hide();\n    }\n  }\n\n  setupLineTool(drawingTool, tools) {\n    const lineTitle = this.$translate('draw.lineToolTooltip');\n    if (tools.line) {\n      drawingTool.find('[title=\"' + lineTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + lineTitle + '\"]').hide();\n    }\n  }\n\n  setupShapeTool(drawingTool, tools) {\n    const shapeTitle = this.$translate('draw.shapeToolTooltip');\n    if (tools.shape) {\n      drawingTool.find('[title=\"' + shapeTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + shapeTitle + '\"]').hide();\n    }\n  }\n\n  setupFreeHandTool(drawingTool, tools) {\n    const freeHandTitle = this.$translate('draw.freeHandToolTooltip');\n    if (tools.freeHand) {\n      drawingTool.find('[title=\"' + freeHandTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + freeHandTitle + '\"]').hide();\n    }\n  }\n\n  setupTextTool(drawingTool, tools) {\n    const textTitle = this.$translate('draw.textToolTooltip');\n    if (tools.text) {\n      drawingTool.find('[title=\"' + textTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + textTitle + '\"]').hide();\n    }\n  }\n\n  setupStampTool(drawingTool, tools) {\n    const stampTitle = this.$translate('draw.stampToolTooltip');\n    if (tools.stamp) {\n      drawingTool.find('[title=\"' + stampTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + stampTitle + '\"]').hide();\n    }\n  }\n\n  setupCloneTool(drawingTool, tools) {\n    const cloneTitle = this.$translate('draw.cloneToolTooltip');\n    if (tools.clone) {\n      drawingTool.find('[title=\"' + cloneTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + cloneTitle + '\"]').hide();\n    }\n  }\n\n  setupStrokeColorTool(drawingTool, tools) {\n    const strokeColorTitle = this.$translate('draw.strokeColorToolTooltip');\n    if (tools.strokeColor) {\n      drawingTool.find('[title=\"' + strokeColorTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + strokeColorTitle + '\"]').hide();\n    }\n  }\n\n  setupFillColorTool(drawingTool, tools) {\n    const fillColorTitle = this.$translate('draw.fillColorToolTooltip');\n    if (tools.fillColor) {\n      drawingTool.find('[title=\"' + fillColorTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + fillColorTitle + '\"]').hide();\n    }\n  }\n\n  setupStrokeWidthTool(drawingTool, tools) {\n    const strokeWidthTitle = this.$translate('draw.strokeWidthToolTooltip');\n    if (tools.strokeWidth) {\n      drawingTool.find('[title=\"' + strokeWidthTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + strokeWidthTitle + '\"]').hide();\n    }\n  }\n\n  setupSendBackTool(drawingTool, tools) {\n    const sendBackTitle = this.$translate('draw.sendBackToolTooltip');\n    if (tools.sendBack) {\n      drawingTool.find('[title=\"' + sendBackTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + sendBackTitle + '\"]').hide();\n    }\n  }\n\n  setupSendForwardTool(drawingTool, tools) {\n    const sendForwardTitle = this.$translate('draw.sendForwardToolTooltip');\n    if (tools.sendForward) {\n      drawingTool.find('[title=\"' + sendForwardTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + sendForwardTitle + '\"]').hide();\n    }\n  }\n\n  setupUndoTool(drawingTool, tools) {\n    const undoTitle = this.$translate('draw.undo');\n    if (tools.undo) {\n      drawingTool.find('[title=\"' + undoTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + undoTitle + '\"]').hide();\n    }\n  }\n\n  setupRedoTool(drawingTool, tools) {\n    const redoTitle = this.$translate('draw.redo');\n    if (tools.redo) {\n      drawingTool.find('[title=\"' + redoTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + redoTitle + '\"]').hide();\n    }\n  }\n\n  setupDeleteTool(drawingTool, tools) {\n    const deleteTitle = this.$translate('draw.deleteToolTooltip');\n    if (tools.delete) {\n      drawingTool.find('[title=\"' + deleteTitle + '\"]').show();\n    } else {\n      drawingTool.find('[title=\"' + deleteTitle + '\"]').hide();\n    }\n  }\n\n  setStudentWork(componentState) {\n    if (componentState != null) {\n      this.setDrawData(componentState);\n      this.processLatestStudentWork();\n    }\n  }\n\n  resetButtonClicked() {\n    if (confirm(this.$translate('draw.areYouSureYouWantToClearYourDrawing'))) {\n      this.drawingTool.clear();\n      if (this.UtilService.hasConnectedComponent(this.componentContent)) {\n        this.handleConnectedComponents();\n      } else if (this.latestConnectedComponentState && this.latestConnectedComponentParams) {\n        this.setDrawData(latestConnectedComponentState, latestConnectedComponentParams);\n      } else if (this.componentContent.starterDrawData != null) {\n        this.drawingTool.load(this.componentContent.starterDrawData);\n      }\n      if (this.componentContent.background != null && this.componentContent.background != '') {\n        this.drawingTool.setBackgroundImage(this.componentContent.background);\n      }\n      this.parentStudentWorkIds = null;\n    }\n  }\n\n  /**\n   * Create a new component state populated with the student data\n   * @param action the action that is triggering creating of this component state\n   * e.g. 'submit', 'save', 'change'\n   * @return a promise that will return a component state\n   */\n  createComponentState(action) {\n    const deferred = this.$q.defer();\n    const componentState = this.NodeService.createNewComponentState();\n    const studentData = {};\n    const studentDataJSONString = this.getDrawData();\n    studentData.drawData = studentDataJSONString;\n    studentData.submitCounter = this.submitCounter;\n    if (this.parentStudentWorkIds != null) {\n      studentData.parentStudentWorkIds = this.parentStudentWorkIds;\n    }\n    componentState.isSubmit = this.isSubmit;\n    componentState.studentData = studentData;\n    componentState.componentType = 'Draw';\n    componentState.nodeId = this.nodeId;\n    componentState.componentId = this.componentId;\n    this.isSubmit = false;\n    this.createComponentStateAdditionalProcessing(deferred, componentState, action);\n    return deferred.promise;\n  }\n\n  /**\n   * Add student asset images as objects in the drawing canvas\n   * @param studentAsset\n   */\n  attachStudentAsset(studentAsset) {\n    this.StudentAssetService.copyAssetForReference(studentAsset).then((copiedAsset) => {\n      fabric.Image.fromURL(copiedAsset.url, (oImg) => {\n        oImg.scaleToWidth(200);  // set max width and have height scale proportionally\n        // TODO: center image or put them at mouse position? Wasn't straight-forward, tried below but had issues...\n        //oImg.setLeft((this.drawingTool.canvas.width / 2) - (oImg.width / 2));  // center image vertically and horizontally\n        //oImg.setTop((this.drawingTool.canvas.height / 2) - (oImg.height / 2));\n        //oImg.center();\n        oImg.studentAssetId = copiedAsset.id;  // keep track of this asset id\n        this.drawingTool.canvas.add(oImg);   // add copied asset image to canvas\n      });\n    });\n  }\n\n  getDrawData() {\n    return this.drawingTool.save();\n  }\n\n  /**\n   * Get the image object representation of the student data\n   * @returns an image object\n   */\n  getImageObject() {\n    if (this.drawingTool != null && this.drawingTool.canvas != null) {\n      const canvasBase64Image = this.drawingTool.canvas.toDataURL('image/png');\n      return this.UtilService.getImageObjectFromBase64String(canvasBase64Image);\n    }\n    return null;\n  }\n\n  setDrawData(componentState) {\n    if (componentState != null) {\n      const studentData = componentState.studentData;\n      if (studentData.submitCounter != null) {\n        this.submitCounter = studentData.submitCounter;\n      }\n      const drawData = studentData.drawData;\n      if (drawData != null && drawData != '' && drawData != '{}') {\n        this.drawingTool.load(drawData);\n      }\n    }\n  }\n\n  /**\n   * Check if the student has drawn anything\n   * @returns whether the canvas is empty\n   */\n  isCanvasEmpty() {\n    if (this.drawingTool != null && this.drawingTool.canvas != null) {\n      const objects = this.drawingTool.canvas.getObjects();\n      if (objects != null && objects.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Snip the drawing by converting it to an image\n   * @param $event the click event\n   */\n  snipDrawing($event, studentWorkId) {\n    let canvas = angular.element('#drawingtool_' + this.nodeId + '_' + this.componentId + ' canvas');\n    if (canvas != null && canvas.length > 0) {\n      canvas = canvas[0];\n      const canvasBase64Image = canvas.toDataURL('image/png');\n      const imageObject = this.UtilService.getImageObjectFromBase64String(canvasBase64Image);\n      const noteText = null;\n      this.NotebookService.addNote($event, imageObject, noteText, [ studentWorkId ]);\n    }\n  }\n\n  snipButtonClicked($event) {\n    if (this.isDirty) {\n      const deregisterListener = this.$scope.$on('studentWorkSavedToServer',\n        (event, args) => {\n          let componentState = args.studentWork;\n          if (this.isForThisComponent(componentState)) {\n            this.snipDrawing($event, componentState.id);\n            deregisterListener();\n          }\n        }\n      );\n      this.saveButtonClicked();\n    } else {\n      const studentWork =\n          this.StudentDataService.getLatestComponentStateByNodeIdAndComponentId(this.nodeId, this.componentId)\n      this.snipDrawing($event, studentWork.id);\n    }\n  }\n\n  /**\n   * Create a component state with the merged student responses\n   * @param componentStates an array of component states\n   * @return a component state with the merged student responses\n   */\n  createMergedComponentState(componentStates) {\n    const mergedComponentState = this.NodeService.createNewComponentState();\n    if (componentStates != null) {\n      let allDrawCanvasObjects = [];\n      let firstDrawData = {};\n      for (let c = 0; c < componentStates.length; c++) {\n        const componentState = componentStates[c];\n        if (componentState.componentType == 'Draw') {\n          const studentData = componentState.studentData;\n          const drawData = studentData.drawData;\n          const drawDataJSON = angular.fromJson(drawData);\n          if (drawDataJSON != null && drawDataJSON.canvas != null &&\n              drawDataJSON.canvas.objects != null) {\n            if (c == 0) {\n              firstDrawData = drawDataJSON;\n            }\n            allDrawCanvasObjects = allDrawCanvasObjects.concat(drawDataJSON.canvas.objects);\n          }\n        } else if (componentState.componentType == 'Graph' ||\n            componentState.componentType == 'ConceptMap' ||\n            componentState.componentType == 'Embedded' ||\n            componentState.componentType == 'Label' ||\n            componentState.componentType == 'Table') {\n          const connectedComponent = this.UtilService\n              .getConnectedComponentByComponentState(this.componentContent, componentState);\n          if (connectedComponent.importWorkAsBackground === true) {\n            this.setComponentStateAsBackgroundImage(componentState);\n          }\n        }\n      }\n      if (allDrawCanvasObjects != null) {\n        const drawData = firstDrawData;\n        if (drawData.canvas != null && drawData.canvas.objects != null) {\n          drawData.canvas.objects = allDrawCanvasObjects;\n        }\n        mergedComponentState.studentData = {};\n        mergedComponentState.studentData.drawData = angular.toJson(drawData);\n      }\n    }\n    return mergedComponentState;\n  }\n\n  /**\n   * Create an image from a component state and set the image as the background.\n   * @param componentState A component state.\n   */\n  setComponentStateAsBackgroundImage(componentState) {\n    this.UtilService.generateImageFromComponentState(componentState).then((image) => {\n      this.drawingTool.setBackgroundImage(image.url);\n    });\n  }\n}\n\nDrawController.$inject = [\n  '$filter',\n  '$injector',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$timeout',\n  'AnnotationService',\n  'ConfigService',\n  'DrawService',\n  'NodeService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'];\n\nexport default DrawController;\n"]}