{"version":3,"sources":["drawService.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;IAEM,WAAW;cAAX,WAAW;;AACb,aADE,WAAW,CACD,kBAAkB,EAAE;8BAD9B,WAAW;;2EAAX,WAAW;;AAGT,cAAK,kBAAkB,GAAG,kBAAkB,CAAC;;KAChD;;iBAJC,WAAW;;2CAMM,cAAc,EAAE;AAC/B,gBAAI,cAAc,IAAI,IAAI,EAAE;AACxB,oBAAI,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;;AAE7C,oBAAI,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,QAAQ,IAAI,IAAI,EAAE;AACrD,wBAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAChD,wBAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE;AAClE,+BAAO,QAAQ,CAAC,IAAI,CAAC;qBACxB;iBACJ;aACJ;AACD,mBAAO,IAAI,CAAC;SACf;;;6CAEoB,cAAc,EAAE;AACjC,gBAAI,iBAAiB,GAAG,qBAAqB,CAAC;;AAE9C,gBAAI,cAAc,IAAI,IAAI,EAAE;AACxB,oBAAI,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;;AAE7C,oBAAI,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,QAAQ,IAAI,IAAI,EAAE;AACrD,wBAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAChD,wBAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE;AAClE,yCAAiB,GAAG,aAAa,GAAG,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC;qBACnE;iBACJ;aACJ;;AAED,mBAAO,iBAAiB,CAAC;SAC5B;;;;;;;;;;+CAQsB,gCAAgC,EAAE;AACrD,gBAAI,cAAc,GAAG,IAAI,CAAC;;AAE1B,gBAAI,gCAAgC,IAAI,IAAI,EAAE;;;AAG1C,8BAAc,GAAG,kBAAkB,CAAC,oBAAoB,EAAE;;;AAAC,AAG3D,oBAAI,kBAAkB,GAAG,gCAAgC,CAAC,aAAa,CAAC;;AAExE,oBAAI,kBAAkB,KAAK,MAAM,EAAE;;;;AAI/B,wBAAI,WAAW,GAAG,gCAAgC,CAAC,WAAW;;;AAAC,AAG/D,wBAAI,eAAe,GAAG,kBAAkB,CAAC,oBAAoB,CAAC,WAAW,CAAC;;;AAAC,AAG3E,kCAAc,CAAC,WAAW,GAAG,eAAe,CAAC;iBAChD;aACJ;;AAED,mBAAO,cAAc,CAAC;SACzB;;;;;;;;;;;;oCAUW,SAAS,EAAE,eAAe,EAAE,eAAe,EAAE,UAAU,EAAE;AACjE,gBAAI,MAAM,GAAG,KAAK,CAAC;;AAEnB,gBAAI,eAAe,IAAI,IAAI,EAAE;;;AAGzB,qBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;;AAG7C,wBAAI,cAAc,GAAG,eAAe,CAAC,CAAC,CAAC;;;AAAC,AAGxC,wBAAI,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;;AAE7C,wBAAI,WAAW,IAAI,IAAI,EAAE;AACrB,4BAAI,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;;AAEpC,4BAAI,QAAQ,IAAI,IAAI,EAAE;;AAElB,kCAAM,GAAG,IAAI,CAAC;AACd,kCAAM;yBACT;qBACJ;iBACJ;aACJ;;AAED,mBAAO,MAAM,CAAC;SACjB;;;WA1GC,WAAW;;;AA6GjB,WAAW,CAAC,OAAO,GAAG,CAAC,oBAAoB,CAAC,CAAC;;kBAE9B,WAAW","file":"drawService.js","sourcesContent":["import NodeService from '../../services/nodeService';\n\nclass DrawService extends NodeService {\n    constructor(StudentDataService) {\n        super();\n        this.StudentDataService = StudentDataService;\n    }\n\n    getStudentWorkJPEG(componentState) {\n        if (componentState != null) {\n            var studentData = componentState.studentData;\n\n            if (studentData != null && studentData.drawData != null) {\n                var drawData = JSON.parse(studentData.drawData);\n                if (drawData != null && drawData.jpeg != null && drawData.jpeg != \"\") {\n                    return drawData.jpeg;\n                }\n            }\n        }\n        return null;\n    };\n\n    getStudentWorkAsHTML(componentState) {\n        var studentWorkAsHTML = '<p>Your drawing</p>';\n\n        if (componentState != null) {\n            var studentData = componentState.studentData;\n\n            if (studentData != null && studentData.drawData != null) {\n                var drawData = JSON.parse(studentData.drawData);\n                if (drawData != null && drawData.jpeg != null && drawData.jpeg != \"\") {\n                    studentWorkAsHTML = '<img src=\\\"' + drawData.jpeg + '\\\"></img>';\n                }\n            }\n        }\n\n        return studentWorkAsHTML;\n    };\n\n    /**\n     * Populate a component state with the data from another component state\n     * @param componentStateFromOtherComponent the component state to obtain the data from\n     * @return a new component state that contains the student data from the other\n     * component state\n     */\n    populateComponentState(componentStateFromOtherComponent) {\n        var componentState = null;\n\n        if (componentStateFromOtherComponent != null) {\n\n            // create an empty component state\n            componentState = StudentDataService.createComponentState();\n\n            // get the component type of the other component state\n            var otherComponentType = componentStateFromOtherComponent.componentType;\n\n            if (otherComponentType === 'Draw') {\n                // the other component is an Draw component\n\n                // get the student data from the other component state\n                var studentData = componentStateFromOtherComponent.studentData;\n\n                // create a copy of the student data\n                var studentDataCopy = StudentDataService.makeCopyOfJSONObject(studentData);\n\n                // set the student data into the new component state\n                componentState.studentData = studentDataCopy;\n            }\n        }\n\n        return componentState;\n    };\n\n    /**\n     * Check if the component was completed\n     * @param component the component object\n     * @param componentStates the component states for the specific component\n     * @param componentEvents the events for the specific component\n     * @param nodeEvents the events for the parent node of the component\n     * @returns whether the component was completed\n     */\n    isCompleted(component, componentStates, componentEvents, nodeEvents) {\n        var result = false;\n\n        if (componentStates != null) {\n\n            // loop through all the component states\n            for (var c = 0; c < componentStates.length; c++) {\n\n                // the component state\n                var componentState = componentStates[c];\n\n                // get the student data from the component state\n                var studentData = componentState.studentData;\n\n                if (studentData != null) {\n                    var drawData = studentData.drawData;\n\n                    if (drawData != null) {\n                        // there is draw data so the component is completed\n                        result = true;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n}\n\nDrawService.$inject = ['StudentDataService'];\n\nexport default DrawService;\n"]}