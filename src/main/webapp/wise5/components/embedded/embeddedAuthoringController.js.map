{"version":3,"sources":["embeddedAuthoringController.es6"],"names":["EmbeddedAuthoringController","$filter","$mdDialog","$q","$rootScope","$scope","$sce","$timeout","$window","AnnotationService","ConfigService","EmbeddedService","NodeService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","connectedComponentUpdateOnOptions","value","text","allowedConnectedComponentTypes","type","summernoteRubricId","nodeId","componentId","summernoteRubricHTML","componentContent","rubric","insertAssetString","$translate","InsertAssetButton","createInsertAssetButton","summernoteRubricOptions","toolbar","height","disableDragAndDrop","buttons","insertAssetButton","updateAdvancedAuthoringView","$watch","authoringComponentContent","bind","newValue","oldValue","injectAssetPaths","isSaveButtonVisible","showSaveButton","isSubmitButtonVisible","showSubmitButton","width","setURL","url","$on","event","args","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","summernoteId","target","isImage","$","summernote","isVideo","videoElement","document","createElement","controls","innerHTML","hide","authoringViewComponentChanged","showAdvancedAuthoring","$parent","nodeAuthoringController","authoringViewNodeChanged","editedComponentContent","angular","fromJson","authoringComponentContentJSONString","replaceComponent","e","showSaveErrorAdvancedAuthoring","toJson","html","removeAbsoluteAssetPaths","insertWISELinks","newConnectedComponent","updateOn","connectedComponents","push","indexOfComponentToDelete","splice","show","$emit","setShowSubmitButtonValue","params","isPopup","$broadcast","tags","index","tag","length","indexOfTagToDelete","confirm","authoringAutomaticallySetConnectedComponentComponentIdIfPossible","connectedComponent","components","getComponentsByNodeId","numberOfAllowedComponents","allowedComponent","component","isConnectedComponentTypeAllowed","id","connectedComponentType","getComponentByNodeIdAndComponentId","componentType","allowedConnectedComponentType","showJSONAuthoring","jsonStringChanged","advancedAuthoringViewComponentChanged","$inject"],"mappings":"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","file":"embeddedAuthoringController.js","sourcesContent":["'use strict';\n\nimport EmbeddedController from \"./embeddedController\";\nimport html2canvas from 'html2canvas';\nimport iframeResizer from 'iframe-resizer';\n\nclass EmbeddedAuthoringController extends EmbeddedController {\n  constructor($filter,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              $sce,\n              $timeout,\n              $window,\n              AnnotationService,\n              ConfigService,\n              EmbeddedService,\n              NodeService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    super($filter,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $sce,\n      $timeout,\n      $window,\n      AnnotationService,\n      ConfigService,\n      EmbeddedService,\n      NodeService,\n      NotebookService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService);\n\n    this.connectedComponentUpdateOnOptions = [\n      {\n        value: 'change',\n        text: 'Change'\n      },\n      {\n        value: 'submit',\n        text: 'Submit'\n      }\n    ];\n\n    this.allowedConnectedComponentTypes = [\n      { type: 'Animation' },\n      { type: 'AudioOscillator' },\n      { type: 'ConceptMap' },\n      { type: 'Discussion' },\n      { type: 'Draw' },\n      { type: 'Embedded' },\n      { type: 'Graph' },\n      { type: 'Label' },\n      { type: 'Match' },\n      { type: 'MultipleChoice' },\n      { type: 'OpenResponse' },\n      { type: 'Table' }\n    ];\n\n    this.summernoteRubricId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n    this.summernoteRubricHTML = this.componentContent.rubric;\n\n    // the tooltip text for the insert WISE asset button\n    var insertAssetString = this.$translate('INSERT_ASSET');\n\n    // create the custom button for inserting WISE assets into summernote\n    var InsertAssetButton = this.UtilService\n      .createInsertAssetButton(this, null, this.nodeId, this.componentId, 'rubric', insertAssetString);\n\n    this.summernoteRubricOptions = {\n      toolbar: [\n        ['style', ['style']],\n        ['font', ['bold', 'underline', 'clear']],\n        ['fontname', ['fontname']],\n        ['fontsize', ['fontsize']],\n        ['color', ['color']],\n        ['para', ['ul', 'ol', 'paragraph']],\n        ['table', ['table']],\n        ['insert', ['link', 'video']],\n        ['view', ['fullscreen', 'codeview', 'help']],\n        ['customButton', ['insertAssetButton']]\n      ],\n      height: 300,\n      disableDragAndDrop: true,\n      buttons: {\n        insertAssetButton: InsertAssetButton\n      }\n    };\n\n    this.updateAdvancedAuthoringView();\n\n    $scope.$watch(function() {\n      return this.authoringComponentContent;\n    }.bind(this), function(newValue, oldValue) {\n      this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n      this.isSaveButtonVisible = this.componentContent.showSaveButton;\n      this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n      this.width = this.componentContent.width ? this.componentContent.width : '100%';\n      this.height = this.componentContent.height ? this.componentContent.height : '100%';\n      this.setURL(this.componentContent.url);\n    }.bind(this), true);\n\n    /*\n     * Listen for the assetSelected event which occurs when the user\n     * selects an asset from the choose asset popup\n     */\n    this.$scope.$on('assetSelected', (event, args) => {\n      if (args != null) {\n        if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n          var assetItem = args.assetItem;\n          if (assetItem != null) {\n            var fileName = assetItem.fileName;\n            if (fileName != null) {\n              // get the assets directory path, e.g. /wise/curriculum/3/\n              var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n              var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n              var summernoteId = '';\n\n              if (args.target == 'prompt') {\n                summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n              } else if (args.target == 'rubric') {\n                summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n              }\n\n              if (summernoteId != '') {\n                if (this.UtilService.isImage(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n                  $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                } else if (this.UtilService.isVideo(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  var videoElement = document.createElement('video');\n                  videoElement.controls = 'true';\n                  videoElement.innerHTML = '<source ng-src=\"' + fullAssetPath + '\" type=\"video/mp4\">';\n                  $('#' + summernoteId).summernote('insertNode', videoElement);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      this.$mdDialog.hide();\n    });\n\n    /* TODO geoffreykwan we're listening to assetSelected twice?\n     * Listen for the assetSelected event which occurs when the user\n     * selects an asset from the choose asset popup\n     */\n    this.$scope.$on('assetSelected', (event, args) => {\n      if (args != null) {\n        if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n          var assetItem = args.assetItem;\n          if (assetItem != null) {\n            var fileName = assetItem.fileName;\n            if (fileName != null) {\n              if (args.target == 'modelFile') {\n                this.authoringComponentContent.url = fileName;\n                this.authoringViewComponentChanged();\n              }\n            }\n          }\n        }\n      }\n      this.$mdDialog.hide();\n    });\n\n    /*\n     * The advanced button for a component was clicked. If the button was\n     * for this component, we will show the advanced authoring.\n     */\n    this.$scope.$on('componentAdvancedButtonClicked', (event, args) => {\n      if (args != null) {\n        let componentId = args.componentId;\n        if (this.componentId === componentId) {\n          this.showAdvancedAuthoring = !this.showAdvancedAuthoring;\n        }\n      }\n    });\n  }\n\n  /**\n   * The component has changed in the regular authoring view so we will save the project\n   */\n  authoringViewComponentChanged() {\n    this.updateAdvancedAuthoringView();\n\n    /*\n     * notify the parent node that the content has changed which will save\n     * the project to the server\n     */\n    this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n  };\n\n  /**\n   * The component has changed in the advanced authoring view so we will update\n   * the component and save the project.\n   */\n  advancedAuthoringViewComponentChanged() {\n    try {\n      /*\n       * create a new component by converting the JSON string in the advanced\n       * authoring view into a JSON object\n       */\n      var editedComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n      this.ProjectService.replaceComponent(this.nodeId, this.componentId, editedComponentContent);\n\n      this.componentContent = editedComponentContent;\n\n      /*\n       * notify the parent node that the content has changed which will save\n       * the project to the server\n       */\n      this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n    } catch(e) {\n      this.$scope.$parent.nodeAuthoringController.showSaveErrorAdvancedAuthoring();\n    }\n  };\n\n  /**\n   * Update the component JSON string that will be displayed in the advanced authoring view textarea\n   */\n  updateAdvancedAuthoringView() {\n    this.authoringComponentContentJSONString = angular.toJson(this.authoringComponentContent, 4);\n  };\n\n  summernoteRubricHTMLChanged() {\n    var html = this.summernoteRubricHTML;\n\n    /*\n     * remove the absolute asset paths\n     * e.g.\n     * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n     * will be changed to\n     * <img src='sun.png'/>\n     */\n    html = this.ConfigService.removeAbsoluteAssetPaths(html);\n\n    /*\n     * replace <a> and <button> elements with <wiselink> elements when\n     * applicable\n     */\n    html = this.UtilService.insertWISELinks(html);\n\n    this.authoringComponentContent.rubric = html;\n    this.authoringViewComponentChanged();\n  }\n\n  addConnectedComponent() {\n    var newConnectedComponent = {};\n    newConnectedComponent.nodeId = this.nodeId;\n    newConnectedComponent.componentId = null;\n    newConnectedComponent.updateOn = 'change';\n    if (this.authoringComponentContent.connectedComponents == null) {\n      this.authoringComponentContent.connectedComponents = [];\n    }\n    this.authoringComponentContent.connectedComponents.push(newConnectedComponent);\n    this.authoringViewComponentChanged();\n  }\n\n  deleteConnectedComponent(indexOfComponentToDelete) {\n    if (this.authoringComponentContent.connectedComponents != null) {\n      this.authoringComponentContent.connectedComponents.splice(indexOfComponentToDelete, 1);\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  setShowSubmitButtonValue(show) {\n    if (show == null || show == false) {\n      this.authoringComponentContent.showSaveButton = false;\n      this.authoringComponentContent.showSubmitButton = false;\n    } else {\n      this.authoringComponentContent.showSaveButton = true;\n      this.authoringComponentContent.showSubmitButton = true;\n    }\n\n    /*\n     * notify the parent node that this component is changing its\n     * showSubmitButton value so that it can show save buttons on the\n     * step or sibling components accordingly\n     */\n    this.$scope.$emit('componentShowSubmitButtonValueChanged', {nodeId: this.nodeId, componentId: this.componentId, showSubmitButton: show});\n  }\n\n  showSubmitButtonValueChanged() {\n    /*\n     * perform additional processing for when we change the showSubmitButton\n     * value\n     */\n    this.setShowSubmitButtonValue(this.authoringComponentContent.showSubmitButton);\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose the model file\n   */\n  chooseModelFile() {\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'modelFile';\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  addTag() {\n    if (this.authoringComponentContent.tags == null) {\n      this.authoringComponentContent.tags = [];\n    }\n    this.authoringComponentContent.tags.push('');\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Move a tag up\n   * @param index the index of the tag to move up\n   */\n  moveTagUp(index) {\n    if (index > 0) {\n      // the index is not at the top so we can move it up\n      let tag = this.authoringComponentContent.tags[index];\n      this.authoringComponentContent.tags.splice(index, 1);\n      this.authoringComponentContent.tags.splice(index - 1, 0, tag);\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Move a tag down\n   * @param index the index of the tag to move down\n   */\n  moveTagDown(index) {\n    if (index < this.authoringComponentContent.tags.length - 1) {\n      // the index is not at the bottom so we can move it down\n      let tag = this.authoringComponentContent.tags[index];\n      this.authoringComponentContent.tags.splice(index, 1);\n      this.authoringComponentContent.tags.splice(index + 1, 0, tag);\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  deleteTag(indexOfTagToDelete) {\n    if (confirm(this.$translate('areYouSureYouWantToDeleteThisTag'))) {\n      this.authoringComponentContent.tags.splice(indexOfTagToDelete, 1);\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  authoringAddConnectedComponent() {\n    /*\n     * create the new connected component object that will contain a\n     * node id and component id\n     */\n    var newConnectedComponent = {};\n    newConnectedComponent.nodeId = this.nodeId;\n    newConnectedComponent.componentId = null;\n    newConnectedComponent.type = null;\n    this.authoringAutomaticallySetConnectedComponentComponentIdIfPossible(newConnectedComponent);\n\n    if (this.authoringComponentContent.connectedComponents == null) {\n      this.authoringComponentContent.connectedComponents = [];\n    }\n    this.authoringComponentContent.connectedComponents.push(newConnectedComponent);\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Automatically set the component id for the connected component if there\n   * is only one viable option.\n   * @param connectedComponent the connected component object we are authoring\n   */\n  authoringAutomaticallySetConnectedComponentComponentIdIfPossible(connectedComponent) {\n    if (connectedComponent != null) {\n      let components = this.getComponentsByNodeId(connectedComponent.nodeId);\n      if (components != null) {\n        let numberOfAllowedComponents = 0;\n        let allowedComponent = null;\n        for (let component of components) {\n          if (component != null) {\n            if (this.isConnectedComponentTypeAllowed(component.type) &&\n              component.id != this.componentId) {\n              // we have found a viable component we can connect to\n              numberOfAllowedComponents += 1;\n              allowedComponent = component;\n            }\n          }\n        }\n\n        if (numberOfAllowedComponents == 1) {\n          /*\n           * there is only one viable component to connect to so we\n           * will use it\n           */\n          connectedComponent.componentId = allowedComponent.id;\n          connectedComponent.type = 'importWork';\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete a connected component\n   * @param index the index of the component to delete\n   */\n  authoringDeleteConnectedComponent(index) {\n    if (confirm(this.$translate('areYouSureYouWantToDeleteThisConnectedComponent'))) {\n      if (this.authoringComponentContent.connectedComponents != null) {\n        this.authoringComponentContent.connectedComponents.splice(index, 1);\n      }\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Get the connected component type\n   * @param connectedComponent get the component type of this connected component\n   * @return the connected component type\n   */\n  authoringGetConnectedComponentType(connectedComponent) {\n    var connectedComponentType = null;\n    if (connectedComponent != null) {\n      var nodeId = connectedComponent.nodeId;\n      var componentId = connectedComponent.componentId;\n      var component = this.ProjectService.getComponentByNodeIdAndComponentId(nodeId, componentId);\n\n      if (component != null) {\n        connectedComponentType = component.type;\n      }\n    }\n    return connectedComponentType;\n  }\n\n  /**\n   * The connected component node id has changed\n   * @param connectedComponent the connected component that has changed\n   */\n  authoringConnectedComponentNodeIdChanged(connectedComponent) {\n    if (connectedComponent != null) {\n      connectedComponent.componentId = null;\n      connectedComponent.type = null;\n      this.authoringAutomaticallySetConnectedComponentComponentIdIfPossible(connectedComponent);\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * The connected component component id has changed\n   * @param connectedComponent the connected component that has changed\n   */\n  authoringConnectedComponentComponentIdChanged(connectedComponent) {\n    if (connectedComponent != null) {\n      // default the type to import work\n      connectedComponent.type = 'importWork';\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * The connected component type has changed\n   * @param connectedComponent the connected component that changed\n   */\n  authoringConnectedComponentTypeChanged(connectedComponent) {\n    if (connectedComponent != null) {\n      if (connectedComponent.type == 'importWork') {\n        /*\n         * the type has changed to import work\n         */\n      } else if (connectedComponent.type == 'showWork') {\n        /*\n         * the type has changed to show work\n         */\n      }\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Check if we are allowed to connect to this component type\n   * @param componentType the component type\n   * @return whether we can connect to the component type\n   */\n  isConnectedComponentTypeAllowed(componentType) {\n    if (componentType != null) {\n      let allowedConnectedComponentTypes = this.allowedConnectedComponentTypes;\n      for (let allowedConnectedComponentType of allowedConnectedComponentTypes) {\n        if (allowedConnectedComponentType != null) {\n          if (componentType == allowedConnectedComponentType.type) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The show JSON button was clicked to show or hide the JSON authoring\n   */\n  showJSONButtonClicked() {\n    this.showJSONAuthoring = !this.showJSONAuthoring;\n    if (this.jsonStringChanged && !this.showJSONAuthoring) {\n      /*\n       * the author has changed the JSON and has just closed the JSON\n       * authoring view so we will save the component\n       */\n      this.advancedAuthoringViewComponentChanged();\n\n      this.$rootScope.$broadcast('scrollToComponent', { componentId: this.componentId });\n      this.jsonStringChanged = false;\n    }\n  }\n\n  /**\n   * The author has changed the JSON manually in the advanced view\n   */\n  authoringJSONChanged() {\n    this.jsonStringChanged = true;\n  }\n}\n\nEmbeddedAuthoringController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$sce',\n  '$timeout',\n  '$window',\n  'AnnotationService',\n  'ConfigService',\n  'EmbeddedService',\n  'NodeService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default EmbeddedAuthoringController;\n"]}