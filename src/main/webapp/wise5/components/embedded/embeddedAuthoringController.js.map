{"version":3,"sources":["embeddedAuthoringController.es6"],"names":["EmbeddedAuthoringController","$filter","$mdDialog","$q","$rootScope","$scope","$sce","$timeout","$window","AnnotationService","ConfigService","EmbeddedService","NodeService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","allowedConnectedComponentTypes","type","$watch","authoringComponentContent","bind","newValue","oldValue","componentContent","injectAssetPaths","isSaveButtonVisible","showSaveButton","isSubmitButtonVisible","showSubmitButton","setWidthAndHeight","width","height","setURL","url","event","args","isEventTargetThisComponent","fileName","assetItem","target","summernoteId","getSummernoteId","restoreSummernoteCursorPosition","fullAssetPath","getFullAssetPath","isImage","insertImageIntoSummernote","isVideo","insertVideoIntoSummernote","authoringViewComponentChanged","hide","params","isPopup","nodeId","componentId","$broadcast","EmbeddedController","$inject"],"mappings":"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","sourcesContent":["'use strict';\n\nimport EmbeddedController from \"./embeddedController\";\n\nclass EmbeddedAuthoringController extends EmbeddedController {\n  constructor($filter,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              $sce,\n              $timeout,\n              $window,\n              AnnotationService,\n              ConfigService,\n              EmbeddedService,\n              NodeService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    super($filter,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $sce,\n      $timeout,\n      $window,\n      AnnotationService,\n      ConfigService,\n      EmbeddedService,\n      NodeService,\n      NotebookService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService);\n\n    this.allowedConnectedComponentTypes = [\n      { type: 'Animation' },\n      { type: 'AudioOscillator' },\n      { type: 'ConceptMap' },\n      { type: 'Discussion' },\n      { type: 'Draw' },\n      { type: 'Embedded' },\n      { type: 'Graph' },\n      { type: 'Label' },\n      { type: 'Match' },\n      { type: 'MultipleChoice' },\n      { type: 'OpenResponse' },\n      { type: 'Table' }\n    ];\n\n    $scope.$watch(function() {\n      return this.authoringComponentContent;\n    }.bind(this), function(newValue, oldValue) {\n      this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n      this.isSaveButtonVisible = this.componentContent.showSaveButton;\n      this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n      this.setWidthAndHeight(this.componentContent.width, this.componentContent.height);\n      this.setURL(this.componentContent.url);\n    }.bind(this), true);\n  }\n\n  assetSelected(event, args) {\n    if (this.isEventTargetThisComponent(args)) {\n      const fileName = args.assetItem.fileName;\n      if (args.target === 'rubric') {\n        const summernoteId = this.getSummernoteId(args);\n        this.restoreSummernoteCursorPosition(summernoteId);\n        const fullAssetPath = this.getFullAssetPath(fileName);\n        if (this.UtilService.isImage(fileName)) {\n          this.insertImageIntoSummernote(summernoteId, fullAssetPath, fileName);\n        } else if (this.UtilService.isVideo(fileName)) {\n          this.insertVideoIntoSummernote(summernoteId, fullAssetPath);\n        }\n      } else if (args.target === 'modelFile') {\n        this.authoringComponentContent.url = fileName;\n        this.authoringViewComponentChanged();\n      }\n    }\n    this.$mdDialog.hide();\n  }\n\n  showModelFileChooserPopup() {\n    const params = {\n      isPopup: true,\n      nodeId: this.nodeId,\n      componentId: this.componentId,\n      target: 'modelFile'\n    };\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n}\n\nEmbeddedAuthoringController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$sce',\n  '$timeout',\n  '$window',\n  'AnnotationService',\n  'ConfigService',\n  'EmbeddedService',\n  'NodeService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default EmbeddedAuthoringController;\n"],"file":"embeddedAuthoringController.js"}