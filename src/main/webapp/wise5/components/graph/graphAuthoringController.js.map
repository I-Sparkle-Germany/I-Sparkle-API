{"version":3,"sources":["graphAuthoringController.es6"],"names":["GraphAuthoringController","$filter","$mdDialog","$q","$rootScope","$scope","$timeout","AnnotationService","ConfigService","GraphService","NodeService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","availableGraphTypes","value","text","$translate","availableRoundingOptions","availableSymbols","availableLineTypes","availableXAxisTypes","allowedConnectedComponentTypes","type","isResetSeriesButtonVisible","isSelectSeriesVisible","backgroundImage","componentContent","$watch","authoringComponentContent","newValue","oldValue","injectAssetPaths","series","xAxis","yAxis","submitCounter","isSaveButtonVisible","showSaveButton","isSubmitButtonVisible","showSubmitButton","graphType","legendEnabled","hideLegend","showTrialSelect","hideTrialSelect","setSeries","makeCopyOfJSONObject","setDefaultActiveSeries","trials","newTrial","clearPlotLines","drawGraph","event","args","isEventTargetThisComponent","fileName","assetItem","target","summernoteId","getSummernoteId","restoreSummernoteCursorPosition","fullAssetPath","getFullAssetPath","isImage","insertImageIntoSummernote","isVideo","insertVideoIntoSummernote","authoringViewComponentChanged","hide","newSeries","createNewSeries","push","index","message","seriesName","name","confirm","splice","enableTrials","canCreateNewTrials","canDeleteTrials","hideAllTrialsOnNewTrial","params","isPopup","nodeId","componentId","$broadcast","categories","confirmMessage","categoryName","data","dataPoint","length","min","max","authoringConvertAllSeriesDataPoints","units","xAxisType","singleSeries","convertSeriesDataPoints","newConnectedComponent","authoringAutomaticallySetConnectedComponentComponentIdIfPossible","connectedComponents","connectedComponent","components","getComponentsByNodeId","numberOfAllowedComponents","allowedComponent","component","isConnectedComponentTypeAllowed","id","authoringSetImportWorkAsBackgroundIfApplicable","seriesNumbers","seriesNumberIndex","connectedComponentType","authoringGetConnectedComponentType","skipFirstRow","xColumn","yColumn","showClassmateWorkSource","showClassmateWork","componentType","importWorkAsBackground","GraphController","$inject"],"mappings":"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","file":"graphAuthoringController.js","sourcesContent":["'use strict';\n\nimport GraphController from \"./graphController\";\nimport html2canvas from 'html2canvas';\n\nclass GraphAuthoringController extends GraphController {\n  constructor($filter,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              $timeout,\n              AnnotationService,\n              ConfigService,\n              GraphService,\n              NodeService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    super($filter,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $timeout,\n      AnnotationService,\n      ConfigService,\n      GraphService,\n      NodeService,\n      NotebookService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService);\n\n    this.availableGraphTypes = [\n      {\n        value: 'line',\n        text: this.$translate('graph.linePlot')\n      },\n      {\n        value: 'column',\n        text: this.$translate('graph.columnPlot')\n      },\n      {\n        value: 'scatter',\n        text: this.$translate('graph.scatterPlot')\n      }\n    ];\n\n    this.availableRoundingOptions = [\n      {\n        value: null,\n        text: this.$translate('graph.noRounding')\n      },\n      {\n        value: 'integer',\n        text: this.$translate('graph.roundToInteger')\n      },\n      {\n        value: 'tenth',\n        text: this.$translate('graph.roundToTenth')\n      },\n      {\n        value: 'hundredth',\n        text: this.$translate('graph.roundToHundredth')\n      }\n    ];\n\n    this.availableSymbols = [\n      {\n        value: 'circle',\n        text: this.$translate('graph.circle')\n      },\n      {\n        value: 'square',\n        text: this.$translate('graph.square')\n      },\n      {\n        value: 'triangle',\n        text: this.$translate('graph.triangle')\n      },\n      {\n        value: 'triangle-down',\n        text: this.$translate('graph.triangleDown')\n      },\n      {\n        value: 'diamond',\n        text: this.$translate('graph.diamond')\n      }\n    ];\n\n    this.availableLineTypes = [\n      {\n        value: 'Solid',\n        text: this.$translate('graph.solid')\n      },\n      {\n        value: 'Dash',\n        text: this.$translate('graph.dash')\n      },\n      {\n        value: 'Dot',\n        text: this.$translate('graph.dot')\n      },\n      {\n        value: 'ShortDash',\n        text: this.$translate('graph.shortDash')\n      },\n      {\n        value: 'ShortDot',\n        text: this.$translate('graph.shortDot')\n      }\n    ];\n\n    this.availableXAxisTypes = [\n      {\n        value: 'limits',\n        text: 'Limits'\n      },\n      {\n        value: 'categories',\n        text: 'Categories'\n      }\n    ];\n\n    this.allowedConnectedComponentTypes = [\n      { type: 'Animation' },\n      { type: 'ConceptMap' },\n      { type: 'Draw' },\n      { type: 'Embedded' },\n      { type: 'Graph' },\n      { type: 'Label' },\n      { type: 'Table' }\n    ];\n\n    this.isResetSeriesButtonVisible = true;\n    this.isSelectSeriesVisible = true;\n    this.backgroundImage = this.componentContent.backgroundImage;\n\n    $scope.$watch(() => {\n      return this.authoringComponentContent;\n    }, (newValue, oldValue) => {\n      this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n      this.series = null;\n      this.xAxis = null;\n      this.yAxis = null;\n      this.submitCounter = 0;\n      this.backgroundImage = this.componentContent.backgroundImage;\n      this.isSaveButtonVisible = this.componentContent.showSaveButton;\n      this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n      this.graphType = this.componentContent.graphType;\n      this.isResetSeriesButtonVisible = true;\n      this.isSelectSeriesVisible = true;\n      this.legendEnabled = !this.componentContent.hideLegend;\n      this.showTrialSelect = !this.componentContent.hideTrialSelect;\n      this.setSeries(this.UtilService.makeCopyOfJSONObject(this.componentContent.series));\n      this.setDefaultActiveSeries();\n      this.trials = [];\n      this.newTrial();\n      this.clearPlotLines();\n      this.drawGraph();\n    }, true);\n  }\n\n  assetSelected(event, args) {\n    if (this.isEventTargetThisComponent(args)) {\n      const fileName = args.assetItem.fileName;\n      if (args.target === 'rubric') {\n        const summernoteId = this.getSummernoteId(args);\n        this.restoreSummernoteCursorPosition(summernoteId);\n        const fullAssetPath = this.getFullAssetPath(fileName);\n        if (this.UtilService.isImage(fileName)) {\n          this.insertImageIntoSummernote(summernoteId, fullAssetPath, fileName);\n        } else if (this.UtilService.isVideo(fileName)) {\n          this.insertVideoIntoSummernote(summernoteId, fullAssetPath);\n        }\n      } else if (args.target === 'background') {\n        this.authoringComponentContent.backgroundImage = fileName;\n        this.authoringViewComponentChanged();\n      }\n    }\n    this.$mdDialog.hide();\n  }\n\n  authoringAddSeriesClicked() {\n    const newSeries = this.createNewSeries();\n    this.authoringComponentContent.series.push(newSeries);\n    this.authoringViewComponentChanged();\n  }\n\n  authoringDeleteSeriesClicked(index) {\n    let message = '';\n    let seriesName = '';\n    if (this.authoringComponentContent.series != null) {\n      const series = this.authoringComponentContent.series[index];\n      if (series != null && series.name != null) {\n        seriesName = series.name;\n      }\n    }\n    if (seriesName == null || seriesName === '') {\n      message = this.$translate('graph.areYouSureYouWantToDeleteTheSeries');\n    } else {\n      message = this.$translate('graph.areYouSureYouWantToDeleteTheNamedSeries', { seriesName: seriesName });\n    }\n    if (confirm(message)) {\n      this.authoringComponentContent.series.splice(index, 1);\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  authoringViewEnableTrialsClicked() {\n    if (this.authoringComponentContent.enableTrials) {\n      this.authoringComponentContent.canCreateNewTrials = true;\n      this.authoringComponentContent.canDeleteTrials = true;\n    } else {\n      this.authoringComponentContent.canCreateNewTrials = false;\n      this.authoringComponentContent.canDeleteTrials = false;\n      this.authoringComponentContent.hideAllTrialsOnNewTrial = true;\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  showChooseBackgroundImagePopup() {\n    const params = {\n      isPopup: true,\n      nodeId: this.nodeId,\n      componentId: this.componentId,\n      target: 'background'\n    };\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  authoringAddXAxisCategory() {\n    this.authoringComponentContent.xAxis.categories.push('');\n    this.authoringViewComponentChanged();\n  }\n\n  authoringDeleteXAxisCategory(index) {\n    let confirmMessage = '';\n    let categoryName = '';\n    if (this.authoringComponentContent.xAxis != null &&\n      this.authoringComponentContent.xAxis.categories != null) {\n      categoryName = this.authoringComponentContent.xAxis.categories[index];\n    }\n    if (categoryName == null || categoryName === '') {\n      confirmMessage = this.$translate('graph.areYouSureYouWantToDeleteTheCategory');\n    } else {\n      confirmMessage = this.$translate('graph.areYouSureYouWantToDeleteTheNamedCategory', { categoryName: categoryName });\n    }\n    if (confirm(confirmMessage)) {\n      this.authoringComponentContent.xAxis.categories.splice(index, 1);\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  authoringAddSeriesDataPoint(series) {\n    if (series != null && series.data != null) {\n      if (this.authoringComponentContent.xAxis.type == null ||\n        this.authoringComponentContent.xAxis.type === 'limits') {\n        series.data.push([]);\n      } else if (this.authoringComponentContent.xAxis.type === 'categories') {\n        series.data.push(null);\n      }\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  authoringDeleteSeriesDataPoint(series, index) {\n    if (series != null && series.data != null) {\n      if (confirm(this.$translate('graph.areYouSureYouWantToDeleteTheDataPoint'))) {\n        series.data.splice(index, 1);\n        this.authoringViewComponentChanged();\n      }\n    }\n  }\n\n  authoringMoveSeriesDataPointUp(series, index) {\n    if (index > 0) {\n      const dataPoint = series.data[index];\n      series.data.splice(index, 1);\n      series.data.splice(index - 1, 0, dataPoint);\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  authoringMoveSeriesDataPointDown(series, index) {\n    if (index < series.data.length - 1) {\n      const dataPoint = series.data[index];\n      series.data.splice(index, 1);\n      series.data.splice(index + 1, 0, dataPoint);\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  authoringViewXAxisTypeChanged(newValue, oldValue) {\n    if (confirm(this.$translate('graph.areYouSureYouWantToChangeTheXAxisType'))) {\n      if (oldValue === 'categories' && newValue === 'limits') {\n        delete this.authoringComponentContent.xAxis.categories;\n        this.authoringComponentContent.xAxis.min = 0;\n        this.authoringComponentContent.xAxis.max = 10;\n        this.authoringConvertAllSeriesDataPoints(newValue);\n      } else if ((oldValue === 'limits' || oldValue === '' || oldValue == null) &&\n          newValue === 'categories') {\n        delete this.authoringComponentContent.xAxis.min;\n        delete this.authoringComponentContent.xAxis.max;\n        delete this.authoringComponentContent.xAxis.units;\n        delete this.authoringComponentContent.yAxis.units;\n        this.authoringComponentContent.xAxis.categories = [];\n        this.authoringConvertAllSeriesDataPoints(newValue);\n      }\n    } else {\n      this.authoringComponentContent.xAxis.type = oldValue;\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  authoringConvertAllSeriesDataPoints(xAxisType) {\n    const series = this.authoringComponentContent.series;\n    for (const singleSeries of series) {\n      this.convertSeriesDataPoints(singleSeries, xAxisType);\n    }\n  }\n\n  authoringAddConnectedComponent() {\n    const newConnectedComponent = {\n      nodeId: this.nodeId,\n      componentId: null,\n      type: null\n    };\n    this.authoringAutomaticallySetConnectedComponentComponentIdIfPossible(newConnectedComponent);\n    if (this.authoringComponentContent.connectedComponents == null) {\n      this.authoringComponentContent.connectedComponents = [];\n    }\n    this.authoringComponentContent.connectedComponents.push(newConnectedComponent);\n    if (this.authoringComponentContent.connectedComponents.length > 1) {\n      /*\n       * there is more than one connected component so we will enable\n       * trials so that each connected component can put work in a\n       * different trial\n       */\n      this.authoringComponentContent.enableTrials = true;\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  authoringAutomaticallySetConnectedComponentComponentIdIfPossible(connectedComponent) {\n    const components = this.getComponentsByNodeId(connectedComponent.nodeId);\n    if (components != null) {\n      let numberOfAllowedComponents = 0;\n      let allowedComponent = null;\n      for (const component of components) {\n        if (this.isConnectedComponentTypeAllowed(component.type) &&\n            component.id !== this.componentId) {\n          numberOfAllowedComponents += 1;\n          allowedComponent = component;\n        }\n      }\n      if (numberOfAllowedComponents === 1) {\n        // there is only one viable component to connect to so we will use it\n        connectedComponent.componentId = allowedComponent.id;\n        connectedComponent.type = 'importWork';\n        this.authoringSetImportWorkAsBackgroundIfApplicable(connectedComponent);\n      }\n    }\n  }\n\n  authoringAddConnectedComponentSeriesNumber(connectedComponent) {\n    if (connectedComponent.seriesNumbers == null) {\n      connectedComponent.seriesNumbers = [];\n    }\n    connectedComponent.seriesNumbers.push(null);\n    this.authoringViewComponentChanged();\n  }\n\n  authoringDeleteConnectedComponentSeriesNumber(connectedComponent, seriesNumberIndex) {\n    if (connectedComponent.seriesNumbers == null) {\n      connectedComponent.seriesNumbers = [];\n    }\n    connectedComponent.seriesNumbers.splice(seriesNumberIndex, 1);\n    this.authoringViewComponentChanged();\n  }\n\n  authoringConnectedComponentSeriesNumberChanged(connectedComponent, seriesNumberIndex, value) {\n    if (connectedComponent.seriesNumbers == null) {\n      connectedComponent.seriesNumbers = [];\n    }\n    if (seriesNumberIndex < connectedComponent.seriesNumbers.length) {\n      connectedComponent.seriesNumbers[seriesNumberIndex] = value;\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  authoringConnectedComponentComponentIdChanged(connectedComponent) {\n    const connectedComponentType = this.authoringGetConnectedComponentType(connectedComponent);\n    if (connectedComponentType !== 'Embedded') {\n      /*\n       * the component type is not Embedded so we will remove the\n       * seriesNumbers field\n       */\n      delete connectedComponent.seriesNumbers;\n    }\n    if (connectedComponentType !== 'Table') {\n      /*\n       * the component type is not Table so we will remove the\n       * skipFirstRow, xColumn, and yColumn fields\n       */\n      delete connectedComponent.skipFirstRow;\n      delete connectedComponent.xColumn;\n      delete connectedComponent.yColumn;\n    }\n    if (connectedComponentType !== 'Graph') {\n      /*\n       * the component type is not Graph so we will remove the\n       * show classmate work fields\n       */\n      delete connectedComponent.showClassmateWorkSource;\n    }\n    if (connectedComponentType === 'Table') {\n      // set default values for the connected component params\n      connectedComponent.skipFirstRow = true;\n      connectedComponent.xColumn = 0;\n      connectedComponent.yColumn = 1;\n    }\n    connectedComponent.type = 'importWork';\n    this.authoringSetImportWorkAsBackgroundIfApplicable(connectedComponent);\n    this.authoringViewComponentChanged();\n  }\n\n  connectedComponentShowClassmateWorkChanged(connectedComponent) {\n    if (connectedComponent.showClassmateWork) {\n      /*\n       * show classmate work was enabled so we will default the\n       * show classmate work source to period\n       */\n      connectedComponent.showClassmateWorkSource = 'period';\n    } else {\n      /*\n       * the show classmate work was disabled so we will remove\n       * the show classmate work fields\n       */\n      delete connectedComponent.showClassmateWork;\n      delete connectedComponent.showClassmateWorkSource;\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  authoringSetImportWorkAsBackgroundIfApplicable(connectedComponent) {\n    const componentType = this.authoringGetConnectedComponentType(connectedComponent);\n    if (componentType === 'ConceptMap' || componentType === 'Draw' || componentType === 'Label') {\n      connectedComponent.importWorkAsBackground = true;\n    } else {\n      delete connectedComponent.importWorkAsBackground;\n    }\n  }\n\n  authoringConnectedComponentTypeChanged(connectedComponent) {\n    if (connectedComponent.type === 'importWork') {\n      delete connectedComponent.showClassmateWorkSource;\n    } else if (connectedComponent.type === 'showWork') {\n      delete connectedComponent.showClassmateWorkSource;\n    } else if (connectedComponent.type === 'showClassmateWork') {\n      /*\n       * the type has changed to show classmate work so we will enable\n       * trials so that each classmate work will show up in a\n       * different trial\n       */\n      this.authoringComponentContent.enableTrials = true;\n      if (connectedComponent.showClassmateWorkSource == null) {\n        connectedComponent.showClassmateWorkSource = 'period';\n      }\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  authoringImportWorkAsBackgroundClicked(connectedComponent) {\n    if (!connectedComponent.importWorkAsBackground) {\n      delete connectedComponent.importWorkAsBackground;\n    }\n    this.authoringViewComponentChanged();\n  }\n}\n\n\nGraphAuthoringController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$timeout',\n  'AnnotationService',\n  'ConfigService',\n  'GraphService',\n  'NodeService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default GraphAuthoringController;\n"]}