{"version":3,"sources":["graphService.es6"],"names":["GraphService","$filter","$q","StudentAssetService","StudentDataService","UtilService","$translate","component","type","title","width","height","enableTrials","canCreateNewTrials","canDeleteTrials","hideAllTrialsOnNewTrial","canStudentHideSeriesOnLegendClick","roundValuesTo","graphType","xAxis","text","min","max","units","locked","yAxis","series","name","data","color","dashStyle","marker","symbol","regression","regressionSettings","canEdit","regressionSeries","i","length","s","regressionType","extraSerie","lineWidth","enabled","isRegressionLine","label","_linear","_exponential","_polynomial","_logarithmic","loessSmooth","_loess","console","error","rSquared","coefficientOfDetermination","points","toFixed","rValue","Math","sqrt","replace","string","regressionOutputs","push","sum","n","results","len","log","denominator","A","pow","E","B","xMin","xMax","numberOfPoints","xSpan","x","coordinate","sort","a","b","round","equation","N","gradient","intercept","mean","y","isNaN","order","lhs","rhs","k","l","c","j","gaussianElimination","answer","w","bandwidth","xval","map","pair","distinctX","array_unique","warn","yval","values","o","r","tricube","tmp","res","left","right","floor","edge","denom","abs","sumWeights","sumX","sumXSquared","sumY","sumXY","xk","yk","dist","xkw","meanX","meanY","meanXY","meanXSquared","beta","alpha","debug","maxrow","Array","pred","SSE","SSYY","componentStates","componentEvents","nodeEvents","node","hasComponentStates","isSubmitRequired","hasSubmitComponentState","componentState","componentStateHasStudentWork","hasNodeEnteredEvent","showSubmitButton","showSaveButton","isSubmit","singleSeries","hasImportWorkConnectedComponent","studentData","trials","trial","seriesData","componentContent","version","anySeriesHasDataPoint","anyTrialHasDataPoint","isStudentChangedAxisLimit","trialHasDataPoint","seriesHasDataPoint","multipleSeries","deferred","defer","componentId","highchartsDiv","angular","element","find","then","canvas","base64Image","toDataURL","imageObject","getImageObjectFromBase64String","uploadAsset","asset","resolve","promise","ComponentService","$inject"],"mappings":"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","file":"graphService.js","sourcesContent":["import ComponentService from '../componentService';\nimport html2canvas from 'html2canvas';\n\nclass GraphService extends ComponentService {\n  constructor($filter,\n      $q,\n      StudentAssetService,\n      StudentDataService,\n      UtilService) {\n    super($filter, StudentDataService, UtilService);\n    this.$q = $q;\n    this.StudentAssetService = StudentAssetService;\n  }\n\n  getComponentTypeLabel() {\n    return this.$translate('graph.componentTypeLabel');\n  }\n\n  /**\n   * Create a Graph component object\n   * @returns a new Graph component object\n   */\n  createComponent() {\n    const component = super.createComponent();\n    component.type = 'Graph';\n    component.title = '';\n    component.width = 800;\n    component.height = 500;\n    component.enableTrials = false;\n    component.canCreateNewTrials = false;\n    component.canDeleteTrials = false;\n    component.hideAllTrialsOnNewTrial = false;\n    component.canStudentHideSeriesOnLegendClick = false;\n    component.roundValuesTo = 'integer';\n    component.graphType = 'line';\n    component.xAxis = {\n      title: {\n        text: this.$translate('graph.timeSeconds')\n      },\n      min: 0,\n      max: 100,\n      units: this.$translate('graph.secondsUnit'),\n      locked: true,\n      type: 'limits'\n    };\n    component.yAxis = {\n      title: {\n        text: this.$translate('graph.positionMeters')\n      },\n      min: 0,\n      max: 100,\n      units: this.$translate('graph.metersUnit'),\n      locked: true\n    };\n    component.series = [\n      {\n        name: this.$translate('graph.prediction'),\n        data: [],\n        color: 'blue',\n        dashStyle: 'Solid',\n        marker: {\n          symbol: 'circle'\n        },\n        regression: false,\n        regressionSettings: {},\n        canEdit: true\n      }\n    ];\n    return component;\n  }\n\n  /**\n   * Code extracted from https://github.com/streamlinesocial/highcharts-regression\n   * Loop through all the series that are passed in and find the ones that we\n   * need to generate a regression series for. Return the regression series\n   * that are generated in an array.\n   * @param series an array of series\n   * @return an array of regression series\n   */\n  generateRegressionSeries(series) {\n    var regressionSeries = [];\n    var i = 0 ;\n    for (i = 0 ; i < series.length ; i++){\n      var s = series[i];\n      if ( s.regression ) {\n        s.regressionSettings =  s.regressionSettings || {} ;\n        var regressionType = s.regressionSettings.type || \"linear\" ;\n        var regression;\n\n        var color = s.color;\n\n        if (s.regressionSettings.color != null) {\n          color = s.regressionSettings.color;\n        }\n\n        var extraSerie = {\n          data:[],\n          color: color ,\n          yAxis: s.yAxis ,\n          lineWidth: 2,\n          marker: {enabled: false} ,\n          isRegressionLine: true,\n          name: s.regressionSettings.label || \"Equation: %eq\"\n        };\n\n\n        extraSerie.type = \"spline\";\n\n        if (regressionType == \"linear\") {\n          regression = this._linear(s.data, s.regressionSettings) ;\n          extraSerie.type = \"line\";\n        }else if (regressionType == \"exponential\") {\n          regression = this._exponential(s.data, s.regressionSettings) ;\n        }else if (regressionType == \"polynomial\"){\n          regression = this._polynomial(s.data, 2, s.regressionSettings) ;\n        }else if (regressionType == \"logarithmic\"){\n          regression = this._logarithmic(s.data, s.regressionSettings) ;\n        }else if (regressionType == \"loess\"){\n          var loessSmooth = s.regressionSettings.loessSmooth || 25\n          regression = this._loess(s.data, loessSmooth/100) ;\n        }else {\n          console.error(\"Invalid regression type: \" , regressionType) ;\n          break;\n        }\n\n        regression.rSquared =  this.coefficientOfDetermination(s.data, regression.points).toFixed(2);\n        regression.rValue = Math.sqrt(regression.rSquared,2).toFixed(2) ;\n        extraSerie.data = regression.points ;\n        extraSerie.name = extraSerie.name.replace(\"%r2\",regression.rSquared);\n        extraSerie.name = extraSerie.name.replace(\"%r\",regression.rValue);\n        extraSerie.name = extraSerie.name.replace(\"%eq\",regression.string);\n\n        extraSerie.regressionOutputs = regression ;\n\n        regressionSeries.push(extraSerie);\n      }\n    }\n\n    return regressionSeries;\n  }\n\n  /**\n   * Code extracted from https://github.com/Tom-Alexander/regression-js/\n   */\n  _exponential(data, regressionSettings) {\n    var sum = [0, 0, 0, 0, 0, 0], n = 0, results = [];\n\n    for (len = data.length; n < len; n++) {\n      if (data[n]['x']) {\n        data[n][0] = data[n]['x'];\n        data[n][1] = data[n]['y'];\n      }\n      if (data[n][1]) {\n        sum[0] += data[n][0]; // X\n        sum[1] += data[n][1]; // Y\n        sum[2] += data[n][0] * data[n][0] * data[n][1]; // XXY\n        sum[3] += data[n][1] * Math.log(data[n][1]); // Y Log Y\n        sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]); //YY Log Y\n        sum[5] += data[n][0] * data[n][1]; //XY\n      }\n    }\n\n    var denominator = (sum[1] * sum[2] - sum[5] * sum[5]);\n    var A = Math.pow(Math.E, (sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n    var B = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n\n    if(regressionSettings != null &&\n      regressionSettings.xMin != null &&\n      regressionSettings.xMax != null &&\n      regressionSettings.numberOfPoints != null) {\n\n      //regression settings have been provided\n\n      /*\n       * get the xMin and xMax so we know over what range to plot\n       * regression points for\n       */\n      var xMin = regressionSettings.xMin;\n      var xMax = regressionSettings.xMax;\n\n      //get the number of points that should be plotted on the regression line\n      var numberOfPoints = regressionSettings.numberOfPoints;\n\n      //get the distance between the xMin and xMax\n      var xSpan = xMax - xMin;\n\n      //calculate the points on the regression line\n      for (var i = 0; i < numberOfPoints; i++) {\n        var x = xMin + xSpan * (i / numberOfPoints);\n\n        var coordinate = [x, A * Math.pow(Math.E, B * x)];\n        results.push(coordinate);\n      }\n    } else {\n      /*\n       * regression settings have not been provided so we will use the default\n       * x values for the regression points\n       */\n      for (var i = 0, len = data.length; i < len; i++) {\n        var coordinate = [data[i][0], A * Math.pow(Math.E, B * data[i][0])];\n        results.push(coordinate);\n      }\n    }\n\n    results.sort(function(a,b){\n      if(a[0] > b[0]){ return 1}\n      if(a[0] < b[0]){ return -1}\n      return 0;\n    });\n\n    var string = 'y = ' + Math.round(A*100) / 100 + 'e^(' + Math.round(B*100) / 100 + 'x)';\n\n    return {equation: [A, B], points: results, string: string};\n  }\n\n  /**\n   * Code extracted from https://github.com/Tom-Alexander/regression-js/\n   * Human readable formulas:\n   *\n   *        N * Σ(XY) - Σ(X)\n   * intercept = ---------------------\n   *        N * Σ(X^2) - Σ(X)^2\n   *\n   * correlation = N * Σ(XY) - Σ(X) * Σ (Y) / √ (  N * Σ(X^2) - Σ(X) ) * ( N * Σ(Y^2) - Σ(Y)^2 ) ) )\n   *\n   */\n  _linear(data, regressionSettings) {\n    var sum = [0, 0, 0, 0, 0], n = 0, results = [], N = data.length;\n\n    for (; n < data.length; n++) {\n      if (data[n]['x']) {\n        data[n][0] = data[n]['x'];\n        data[n][1] = data[n]['y'];\n      }\n      if (data[n][1]) {\n        sum[0] += data[n][0]; //Σ(X)\n        sum[1] += data[n][1]; //Σ(Y)\n        sum[2] += data[n][0] * data[n][0]; //Σ(X^2)\n        sum[3] += data[n][0] * data[n][1]; //Σ(XY)\n        sum[4] += data[n][1] * data[n][1]; //Σ(Y^2)\n      }\n    }\n\n    var gradient = (n * sum[3] - sum[0] * sum[1]) / (n * sum[2] - sum[0] * sum[0]);\n    var intercept = (sum[1] / n) - (gradient * sum[0]) / n;\n    //var correlation = (n * sum[3] - sum[0] * sum[1]) / Math.sqrt((n * sum[2] - sum[0] * sum[0]) * (n * sum[4] - sum[1] * sum[1]));\n\n    if(regressionSettings != null &&\n      regressionSettings.xMin != null &&\n      regressionSettings.xMax != null &&\n      regressionSettings.numberOfPoints != null) {\n\n      //regression settings have been provided\n\n      /*\n       * get the xMin and xMax so we know over what range to plot\n       * regression points for\n       */\n      var xMin = regressionSettings.xMin;\n      var xMax = regressionSettings.xMax;\n\n      //get the number of points that should be plotted on the regression line\n      var numberOfPoints = regressionSettings.numberOfPoints;\n\n      //get the distance between the xMin and xMax\n      var xSpan = xMax - xMin;\n\n      //calculate the points on the regression line\n      for (var i = 0; i < numberOfPoints; i++) {\n        var x = xMin + xSpan * (i / numberOfPoints);\n\n        var coordinate = [x, x * gradient + intercept];\n        results.push(coordinate);\n      }\n    } else {\n      /*\n       * regression settings have not been provided so we will use the default\n       * x values for the regression points\n       */\n      for (var i = 0, len = data.length; i < len; i++) {\n        var coordinate = [data[i][0], data[i][0] * gradient + intercept];\n        results.push(coordinate);\n      }\n    }\n\n    results.sort(function(a,b){\n      if(a[0] > b[0]){ return 1}\n      if(a[0] < b[0]){ return -1}\n      return 0;\n    });\n\n    var string = 'y = ' + Math.round(gradient*100) / 100 + 'x + ' + Math.round(intercept*100) / 100;\n    return {equation: [gradient, intercept], points: results, string: string};\n  }\n\n  /**\n   *  Code extracted from https://github.com/Tom-Alexander/regression-js/\n   */\n  _logarithmic(data, regressionSettings) {\n    var sum = [0, 0, 0, 0], n = 0, results = [],mean = 0 ;\n\n\n    for (len = data.length; n < len; n++) {\n      if (data[n]['x']) {\n        data[n][0] = data[n]['x'];\n        data[n][1] = data[n]['y'];\n      }\n      if (data[n][1]) {\n        sum[0] += Math.log(data[n][0]);\n        sum[1] += data[n][1] * Math.log(data[n][0]);\n        sum[2] += data[n][1];\n        sum[3] += Math.pow(Math.log(data[n][0]), 2);\n      }\n    }\n\n    var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n    var A = (sum[2] - B * sum[0]) / n;\n\n    if(regressionSettings != null &&\n      regressionSettings.xMin != null &&\n      regressionSettings.xMax != null &&\n      regressionSettings.numberOfPoints != null) {\n\n      //regression settings have been provided\n\n      /*\n       * get the xMin and xMax so we know over what range to plot\n       * regression points for\n       */\n      var xMin = regressionSettings.xMin;\n      var xMax = regressionSettings.xMax;\n\n      //get the number of points that should be plotted on the regression line\n      var numberOfPoints = regressionSettings.numberOfPoints;\n\n      //get the distance between the xMin and xMax\n      var xSpan = xMax - xMin;\n\n      //calculate the points on the regression line\n      for (var i = 0; i < numberOfPoints; i++) {\n        var x = xMin + xSpan * (i / numberOfPoints);\n\n        if(x > 0) {\n          var y = A + B * Math.log(x);\n\n          if(!isNaN(y)) {\n            var coordinate = [x, y];\n            results.push(coordinate);\n          }\n        }\n      }\n    } else {\n      /*\n       * regression settings have not been provided so we will use the default\n       * x values for the regression points\n       */\n      for (var i = 0, len = data.length; i < len; i++) {\n        var coordinate = [data[i][0], A + B * Math.log(data[i][0])];\n        results.push(coordinate);\n      }\n    }\n\n    results.sort(function(a,b){\n      if(a[0] > b[0]){ return 1}\n      if(a[0] < b[0]){ return -1}\n      return 0;\n    });\n\n    var string = 'y = ' + Math.round(A*100) / 100 + ' + ' + Math.round(B*100) / 100 + ' ln(x)';\n\n    return {equation: [A, B], points: results, string: string};\n  }\n\n  /**\n   * Code extracted from https://github.com/Tom-Alexander/regression-js/\n   */\n  _power(data) {\n    var sum = [0, 0, 0, 0], n = 0, results = [];\n\n    for (len = data.length; n < len; n++) {\n      if (data[n]['x']) {\n        data[n][0] = data[n]['x'];\n        data[n][1] = data[n]['y'];\n      }\n      if (data[n][1]) {\n        sum[0] += Math.log(data[n][0]);\n        sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n        sum[2] += Math.log(data[n][1]);\n        sum[3] += Math.pow(Math.log(data[n][0]), 2);\n      }\n    }\n\n    var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n    var A = Math.pow(Math.E, (sum[2] - B * sum[0]) / n);\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], A * Math.pow(data[i][0] , B)];\n      results.push(coordinate);\n    }\n\n    results.sort(function(a,b){\n      if(a[0] > b[0]){ return 1}\n      if(a[0] < b[0]){ return -1}\n      return 0;\n    });\n\n    var string = 'y = ' + Math.round(A*100) / 100 + 'x^' + Math.round(B*100) / 100;\n\n    return {equation: [A, B], points: results, string: string};\n  }\n\n  /**\n   * Code extracted from https://github.com/Tom-Alexander/regression-js/\n   */\n  _polynomial(data, order, regressionSettings) {\n    if(typeof order == 'undefined'){\n      order = 2;\n    }\n    var lhs = [], rhs = [], results = [], a = 0, b = 0, i = 0, k = order + 1;\n\n    for (; i < k; i++) {\n      for (var l = 0, len = data.length; l < len; l++) {\n        if (data[l]['x']) {\n          data[l][0] = data[l]['x'];\n          data[l][1] = data[l]['y'];\n        }\n        if (data[l][1]) {\n          a += Math.pow(data[l][0], i) * data[l][1];\n        }\n      }\n      lhs.push(a), a = 0;\n      var c = [];\n      for (var j = 0; j < k; j++) {\n        for (var l = 0, len = data.length; l < len; l++) {\n          if (data[l][1]) {\n            b += Math.pow(data[l][0], i + j);\n          }\n        }\n        c.push(b), b = 0;\n      }\n      rhs.push(c);\n    }\n    rhs.push(lhs);\n\n    var equation = this.gaussianElimination(rhs, k);\n\n    if(regressionSettings != null &&\n      regressionSettings.xMin != null &&\n      regressionSettings.xMax != null &&\n      regressionSettings.numberOfPoints != null) {\n\n      //regression settings have been provided\n\n      /*\n       * get the xMin and xMax so we know over what range to plot\n       * regression points for\n       */\n      var xMin = regressionSettings.xMin;\n      var xMax = regressionSettings.xMax;\n\n      //get the number of points that should be plotted on the regression line\n      var numberOfPoints = regressionSettings.numberOfPoints;\n\n      //get the distance between the xMin and xMax\n      var xSpan = xMax - xMin;\n\n      //calculate the points on the regression line\n      for (var i = 0; i < numberOfPoints; i++) {\n        var x = xMin + xSpan * (i / numberOfPoints);\n        var answer = 0;\n        for (var w = 0; w < equation.length; w++) {\n          answer += equation[w] * Math.pow(x, w);\n        }\n        results.push([x, answer]);\n      }\n    } else {\n      /*\n       * regression settings have not been provided so we will use the default\n       * x values for the regression points\n       */\n      for (var i = 0, len = data.length; i < len; i++) {\n        var answer = 0;\n        for (var w = 0; w < equation.length; w++) {\n          answer += equation[w] * Math.pow(data[i][0], w);\n        }\n        results.push([data[i][0], answer]);\n      }\n    }\n\n    results.sort(function(a,b){\n      if(a[0] > b[0]){ return 1}\n      if(a[0] < b[0]){ return -1}\n      return 0;\n    });\n\n    var string = 'y = ';\n\n    for(var i = equation.length-1; i >= 0; i--){\n      if(i > 1) string += Math.round(equation[i]*100) / 100 + 'x^' + i + ' + ';\n      else if (i == 1) string += Math.round(equation[i]*100) / 100 + 'x' + ' + ';\n      else string += Math.round(equation[i]*100) / 100;\n    }\n\n    return {equation: equation, points: results, string: string};\n  }\n\n  /**\n   * @author: Ignacio Vazquez\n   * Based on\n   * - http://commons.apache.org/proper/commons-math/download_math.cgi LoesInterpolator.java\n   * - https://gist.github.com/avibryant/1151823\n   */\n  _loess(data, bandwidth) {\n    var bandwidth = bandwidth || 0.25 ;\n\n    var xval = data.map(function(pair){return pair[0]});\n    var distinctX =  array_unique(xval) ;\n    if (  2 / distinctX.length  > bandwidth ) {\n      bandwidth = Math.min( 2 / distinctX.length, 1 );\n      console.warn(\"updated bandwith to \"+ bandwidth);\n    }\n\n    var yval = data.map(function(pair){return pair[1]});\n\n    function array_unique(values) {\n      var o = {}, i, l = values.length, r = [];\n      for(i=0; i<l;i+=1) o[values[i]] = values[i];\n      for(i in o) r.push(o[i]);\n      return r;\n    }\n\n    function tricube(x) {\n      var tmp = 1 - x * x * x;\n      return tmp * tmp * tmp;\n    }\n\n    var res = [];\n\n    var left = 0;\n    var right = Math.floor(bandwidth * xval.length) - 1;\n\n    for(var i in xval)\n    {\n      var x = xval[i];\n\n      if (i > 0) {\n        if (right < xval.length - 1 &&\n          xval[right+1] - xval[i] < xval[i] - xval[left]) {\n          left++;\n          right++;\n        }\n      }\n      //console.debug(\"left: \"+left  + \" right: \" + right );\n      var edge;\n      if (xval[i] - xval[left] > xval[right] - xval[i])\n        edge = left;\n      else\n        edge = right;\n      var denom = Math.abs(1.0 / (xval[edge] - x));\n      var sumWeights = 0;\n      var sumX = 0, sumXSquared = 0, sumY = 0, sumXY = 0;\n\n      var k = left;\n      while(k <= right)\n      {\n        var xk = xval[k];\n        var yk = yval[k];\n        var dist;\n        if (k < i) {\n          dist = (x - xk);\n        } else {\n          dist = (xk - x);\n        }\n        var w = tricube(dist * denom);\n        var xkw = xk * w;\n        sumWeights += w;\n        sumX += xkw;\n        sumXSquared += xk * xkw;\n        sumY += yk * w;\n        sumXY += yk * xkw;\n        k++;\n      }\n\n      var meanX = sumX / sumWeights;\n      //console.debug(meanX);\n      var meanY = sumY / sumWeights;\n      var meanXY = sumXY / sumWeights;\n      var meanXSquared = sumXSquared / sumWeights;\n\n      var beta;\n      if (meanXSquared == meanX * meanX)\n        beta = 0;\n      else\n        beta = (meanXY - meanX * meanY) / (meanXSquared - meanX * meanX);\n\n      var alpha = meanY - beta * meanX;\n      res[i] = beta * x + alpha;\n    }\n    console.debug(res);\n    return {\n      equation: \"\" ,\n      points: xval.map(function(x,i){return [x, res[i]]}),\n      string:\"\"\n    } ;\n  }\n\n\n  /**\n   * Code extracted from https://github.com/Tom-Alexander/regression-js/\n   */\n  gaussianElimination(a, o) {\n    var i = 0, j = 0, k = 0, maxrow = 0, tmp = 0, n = a.length - 1, x = new Array(o);\n    for (i = 0; i < n; i++) {\n      maxrow = i;\n      for (j = i + 1; j < n; j++) {\n        if (Math.abs(a[i][j]) > Math.abs(a[i][maxrow]))\n          maxrow = j;\n      }\n      for (k = i; k < n + 1; k++) {\n        tmp = a[k][i];\n        a[k][i] = a[k][maxrow];\n        a[k][maxrow] = tmp;\n      }\n      for (j = i + 1; j < n; j++) {\n        for (k = n; k >= i; k--) {\n          a[k][j] -= a[k][i] * a[i][j] / a[i][i];\n        }\n      }\n    }\n    for (j = n - 1; j >= 0; j--) {\n      tmp = 0;\n      for (k = j + 1; k < n; k++)\n        tmp += a[k][j] * x[k];\n      x[j] = (a[n][j] - tmp) / a[j][j];\n    }\n    return (x);\n  }\n\n  /**\n   * @author Ignacio Vazquez\n   * See http://en.wikipedia.org/wiki/Coefficient_of_determination for theaorical details\n   */\n  coefficientOfDetermination (data, pred ) {\n\n    var i = 0;\n    var SSE = 0;\n    var SSYY = 0;\n    var mean = 0;\n\n    // Calc the mean\n    for (i = 0 ; i < data.length ; i++ ){\n      mean +=  data[i][1] / data.length ;\n    }\n\n    // Calc the coefficent of determination\n    for (i = 0 ; i < data.length ; i++ ){\n      SSYY +=  Math.pow( data[i][1] -  pred[i][1] , 2) ;\n      SSE +=  Math.pow( data[i][1] -  mean , 2) ;\n    }\n    return  1 - ( SSYY / SSE)  ;\n  }\n\n  isCompleted(component, componentStates, componentEvents, nodeEvents, node) {\n    if (this.canEdit(component)) {\n      if (this.hasComponentStates(componentStates)) {\n        if (this.isSubmitRequired(node, component)) {\n          return this.hasSubmitComponentState(componentStates);\n        } else {\n          const componentState = componentStates[componentStates.length - 1];\n          return this.componentStateHasStudentWork(componentState);\n        }\n      }\n    } else {\n      return this.UtilService.hasNodeEnteredEvent(nodeEvents);\n    }\n    return false;\n  }\n\n  hasComponentStates(componentStates) {\n    return componentStates != null && componentStates.length > 0;\n  }\n\n  isSubmitRequired(node, component) {\n    return node.showSubmitButton || (component.showSubmitButton && !node.showSaveButton);\n  }\n\n  hasSubmitComponentState(componentStates) {\n    for (const componentState of componentStates) {\n      if (componentState.isSubmit && this.componentStateHasStudentWork(componentState)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Determine if the student can perform any work on this component.\n   * @param component The component content.\n   * @return Whether the student can perform any work on this component.\n   */\n  canEdit(component) {\n    const series = component.series;\n    for (const singleSeries of series) {\n      if (singleSeries.canEdit) {\n        return true;\n      }\n    }\n    if (this.UtilService.hasImportWorkConnectedComponent(component)) {\n      return true;\n    }\n    return false;\n  }\n\n  hasSeriesData(studentData) {\n    const series = studentData.series;\n    if (series != null) {\n      for (const singleSeries of series) {\n        if (singleSeries.data != null && singleSeries.data.length > 0) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  hasTrialData(studentData) {\n    const trials = studentData.trials;\n    if (trials != null) {\n      for (const trial of trials) {\n        for (const singleSeries of trial.series) {\n          const seriesData = singleSeries.data;\n          if (seriesData.length > 0) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  componentStateHasStudentWork(componentState, componentContent) {\n    if (componentState != null) {\n      const studentData = componentState.studentData;\n      if (studentData != null) {\n        if (studentData.version == 1) {\n          /*\n           * this is the old graph student data format where the\n           * student data can contain multiple series.\n           */\n           if (this.anySeriesHasDataPoint(studentData.series)) {\n             return true;\n           }\n        } else {\n          /*\n           * this is the new graph student data format where the\n           * student data can contain multiple trials and each trial\n           * can contain multiple series.\n           */\n          if (this.anyTrialHasDataPoint(studentData.trials)) {\n            return true;\n          }\n        }\n      }\n      if (this.isStudentChangedAxisLimit(componentState, componentContent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the student has changed any of the axis limits\n   * @param componentState the component state\n   * @param componentContent the component content\n   * @return whether the student has changed any of the axis limits\n   */\n  isStudentChangedAxisLimit(componentState, componentContent) {\n    if (componentState != null && componentState.studentData != null && componentContent != null) {\n      if (componentState.studentData.xAxis != null && componentContent.xAxis != null) {\n        if (componentState.studentData.xAxis.min != componentContent.xAxis.min) {\n          return true;\n        } else if (componentState.studentData.xAxis.max != componentContent.xAxis.max) {\n          return true;\n        }\n      }\n      if (componentState.studentData.yAxis != null && componentContent.yAxis != null) {\n        if (componentState.studentData.yAxis.min != componentContent.yAxis.min) {\n          return true;\n        } else if (componentState.studentData.yAxis.max != componentContent.yAxis.max) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if any of the trials contains a data point\n   * @param trials an array of trials\n   * @return whether any of the trials contains a data point\n   */\n  anyTrialHasDataPoint(trials) {\n    for (const trial of trials) {\n      if (this.trialHasDataPoint(trial)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if a trial has a data point\n   * @param trial a trial object which can contain multiple series\n   * @return whether the trial contains a data point\n   */\n  trialHasDataPoint(trial) {\n    for (const singleSeries of trial.series) {\n      if (this.seriesHasDataPoint(singleSeries)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if an array of series has any data point\n   * @param multipleSeries an array of series\n   * @return whether any of the series has a data point\n   */\n  anySeriesHasDataPoint(multipleSeries) {\n    if (multipleSeries != null) {\n      for (const singleSeries of multipleSeries) {\n        if (this.seriesHasDataPoint(singleSeries)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if a series has a data point\n   * @param singleSeries a series object\n   * @return whether the series object has any data points\n   */\n  seriesHasDataPoint(singleSeries) {\n    return singleSeries.data.length > 0;\n  }\n\n  /**\n   * The component state has been rendered in a <component></component> element\n   * and now we want to take a snapshot of the work.\n   * @param componentState The component state that has been rendered.\n   * @return A promise that will return an image object.\n   */\n  generateImageFromRenderedComponentState(componentState) {\n    const deferred = this.$q.defer();\n    const componentId = componentState.componentId;\n    let highchartsDiv = angular.element('#chart_' + componentId).find('.highcharts-container');\n    if (highchartsDiv != null && highchartsDiv.length > 0) {\n      highchartsDiv = highchartsDiv[0];\n      html2canvas(highchartsDiv).then((canvas) => {\n        const base64Image = canvas.toDataURL('image/png');\n        const imageObject = this.UtilService.getImageObjectFromBase64String(base64Image);\n        this.StudentAssetService.uploadAsset(imageObject).then((asset) => {\n          deferred.resolve(asset);\n        });\n      });\n    }\n    return deferred.promise;\n  }\n}\n\nGraphService.$inject = [\n  '$filter',\n  '$q',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default GraphService;\n"]}