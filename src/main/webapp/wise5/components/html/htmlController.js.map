{"version":3,"sources":["htmlController.es6"],"names":["HTMLController","$scope","$state","$stateParams","$sce","$mdDialog","ConfigService","NodeService","ProjectService","StudentDataService","UtilService","nodeId","componentId","componentContent","authoringComponentContent","isShowPreviousWork","showAdvancedAuthoring","summernoteId","summernoteHTML","mode","currentNode","getCurrentNode","id","originalComponentContent","thisController","InsertAssetButton","context","ui","$","summernote","button","contents","tooltip","click","invoke","displayAssetChooser","render","summernoteOptions","toolbar","disableDragAndDrop","buttons","insertAssetButton","html","updateAdvancedAuthoringView","$watch","bind","newValue","oldValue","injectAssetPaths","$parent","registerComponentController","$on","event","args","imageObjects","getImageObjects","$emit","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","isImage","isVideo","videoElement","document","createElement","controls","innerHTML","hide","nodeAuthoringController","authoringViewNodeChanged","editedComponentContent","angular","fromJson","authoringComponentContentJSONString","replaceComponent","e","showSaveErrorAdvancedAuthoring","toJson","imageElements","element","i","length","imageElement","imageObject","getImageObjectFromImageElement","push","includeHost","assetsDirectoryPathIncludingHost","assetsDirectoryPathIncludingHostRegEx","RegExp","assetsDirectoryPathNotIncludingHost","assetsDirectoryPathNotIncludingHostRegEx","replace","authoringViewComponentChanged","stateParams","popup","show","templateUrl","controller","controllerAs","clickOutsideToClose","escapeToClose","$inject"],"mappings":";;;;;;;;;;IAAMA,c;AACF,4BAAYC,MAAZ,EACYC,MADZ,EAEYC,YAFZ,EAGYC,IAHZ,EAIYC,SAJZ,EAKYC,aALZ,EAMYC,WANZ,EAOYC,cAPZ,EAQYC,kBARZ,EASYC,WATZ,EASyB;AAAA;;AAAA;;AACrB,aAAKT,MAAL,GAAcA,MAAd;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,SAAL,GAAiBA,SAAjB;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;AACA,aAAKC,WAAL,GAAmBA,WAAnB;;AAEA;AACA,aAAKC,MAAL,GAAc,IAAd;;AAEA;AACA,aAAKC,WAAL,GAAmB,IAAnB;;AAEA;AACA,aAAKC,gBAAL,GAAwB,IAAxB;;AAEA;AACA,aAAKC,yBAAL,GAAiC,IAAjC;;AAEA;AACA,aAAKC,kBAAL,GAA0B,KAA1B;;AAEA;AACA,aAAKC,qBAAL,GAA6B,KAA7B;;AAEA;AACA,aAAKC,YAAL,GAAoB,EAApB;;AAEA;AACA,aAAKC,cAAL,GAAsB,EAAtB;;AAEA,aAAKC,IAAL,GAAYlB,OAAOkB,IAAnB;;AAEA;;AAEA;AACA,YAAIC,cAAc,KAAKX,kBAAL,CAAwBY,cAAxB,EAAlB;AACA,YAAID,eAAe,IAAnB,EAAyB;AACrB,iBAAKT,MAAL,GAAcS,YAAYE,EAA1B;AACH,SAFD,MAEO;AACH,iBAAKX,MAAL,GAAcV,OAAOU,MAArB;AACH;;AAED;AACA,aAAKE,gBAAL,GAAwB,KAAKZ,MAAL,CAAYY,gBAApC;;AAEA;AACA,aAAKC,yBAAL,GAAiC,KAAKb,MAAL,CAAYa,yBAA7C;;AAEA;;;;AAIA,aAAKS,wBAAL,GAAgC,KAAKtB,MAAL,CAAYsB,wBAA5C;;AAEA,aAAKJ,IAAL,GAAYlB,OAAOkB,IAAnB;;AAEA,YAAIK,iBAAiB,IAArB;;AAEA;AACA,YAAIC,oBAAoB,SAApBA,iBAAoB,CAASC,OAAT,EAAkB;AACtC,gBAAIC,KAAKC,EAAEC,UAAF,CAAaF,EAAtB;;AAEA;AACA,gBAAIG,SAASH,GAAGG,MAAH,CAAU;AACnBC,0BAAU,mCADS;AAEnBC,yBAAS,cAFU;AAGnBC,uBAAO,iBAAY;AACf;AACAP,4BAAQQ,MAAR,CAAe,kBAAf;;AAEA;AACAV,mCAAeW,mBAAf;AACH;AATkB,aAAV,CAAb;;AAYA,mBAAOL,OAAOM,MAAP,EAAP,CAhBsC,CAgBZ;AAC7B,SAjBD;;AAmBA;AACA,aAAKC,iBAAL,GAAyB;AACrBC,qBAAS,CACL,CAAC,OAAD,EAAU,CAAC,OAAD,CAAV,CADK,EAEL,CAAC,MAAD,EAAS,CAAC,MAAD,EAAS,WAAT,EAAsB,OAAtB,CAAT,CAFK,EAGL,CAAC,UAAD,EAAa,CAAC,UAAD,CAAb,CAHK,EAIL,CAAC,OAAD,EAAU,CAAC,OAAD,CAAV,CAJK,EAKL,CAAC,MAAD,EAAS,CAAC,IAAD,EAAO,IAAP,EAAa,WAAb,CAAT,CALK,EAML,CAAC,OAAD,EAAU,CAAC,OAAD,CAAV,CANK,EAOL,CAAC,QAAD,EAAW,CAAC,MAAD,EAAS,OAAT,CAAX,CAPK,EAQL,CAAC,MAAD,EAAS,CAAC,YAAD,EAAe,UAAf,EAA2B,MAA3B,CAAT,CARK,EASL,CAAC,cAAD,EAAiB,CAAC,mBAAD,CAAjB,CATK,CADY;AAYrBC,gCAAoB,IAZC;AAarBC,qBAAS;AACLC,mCAAmBhB;AADd;AAbY,SAAzB;;AAkBA,YAAI,KAAKZ,gBAAL,IAAyB,IAA7B,EAAmC;;AAE/B;AACA,iBAAKD,WAAL,GAAmB,KAAKC,gBAAL,CAAsBS,EAAzC;;AAEA,gBAAI,KAAKH,IAAL,KAAc,WAAlB,EAA+B;AAC3B,qBAAKF,YAAL,GAAoB,gBAAgB,KAAKN,MAArB,GAA8B,GAA9B,GAAoC,KAAKC,WAA7D;AACA,qBAAKM,cAAL,GAAsB,KAAKL,gBAAL,CAAsB6B,IAA5C;AACA,qBAAKC,2BAAL;;AAEA1C,uBAAO2C,MAAP,CAAc,YAAW;AACrB,2BAAO,KAAK9B,yBAAZ;AACH,iBAFa,CAEZ+B,IAFY,CAEP,IAFO,CAAd,EAEc,UAASC,QAAT,EAAmBC,QAAnB,EAA6B;AACvC,yBAAKlC,gBAAL,GAAwB,KAAKL,cAAL,CAAoBwC,gBAApB,CAAqCF,QAArC,CAAxB;AACH,iBAFa,CAEZD,IAFY,CAEP,IAFO,CAFd,EAIc,IAJd;AAKH,aAVD,MAUO,IAAI,KAAK1B,IAAL,KAAc,SAAlB,EAA6B;AAChC;;;;;AAKA,qBAAKN,gBAAL,CAAsB6B,IAAtB,GAA6B,EAA7B;AACH,aAPM,MAOA,IAAI,KAAKvB,IAAL,KAAc,SAAlB,EAA6B;AAChC,oBAAI,KAAKN,gBAAL,IAAyB,IAA7B,EAAmC;AAC/B,yBAAK6B,IAAL,GAAY,KAAK7B,gBAAL,CAAsB6B,IAAlC;AACH;;AAED,oBAAIzC,OAAOgD,OAAP,CAAeC,2BAAf,IAA8C,IAAlD,EAAwD;AACpD;AACAjD,2BAAOgD,OAAP,CAAeC,2BAAf,CAA2CjD,MAA3C,EAAmD,KAAKY,gBAAxD;AACH;AACJ;AACJ;;AAED;;;;;AAKA,aAAKZ,MAAL,CAAYkD,GAAZ,CAAgB,cAAhB,EAAgC,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAC7C;AACA,gBAAI1C,SAAS0C,KAAK1C,MAAlB;AACA,gBAAIC,cAAcyC,KAAKzC,WAAvB;;AAEA;AACA,gBAAI,MAAKD,MAAL,KAAgBA,MAAhB,IAA0B,MAAKC,WAAL,KAAqBA,WAAnD,EAAgE;;AAE5D;AACA,oBAAI0C,eAAe,MAAKC,eAAL,EAAnB;;AAEA,oBAAID,gBAAgB,IAApB,EAA0B;AACtB,wBAAID,OAAO,EAAX;AACAA,yBAAK1C,MAAL,GAAcA,MAAd;AACA0C,yBAAKzC,WAAL,GAAmBA,WAAnB;AACAyC,yBAAKC,YAAL,GAAoBA,YAApB;;AAEA;AACA,0BAAKrD,MAAL,CAAYuD,KAAZ,CAAkB,sBAAlB,EAA0CH,IAA1C;AACH;AACJ;AACJ,SArBD;;AAuBA;;;;AAIA,aAAKpD,MAAL,CAAYkD,GAAZ,CAAgB,eAAhB,EAAiC,UAACC,KAAD,EAAQC,IAAR,EAAiB;;AAE9C,gBAAIA,QAAQ,IAAZ,EAAkB;;AAEd;AACA,oBAAIA,KAAK1C,MAAL,IAAe,MAAKA,MAApB,IAA8B0C,KAAKzC,WAAL,IAAoB,MAAKA,WAA3D,EAAwE;AACpE;AACA,wBAAI6C,YAAYJ,KAAKI,SAArB;;AAEA,wBAAIA,aAAa,IAAjB,EAAuB;AACnB,4BAAIC,WAAWD,UAAUC,QAAzB;;AAEA,4BAAIA,YAAY,IAAhB,EAAsB;AAClB;;;;;AAKA,gCAAIC,sBAAsB,MAAKrD,aAAL,CAAmBsD,6BAAnB,EAA1B;AACA,gCAAIC,gBAAgBF,sBAAsB,GAAtB,GAA4BD,QAAhD;;AAEA,gCAAI,MAAKhD,WAAL,CAAiBoD,OAAjB,CAAyBJ,QAAzB,CAAJ,EAAwC;AACpC;;;;AAIA9B,kCAAE,iBAAiB,MAAKjB,MAAtB,GAA+B,GAA/B,GAAqC,MAAKC,WAA5C,EAAyDiB,UAAzD,CAAoE,qBAApE;AACAD,kCAAE,iBAAiB,MAAKjB,MAAtB,GAA+B,GAA/B,GAAqC,MAAKC,WAA5C,EAAyDiB,UAAzD,CAAoE,cAApE;;AAEA;AACAD,kCAAE,iBAAiB,MAAKjB,MAAtB,GAA+B,GAA/B,GAAqC,MAAKC,WAA5C,EAAyDiB,UAAzD,CAAoE,aAApE,EAAmFgC,aAAnF,EAAkGH,QAAlG;AACH,6BAVD,MAUO,IAAI,MAAKhD,WAAL,CAAiBqD,OAAjB,CAAyBL,QAAzB,CAAJ,EAAwC;AAC3C;;;;AAIA9B,kCAAE,iBAAiB,MAAKjB,MAAtB,GAA+B,GAA/B,GAAqC,MAAKC,WAA5C,EAAyDiB,UAAzD,CAAoE,qBAApE;AACAD,kCAAE,iBAAiB,MAAKjB,MAAtB,GAA+B,GAA/B,GAAqC,MAAKC,WAA5C,EAAyDiB,UAAzD,CAAoE,cAApE;;AAEA;AACA;;AAEA,oCAAImC,eAAeC,SAASC,aAAT,CAAuB,OAAvB,CAAnB;AACAF,6CAAaG,QAAb,GAAwB,MAAxB;AACAH,6CAAaI,SAAb,GAAyB,qBAAqBP,aAArB,GAAqC,qBAA9D;AACAjC,kCAAE,iBAAiB,MAAKjB,MAAtB,GAA+B,GAA/B,GAAqC,MAAKC,WAA5C,EAAyDiB,UAAzD,CAAoE,YAApE,EAAkFmC,YAAlF;AACH;AACJ;AACJ;AACJ;AACJ;;AAED;AACA,kBAAK3D,SAAL,CAAegE,IAAf;AACH,SAtDD;AAuDH;;AAED;;;;;;;wDAGgC;;AAE5B;AACA,iBAAK1B,2BAAL;;AAEA;;;;AAIA,iBAAK1C,MAAL,CAAYgD,OAAZ,CAAoBqB,uBAApB,CAA4CC,wBAA5C;AACH;;;;;AAED;;;;gEAIwC;;AAEpC,gBAAI;AACA;;;;AAIA,oBAAIC,yBAAyBC,QAAQC,QAAR,CAAiB,KAAKC,mCAAtB,CAA7B;;AAEA;AACA,qBAAKnE,cAAL,CAAoBoE,gBAApB,CAAqC,KAAKjE,MAA1C,EAAkD,KAAKC,WAAvD,EAAoE4D,sBAApE;;AAEA;AACA,qBAAK3D,gBAAL,GAAwB2D,sBAAxB;;AAEA;;;;AAIA,qBAAKvE,MAAL,CAAYgD,OAAZ,CAAoBqB,uBAApB,CAA4CC,wBAA5C;AACH,aAlBD,CAkBE,OAAMM,CAAN,EAAS;AACP,qBAAK5E,MAAL,CAAYgD,OAAZ,CAAoBqB,uBAApB,CAA4CQ,8BAA5C;AACH;AACJ;;;;;AAED;;;sDAG8B;AAC1B,iBAAKH,mCAAL,GAA2CF,QAAQM,MAAR,CAAe,KAAKjE,yBAApB,EAA+C,CAA/C,CAA3C;AACH;;;;;AAED;;;;0CAIkB;AACd,gBAAIwC,eAAe,EAAnB;;AAEA;AACA,gBAAI1C,cAAc,KAAKA,WAAvB;AACA,gBAAIoE,gBAAgBP,QAAQQ,OAAR,CAAgB,MAAMrE,WAAN,GAAoB,MAApC,CAApB;;AAEA,gBAAIoE,iBAAiB,IAArB,EAA2B;;AAEvB;AACA,qBAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIF,cAAcG,MAAlC,EAA0CD,GAA1C,EAA+C;AAC3C,wBAAIE,eAAeJ,cAAcE,CAAd,CAAnB;;AAEA,wBAAIE,gBAAgB,IAApB,EAA0B;;AAEtB;AACA,4BAAIC,cAAc,KAAK3E,WAAL,CAAiB4E,8BAAjB,CAAgDF,YAAhD,CAAlB;AACA9B,qCAAaiC,IAAb,CAAkBF,WAAlB;AACH;AACJ;AACJ;;AAED,mBAAO/B,YAAP;AACH;;AAED;;;;;;;gDAIwB;;AAEpB;AACA,gBAAIZ,OAAO,KAAKxB,cAAhB;;AAEA;;;;;AAKA,gBAAIsE,cAAc,IAAlB;AACA,gBAAIC,mCAAmC,KAAKnF,aAAL,CAAmBsD,6BAAnB,CAAiD4B,WAAjD,CAAvC;AACA,gBAAIE,wCAAwC,IAAIC,MAAJ,CAAWF,gCAAX,EAA6C,GAA7C,CAA5C;;AAEA;;;;;AAKA,gBAAIG,sCAAsC,KAAKtF,aAAL,CAAmBsD,6BAAnB,KAAqD,GAA/F;AACA,gBAAIiC,2CAA2C,IAAIF,MAAJ,CAAWC,mCAAX,EAAgD,GAAhD,CAA/C;;AAEA;;;;;;;;AAQAlD,mBAAOA,KAAKoD,OAAL,CAAaJ,qCAAb,EAAoD,EAApD,CAAP;AACAhD,mBAAOA,KAAKoD,OAAL,CAAaD,wCAAb,EAAuD,EAAvD,CAAP;;AAEA;AACA,iBAAK/E,yBAAL,CAA+B4B,IAA/B,GAAsCA,IAAtC;;AAEA;AACA,iBAAKqD,6BAAL;AACH;;AAED;;;;;;8CAGsB;;AAElB;AACA,gBAAIC,cAAc,EAAlB;AACAA,wBAAYC,KAAZ,GAAoB,IAApB;AACAD,wBAAYrF,MAAZ,GAAqB,KAAKA,MAA1B;AACAqF,wBAAYpF,WAAZ,GAA0B,KAAKA,WAA/B;;AAEA;AACA,iBAAKP,SAAL,CAAe6F,IAAf,CAAoB;AAChBC,6BAAa,sCADG;AAEhBC,4BAAY,wBAFI;AAGhBC,8BAAc,wBAHE;AAIhBlG,8BAAc6F,WAJE;AAKhBM,qCAAqB,IALL;AAMhBC,+BAAe;AANC,aAApB;AAQH;;;;;;AAGLvG,eAAewG,OAAf,GAAyB,CACrB,QADqB,EAErB,QAFqB,EAGrB,cAHqB,EAIrB,MAJqB,EAKrB,WALqB,EAMrB,eANqB,EAOrB,aAPqB,EAQrB,gBARqB,EASrB,oBATqB,EAUrB,aAVqB,CAAzB;;kBAaexG,c","file":"htmlController.js","sourcesContent":["class HTMLController {\n    constructor($scope,\n                $state,\n                $stateParams,\n                $sce,\n                $mdDialog,\n                ConfigService,\n                NodeService,\n                ProjectService,\n                StudentDataService,\n                UtilService) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$sce = $sce;\n        this.$mdDialog = $mdDialog;\n        this.ConfigService = ConfigService;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n        this.UtilService = UtilService;\n\n        // the node id of the current node\n        this.nodeId = null;\n\n        // the component id\n        this.componentId = null;\n\n        // field that will hold the component content\n        this.componentContent = null;\n\n        // field that will hold the authoring component content\n        this.authoringComponentContent = null;\n\n        // whether this part is showing previous work\n        this.isShowPreviousWork = false;\n\n        // whether the advanced authoring textarea is displayed\n        this.showAdvancedAuthoring = false;\n\n        // the summernote element id\n        this.summernoteId = '';\n\n        // the summernote html\n        this.summernoteHTML = '';\n\n        this.mode = $scope.mode;\n\n        // perform setup of this component\n\n        // get the current node and node id\n        var currentNode = this.StudentDataService.getCurrentNode();\n        if (currentNode != null) {\n            this.nodeId = currentNode.id;\n        } else {\n            this.nodeId = $scope.nodeId;\n        }\n\n        // get the component content from the scope\n        this.componentContent = this.$scope.componentContent;\n\n        // get the authoring component content\n        this.authoringComponentContent = this.$scope.authoringComponentContent;\n\n        /*\n         * get the original component content. this is used when showing\n         * previous work from another component.\n         */\n        this.originalComponentContent = this.$scope.originalComponentContent;\n\n        this.mode = $scope.mode;\n\n        var thisController = this;\n\n        // A custom button that opens the asset chooser\n        var InsertAssetButton = function(context) {\n            var ui = $.summernote.ui;\n\n            // create button\n            var button = ui.button({\n                contents: '<i class=\"note-icon-picture\"></i>',\n                tooltip: 'Insert Asset',\n                click: function () {\n                    // remember the position of the cursor\n                    context.invoke('editor.saveRange');\n\n                    // display the asset chooser popup\n                    thisController.displayAssetChooser();\n                }\n            });\n\n            return button.render();   // return button as jquery object\n        };\n\n        // the options that specifies the tools to display in summernote\n        this.summernoteOptions = {\n            toolbar: [\n                ['style', ['style']],\n                ['font', ['bold', 'underline', 'clear']],\n                ['fontname', ['fontname']],\n                ['color', ['color']],\n                ['para', ['ul', 'ol', 'paragraph']],\n                ['table', ['table']],\n                ['insert', ['link', 'video']],\n                ['view', ['fullscreen', 'codeview', 'help']],\n                ['customButton', ['insertAssetButton']]\n            ],\n            disableDragAndDrop: true,\n            buttons: {\n                insertAssetButton: InsertAssetButton\n            }\n        };\n\n        if (this.componentContent != null) {\n\n            // get the component id\n            this.componentId = this.componentContent.id;\n\n            if (this.mode === 'authoring') {\n                this.summernoteId = 'summernote_' + this.nodeId + '_' + this.componentId;\n                this.summernoteHTML = this.componentContent.html;\n                this.updateAdvancedAuthoringView();\n\n                $scope.$watch(function() {\n                    return this.authoringComponentContent;\n                }.bind(this), function(newValue, oldValue) {\n                    this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n                }.bind(this), true);\n            } else if (this.mode === 'grading') {\n                /*\n                 * do not display the html in the grading tool. we may want to\n                 * change this in the future to allow the teacher to toggle\n                 * seeing the html on and off.\n                 */\n                this.componentContent.html = '';\n            } else if (this.mode === 'student') {\n                if (this.componentContent != null) {\n                    this.html = this.componentContent.html;\n                }\n\n                if ($scope.$parent.registerComponentController != null) {\n                    // register this component with the parent node\n                    $scope.$parent.registerComponentController($scope, this.componentContent);\n                }\n            }\n        }\n\n        /*\n         * Listen for the requestImage event which is fired when something needs\n         * an image representation of the student data from a specific\n         * component.\n         */\n        this.$scope.$on('requestImage', (event, args) => {\n            // get the node id and component id from the args\n            var nodeId = args.nodeId;\n            var componentId = args.componentId;\n\n            // check if the image is being requested from this component\n            if (this.nodeId === nodeId && this.componentId === componentId) {\n\n                // obtain the image objects\n                var imageObjects = this.getImageObjects();\n\n                if (imageObjects != null) {\n                    var args = {};\n                    args.nodeId = nodeId;\n                    args.componentId = componentId;\n                    args.imageObjects = imageObjects;\n\n                    // fire an event that contains the image objects\n                    this.$scope.$emit('requestImageCallback', args);\n                }\n            }\n        });\n\n        /*\n         * Listen for the assetSelected event which occurs when the user\n         * selects an asset from the choose asset popup\n         */\n        this.$scope.$on('assetSelected', (event, args) => {\n\n            if (args != null) {\n\n                // make sure the event was fired for this component\n                if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n                    // the asset was selected for this component\n                    var assetItem = args.assetItem;\n\n                    if (assetItem != null) {\n                        var fileName = assetItem.fileName;\n\n                        if (fileName != null) {\n                            /*\n                             * get the assets directory path\n                             * e.g.\n                             * /wise/curriculum/3/\n                             */\n                            var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n                            var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n                            if (this.UtilService.isImage(fileName)) {\n                                /*\n                                 * move the cursor back to its position when the asset chooser\n                                 * popup was clicked\n                                 */\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('editor.restoreRange');\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('editor.focus');\n\n                                // add the image html\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('insertImage', fullAssetPath, fileName);\n                            } else if (this.UtilService.isVideo(fileName)) {\n                                /*\n                                 * move the cursor back to its position when the asset chooser\n                                 * popup was clicked\n                                 */\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('editor.restoreRange');\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('editor.focus');\n\n                                // add the image html\n                                //$('#summernote_' + this.nodeId + '_' + this.componentId).summernote('insertImage', assetsDirectoryPath + '/' + fileName, fileName);\n\n                                var videoElement = document.createElement('video');\n                                videoElement.controls = 'true';\n                                videoElement.innerHTML = \"<source ng-src='\" + fullAssetPath + \"' type='video/mp4'>\";\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('insertNode', videoElement);\n                            }\n                        }\n                    }\n                }\n            }\n\n            // close the popup\n            this.$mdDialog.hide();\n        });\n    }\n\n    /**\n     * The component has changed in the regular authoring view so we will save the project\n     */\n    authoringViewComponentChanged() {\n\n        // update the JSON string in the advanced authoring view textarea\n        this.updateAdvancedAuthoringView();\n\n        /*\n         * notify the parent node that the content has changed which will save\n         * the project to the server\n         */\n        this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n    };\n\n    /**\n     * The component has changed in the advanced authoring view so we will update\n     * the component and save the project.\n     */\n    advancedAuthoringViewComponentChanged() {\n\n        try {\n            /*\n             * create a new component by converting the JSON string in the advanced\n             * authoring view into a JSON object\n             */\n            var editedComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n            // replace the component in the project\n            this.ProjectService.replaceComponent(this.nodeId, this.componentId, editedComponentContent);\n\n            // set the new component into the controller\n            this.componentContent = editedComponentContent;\n\n            /*\n             * notify the parent node that the content has changed which will save\n             * the project to the server\n             */\n            this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n        } catch(e) {\n            this.$scope.$parent.nodeAuthoringController.showSaveErrorAdvancedAuthoring();\n        }\n    };\n\n    /**\n     * Update the component JSON string that will be displayed in the advanced authoring view textarea\n     */\n    updateAdvancedAuthoringView() {\n        this.authoringComponentContentJSONString = angular.toJson(this.authoringComponentContent, 4);\n    };\n\n    /**\n     * Get the image object representation of the student data\n     * @returns an image object\n     */\n    getImageObjects() {\n        var imageObjects = [];\n\n        // get the image elements in the scope\n        let componentId = this.componentId;\n        var imageElements = angular.element('#' + componentId + ' img');\n\n        if (imageElements != null) {\n\n            // loop through all the image elements\n            for (var i = 0; i < imageElements.length; i++) {\n                var imageElement = imageElements[i];\n\n                if (imageElement != null) {\n\n                    // create an image object\n                    var imageObject = this.UtilService.getImageObjectFromImageElement(imageElement);\n                    imageObjects.push(imageObject);\n                }\n            }\n        }\n\n        return imageObjects;\n    }\n\n    /**\n     * The summernote html has changed so we will update the authoring component\n     * content\n     */\n    summernoteHTMLChanged() {\n\n        // get the summernote html\n        var html = this.summernoteHTML;\n\n        /*\n         * get the assets directory path with the host\n         * e.g.\n         * https://wise.berkeley.edu/wise/curriculum/3/assets/\n         */\n        var includeHost = true;\n        var assetsDirectoryPathIncludingHost = this.ConfigService.getProjectAssetsDirectoryPath(includeHost);\n        var assetsDirectoryPathIncludingHostRegEx = new RegExp(assetsDirectoryPathIncludingHost, 'g');\n\n        /*\n         * get the assets directory path without the host\n         * e.g.\n         * /wise/curriculum/3/assets/\n         */\n        var assetsDirectoryPathNotIncludingHost = this.ConfigService.getProjectAssetsDirectoryPath() + '/';\n        var assetsDirectoryPathNotIncludingHostRegEx = new RegExp(assetsDirectoryPathNotIncludingHost, 'g');\n\n        /*\n         * remove the directory path from the html so that only the file name\n         * remains in asset references\n         * e.g.\n         * <img src='https://wise.berkeley.edu/wise/curriculum/3/assets/sun.png'/>\n         * will be changed to\n         * <img src='sun.png'/>\n         */\n        html = html.replace(assetsDirectoryPathIncludingHostRegEx, '');\n        html = html.replace(assetsDirectoryPathNotIncludingHostRegEx, '');\n\n        // update the authorg component content\n        this.authoringComponentContent.html = html;\n\n        // the authoring component content has changed so we will save the project\n        this.authoringViewComponentChanged();\n    }\n\n    /**\n     * Display the asset chooser\n     */\n    displayAssetChooser() {\n\n        // create the params for opening the asset chooser\n        var stateParams = {};\n        stateParams.popup = true;\n        stateParams.nodeId = this.nodeId;\n        stateParams.componentId = this.componentId;\n\n        // open the dialog that will display the assets for the user to choose\n        this.$mdDialog.show({\n            templateUrl: 'wise5/authoringTool/asset/asset.html',\n            controller: 'ProjectAssetController',\n            controllerAs: 'projectAssetController',\n            $stateParams: stateParams,\n            clickOutsideToClose: true,\n            escapeToClose: true\n        });\n    }\n}\n\nHTMLController.$inject = [\n    '$scope',\n    '$state',\n    '$stateParams',\n    '$sce',\n    '$mdDialog',\n    'ConfigService',\n    'NodeService',\n    'ProjectService',\n    'StudentDataService',\n    'UtilService'\n];\n\nexport default HTMLController;\n"]}