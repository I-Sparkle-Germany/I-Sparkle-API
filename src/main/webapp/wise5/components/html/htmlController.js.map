{"version":3,"sources":["htmlController.es6"],"names":["HTMLController","$scope","$state","$stateParams","$sce","$filter","$mdDialog","ConfigService","NodeService","ProjectService","StudentDataService","UtilService","$translate","nodeId","componentId","componentContent","authoringComponentContent","isShowPreviousWork","showAdvancedAuthoring","summernoteId","summernoteHTML","mode","currentNode","getCurrentNode","id","originalComponentContent","thisController","insertWISELinkString","InsertWISELinkButton","context","ui","$","summernote","button","contents","tooltip","click","invoke","displayWISELinkChooser","render","insertAssetString","InsertAssetButton","displayAssetChooser","summernoteOptions","toolbar","height","disableDragAndDrop","buttons","insertWISELinkButton","insertAssetButton","replaceWISELinks","html","updateAdvancedAuthoringView","$watch","bind","newValue","oldValue","injectAssetPaths","$parent","registerComponentController","$on","event","args","imageObjects","getImageObjects","$emit","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","isImage","isVideo","videoElement","document","createElement","controls","innerHTML","hide","wiseLinkNodeId","wiseLinkType","wiseLinkText","wiseLinkClass","wiseLinkElement","setAttribute","br","nodeAuthoringController","authoringViewNodeChanged","editedComponentContent","angular","fromJson","authoringComponentContentJSONString","replaceComponent","e","showSaveErrorAdvancedAuthoring","toJson","imageElements","element","i","length","imageElement","imageObject","getImageObjectFromImageElement","push","removeAbsoluteAssetPaths","insertWISELinks","authoringViewComponentChanged","stateParams","popup","show","templateUrl","controller","controllerAs","clickOutsideToClose","escapeToClose","includeHost","assetsDirectoryPathIncludingHost","assetsDirectoryPathIncludingHostRegEx","RegExp","assetsDirectoryPathNotIncludingHost","assetsDirectoryPathNotIncludingHostRegEx","replace","insertWISELinkAnchors","insertWISELinkButtons","wiseLinkRegEx","wiseLinkRegExMatchResult","exec","anchorHTML","anchorText","getWISELinkNodeId","wiselinkHtml","buttonHTML","buttonText","nodeIdRegEx","nodeIdRegExResult","type","typeRegEx","typeRegExResult","linkText","linkTextRegEx","linkTextRegExResult","replaceWISELinksHelper","regex","wiseLinkHTML","getWISELinkType","getWISELinkLinkText","newElement","$inject"],"mappings":"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","file":"htmlController.js","sourcesContent":["class HTMLController {\n    constructor($scope,\n                $state,\n                $stateParams,\n                $sce,\n                $filter,\n                $mdDialog,\n                ConfigService,\n                NodeService,\n                ProjectService,\n                StudentDataService,\n                UtilService) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$sce = $sce;\n        this.$filter = $filter;\n        this.$mdDialog = $mdDialog;\n        this.ConfigService = ConfigService;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n        this.UtilService = UtilService;\n\n        this.$translate = this.$filter('translate');\n\n        // the node id of the current node\n        this.nodeId = null;\n\n        // the component id\n        this.componentId = null;\n\n        // field that will hold the component content\n        this.componentContent = null;\n\n        // field that will hold the authoring component content\n        this.authoringComponentContent = null;\n\n        // whether this part is showing previous work\n        this.isShowPreviousWork = false;\n\n        // whether the advanced authoring textarea is displayed\n        this.showAdvancedAuthoring = false;\n\n        // the summernote element id\n        this.summernoteId = '';\n\n        // the summernote html\n        this.summernoteHTML = '';\n\n        this.mode = $scope.mode;\n\n        // perform setup of this component\n\n        // get the current node and node id\n        var currentNode = this.StudentDataService.getCurrentNode();\n        if (currentNode != null) {\n            this.nodeId = currentNode.id;\n        } else {\n            this.nodeId = $scope.nodeId;\n        }\n\n        // get the component content from the scope\n        this.componentContent = this.$scope.componentContent;\n\n        // get the authoring component content\n        this.authoringComponentContent = this.$scope.authoringComponentContent;\n\n        /*\n         * get the original component content. this is used when showing\n         * previous work from another component.\n         */\n        this.originalComponentContent = this.$scope.originalComponentContent;\n\n        this.mode = $scope.mode;\n\n        var thisController = this;\n\n        // the tooltip text for the the WISE Link authoring button\n        var insertWISELinkString = this.$translate('html.insertWISELink');\n\n        // a custom button that opens the WISE Link authoring popup\n        var InsertWISELinkButton = function(context) {\n            var ui = $.summernote.ui;\n\n            // create button\n            var button = ui.button({\n                contents: '<i class=\"note-icon-link\"></i>',\n                tooltip: insertWISELinkString,\n                click: function () {\n                    // remember the position of the cursor\n                    context.invoke('editor.saveRange');\n\n                    // display the WISE Link authoring popup\n                    thisController.displayWISELinkChooser();\n                }\n            });\n\n            return button.render();   // return button as jquery object\n        }\n\n        // the tooltip text for the insert WISE asset button\n        var insertAssetString = this.$translate('html.insertAsset');\n\n        // a custom button that opens the asset chooser\n        var InsertAssetButton = function(context) {\n            var ui = $.summernote.ui;\n\n            // create button\n            var button = ui.button({\n                contents: '<i class=\"note-icon-picture\"></i>',\n                tooltip: insertAssetString,\n                click: function () {\n                    // remember the position of the cursor\n                    context.invoke('editor.saveRange');\n\n                    // display the asset chooser popup\n                    thisController.displayAssetChooser();\n                }\n            });\n\n            return button.render();   // return button as jquery object\n        };\n\n        // the options that specifies the tools to display in summernote\n        this.summernoteOptions = {\n            toolbar: [\n                ['style', ['style']],\n                ['font', ['bold', 'underline', 'clear']],\n                ['fontname', ['fontname']],\n                ['color', ['color']],\n                ['para', ['ul', 'ol', 'paragraph']],\n                ['table', ['table']],\n                ['insert', ['link', 'video']],\n                ['view', ['fullscreen', 'codeview', 'help']],\n                ['customButton', ['insertWISELinkButton', 'insertAssetButton']]\n            ],\n            height: 300,\n            disableDragAndDrop: true,\n            buttons: {\n                insertWISELinkButton: InsertWISELinkButton,\n                insertAssetButton: InsertAssetButton\n            }\n        };\n\n        if (this.componentContent != null) {\n\n            // get the component id\n            this.componentId = this.componentContent.id;\n\n            if (this.mode === 'authoring') {\n                // get the id of the summernote element\n                this.summernoteId = 'summernote_' + this.nodeId + '_' + this.componentId;\n\n                // replace all <wiselink> elements with <a> or <button> elements\n                this.summernoteHTML = this.replaceWISELinks(this.componentContent.html);\n\n                this.updateAdvancedAuthoringView();\n\n                $scope.$watch(function() {\n                    return this.authoringComponentContent;\n                }.bind(this), function(newValue, oldValue) {\n                    this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n                }.bind(this), true);\n            } else if (this.mode === 'grading') {\n                /*\n                 * do not display the html in the grading tool. we may want to\n                 * change this in the future to allow the teacher to toggle\n                 * seeing the html on and off.\n                 */\n                this.componentContent.html = '';\n            } else if (this.mode === 'student') {\n                if (this.componentContent != null) {\n                    this.html = this.componentContent.html;\n                }\n\n                if ($scope.$parent.registerComponentController != null) {\n                    // register this component with the parent node\n                    $scope.$parent.registerComponentController($scope, this.componentContent);\n                }\n            }\n        }\n\n        /*\n         * Listen for the requestImage event which is fired when something needs\n         * an image representation of the student data from a specific\n         * component.\n         */\n        this.$scope.$on('requestImage', (event, args) => {\n            // get the node id and component id from the args\n            var nodeId = args.nodeId;\n            var componentId = args.componentId;\n\n            // check if the image is being requested from this component\n            if (this.nodeId === nodeId && this.componentId === componentId) {\n\n                // obtain the image objects\n                var imageObjects = this.getImageObjects();\n\n                if (imageObjects != null) {\n                    var args = {};\n                    args.nodeId = nodeId;\n                    args.componentId = componentId;\n                    args.imageObjects = imageObjects;\n\n                    // fire an event that contains the image objects\n                    this.$scope.$emit('requestImageCallback', args);\n                }\n            }\n        });\n\n        /*\n         * Listen for the assetSelected event which occurs when the user\n         * selects an asset from the choose asset popup\n         */\n        this.$scope.$on('assetSelected', (event, args) => {\n\n            if (args != null) {\n\n                // make sure the event was fired for this component\n                if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n                    // the asset was selected for this component\n                    var assetItem = args.assetItem;\n\n                    if (assetItem != null) {\n                        var fileName = assetItem.fileName;\n\n                        if (fileName != null) {\n                            /*\n                             * get the assets directory path\n                             * e.g.\n                             * /wise/curriculum/3/\n                             */\n                            var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n                            var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n                            if (this.UtilService.isImage(fileName)) {\n                                /*\n                                 * move the cursor back to its position when the asset chooser\n                                 * popup was clicked\n                                 */\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('editor.restoreRange');\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('editor.focus');\n\n                                // add the image html\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('insertImage', fullAssetPath, fileName);\n                            } else if (this.UtilService.isVideo(fileName)) {\n                                /*\n                                 * move the cursor back to its position when the asset chooser\n                                 * popup was clicked\n                                 */\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('editor.restoreRange');\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('editor.focus');\n\n                                // add the image html\n                                //$('#summernote_' + this.nodeId + '_' + this.componentId).summernote('insertImage', assetsDirectoryPath + '/' + fileName, fileName);\n\n                                var videoElement = document.createElement('video');\n                                videoElement.controls = 'true';\n                                videoElement.innerHTML = \"<source ng-src='\" + fullAssetPath + \"' type='video/mp4'>\";\n                                $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('insertNode', videoElement);\n                            }\n                        }\n                    }\n                }\n            }\n\n            // close the popup\n            this.$mdDialog.hide();\n        });\n\n        /*\n         * Listen for the createWISELink event so that we can insert a WISE Link\n         * in the summernote rich text editor\n         */\n        this.$scope.$on('createWISELink', (event, args) => {\n            if (args != null) {\n\n                // make sure the event was fired for this component\n                if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n\n                    // get the WISE Link parameters\n                    var wiseLinkNodeId = args.wiseLinkNodeId;\n                    var wiseLinkType = args.wiseLinkType;\n                    var wiseLinkText = args.wiseLinkText;\n                    var wiseLinkClass = args.wiseLinkClass;\n\n                    var wiseLinkElement = null;\n\n                    if (wiseLinkType == 'link') {\n                        // we are creating a link\n                        wiseLinkElement = document.createElement('a');\n                        wiseLinkElement.innerHTML = wiseLinkText;\n                        wiseLinkElement.setAttribute('wiselink', true);\n                        wiseLinkElement.setAttribute('node-id', wiseLinkNodeId);\n                        wiseLinkElement.setAttribute('type', wiseLinkType);\n                        wiseLinkElement.setAttribute('link-text', wiseLinkText);\n                    } else if (wiseLinkType == 'button') {\n                        // we are creating a button\n                        wiseLinkElement = document.createElement('button');\n                        wiseLinkElement.innerHTML = wiseLinkText;\n                        wiseLinkElement.setAttribute('wiselink', true);\n                        wiseLinkElement.setAttribute('node-id', wiseLinkNodeId);\n                        wiseLinkElement.setAttribute('type', wiseLinkType);\n                        wiseLinkElement.setAttribute('link-text', wiseLinkText);\n                    }\n\n                    /*\n                     * move the cursor back to its position when the asset chooser\n                     * popup was clicked so that the element gets inserted in the\n                     * correct location\n                     */\n                    $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('editor.restoreRange');\n                    $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('editor.focus');\n\n                    if (wiseLinkElement != null) {\n                        // insert the element\n                        $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('insertNode', wiseLinkElement);\n\n                        // add a new line after the element we have just inserted\n                        var br = document.createElement('br');\n                        $('#summernote_' + this.nodeId + '_' + this.componentId).summernote('insertNode', br);\n                    }\n                }\n            }\n\n            // close the popup\n            this.$mdDialog.hide();\n        });\n    }\n\n    /**\n     * The component has changed in the regular authoring view so we will save the project\n     */\n    authoringViewComponentChanged() {\n\n        // update the JSON string in the advanced authoring view textarea\n        this.updateAdvancedAuthoringView();\n\n        /*\n         * notify the parent node that the content has changed which will save\n         * the project to the server\n         */\n        this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n    };\n\n    /**\n     * The component has changed in the advanced authoring view so we will update\n     * the component and save the project.\n     */\n    advancedAuthoringViewComponentChanged() {\n\n        try {\n            /*\n             * create a new component by converting the JSON string in the advanced\n             * authoring view into a JSON object\n             */\n            var editedComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n            // replace the component in the project\n            this.ProjectService.replaceComponent(this.nodeId, this.componentId, editedComponentContent);\n\n            // set the new component into the controller\n            this.componentContent = editedComponentContent;\n\n            /*\n             * notify the parent node that the content has changed which will save\n             * the project to the server\n             */\n            this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n        } catch(e) {\n            this.$scope.$parent.nodeAuthoringController.showSaveErrorAdvancedAuthoring();\n        }\n    };\n\n    /**\n     * Update the component JSON string that will be displayed in the advanced authoring view textarea\n     */\n    updateAdvancedAuthoringView() {\n        this.authoringComponentContentJSONString = angular.toJson(this.authoringComponentContent, 4);\n    };\n\n    /**\n     * Get the image object representation of the student data\n     * @returns an image object\n     */\n    getImageObjects() {\n        var imageObjects = [];\n\n        // get the image elements in the scope\n        let componentId = this.componentId;\n        var imageElements = angular.element('#' + componentId + ' img');\n\n        if (imageElements != null) {\n\n            // loop through all the image elements\n            for (var i = 0; i < imageElements.length; i++) {\n                var imageElement = imageElements[i];\n\n                if (imageElement != null) {\n\n                    // create an image object\n                    var imageObject = this.UtilService.getImageObjectFromImageElement(imageElement);\n                    imageObjects.push(imageObject);\n                }\n            }\n        }\n\n        return imageObjects;\n    }\n\n    /**\n     * The summernote html has changed so we will update the authoring component\n     * content\n     */\n    summernoteHTMLChanged() {\n\n        // get the summernote html\n        var html = this.summernoteHTML;\n\n        /*\n         * remove the absolute asset paths\n         * e.g.\n         * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n         * will be changed to\n         * <img src='sun.png'/>\n         */\n        html = this.removeAbsoluteAssetPaths(html);\n\n        /*\n         * replace <a> and <button> elements with <wiselink> elements when\n         * applicable\n         */\n        html = this.insertWISELinks(html);\n\n        // update the authorg component content\n        this.authoringComponentContent.html = html;\n\n        // the authoring component content has changed so we will save the project\n        this.authoringViewComponentChanged();\n    }\n\n    /**\n     * Display the asset chooser\n     */\n    displayAssetChooser() {\n\n        // create the params for opening the asset chooser\n        var stateParams = {};\n        stateParams.popup = true;\n        stateParams.nodeId = this.nodeId;\n        stateParams.componentId = this.componentId;\n\n        // open the dialog that will display the assets for the user to choose\n        this.$mdDialog.show({\n            templateUrl: 'wise5/authoringTool/asset/asset.html',\n            controller: 'ProjectAssetController',\n            controllerAs: 'projectAssetController',\n            $stateParams: stateParams,\n            clickOutsideToClose: true,\n            escapeToClose: true\n        });\n    }\n\n    /**\n     * Display the WISE Link authoring popup\n     */\n    displayWISELinkChooser() {\n        // create the params for opening the WISE Link authoring popup\n        var stateParams = {};\n        stateParams.popup = true;\n        stateParams.nodeId = this.nodeId;\n        stateParams.componentId = this.componentId;\n\n        // open the WISE Link authoring popup\n        this.$mdDialog.show({\n            templateUrl: 'wise5/authoringTool/wiseLink/wiseLinkAuthoring.html',\n            controller: 'WISELinkAuthoringController',\n            controllerAs: 'wiseLinkAuthoringController',\n            $stateParams: stateParams,\n            clickOutsideToClose: true,\n            escapeToClose: true\n        });\n    }\n\n    /**\n     * Remove the absolute asset paths\n     * e.g.\n     * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n     * will be changed to\n     * <img src='sun.png'/>\n     * @param html the html\n     * @return the modified html without the absolute asset paths\n     */\n    removeAbsoluteAssetPaths(html) {\n        /*\n         * get the assets directory path with the host\n         * e.g.\n         * https://wise.berkeley.edu/wise/curriculum/3/assets/\n         */\n        var includeHost = true;\n        var assetsDirectoryPathIncludingHost = this.ConfigService.getProjectAssetsDirectoryPath(includeHost);\n        var assetsDirectoryPathIncludingHostRegEx = new RegExp(assetsDirectoryPathIncludingHost, 'g');\n\n        /*\n         * get the assets directory path without the host\n         * e.g.\n         * /wise/curriculum/3/assets/\n         */\n        var assetsDirectoryPathNotIncludingHost = this.ConfigService.getProjectAssetsDirectoryPath() + '/';\n        var assetsDirectoryPathNotIncludingHostRegEx = new RegExp(assetsDirectoryPathNotIncludingHost, 'g');\n\n        /*\n         * remove the directory path from the html so that only the file name\n         * remains in asset references\n         * e.g.\n         * <img src='https://wise.berkeley.edu/wise/curriculum/3/assets/sun.png'/>\n         * will be changed to\n         * <img src='sun.png'/>\n         */\n        html = html.replace(assetsDirectoryPathIncludingHostRegEx, '');\n        html = html.replace(assetsDirectoryPathNotIncludingHostRegEx, '');\n\n        return html\n    }\n\n    /**\n     * Replace <a> and <button> elements with <wiselink> elements where\n     * applicable\n     * @param html the html\n     * @return the modified html with <wiselink> elements\n     */\n    insertWISELinks(html) {\n\n        // replace <a> elements with <wiselink> elements\n        html = this.insertWISELinkAnchors(html);\n\n        // replace <button> elements with <wiselink> elements\n        html = this.insertWISELinkButtons(html);\n\n        return html;\n    }\n\n    /**\n     * Replace <a> elements that have the parameter wiselink=true with\n     * <wiselink> elements\n     * @param html the html\n     * @return the modified html with certain <a> elements replaced with\n     * <wiselink> elements\n     */\n    insertWISELinkAnchors(html) {\n\n        // find <a> elements with the parameter wiselink=true\n        var wiseLinkRegEx = new RegExp(/<a.*?wiselink=\"true\".*?>(.*?)<\\/a>/);\n\n        // find the first match\n        var wiseLinkRegExMatchResult = wiseLinkRegEx.exec(html);\n\n        // loop until we have replaced all the matches\n        while(wiseLinkRegExMatchResult != null) {\n\n            // get the whole <a> element\n            var anchorHTML = wiseLinkRegExMatchResult[0];\n\n            // get the inner html of the <a> element\n            var anchorText = wiseLinkRegExMatchResult[1];\n\n            // get the node id parameter of the <a> element\n            var nodeId = this.getWISELinkNodeId(anchorHTML);\n\n            if (nodeId == null) {\n                nodeId = '';\n            }\n\n            // create the <wiselink> element\n            var wiselinkHtml = \"<wiselink type='link' link-text='\" + anchorText + \"' node-id='\" + nodeId + \"'/>\";\n\n            // replace the <a> element with the <wiselink> element\n            html = html.replace(wiseLinkRegExMatchResult[0], wiselinkHtml);\n\n            // search for the next <a> element with the parameter wiselink=true\n            wiseLinkRegExMatchResult = wiseLinkRegEx.exec(html);\n        }\n\n        return html;\n    }\n\n    /**\n     * Replace <button> elements that have the parameter wiselink=true\n     * with <wiselink> elements\n     * @param html the html\n     * @return the modified html with certain <button> elements replaced with\n     * <wiselink> elements\n     */\n    insertWISELinkButtons(html) {\n\n        // find <button> elements with the parameter wiselink=true\n        var wiseLinkRegEx = new RegExp(/<button.*?wiselink=\"true\".*?>(.*?)<\\/button>/);\n\n        // find the first match\n        var wiseLinkRegExMatchResult = wiseLinkRegEx.exec(html);\n\n        // loop until we have replaced all the matches\n        while(wiseLinkRegExMatchResult != null) {\n\n            // get the whole <button> element\n            var buttonHTML = wiseLinkRegExMatchResult[0];\n\n            // get the inner html of the <button> element\n            var buttonText = wiseLinkRegExMatchResult[1];\n\n            // get the node id parameter of the <button> element\n            var nodeId = this.getWISELinkNodeId(buttonHTML);\n\n            if (nodeId == null) {\n                nodeId = '';\n            }\n\n            // create the <wiselink> element\n            var wiselinkHtml = \"<wiselink type='button' link-text='\" + buttonText + \"' node-id='\" + nodeId + \"'/>\";\n\n            // replace the <button> element with the <wiselink> element\n            html = html.replace(wiseLinkRegExMatchResult[0], wiselinkHtml);\n\n            // search for the next <button> element with the parameter wiselink=true\n            wiseLinkRegExMatchResult = wiseLinkRegEx.exec(html);\n        }\n\n        return html;\n    }\n\n    /**\n     * Get the node id from the wiselink element\n     * e.g.\n     * <wiselink node-id='node5'/>\n     * the node id in this case is 'node5'\n     * @param html the html for the element\n     * @return the node id from the node id parameter in the element\n     */\n    getWISELinkNodeId(html) {\n\n        var nodeId = null;\n\n        if (html != null) {\n            // create the regex to find the node id parameter\n            var nodeIdRegEx = new RegExp(/node-id=[\"'b](.*?)[\"']/, 'g');\n\n            // try to find a match\n            var nodeIdRegExResult = nodeIdRegEx.exec(html);\n\n            if (nodeIdRegExResult != null) {\n                // we have found a node id\n                nodeId = nodeIdRegExResult[1];\n            }\n        }\n\n        return nodeId;\n    }\n\n    /**\n     * Get the link type from the wiselink element\n     * e.g.\n     * <wiselink type='button'/>\n     * the type in this case is 'button'\n     * @param html the html for the element\n     * @return the link type from the type parameter in the element\n     */\n    getWISELinkType(html) {\n        var type = null;\n\n        if (html != null) {\n            // create the regex to find the type\n            var typeRegEx = new RegExp(/type=[\"'b](.*?)[\"']/, 'g');\n\n            // try to find a match\n            var typeRegExResult = typeRegEx.exec(html);\n\n            if (typeRegExResult != null) {\n                // we have found a type\n                type = typeRegExResult[1];\n            }\n        }\n\n        return type;\n    }\n\n    /**\n     * Get the link text from the wiselink element\n     * <wiselink link-text='Go to here'/>\n     * the link text in this case is 'Go to here'\n     * @param html the html for the element\n     * @return the link text from the link text parameter in the element\n     */\n    getWISELinkLinkText(html) {\n        var linkText = null;\n\n        if (html != null) {\n            // create the regex to find the link text\n            var linkTextRegEx = new RegExp(/link-text=[\"'b](.*?)[\"']/, 'g');\n\n            // try to find a match\n            var linkTextRegExResult = linkTextRegEx.exec(html);\n\n            if (linkTextRegExResult != null) {\n                // we have found a link text\n                linkText = linkTextRegExResult[1];\n            }\n        }\n\n        return linkText;\n    }\n\n    /**\n     * Replace <wiselink> elements with <a> and <button> elements\n     * @param html the html\n     * @return the modified html without <wiselink> elements\n     */\n    replaceWISELinks(html) {\n\n        // replace wiselinks that look like <wiselink/>\n        html = this.replaceWISELinksHelper(html, '<wiselink.*?\\/>');\n\n        // replace wiselinks that look like <wiselink></wiselink>\n        html = this.replaceWISELinksHelper(html, '<wiselink.*?>.*?<\\/wiselink>');\n\n        return html;\n    }\n\n    /**\n     * Helper function for replacing <wiselink> elements with <a> and <button>\n     * elements\n     * @param html the html\n     * @param regex the regex string to search for\n     * @return the html without <wiselink> elements\n     */\n    replaceWISELinksHelper(html, regex) {\n\n        // create the regex\n        var wiseLinkRegEx = new RegExp(regex);\n\n        // find the first match\n        var wiseLinkRegExMatchResult = wiseLinkRegEx.exec(html);\n\n        // loop until we have replaced all the matches\n        while (wiseLinkRegExMatchResult != null) {\n\n            /*\n             * get the whole match\n             * e.g. <wiselink type='link' node-id='node5' link-text='Go to here'/>\n             */\n            var wiseLinkHTML = wiseLinkRegExMatchResult[0];\n\n            // get the node id, type and link text from the match\n            var nodeId = this.getWISELinkNodeId(wiseLinkHTML);\n            var type = this.getWISELinkType(wiseLinkHTML);\n            var linkText = this.getWISELinkLinkText(wiseLinkHTML);\n\n            var newElement = null;\n\n            if (type == 'link') {\n                // create a link that represents the wiselink\n                newElement = \"<a wiselink='true' node-id='\" + nodeId + \"'>\" + linkText + \"</a>\";\n            } else if (type == 'button') {\n                // create a button that represents the wiselink\n                newElement = \"<button wiselink='true' node-id='\" + nodeId + \"'>\" + linkText + \"</button>\";\n            }\n\n            if (newElement != null) {\n                // replace the wiselink with the new element\n                html = html.replace(wiseLinkHTML, newElement);\n            }\n\n            // find the next match\n            wiseLinkRegExMatchResult = wiseLinkRegEx.exec(html);\n        }\n\n        return html;\n    }\n}\n\nHTMLController.$inject = [\n    '$scope',\n    '$state',\n    '$stateParams',\n    '$sce',\n    '$filter',\n    '$mdDialog',\n    'ConfigService',\n    'NodeService',\n    'ProjectService',\n    'StudentDataService',\n    'UtilService'\n];\n\nexport default HTMLController;\n"]}