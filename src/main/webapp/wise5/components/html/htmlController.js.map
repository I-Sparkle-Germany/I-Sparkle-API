{"version":3,"sources":["htmlController.es6"],"names":[],"mappings":"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","file":"htmlController.js","sourcesContent":["class HTMLController {\n    constructor($scope,\n                $state,\n                $stateParams,\n                $sce,\n                ConfigService,\n                NodeService,\n                ProjectService,\n                StudentDataService) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$sce = $sce;\n        this.ConfigService = ConfigService;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n\n        // the node id of the current node\n        this.nodeId = null;\n\n        // the component id\n        this.componentId = null;\n\n        // field that will hold the component content\n        this.componentContent = null;\n\n        // whether this part is showing previous work\n        this.isShowPreviousWork = false;\n\n        this.mode = $scope.mode;\n\n        // perform setup of this component\n\n        // get the current node and node id\n        var currentNode = this.StudentDataService.getCurrentNode();\n        if (currentNode != null) {\n            this.nodeId = currentNode.id;\n        } else {\n            this.nodeId = $scope.nodeId;\n        }\n\n        // get the component content from the scope\n        this.componentContent = $scope.component;\n\n        this.mode = $scope.mode;\n\n        if (this.componentContent != null) {\n\n            // get the component id\n            this.componentId = this.componentContent.id;\n\n            if (this.mode === 'authoring') {\n                this.updateAdvancedAuthoringView();\n            }\n\n            // get the show previous work node id if it is provided\n            var showPreviousWorkNodeId = this.componentContent.showPreviousWorkNodeId;\n\n            if (showPreviousWorkNodeId != null) {\n                // this component is showing previous work\n                this.isShowPreviousWork = true;\n\n                // get the show previous work component id if it is provided\n                var showPreviousWorkComponentId = this.componentContent.showPreviousWorkComponentId;\n\n                // get the node content for the other node\n                var showPreviousWorkNodeContent = this.ProjectService.getNodeContentByNodeId(showPreviousWorkNodeId);\n\n                // get the component content for the component we are showing previous work for\n                this.componentContent = this.NodeService.getComponentContentById(showPreviousWorkNodeContent, showPreviousWorkComponentId);\n\n                if (this.componentContent != null) {\n                    this.componentContent = component.html;\n                }\n\n                // disable the component since we are just showing previous work\n                this.isDisabled = true;\n\n                // register this component with the parent node\n                $scope.$parent.registerComponentController($scope, this.componentContent);\n            } else {\n                // this is a regular component\n\n                if (this.componentContent != null) {\n                    this.html = this.componentContent.html;\n                }\n\n                if ($scope.$parent.registerComponentController != null) {\n                    // register this component with the parent node\n                    $scope.$parent.registerComponentController($scope, this.componentContent);\n                }\n            }\n        }\n    }\n\n\n    /**\n     * The component has changed in the regular authoring view so we will save the project\n     */\n    authoringViewComponentChanged() {\n\n        // update the JSON string in the advanced authoring view textarea\n        this.updateAdvancedAuthoringView();\n\n        // save the project to the server\n        this.ProjectService.saveProject();\n    };\n\n    /**\n     * The component has changed in the advanced authoring view so we will update\n     * the component and save the project.\n     */\n    advancedAuthoringViewComponentChanged() {\n\n        try {\n            /*\n             * create a new comopnent by converting the JSON string in the advanced\n             * authoring view into a JSON object\n             */\n            var editedComponentContent = angular.fromJson(this.componentContentJSONString);\n\n            // replace the component in the project\n            this.ProjectService.replaceComponent(this.nodeId, this.componentId, editedComponentContent);\n\n            // set the new component into the controller\n            this.componentContent = editedComponentContent;\n\n            // save the project to the server\n            ProjectService.saveProject();\n        } catch(e) {\n\n        }\n    };\n\n    /**\n     * Update the component JSON string that will be displayed in the advanced authoring view textarea\n     */\n    updateAdvancedAuthoringView() {\n        this.componentContentJSONString = angular.toJson(this.componentContent, 4);\n    };\n}\n\nHTMLController.$inject = ['$scope', '$state', '$stateParams', '$sce', 'ConfigService', 'NodeService', 'ProjectService', 'StudentDataService'];\n\nexport default HTMLController;\n"]}