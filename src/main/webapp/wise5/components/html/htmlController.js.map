{"version":3,"sources":["htmlController.es6"],"names":["HTMLController","$rootScope","$scope","$state","$stateParams","$sce","$filter","$mdDialog","ConfigService","NodeService","ProjectService","StudentDataService","UtilService","$translate","nodeId","componentId","componentContent","authoringComponentContent","isShowPreviousWork","showAdvancedAuthoring","summernotePromptId","summernotePromptHTML","mode","currentNode","getCurrentNode","id","originalComponentContent","thisController","insertWISELinkString","InsertWISELinkButton","context","ui","$","summernote","button","contents","tooltip","click","invoke","displayWISELinkChooser","render","insertAssetString","InsertAssetButton0","params","popup","target","$broadcast","InsertAssetButton","createInsertAssetButton","summernotePromptOptions","toolbar","height","disableDragAndDrop","buttons","insertWISELinkButton","insertAssetButton","replaceWISELinks","html","updateAdvancedAuthoringView","$watch","bind","newValue","oldValue","injectAssetPaths","$parent","registerComponentController","$on","event","args","imageObjects","getImageObjects","$emit","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","summernoteId","isImage","isVideo","videoElement","document","createElement","controls","innerHTML","hide","wiseLinkNodeId","wiseLinkType","wiseLinkText","wiseLinkClass","wiseLinkElement","setAttribute","br","nodeAuthoringController","authoringViewNodeChanged","editedComponentContent","angular","fromJson","authoringComponentContentJSONString","replaceComponent","e","showSaveErrorAdvancedAuthoring","toJson","imageElements","element","i","length","imageElement","imageObject","getImageObjectFromImageElement","push","removeAbsoluteAssetPaths","insertWISELinks","authoringViewComponentChanged","stateParams","show","templateUrl","controller","controllerAs","clickOutsideToClose","escapeToClose","$inject"],"mappings":"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","file":"htmlController.js","sourcesContent":["class HTMLController {\n    constructor($rootScope,\n                $scope,\n                $state,\n                $stateParams,\n                $sce,\n                $filter,\n                $mdDialog,\n                ConfigService,\n                NodeService,\n                ProjectService,\n                StudentDataService,\n                UtilService) {\n\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$sce = $sce;\n        this.$filter = $filter;\n        this.$mdDialog = $mdDialog;\n        this.ConfigService = ConfigService;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n        this.UtilService = UtilService;\n\n        this.$translate = this.$filter('translate');\n\n        // the node id of the current node\n        this.nodeId = null;\n\n        // the component id\n        this.componentId = null;\n\n        // field that will hold the component content\n        this.componentContent = null;\n\n        // field that will hold the authoring component content\n        this.authoringComponentContent = null;\n\n        // whether this part is showing previous work\n        this.isShowPreviousWork = false;\n\n        // whether the advanced authoring textarea is displayed\n        this.showAdvancedAuthoring = false;\n\n        // the summernote prompt element id\n        this.summernotePromptId = '';\n\n        // the summernote prompt html\n        this.summernotePromptHTML = '';\n\n        this.mode = $scope.mode;\n\n        // perform setup of this component\n\n        // get the current node and node id\n        var currentNode = this.StudentDataService.getCurrentNode();\n        if (currentNode != null) {\n            this.nodeId = currentNode.id;\n        } else {\n            this.nodeId = $scope.nodeId;\n        }\n\n        // get the component content from the scope\n        this.componentContent = this.$scope.componentContent;\n\n        // get the authoring component content\n        this.authoringComponentContent = this.$scope.authoringComponentContent;\n\n        /*\n         * get the original component content. this is used when showing\n         * previous work from another component.\n         */\n        this.originalComponentContent = this.$scope.originalComponentContent;\n\n        this.mode = $scope.mode;\n\n        if (this.componentContent != null) {\n\n            // get the component id\n            this.componentId = this.componentContent.id;\n\n            if (this.mode === 'authoring') {\n                var thisController = this;\n\n                // the tooltip text for the the WISE Link authoring button\n                var insertWISELinkString = this.$translate('html.insertWISELink');\n\n                // a custom button that opens the WISE Link authoring popup\n                var InsertWISELinkButton = function(context) {\n                    var ui = $.summernote.ui;\n\n                    // create button\n                    var button = ui.button({\n                        contents: '<i class=\"note-icon-link\"></i>',\n                        tooltip: insertWISELinkString,\n                        click: function () {\n                            // remember the position of the cursor\n                            context.invoke('editor.saveRange');\n\n                            // display the WISE Link authoring popup\n                            thisController.displayWISELinkChooser();\n                        }\n                    });\n\n                    return button.render();   // return button as jquery object\n                }\n\n                // the tooltip text for the insert WISE asset button\n                var insertAssetString = this.$translate('html.insertAsset');\n\n                // a custom button that opens the asset chooser\n                var InsertAssetButton0 = function(context) {\n                    var ui = $.summernote.ui;\n\n                    // create button\n                    var button = ui.button({\n                        contents: '<i class=\"note-icon-picture\"></i>',\n                        tooltip: insertAssetString,\n                        click: function () {\n                            // remember the position of the cursor\n                            context.invoke('editor.saveRange');\n\n                            // create the params for opening the asset chooser\n                            var params = {};\n                            params.popup = true;\n                            params.nodeId = thisController.nodeId;\n                            params.componentId = thisController.componentId;\n                            params.target = 'prompt';\n\n                            thisController.$rootScope.$broadcast('openAssetChooser', params);\n                        }\n                    });\n\n                    return button.render();   // return button as jquery object\n                };\n\n                var InsertAssetButton = this.UtilService.createInsertAssetButton(this, this.nodeId, this.componentId, 'prompt', insertAssetString);\n\n                /*\n                 * the options that specifies the tools to display in the\n                 * summernote prompt\n                 */\n                this.summernotePromptOptions = {\n                    toolbar: [\n                        ['style', ['style']],\n                        ['font', ['bold', 'underline', 'clear']],\n                        ['fontname', ['fontname']],\n                        ['color', ['color']],\n                        ['para', ['ul', 'ol', 'paragraph']],\n                        ['table', ['table']],\n                        ['insert', ['link', 'video']],\n                        ['view', ['fullscreen', 'codeview', 'help']],\n                        ['customButton', ['insertWISELinkButton', 'insertAssetButton']]\n                    ],\n                    height: 300,\n                    disableDragAndDrop: true,\n                    buttons: {\n                        insertWISELinkButton: InsertWISELinkButton,\n                        insertAssetButton: InsertAssetButton\n                    }\n                };\n\n                // get the id of the summernote prompt element\n                this.summernotePromptId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n\n                // replace all <wiselink> elements with <a> or <button> elements\n                this.summernotePromptHTML = this.UtilService.replaceWISELinks(this.componentContent.html);\n\n                this.updateAdvancedAuthoringView();\n\n                $scope.$watch(function() {\n                    return this.authoringComponentContent;\n                }.bind(this), function(newValue, oldValue) {\n                    this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n                }.bind(this), true);\n            } else if (this.mode === 'grading') {\n                /*\n                 * do not display the html in the grading tool. we may want to\n                 * change this in the future to allow the teacher to toggle\n                 * seeing the html on and off.\n                 */\n                this.componentContent.html = '';\n            } else if (this.mode === 'student') {\n                if (this.componentContent != null) {\n                    this.html = this.componentContent.html;\n                }\n\n                if ($scope.$parent.registerComponentController != null) {\n                    // register this component with the parent node\n                    $scope.$parent.registerComponentController($scope, this.componentContent);\n                }\n            }\n        }\n\n        /*\n         * Listen for the requestImage event which is fired when something needs\n         * an image representation of the student data from a specific\n         * component.\n         */\n        this.$scope.$on('requestImage', (event, args) => {\n            // get the node id and component id from the args\n            var nodeId = args.nodeId;\n            var componentId = args.componentId;\n\n            // check if the image is being requested from this component\n            if (this.nodeId === nodeId && this.componentId === componentId) {\n\n                // obtain the image objects\n                var imageObjects = this.getImageObjects();\n\n                if (imageObjects != null) {\n                    var args = {};\n                    args.nodeId = nodeId;\n                    args.componentId = componentId;\n                    args.imageObjects = imageObjects;\n\n                    // fire an event that contains the image objects\n                    this.$scope.$emit('requestImageCallback', args);\n                }\n            }\n        });\n\n        /*\n         * Listen for the assetSelected event which occurs when the user\n         * selects an asset from the choose asset popup\n         */\n        this.$scope.$on('assetSelected', (event, args) => {\n\n            if (args != null) {\n\n                // make sure the event was fired for this component\n                if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n                    // the asset was selected for this component\n                    var assetItem = args.assetItem;\n\n                    if (assetItem != null) {\n                        var fileName = assetItem.fileName;\n\n                        if (fileName != null) {\n                            /*\n                             * get the assets directory path\n                             * e.g.\n                             * /wise/curriculum/3/\n                             */\n                            var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n                            var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n                            var summernoteId = '';\n\n                            if (args.target == 'prompt') {\n                                // the target is the summernote prompt element\n                                summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n                            } else if (args.target == 'rubric') {\n                                // the target is the summernote rubric element\n                                summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n                            }\n\n                            if (this.UtilService.isImage(fileName)) {\n                                /*\n                                 * move the cursor back to its position when the asset chooser\n                                 * popup was clicked\n                                 */\n                                $('#' + summernoteId).summernote('editor.restoreRange');\n                                $('#' + summernoteId).summernote('editor.focus');\n\n                                // add the image html\n                                $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                            } else if (this.UtilService.isVideo(fileName)) {\n                                /*\n                                 * move the cursor back to its position when the asset chooser\n                                 * popup was clicked\n                                 */\n                                $('#' + summernoteId).summernote('editor.restoreRange');\n                                $('#' + summernoteId).summernote('editor.focus');\n\n                                // insert the video element\n                                var videoElement = document.createElement('video');\n                                videoElement.controls = 'true';\n                                videoElement.innerHTML = \"<source ng-src='\" + fullAssetPath + \"' type='video/mp4'>\";\n                                $('#' + summernoteId).summernote('insertNode', videoElement);\n                            }\n                        }\n                    }\n                }\n            }\n\n            // close the popup\n            this.$mdDialog.hide();\n        });\n\n        /*\n         * Listen for the createWISELink event so that we can insert a WISE Link\n         * in the summernote rich text editor\n         */\n        this.$scope.$on('createWISELink', (event, args) => {\n            if (args != null) {\n\n                // make sure the event was fired for this component\n                if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n\n                    // get the WISE Link parameters\n                    var wiseLinkNodeId = args.wiseLinkNodeId;\n                    var wiseLinkType = args.wiseLinkType;\n                    var wiseLinkText = args.wiseLinkText;\n                    var wiseLinkClass = args.wiseLinkClass;\n\n                    var wiseLinkElement = null;\n\n                    if (wiseLinkType == 'link') {\n                        // we are creating a link\n                        wiseLinkElement = document.createElement('a');\n                        wiseLinkElement.innerHTML = wiseLinkText;\n                        wiseLinkElement.setAttribute('wiselink', true);\n                        wiseLinkElement.setAttribute('node-id', wiseLinkNodeId);\n                        wiseLinkElement.setAttribute('type', wiseLinkType);\n                        wiseLinkElement.setAttribute('link-text', wiseLinkText);\n                    } else if (wiseLinkType == 'button') {\n                        // we are creating a button\n                        wiseLinkElement = document.createElement('button');\n                        wiseLinkElement.innerHTML = wiseLinkText;\n                        wiseLinkElement.setAttribute('wiselink', true);\n                        wiseLinkElement.setAttribute('node-id', wiseLinkNodeId);\n                        wiseLinkElement.setAttribute('type', wiseLinkType);\n                        wiseLinkElement.setAttribute('link-text', wiseLinkText);\n                    }\n\n                    /*\n                     * move the cursor back to its position when the asset chooser\n                     * popup was clicked so that the element gets inserted in the\n                     * correct location\n                     */\n                    $('#summernotePrompt_' + this.nodeId + '_' + this.componentId).summernote('editor.restoreRange');\n                    $('#summernotePrompt_' + this.nodeId + '_' + this.componentId).summernote('editor.focus');\n\n                    if (wiseLinkElement != null) {\n                        // insert the element\n                        $('#summernotePrompt_' + this.nodeId + '_' + this.componentId).summernote('insertNode', wiseLinkElement);\n\n                        // add a new line after the element we have just inserted\n                        var br = document.createElement('br');\n                        $('#summernotePrompt_' + this.nodeId + '_' + this.componentId).summernote('insertNode', br);\n                    }\n                }\n            }\n\n            // close the popup\n            this.$mdDialog.hide();\n        });\n    }\n\n    /**\n     * The component has changed in the regular authoring view so we will save the project\n     */\n    authoringViewComponentChanged() {\n\n        // update the JSON string in the advanced authoring view textarea\n        this.updateAdvancedAuthoringView();\n\n        /*\n         * notify the parent node that the content has changed which will save\n         * the project to the server\n         */\n        this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n    };\n\n    /**\n     * The component has changed in the advanced authoring view so we will update\n     * the component and save the project.\n     */\n    advancedAuthoringViewComponentChanged() {\n\n        try {\n            /*\n             * create a new component by converting the JSON string in the advanced\n             * authoring view into a JSON object\n             */\n            var editedComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n            // replace the component in the project\n            this.ProjectService.replaceComponent(this.nodeId, this.componentId, editedComponentContent);\n\n            // set the new component into the controller\n            this.componentContent = editedComponentContent;\n\n            /*\n             * notify the parent node that the content has changed which will save\n             * the project to the server\n             */\n            this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n        } catch(e) {\n            this.$scope.$parent.nodeAuthoringController.showSaveErrorAdvancedAuthoring();\n        }\n    };\n\n    /**\n     * Update the component JSON string that will be displayed in the advanced authoring view textarea\n     */\n    updateAdvancedAuthoringView() {\n        this.authoringComponentContentJSONString = angular.toJson(this.authoringComponentContent, 4);\n    };\n\n    /**\n     * Get the image object representation of the student data\n     * @returns an image object\n     */\n    getImageObjects() {\n        var imageObjects = [];\n\n        // get the image elements in the scope\n        let componentId = this.componentId;\n        var imageElements = angular.element('#' + componentId + ' img');\n\n        if (imageElements != null) {\n\n            // loop through all the image elements\n            for (var i = 0; i < imageElements.length; i++) {\n                var imageElement = imageElements[i];\n\n                if (imageElement != null) {\n\n                    // create an image object\n                    var imageObject = this.UtilService.getImageObjectFromImageElement(imageElement);\n                    imageObjects.push(imageObject);\n                }\n            }\n        }\n\n        return imageObjects;\n    }\n\n    /**\n     * The summernote prompt html has changed so we will update the authoring\n     * component content\n     */\n    summernotePromptHTMLChanged() {\n\n        // get the summernote prompt html\n        var html = this.summernotePromptHTML;\n\n        /*\n         * remove the absolute asset paths\n         * e.g.\n         * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n         * will be changed to\n         * <img src='sun.png'/>\n         */\n        html = this.ConfigService.removeAbsoluteAssetPaths(html);\n\n        /*\n         * replace <a> and <button> elements with <wiselink> elements when\n         * applicable\n         */\n        html = this.UtilService.insertWISELinks(html);\n\n        // update the authoring component content\n        this.authoringComponentContent.html = html;\n\n        // the authoring component content has changed so we will save the project\n        this.authoringViewComponentChanged();\n    }\n\n    /**\n     * Display the WISE Link authoring popup\n     */\n    displayWISELinkChooser() {\n        // create the params for opening the WISE Link authoring popup\n        var stateParams = {};\n        stateParams.popup = true;\n        stateParams.nodeId = this.nodeId;\n        stateParams.componentId = this.componentId;\n\n        // open the WISE Link authoring popup\n        this.$mdDialog.show({\n            templateUrl: 'wise5/authoringTool/wiseLink/wiseLinkAuthoring.html',\n            controller: 'WISELinkAuthoringController',\n            controllerAs: 'wiseLinkAuthoringController',\n            $stateParams: stateParams,\n            clickOutsideToClose: true,\n            escapeToClose: true\n        });\n    }\n}\n\nHTMLController.$inject = [\n    '$rootScope',\n    '$scope',\n    '$state',\n    '$stateParams',\n    '$sce',\n    '$filter',\n    '$mdDialog',\n    'ConfigService',\n    'NodeService',\n    'ProjectService',\n    'StudentDataService',\n    'UtilService'\n];\n\nexport default HTMLController;\n"]}