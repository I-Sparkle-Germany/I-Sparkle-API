{"version":3,"sources":["htmlController.es6"],"names":["HTMLController","$rootScope","$scope","$state","$stateParams","$sce","$filter","$mdDialog","ConfigService","NodeService","ProjectService","StudentDataService","UtilService","$translate","nodeId","componentId","componentContent","authoringComponentContent","isShowPreviousWork","showAdvancedAuthoring","showJSONAuthoring","summernotePromptId","summernotePromptHTML","mode","currentNode","getCurrentNode","id","originalComponentContent","thisController","insertWISELinkString","InsertWISELinkButton","createInsertWISELinkButton","insertAssetString","InsertAssetButton","createInsertAssetButton","summernotePromptOptions","toolbar","minHeight","disableDragAndDrop","buttons","insertWISELinkButton","insertAssetButton","replaceWISELinks","html","summernoteRubricId","summernoteRubricHTML","rubric","InsertAssetButtonRubric","summernoteRubricOptions","height","updateAdvancedAuthoringView","$watch","bind","newValue","oldValue","injectAssetPaths","$parent","registerComponentController","$on","event","args","imageObjects","getImageObjects","$emit","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","summernoteId","target","isImage","$","summernote","isVideo","videoElement","document","createElement","controls","innerHTML","hide","wiseLinkNodeId","wiseLinkComponentId","wiseLinkType","wiseLinkText","wiseLinkClass","wiseLinkElement","setAttribute","br","nodeAuthoringController","authoringViewNodeChanged","editedComponentContent","angular","fromJson","authoringComponentContentJSONString","replaceComponent","e","showSaveErrorAdvancedAuthoring","toJson","imageElements","element","i","length","imageElement","imageObject","getImageObjectFromImageElement","push","removeAbsoluteAssetPaths","insertWISELinks","authoringViewComponentChanged","$inject"],"mappings":"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","file":"htmlController.js","sourcesContent":["class HTMLController {\n    constructor($rootScope,\n                $scope,\n                $state,\n                $stateParams,\n                $sce,\n                $filter,\n                $mdDialog,\n                ConfigService,\n                NodeService,\n                ProjectService,\n                StudentDataService,\n                UtilService) {\n\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$sce = $sce;\n        this.$filter = $filter;\n        this.$mdDialog = $mdDialog;\n        this.ConfigService = ConfigService;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n        this.UtilService = UtilService;\n\n        this.$translate = this.$filter('translate');\n\n        // the node id of the current node\n        this.nodeId = null;\n\n        // the component id\n        this.componentId = null;\n\n        // field that will hold the component content\n        this.componentContent = null;\n\n        // field that will hold the authoring component content\n        this.authoringComponentContent = null;\n\n        // whether this part is showing previous work\n        this.isShowPreviousWork = false;\n\n        // flag for whether to show the advanced authoring\n        this.showAdvancedAuthoring = false;\n\n        // whether the JSON authoring is displayed\n        this.showJSONAuthoring = false;\n\n        // the summernote prompt element id\n        this.summernotePromptId = '';\n\n        // the summernote prompt html\n        this.summernotePromptHTML = '';\n\n        this.mode = $scope.mode;\n\n        // perform setup of this component\n\n        // get the current node and node id\n        let currentNode = this.StudentDataService.getCurrentNode();\n        if (currentNode != null) {\n            this.nodeId = currentNode.id;\n        } else {\n            this.nodeId = $scope.nodeId;\n        }\n\n        // get the component content from the scope\n        this.componentContent = this.$scope.componentContent;\n\n        // get the authoring component content\n        this.authoringComponentContent = this.$scope.authoringComponentContent;\n\n        /*\n         * get the original component content. this is used when showing\n         * previous work from another component.\n         */\n        this.originalComponentContent = this.$scope.originalComponentContent;\n\n        this.mode = $scope.mode;\n\n        if (this.componentContent != null) {\n\n            // get the component id\n            this.componentId = this.componentContent.id;\n\n            if (this.mode === 'authoring') {\n                let thisController = this;\n\n                // the tooltip text for the the WISE Link authoring button\n                let insertWISELinkString = this.$translate('INSERT_WISE_LINK');\n\n                /*\n                 * create the custom button for inserting a WISE Link into\n                 * summernote\n                 */\n                let InsertWISELinkButton = this.UtilService.createInsertWISELinkButton(this, null, this.nodeId, this.componentId, 'prompt', insertWISELinkString);\n\n                // the tooltip text for the insert WISE asset button\n                let insertAssetString = this.$translate('INSERT_ASSET');\n\n                /*\n                 * create the custom button for inserting WISE assets into\n                 * summernote\n                 */\n                let InsertAssetButton = this.UtilService.createInsertAssetButton(this, null, this.nodeId, this.componentId, 'prompt', insertAssetString);\n\n                /*\n                 * the options that specifies the tools to display in the\n                 * summernote prompt\n                 */\n                this.summernotePromptOptions = {\n                    toolbar: [\n                        ['style', ['style']],\n                        ['font', ['bold', 'underline', 'clear']],\n                        ['fontname', ['fontname']],\n                        ['fontsize', ['fontsize']],\n                        ['color', ['color']],\n                        ['para', ['ul', 'ol', 'paragraph']],\n                        ['table', ['table']],\n                        ['insert', ['link', 'video']],\n                        ['customButton', ['insertWISELinkButton', 'insertAssetButton']],\n                        ['view', ['fullscreen', 'help']],\n                        ['view', ['codeview']]\n                    ],\n                    minHeight: 300,\n                    disableDragAndDrop: true,\n                    buttons: {\n                        insertWISELinkButton: InsertWISELinkButton,\n                        insertAssetButton: InsertAssetButton\n                    }\n                };\n\n                // get the id of the summernote prompt element\n                this.summernotePromptId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n\n                // replace all <wiselink> elements with <a> or <button> elements\n                this.summernotePromptHTML = this.UtilService.replaceWISELinks(this.componentContent.html);\n\n                // generate the summernote rubric element id\n                this.summernoteRubricId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n\n                // set the component rubric into the summernote rubric\n                this.summernoteRubricHTML = this.componentContent.rubric;\n\n                /*\n                 * create the custom button for inserting WISE assets into\n                 * summernote\n                 */\n                let InsertAssetButtonRubric = this.UtilService.createInsertAssetButton(this, null, this.nodeId, this.componentId, 'rubric', insertAssetString);\n\n                /*\n                 * the options that specifies the tools to display in the\n                 * summernote prompt\n                 */\n                this.summernoteRubricOptions = {\n                    toolbar: [\n                        ['style', ['style']],\n                        ['font', ['bold', 'underline', 'clear']],\n                        ['fontname', ['fontname']],\n                        ['fontsize', ['fontsize']],\n                        ['color', ['color']],\n                        ['para', ['ul', 'ol', 'paragraph']],\n                        ['table', ['table']],\n                        ['insert', ['link', 'video']],\n                        ['view', ['fullscreen', 'codeview', 'help']],\n                        ['customButton', ['insertAssetButton']]\n                    ],\n                    height: 300,\n                    disableDragAndDrop: true,\n                    buttons: {\n                        insertAssetButton: InsertAssetButtonRubric\n                    }\n                };\n\n                this.updateAdvancedAuthoringView();\n\n                $scope.$watch(function() {\n                    return this.authoringComponentContent;\n                }.bind(this), function(newValue, oldValue) {\n                    this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n                }.bind(this), true);\n            } else if (this.mode === 'grading') {\n                \n            } else if (this.mode === 'student') {\n                if (this.componentContent != null) {\n                    this.html = this.componentContent.html;\n                }\n\n                if ($scope.$parent.registerComponentController != null) {\n                    // register this component with the parent node\n                    $scope.$parent.registerComponentController($scope, this.componentContent);\n                }\n            }\n        }\n\n        /*\n         * Listen for the requestImage event which is fired when something needs\n         * an image representation of the student data from a specific\n         * component.\n         */\n        this.$scope.$on('requestImage', (event, args) => {\n            // get the node id and component id from the args\n            let nodeId = args.nodeId;\n            let componentId = args.componentId;\n\n            // check if the image is being requested from this component\n            if (this.nodeId === nodeId && this.componentId === componentId) {\n\n                // obtain the image objects\n                let imageObjects = this.getImageObjects();\n\n                if (imageObjects != null) {\n                    let args = {};\n                    args.nodeId = nodeId;\n                    args.componentId = componentId;\n                    args.imageObjects = imageObjects;\n\n                    // fire an event that contains the image objects\n                    this.$scope.$emit('requestImageCallback', args);\n                }\n            }\n        });\n\n        /*\n         * Listen for the assetSelected event which occurs when the user\n         * selects an asset from the choose asset popup\n         */\n        this.$scope.$on('assetSelected', (event, args) => {\n\n            if (args != null) {\n\n                // make sure the event was fired for this component\n                if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n                    // the asset was selected for this component\n                    let assetItem = args.assetItem;\n\n                    if (assetItem != null) {\n                        let fileName = assetItem.fileName;\n\n                        if (fileName != null) {\n                            /*\n                             * get the assets directory path\n                             * e.g.\n                             * /wise/curriculum/3/\n                             */\n                            let assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n                            let fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n                            let summernoteId = '';\n\n                            if (args.target == 'prompt') {\n                                // the target is the summernote prompt element\n                                summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n                            } else if (args.target == 'rubric') {\n                                // the target is the summernote rubric element\n                                summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n                            }\n\n                            if (summernoteId != '') {\n                                if (this.UtilService.isImage(fileName)) {\n                                    /*\n                                     * move the cursor back to its position when the asset chooser\n                                     * popup was clicked\n                                     */\n                                    $('#' + summernoteId).summernote('editor.restoreRange');\n                                    $('#' + summernoteId).summernote('editor.focus');\n\n                                    // add the image html\n                                    $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                                } else if (this.UtilService.isVideo(fileName)) {\n                                    /*\n                                     * move the cursor back to its position when the asset chooser\n                                     * popup was clicked\n                                     */\n                                    $('#' + summernoteId).summernote('editor.restoreRange');\n                                    $('#' + summernoteId).summernote('editor.focus');\n\n                                    // insert the video element\n                                    let videoElement = document.createElement('video');\n                                    videoElement.controls = 'true';\n                                    videoElement.innerHTML = \"<source ng-src='\" + fullAssetPath + \"' type='video/mp4'>\";\n                                    $('#' + summernoteId).summernote('insertNode', videoElement);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            // close the popup\n            this.$mdDialog.hide();\n        });\n\n        /*\n         * Listen for the createWISELink event so that we can insert a WISE Link\n         * in the summernote rich text editor\n         */\n        this.$scope.$on('createWISELink', (event, args) => {\n            if (args != null) {\n\n                // make sure the event was fired for this component\n                if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n\n                    // get the WISE Link parameters\n                    let wiseLinkNodeId = args.wiseLinkNodeId;\n                    let wiseLinkComponentId = args.wiseLinkComponentId;\n                    let wiseLinkType = args.wiseLinkType;\n                    let wiseLinkText = args.wiseLinkText;\n                    let wiseLinkClass = args.wiseLinkClass;\n                    let target = args.target;\n\n                    let wiseLinkElement = null;\n\n                    if (wiseLinkType == 'link') {\n                        // we are creating a link\n                        wiseLinkElement = document.createElement('a');\n                        wiseLinkElement.innerHTML = wiseLinkText;\n                        wiseLinkElement.setAttribute('wiselink', true);\n                        wiseLinkElement.setAttribute('node-id', wiseLinkNodeId);\n                        if (wiseLinkComponentId != null && wiseLinkComponentId != '') {\n                            wiseLinkElement.setAttribute('component-id', wiseLinkComponentId);\n                        }\n                        wiseLinkElement.setAttribute('type', wiseLinkType);\n                        wiseLinkElement.setAttribute('link-text', wiseLinkText);\n                    } else if (wiseLinkType == 'button') {\n                        // we are creating a button\n                        wiseLinkElement = document.createElement('button');\n                        wiseLinkElement.innerHTML = wiseLinkText;\n                        wiseLinkElement.setAttribute('wiselink', true);\n                        wiseLinkElement.setAttribute('node-id', wiseLinkNodeId);\n                        if (wiseLinkComponentId != null && wiseLinkComponentId != '') {\n                            wiseLinkElement.setAttribute('component-id', wiseLinkComponentId);\n                        }\n                        wiseLinkElement.setAttribute('type', wiseLinkType);\n                        wiseLinkElement.setAttribute('link-text', wiseLinkText);\n                    }\n\n                    let summernoteId = '';\n\n                    if (target == 'prompt') {\n                        // get the id for the summernote prompt\n                        summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n                    }\n\n                    if (summernoteId != '') {\n                        /*\n                         * move the cursor back to its position when the asset chooser\n                         * popup was clicked so that the element gets inserted in the\n                         * correct location\n                         */\n                        $('#' + summernoteId).summernote('editor.restoreRange');\n                        $('#' + summernoteId).summernote('editor.focus');\n\n                        if (wiseLinkElement != null) {\n                            // insert the element\n                            $('#' + summernoteId).summernote('insertNode', wiseLinkElement);\n\n                            // add a new line after the element we have just inserted\n                            let br = document.createElement('br');\n                            $('#' + summernoteId).summernote('insertNode', br);\n                        }\n                    }\n                }\n            }\n\n            // close the popup\n            this.$mdDialog.hide();\n        });\n    }\n\n    /**\n     * The component has changed in the regular authoring view so we will save the project\n     */\n    authoringViewComponentChanged() {\n\n        // update the JSON string in the advanced authoring view textarea\n        this.updateAdvancedAuthoringView();\n\n        /*\n         * notify the parent node that the content has changed which will save\n         * the project to the server\n         */\n        this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n    };\n\n    /**\n     * The component has changed in the advanced authoring view so we will update\n     * the component and save the project.\n     */\n    advancedAuthoringViewComponentChanged() {\n\n        try {\n            /*\n             * create a new component by converting the JSON string in the advanced\n             * authoring view into a JSON object\n             */\n            let editedComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n            // replace the component in the project\n            this.ProjectService.replaceComponent(this.nodeId, this.componentId, editedComponentContent);\n\n            // set the new component into the controller\n            this.componentContent = editedComponentContent;\n\n            /*\n             * notify the parent node that the content has changed which will save\n             * the project to the server\n             */\n            this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n        } catch(e) {\n            this.$scope.$parent.nodeAuthoringController.showSaveErrorAdvancedAuthoring();\n        }\n    };\n\n    /**\n     * Update the component JSON string that will be displayed in the advanced authoring view textarea\n     */\n    updateAdvancedAuthoringView() {\n        this.authoringComponentContentJSONString = angular.toJson(this.authoringComponentContent, 4);\n    };\n\n    /**\n     * Get the image object representation of the student data\n     * @returns an image object\n     */\n    getImageObjects() {\n        let imageObjects = [];\n\n        // get the image elements in the scope\n        let componentId = this.componentId;\n        let imageElements = angular.element('#' + componentId + ' img');\n\n        if (imageElements != null) {\n\n            // loop through all the image elements\n            for (let i = 0; i < imageElements.length; i++) {\n                let imageElement = imageElements[i];\n\n                if (imageElement != null) {\n\n                    // create an image object\n                    let imageObject = this.UtilService.getImageObjectFromImageElement(imageElement);\n                    imageObjects.push(imageObject);\n                }\n            }\n        }\n\n        return imageObjects;\n    }\n\n    /**\n     * The summernote prompt html has changed so we will update the authoring\n     * component content\n     */\n    summernotePromptHTMLChanged() {\n\n        // get the summernote prompt html\n        let html = this.summernotePromptHTML;\n\n        /*\n         * remove the absolute asset paths\n         * e.g.\n         * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n         * will be changed to\n         * <img src='sun.png'/>\n         */\n        html = this.ConfigService.removeAbsoluteAssetPaths(html);\n\n        /*\n         * replace <a> and <button> elements with <wiselink> elements when\n         * applicable\n         */\n        html = this.UtilService.insertWISELinks(html);\n\n        // update the authoring component content\n        this.authoringComponentContent.html = html;\n\n        // the authoring component content has changed so we will save the project\n        this.authoringViewComponentChanged();\n    }\n\n    /**\n     * The author has changed the rubric\n     */\n    summernoteRubricHTMLChanged() {\n\n        // get the summernote rubric html\n        let html = this.summernoteRubricHTML;\n\n        /*\n         * remove the absolute asset paths\n         * e.g.\n         * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n         * will be changed to\n         * <img src='sun.png'/>\n         */\n        html = this.ConfigService.removeAbsoluteAssetPaths(html);\n\n        /*\n         * replace <a> and <button> elements with <wiselink> elements when\n         * applicable\n         */\n        html = this.UtilService.insertWISELinks(html);\n\n        // update the component rubric\n        this.authoringComponentContent.rubric = html;\n\n        // the authoring component content has changed so we will save the project\n        this.authoringViewComponentChanged();\n    }\n}\n\nHTMLController.$inject = [\n    '$rootScope',\n    '$scope',\n    '$state',\n    '$stateParams',\n    '$sce',\n    '$filter',\n    '$mdDialog',\n    'ConfigService',\n    'NodeService',\n    'ProjectService',\n    'StudentDataService',\n    'UtilService'\n];\n\nexport default HTMLController;\n"]}