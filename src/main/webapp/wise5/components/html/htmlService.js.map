{"version":3,"sources":["htmlService.es6"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAEM,W;;;AACF,yBAAY,kBAAZ,EACY,WADZ,EACyB;AAAA;;AAAA;;AAErB,cAAK,kBAAL,GAA0B,kBAA1B;AACA,cAAK,WAAL,GAAmB,WAAnB;AAHqB;AAIxB;;AAED;;;;;;;;0CAIkB;;AAEd,gBAAI,YAAY,EAAhB;AACA,sBAAU,EAAV,GAAe,KAAK,WAAL,CAAiB,WAAjB,EAAf;AACA,sBAAU,IAAV,GAAiB,MAAjB;AACA,sBAAU,IAAV,GAAiB,iBAAjB;;AAEA,mBAAO,SAAP;AACH;;AAED;;;;;;;sCAIc,e,EAAiB;;AAE3B,gBAAI,YAAY,EAAhB;AACA,sBAAU,EAAV,GAAe,KAAK,WAAL,CAAiB,WAAjB,EAAf;AACA,sBAAU,IAAV,GAAiB,MAAjB;AACA,sBAAU,IAAV,GAAiB,gBAAgB,IAAjC;;AAEA,mBAAO,SAAP;AACH;;AAED;;;;;;;;;;;oCAQY,S,EAAW,e,EAAiB,e,EAAiB,U,EAAY;AACjE,gBAAI,SAAS,KAAb;;AAEA,gBAAI,cAAc,IAAlB,EAAwB;;AAEpB;AACA,qBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,WAAW,MAA/B,EAAuC,GAAvC,EAA4C;;AAExC;AACA,wBAAI,QAAQ,WAAW,CAAX,CAAZ;;AAEA,wBAAI,SAAS,IAAT,IAAiB,MAAM,KAAN,KAAgB,aAArC,EAAoD;AAChD,iCAAS,IAAT;AACA;AACH;AACJ;AACJ;;AAED,mBAAO,MAAP;AACH;;;;;;AAGL,YAAY,OAAZ,GAAsB,CAClB,oBADkB,EAElB,aAFkB,CAAtB;;kBAKe,W","file":"htmlService.js","sourcesContent":["import NodeService from '../../services/nodeService';\n\nclass HTMLService extends NodeService {\n    constructor(StudentDataService,\n                UtilService) {\n        super();\n        this.StudentDataService = StudentDataService;\n        this.UtilService = UtilService;\n    }\n\n    /**\n     * Create an HTML component object\n     * @returns a new HTML component object\n     */\n    createComponent() {\n\n        var component = {};\n        component.id = this.UtilService.generateKey();\n        component.type = 'HTML';\n        component.html = 'Enter html here';\n\n        return component;\n    }\n\n    /**\n     * Copies an existing HTML component object\n     * @returns a copied HTML component object\n     */\n    copyComponent(componentToCopy) {\n\n        var component = {};\n        component.id = this.UtilService.generateKey();\n        component.type = 'HTML';\n        component.html = componentToCopy.html;\n\n        return component;\n    }\n\n    /**\n     * Check if the component was completed\n     * @param component the component object\n     * @param componentStates the component states for the specific component\n     * @param componentEvents the events for the specific component\n     * @param nodeEvents the events for the parent node of the component\n     * @returns whether the component was completed\n     */\n    isCompleted(component, componentStates, componentEvents, nodeEvents) {\n        var result = false;\n\n        if (nodeEvents != null) {\n\n            // loop through all the events\n            for (var e = 0; e < nodeEvents.length; e++) {\n\n                // get an event\n                var event = nodeEvents[e];\n\n                if (event != null && event.event === 'nodeEntered') {\n                    result = true;\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n}\n\nHTMLService.$inject = [\n    'StudentDataService',\n    'UtilService'\n];\n\nexport default HTMLService;\n"]}