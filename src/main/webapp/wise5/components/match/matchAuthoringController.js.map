{"version":3,"sources":["matchAuthoringController.es6"],"names":["MatchAuthoringController","$filter","$mdDialog","$mdMedia","$q","$rootScope","$scope","AnnotationService","ConfigService","dragulaService","MatchService","NodeService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","connectedComponentUpdateOnOptions","value","text","allowedConnectedComponentTypes","type","isSaveButtonVisible","componentContent","showSaveButton","isSubmitButtonVisible","showSubmitButton","summernoteRubricId","nodeId","componentId","summernoteRubricHTML","rubric","insertAssetString","$translate","InsertAssetButton","createInsertAssetButton","summernoteRubricOptions","toolbar","height","disableDragAndDrop","buttons","insertAssetButton","updateAdvancedAuthoringView","$watch","authoringComponentContent","bind","newValue","oldValue","injectAssetPaths","isCorrect","submitCounter","isDisabled","isSubmitButtonDisabled","initializeChoices","initializeBuckets","$on","event","args","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","target","summernoteId","$","summernote","isImage","isVideo","videoElement","document","createElement","controls","innerHTML","choiceObject","targetObject","authoringViewComponentChanged","bucketObject","hide","showAdvancedAuthoring","$parent","nodeAuthoringController","authoringViewNodeChanged","angular","fromJson","authoringComponentContentJSONString","replaceComponent","e","showSaveErrorAdvancedAuthoring","toJson","newChoice","id","generateKey","choices","push","addChoiceToFeedback","newBucket","buckets","addBucketToFeedback","index","choice","splice","feedback","f","length","bucketFeedback","bucketFeedbackChoices","tempChoice","answer","confirm","deletedChoice","choiceId","removeChoiceFromFeedback","bucket","deletedBucket","bucketId","removeBucketFromFeedback","feedbackText","feedbackObject","createFeedbackObject","c","position","incorrectPositionFeedback","html","removeAbsoluteAssetPaths","insertWISELinks","newConnectedComponent","updateOn","connectedComponents","show","componentHasFeedback","setShowSubmitButtonValue","tempFeedback","tempChoices","$emit","params","isPopup","$broadcast","tags","tag","authoringAutomaticallySetConnectedComponentComponentIdIfPossible","connectedComponent","components","getComponentsByNodeId","numberOfAllowedComponents","allowedComponent","component","isConnectedComponentTypeAllowed","connectedComponentType","getComponentByNodeIdAndComponentId","componentType","a","allowedConnectedComponentType","showJSONAuthoring","jsonStringChanged","advancedAuthoringViewComponentChanged","$inject"],"mappings":"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","file":"matchAuthoringController.js","sourcesContent":["'use strict';\n\nimport MatchController from \"./matchController\";\n\nclass MatchAuthoringController extends MatchController {\n  constructor($filter,\n              $mdDialog,\n              $mdMedia,\n              $q,\n              $rootScope,\n              $scope,\n              AnnotationService,\n              ConfigService,\n              dragulaService,\n              MatchService,\n              NodeService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    super($filter,\n      $mdDialog,\n      $mdMedia,\n      $q,\n      $rootScope,\n      $scope,\n      AnnotationService,\n      ConfigService,\n      dragulaService,\n      MatchService,\n      NodeService,\n      NotebookService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService);\n\n    this.connectedComponentUpdateOnOptions = [\n      {\n        value: 'change',\n        text: 'Change'\n      },\n      {\n        value: 'submit',\n        text: 'Submit'\n      }\n    ];\n    this.allowedConnectedComponentTypes = [\n      {\n        type: 'Match'\n      }\n    ];\n\n    this.isSaveButtonVisible = this.componentContent.showSaveButton;\n    this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n    this.summernoteRubricId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n    this.summernoteRubricHTML = this.componentContent.rubric;\n    const insertAssetString = this.$translate('INSERT_ASSET');\n    const InsertAssetButton = this.UtilService.createInsertAssetButton(this, null, this.nodeId, this.componentId, 'rubric', insertAssetString);\n    this.summernoteRubricOptions = {\n      toolbar: [\n        ['style', ['style']],\n        ['font', ['bold', 'underline', 'clear']],\n        ['fontname', ['fontname']],\n        ['fontsize', ['fontsize']],\n        ['color', ['color']],\n        ['para', ['ul', 'ol', 'paragraph']],\n        ['table', ['table']],\n        ['insert', ['link', 'video']],\n        ['view', ['fullscreen', 'codeview', 'help']],\n        ['customButton', ['insertAssetButton']]\n      ],\n      height: 300,\n      disableDragAndDrop: true,\n      buttons: {\n        insertAssetButton: InsertAssetButton\n      }\n    };\n\n    this.updateAdvancedAuthoringView();\n\n    $scope.$watch(function() {\n      return this.authoringComponentContent;\n    }.bind(this), function(newValue, oldValue) {\n      this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n      this.isSaveButtonVisible = this.componentContent.showSaveButton;\n      this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n      this.isCorrect = null;\n      this.submitCounter = 0;\n      this.isDisabled = false;\n      this.isSubmitButtonDisabled = false;\n      this.initializeChoices();\n      this.initializeBuckets();\n    }.bind(this), true);\n\n    this.$scope.$on('assetSelected', (event, args) => {\n      if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n        const assetItem = args.assetItem;\n        const fileName = assetItem.fileName;\n        const assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n        const fullAssetPath = assetsDirectoryPath + '/' + fileName;\n        if (args.target == 'prompt' || args.target == 'rubric') {\n          let summernoteId = '';\n          if (args.target == 'prompt') {\n            summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n          } else if (args.target == 'rubric') {\n            summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n          }\n          if (summernoteId != '') {\n            /*\n             * move the cursor back to its position when the asset chooser\n             * popup was clicked\n             */\n            $('#' + summernoteId).summernote('editor.restoreRange');\n            $('#' + summernoteId).summernote('editor.focus');\n\n            if (this.UtilService.isImage(fileName)) {\n              $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n            } else if (this.UtilService.isVideo(fileName)) {\n              const videoElement = document.createElement('video');\n              videoElement.controls = 'true';\n              videoElement.innerHTML = '<source ng-src=\"' + fullAssetPath + '\" type=\"video/mp4\">';\n              $('#' + summernoteId).summernote('insertNode', videoElement);\n            }\n          }\n        } else if (args.target == 'choice') {\n          const choiceObject = args.targetObject;\n          choiceObject.value = '<img src=\"' + fileName + '\"/>';\n          this.authoringViewComponentChanged();\n        } else if (args.target == 'bucket') {\n          const bucketObject = args.targetObject;\n          bucketObject.value = '<img src=\"' + fileName + '\"/>';\n          this.authoringViewComponentChanged();\n        }\n      }\n      this.$mdDialog.hide();\n    });\n\n    this.$scope.$on('componentAdvancedButtonClicked', (event, args) => {\n      if (this.componentId === args.componentId) {\n        this.showAdvancedAuthoring = !this.showAdvancedAuthoring;\n      }\n    });\n  }\n\n  /**\n   * The component has changed in the regular authoring view so we will save the project\n   */\n  authoringViewComponentChanged() {\n\n    // update the JSON string in the advanced authoring view textarea\n    this.updateAdvancedAuthoringView();\n\n    /*\n     * notify the parent node that the content has changed which will save\n     * the project to the server\n     */\n    this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n  };\n\n  /**\n   * The component has changed in the advanced authoring view so we will update\n   * the component and save the project.\n   */\n  advancedAuthoringViewComponentChanged() {\n\n    try {\n      /*\n       * create a new component by converting the JSON string in the advanced\n       * authoring view into a JSON object\n       */\n      var authoringComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n      // replace the component in the project\n      this.ProjectService.replaceComponent(this.nodeId, this.componentId, authoringComponentContent);\n\n      // set the new authoring component content\n      this.authoringComponentContent = authoringComponentContent;\n\n      // set the component content\n      this.componentContent = this.ProjectService.injectAssetPaths(authoringComponentContent);\n\n      /*\n       * notify the parent node that the content has changed which will save\n       * the project to the server\n       */\n      this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n    } catch(e) {\n      this.$scope.$parent.nodeAuthoringController.showSaveErrorAdvancedAuthoring();\n    }\n  };\n\n  /**\n   * Update the component JSON string that will be displayed in the advanced authoring view textarea\n   */\n  updateAdvancedAuthoringView() {\n    this.authoringComponentContentJSONString = angular.toJson(this.authoringComponentContent, 4);\n  };\n\n  /**\n   * Add a choice\n   */\n  authoringAddChoice() {\n\n    // create a new choice\n    var newChoice = {};\n    newChoice.id = this.UtilService.generateKey(10);\n    newChoice.value = '';\n    newChoice.type = 'choice';\n\n    // add the choice to the array of choices\n    this.authoringComponentContent.choices.push(newChoice);\n\n    // add the choice to the feedback\n    this.addChoiceToFeedback(newChoice.id);\n\n    // save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Add a bucket\n   */\n  authoringAddBucket() {\n\n    // create a new bucket\n    var newBucket = {};\n    newBucket.id = this.UtilService.generateKey(10);\n    newBucket.value = '';\n    newBucket.type = 'bucket';\n\n    // add the bucket to the array of buckets\n    this.authoringComponentContent.buckets.push(newBucket);\n\n    // add the bucket to the feedback\n    this.addBucketToFeedback(newBucket.id);\n\n    // save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Move a choice up\n   * @param index the index of the choice\n   */\n  authoringMoveChoiceUp(index) {\n\n    if (index != 0) {\n      // the choice is not at the top so we can move it up\n\n      // remember the choice\n      var choice = this.authoringComponentContent.choices[index];\n\n      if (choice != null) {\n\n        // remove the choice\n        this.authoringComponentContent.choices.splice(index, 1);\n\n        // insert the choice one index back\n        this.authoringComponentContent.choices.splice(index - 1, 0, choice);\n      }\n\n      /*\n       * get the feedback so we can update the order of the choices within\n       * the bucket feedback\n       */\n      var feedback = this.authoringComponentContent.feedback;\n\n      if (feedback != null) {\n\n        // loop through all the bucket feedback objects\n        for (var f = 0; f < feedback.length; f++) {\n          var bucketFeedback = feedback[f];\n\n          if (bucketFeedback != null) {\n\n            // get all the choices\n            var bucketFeedbackChoices = bucketFeedback.choices;\n\n            if (bucketFeedbackChoices != null) {\n\n              // remmeber the choice\n              var tempChoice = bucketFeedbackChoices[index];\n\n              if (tempChoice != null) {\n                // remove the choice\n                bucketFeedbackChoices.splice(index, 1);\n\n                // insert the choice one index back\n                bucketFeedbackChoices.splice(index - 1, 0, tempChoice);\n              }\n            }\n          }\n        }\n      }\n\n      // save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move a choice down\n   * @param index the index of the choice\n   */\n  authoringMoveChoiceDown(index) {\n\n    if (index < this.authoringComponentContent.choices.length - 1) {\n      // the choice is not at the bottom so we can move it down\n\n      // remember the choice\n      var choice = this.authoringComponentContent.choices[index];\n\n      if (choice != null) {\n\n        // remove the choice\n        this.authoringComponentContent.choices.splice(index, 1);\n\n        // insert the choice one index forward\n        this.authoringComponentContent.choices.splice(index + 1, 0, choice);\n      }\n\n      /*\n       * get the feedback so we can update the order of the choices within\n       * the bucket feedback\n       */\n      var feedback = this.authoringComponentContent.feedback;\n\n      if (feedback != null) {\n\n        // loop through all the bucket feedback objects\n        for (var f = 0; f < feedback.length; f++) {\n          var bucketFeedback = feedback[f];\n\n          if (bucketFeedback != null) {\n\n            // get all the choices\n            var bucketFeedbackChoices = bucketFeedback.choices;\n\n            if (bucketFeedbackChoices != null) {\n\n              // remmeber the choice\n              var tempChoice = bucketFeedbackChoices[index];\n\n              if (tempChoice != null) {\n                // remove the choice\n                bucketFeedbackChoices.splice(index, 1);\n\n                // insert the choice one index forward\n                bucketFeedbackChoices.splice(index + 1, 0, tempChoice);\n              }\n            }\n          }\n        }\n      }\n\n      // save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Delete a choice\n   * @param index the index of the choice in the choice array\n   */\n  authoringDeleteChoice(index) {\n\n    // confirm with the user that they want to delete the choice\n    var answer = confirm(this.$translate('match.areYouSureYouWantToDeleteThisChoice'));\n\n    if (answer) {\n\n      // remove the choice from the array\n      var deletedChoice = this.authoringComponentContent.choices.splice(index, 1);\n\n      if (deletedChoice != null && deletedChoice.length > 0) {\n\n        // splice returns an array so we need to get the element out of it\n        deletedChoice = deletedChoice[0];\n\n        // get the choice id\n        var choiceId = deletedChoice.id;\n\n        // remove the choice from the feedback\n        this.removeChoiceFromFeedback(choiceId);\n      }\n\n      // save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move a bucket up\n   * @param index the index of the bucket\n   */\n  authoringMoveBucketUp(index) {\n\n    if (index > 0) {\n      // the bucket is not at the top so we can move it up\n\n      // remember the bucket\n      var bucket = this.authoringComponentContent.buckets[index];\n\n      if (bucket != null) {\n\n        // remove the bucket\n        this.authoringComponentContent.buckets.splice(index, 1);\n\n        // insert the bucket one index back\n        this.authoringComponentContent.buckets.splice(index - 1, 0, bucket);\n      }\n\n      /*\n       * Remember the bucket feedback. The first element of the feedback\n       * contains the origin bucket. The first authored bucket is located\n       * at index 1. This means we need the index of the bucket feedback\n       * that we want is located at index + 1.\n       */\n      var bucketFeedback = this.authoringComponentContent.feedback[index + 1];\n\n      if (bucketFeedback != null) {\n\n        // remove the bucket feedback\n        this.authoringComponentContent.feedback.splice(index + 1, 1);\n\n        // insert the bucket one index back\n        this.authoringComponentContent.feedback.splice(index, 0, bucketFeedback);\n      }\n\n      // save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move a bucket down\n   * @param index the index of the bucket\n   */\n  authoringMoveBucketDown(index) {\n\n    if (index < this.authoringComponentContent.buckets.length - 1) {\n      // the bucket is not at the bottom so we can move it down\n\n      // remember the bucket\n      var bucket = this.authoringComponentContent.buckets[index];\n\n      if (bucket != null) {\n\n        // remove the bucket\n        this.authoringComponentContent.buckets.splice(index, 1);\n\n        // insert the bucket one index forward\n        this.authoringComponentContent.buckets.splice(index + 1, 0, bucket);\n      }\n\n      /*\n       * Remember the bucket feedback. The first element of the feedback\n       * contains the origin bucket. The first authored bucket is located\n       * at index 1. This means we need the index of the bucket feedback\n       * that we want is located at index + 1.\n       */\n      var bucketFeedback = this.authoringComponentContent.feedback[index + 1];\n\n      if (bucketFeedback != null) {\n\n        // remove the bucket feedback\n        this.authoringComponentContent.feedback.splice(index + 1, 1);\n\n        // insert the bucket one index forward\n        this.authoringComponentContent.feedback.splice(index + 2, 0, bucketFeedback);\n      }\n\n      // save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Delete a bucket\n   * @param index the index of the bucket in the bucket array\n   */\n  authoringDeleteBucket(index) {\n\n    // confirm with the user tha tthey want to delete the bucket\n    var answer = confirm(this.$translate('match.areYouSureYouWantToDeleteThisBucket'));\n\n    if (answer) {\n\n      // remove the bucket from the array\n      var deletedBucket = this.authoringComponentContent.buckets.splice(index, 1);\n\n      if (deletedBucket != null && deletedBucket.length > 0) {\n\n        // splice returns an array so we need to get the element out of it\n        deletedBucket = deletedBucket[0];\n\n        // get the bucket id\n        var bucketId = deletedBucket.id;\n\n        // remove the bucket from the feedback\n        this.removeBucketFromFeedback(bucketId);\n      }\n\n      // save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Add a choice to the feedback\n   * @param choiceId the choice id\n   */\n  addChoiceToFeedback(choiceId) {\n\n    // get the feedback array\n    var feedback = this.authoringComponentContent.feedback;\n\n    if (feedback != null) {\n\n      /*\n       * loop through all the elements in the feedback. each element\n       * represents a bucket.\n       */\n      for (var f = 0; f < feedback.length; f++) {\n        // get a bucket\n        var bucketFeedback = feedback[f];\n\n        if (bucketFeedback != null) {\n\n          // get the choices in the bucket\n          var choices = bucketFeedback.choices;\n\n          var feedbackText = '';\n          var isCorrect = false;\n\n          // create a feedback object\n          var feedbackObject = this.createFeedbackObject(choiceId, feedbackText, isCorrect);\n\n          // add the feedback object\n          choices.push(feedbackObject);\n        }\n      }\n    }\n  }\n\n  /**\n   * Add a bucket to the feedback\n   * @param bucketId the bucket id\n   */\n  addBucketToFeedback(bucketId) {\n\n    // get the feedback array. each element in the array represents a bucket.\n    var feedback = this.authoringComponentContent.feedback;\n\n    if (feedback != null) {\n\n      // create a new bucket feedback object\n      var bucket = {};\n      bucket.bucketId = bucketId;\n      bucket.choices = [];\n\n      // get all the choices\n      var choices = this.authoringComponentContent.choices;\n\n      // loop through all the choices and add a choice feedback object to the bucket\n      for (var c = 0; c < choices.length; c++) {\n        var choice = choices[c];\n\n        if (choice != null) {\n\n          var choiceId = choice.id;\n          var feedbackText = '';\n          var isCorrect = false;\n\n          // create a feedback object\n          var feedbackObject = this.createFeedbackObject(choiceId, feedbackText, isCorrect);\n\n          // add the feedback object\n          bucket.choices.push(feedbackObject);\n        }\n      }\n\n      // add the feedback bucket\n      feedback.push(bucket);\n    }\n  }\n\n  /**\n   * Create a feedback object\n   * @param choiceId the choice id\n   * @param feedback the feedback\n   * @param isCorrect whether the choice is correct\n   * @param position (optional) the position\n   * @param incorrectPositionFeedback (optional) the feedback for when the\n   * choice is in the correct but wrong position\n   * @returns the feedback object\n   */\n  createFeedbackObject(choiceId, feedback, isCorrect, position, incorrectPositionFeedback) {\n\n    var feedbackObject = {};\n    feedbackObject.choiceId = choiceId;\n    feedbackObject.feedback = feedback;\n    feedbackObject.isCorrect = isCorrect;\n    feedbackObject.position = position;\n    feedbackObject.incorrectPositionFeedback = incorrectPositionFeedback;\n\n    return feedbackObject;\n  }\n\n  /**\n   * Remove a choice from the feedback\n   * @param choiceId the choice id to remove\n   */\n  removeChoiceFromFeedback(choiceId) {\n\n    // get the feedback array. each element in the array represents a bucket.\n    var feedback = this.authoringComponentContent.feedback;\n\n    if (feedback != null) {\n\n      /*\n       * loop through each bucket feedback and remove the choice from each\n       * bucket feedback object\n       */\n      for (var f = 0; f < feedback.length; f++) {\n        var bucketFeedback = feedback[f];\n\n        if (bucketFeedback != null) {\n\n          var choices = bucketFeedback.choices;\n\n          // loop through all the choices\n          for (var c = 0; c < choices.length; c++) {\n            var choice = choices[c];\n\n            if (choice != null) {\n              if (choiceId === choice.choiceId) {\n                // we have found the choice we want to remove\n\n                // remove the choice feedback object\n                choices.splice(c, 1);\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove a bucket from the feedback\n   * @param bucketId the bucket id to remove\n   */\n  removeBucketFromFeedback(bucketId) {\n\n    // get the feedback array. each element in the array represents a bucket.\n    var feedback = this.authoringComponentContent.feedback;\n\n    if (feedback != null) {\n\n      // loop through all the bucket feedback objects\n      for (var f = 0; f < feedback.length; f++) {\n        var bucketFeedback = feedback[f];\n\n        if (bucketFeedback != null) {\n\n          if (bucketId === bucketFeedback.bucketId) {\n            // we have found the bucket feedback object we want to remove\n\n            // remove the bucket feedback object\n            feedback.splice(f, 1);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * The author has changed the rubric\n   */\n  summernoteRubricHTMLChanged() {\n\n    // get the summernote rubric html\n    var html = this.summernoteRubricHTML;\n\n    /*\n     * remove the absolute asset paths\n     * e.g.\n     * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n     * will be changed to\n     * <img src='sun.png'/>\n     */\n    html = this.ConfigService.removeAbsoluteAssetPaths(html);\n\n    /*\n     * replace <a> and <button> elements with <wiselink> elements when\n     * applicable\n     */\n    html = this.UtilService.insertWISELinks(html);\n\n    // update the component rubric\n    this.authoringComponentContent.rubric = html;\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Add a connected component\n   */\n  addConnectedComponent() {\n\n    /*\n     * create the new connected component object that will contain a\n     * node id and component id\n     */\n    var newConnectedComponent = {};\n    newConnectedComponent.nodeId = this.nodeId;\n    newConnectedComponent.componentId = null;\n    newConnectedComponent.updateOn = 'change';\n\n    // initialize the array of connected components if it does not exist yet\n    if (this.authoringComponentContent.connectedComponents == null) {\n      this.authoringComponentContent.connectedComponents = [];\n    }\n\n    // add the connected component\n    this.authoringComponentContent.connectedComponents.push(newConnectedComponent);\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Delete a connected component\n   * @param index the index of the component to delete\n   */\n  deleteConnectedComponent(index) {\n\n    if (this.authoringComponentContent.connectedComponents != null) {\n      this.authoringComponentContent.connectedComponents.splice(index, 1);\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The author has changed the feedback so we will enable the submit button\n   */\n  authoringViewFeedbackChanged() {\n\n    var show = true;\n\n    if (this.componentHasFeedback()) {\n      // this component has feedback so we will show the submit button\n      show = true;\n    } else {\n      /*\n       * this component does not have feedback so we will not show the\n       * submit button\n       */\n      show = false;\n    }\n\n    // show or hide the submit button\n    this.setShowSubmitButtonValue(show);\n\n    // save the component\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Check if this component has been authored to have feedback or a correct\n   * choice\n   * @return whether this component has feedback or a correct choice\n   */\n  componentHasFeedback() {\n\n    // get the feedback\n    var feedback = this.authoringComponentContent.feedback;\n\n    if (feedback != null) {\n\n      // loop through all the feedback buckets\n      for (var f = 0; f < feedback.length; f++) {\n\n        var tempFeedback = feedback[f];\n\n        if (tempFeedback != null) {\n          var tempChoices = tempFeedback.choices;\n\n          if (tempChoices != null) {\n\n            // loop through the feedback choices\n            for (var c = 0; c < tempChoices.length; c++) {\n              var tempChoice = tempChoices[c];\n\n              if (tempChoice != null) {\n\n                if (tempChoice.feedback != null && tempChoice.feedback != '') {\n                  // this choice has feedback\n                  return true;\n                }\n\n                if (tempChoice.isCorrect) {\n                  // this choice is correct\n                  return true;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * The \"Is Correct\" checkbox for a choice feedback has been clicked.\n   * @param feedback The choice feedback.\n   */\n  authoringViewIsCorrectClicked(feedback) {\n    if (!feedback.isCorrect) {\n      // the choice has been set to not correct so we will remove the position\n      delete feedback.position;\n      delete feedback.incorrectPositionFeedback;\n    }\n    // save the component\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Set the show submit button value\n   * @param show whether to show the submit button\n   */\n  setShowSubmitButtonValue(show) {\n\n    if (show == null || show == false) {\n      // we are hiding the submit button\n      this.authoringComponentContent.showSaveButton = false;\n      this.authoringComponentContent.showSubmitButton = false;\n    } else {\n      // we are showing the submit button\n      this.authoringComponentContent.showSaveButton = true;\n      this.authoringComponentContent.showSubmitButton = true;\n    }\n\n    /*\n     * notify the parent node that this component is changing its\n     * showSubmitButton value so that it can show save buttons on the\n     * step or sibling components accordingly\n     */\n    this.$scope.$emit('componentShowSubmitButtonValueChanged', {nodeId: this.nodeId, componentId: this.componentId, showSubmitButton: show});\n  }\n\n  /**\n   * The showSubmitButton value has changed\n   */\n  showSubmitButtonValueChanged() {\n\n    /*\n     * perform additional processing for when we change the showSubmitButton\n     * value\n     */\n    this.setShowSubmitButtonValue(this.authoringComponentContent.showSubmitButton);\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose an image for the\n   * choice\n   * @param choice the choice object to set the image into\n   */\n  chooseChoiceAsset(choice) {\n    // generate the parameters\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'choice';\n    params.targetObject = choice;\n\n    // display the asset chooser\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose an image for the\n   * bucket\n   * @param bucket the bucket object to set the image into\n   */\n  chooseBucketAsset(bucket) {\n    // generate the parameters\n    var params = {};\n    params.isPopup = true;\n    params.nodeId = this.nodeId;\n    params.componentId = this.componentId;\n    params.target = 'bucket';\n    params.targetObject = bucket;\n\n    // display the asset chooser\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * Add a tag\n   */\n  addTag() {\n\n    if (this.authoringComponentContent.tags == null) {\n      // initialize the tags array\n      this.authoringComponentContent.tags = [];\n    }\n\n    // add a tag\n    this.authoringComponentContent.tags.push('');\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Move a tag up\n   * @param index the index of the tag to move up\n   */\n  moveTagUp(index) {\n\n    if (index > 0) {\n      // the index is not at the top so we can move it up\n\n      // remember the tag\n      let tag = this.authoringComponentContent.tags[index];\n\n      // remove the tag\n      this.authoringComponentContent.tags.splice(index, 1);\n\n      // insert the tag one index back\n      this.authoringComponentContent.tags.splice(index - 1, 0, tag);\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Move a tag down\n   * @param index the index of the tag to move down\n   */\n  moveTagDown(index) {\n\n    if (index < this.authoringComponentContent.tags.length - 1) {\n      // the index is not at the bottom so we can move it down\n\n      // remember the tag\n      let tag = this.authoringComponentContent.tags[index];\n\n      // remove the tag\n      this.authoringComponentContent.tags.splice(index, 1);\n\n      // insert the tag one index forward\n      this.authoringComponentContent.tags.splice(index + 1, 0, tag);\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Delete a tag\n   * @param index the index of the tag to delete\n   */\n  deleteTag(index) {\n\n    // ask the author if they are sure they want to delete the tag\n    let answer = confirm(this.$translate('areYouSureYouWantToDeleteThisTag'));\n\n    if (answer) {\n      // the author answered yes to delete the tag\n\n      // remove the tag\n      this.authoringComponentContent.tags.splice(index, 1);\n    }\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Add a connected component\n   */\n  authoringAddConnectedComponent() {\n\n    /*\n     * create the new connected component object that will contain a\n     * node id and component id\n     */\n    var newConnectedComponent = {};\n    newConnectedComponent.nodeId = this.nodeId;\n    newConnectedComponent.componentId = null;\n    newConnectedComponent.type = null;\n    this.authoringAutomaticallySetConnectedComponentComponentIdIfPossible(newConnectedComponent);\n\n    // initialize the array of connected components if it does not exist yet\n    if (this.authoringComponentContent.connectedComponents == null) {\n      this.authoringComponentContent.connectedComponents = [];\n    }\n\n    // add the connected component\n    this.authoringComponentContent.connectedComponents.push(newConnectedComponent);\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * Automatically set the component id for the connected component if there\n   * is only one viable option.\n   * @param connectedComponent the connected component object we are authoring\n   */\n  authoringAutomaticallySetConnectedComponentComponentIdIfPossible(connectedComponent) {\n    if (connectedComponent != null) {\n      let components = this.getComponentsByNodeId(connectedComponent.nodeId);\n      if (components != null) {\n        let numberOfAllowedComponents = 0;\n        let allowedComponent = null;\n        for (let component of components) {\n          if (component != null) {\n            if (this.isConnectedComponentTypeAllowed(component.type) &&\n              component.id != this.componentId) {\n              // we have found a viable component we can connect to\n              numberOfAllowedComponents += 1;\n              allowedComponent = component;\n            }\n          }\n        }\n\n        if (numberOfAllowedComponents == 1) {\n          /*\n           * there is only one viable component to connect to so we\n           * will use it\n           */\n          connectedComponent.componentId = allowedComponent.id;\n          connectedComponent.type = 'importWork';\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete a connected component\n   * @param index the index of the component to delete\n   */\n  authoringDeleteConnectedComponent(index) {\n\n    // ask the author if they are sure they want to delete the connected component\n    let answer = confirm(this.$translate('areYouSureYouWantToDeleteThisConnectedComponent'));\n\n    if (answer) {\n      // the author answered yes to delete\n\n      if (this.authoringComponentContent.connectedComponents != null) {\n        this.authoringComponentContent.connectedComponents.splice(index, 1);\n      }\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Get the connected component type\n   * @param connectedComponent get the component type of this connected component\n   * @return the connected component type\n   */\n  authoringGetConnectedComponentType(connectedComponent) {\n\n    var connectedComponentType = null;\n\n    if (connectedComponent != null) {\n\n      // get the node id and component id of the connected component\n      var nodeId = connectedComponent.nodeId;\n      var componentId = connectedComponent.componentId;\n\n      // get the component\n      var component = this.ProjectService.getComponentByNodeIdAndComponentId(nodeId, componentId);\n\n      if (component != null) {\n        // get the component type\n        connectedComponentType = component.type;\n      }\n    }\n\n    return connectedComponentType;\n  }\n\n  /**\n   * The connected component node id has changed\n   * @param connectedComponent the connected component that has changed\n   */\n  authoringConnectedComponentNodeIdChanged(connectedComponent) {\n    if (connectedComponent != null) {\n      connectedComponent.componentId = null;\n      connectedComponent.type = null;\n      this.authoringAutomaticallySetConnectedComponentComponentIdIfPossible(connectedComponent);\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * The connected component component id has changed\n   * @param connectedComponent the connected component that has changed\n   */\n  authoringConnectedComponentComponentIdChanged(connectedComponent) {\n\n    if (connectedComponent != null) {\n\n      // default the type to import work\n      connectedComponent.type = 'importWork';\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * The connected component type has changed\n   * @param connectedComponent the connected component that changed\n   */\n  authoringConnectedComponentTypeChanged(connectedComponent) {\n\n    if (connectedComponent != null) {\n\n      if (connectedComponent.type == 'importWork') {\n        /*\n         * the type has changed to import work\n         */\n      } else if (connectedComponent.type == 'showWork') {\n        /*\n         * the type has changed to show work\n         */\n      }\n\n      // the authoring component content has changed so we will save the project\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Check if we are allowed to connect to this component type\n   * @param componentType the component type\n   * @return whether we can connect to the component type\n   */\n  isConnectedComponentTypeAllowed(componentType) {\n\n    if (componentType != null) {\n\n      let allowedConnectedComponentTypes = this.allowedConnectedComponentTypes;\n\n      // loop through the allowed connected component types\n      for (let a = 0; a < allowedConnectedComponentTypes.length; a++) {\n        let allowedConnectedComponentType = allowedConnectedComponentTypes[a];\n\n        if (allowedConnectedComponentType != null) {\n          if (componentType == allowedConnectedComponentType.type) {\n            // the component type is allowed\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * The show JSON button was clicked to show or hide the JSON authoring\n   */\n  showJSONButtonClicked() {\n    // toggle the JSON authoring textarea\n    this.showJSONAuthoring = !this.showJSONAuthoring;\n\n    if (this.jsonStringChanged && !this.showJSONAuthoring) {\n      /*\n       * the author has changed the JSON and has just closed the JSON\n       * authoring view so we will save the component\n       */\n      this.advancedAuthoringViewComponentChanged();\n\n      // scroll to the top of the component\n      this.$rootScope.$broadcast('scrollToComponent', { componentId: this.componentId });\n\n      this.jsonStringChanged = false;\n    }\n  }\n\n  /**\n   * The author has changed the JSON manually in the advanced view\n   */\n  authoringJSONChanged() {\n    this.jsonStringChanged = true;\n  }\n}\n\nMatchAuthoringController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$mdMedia',\n  '$q',\n  '$rootScope',\n  '$scope',\n  'AnnotationService',\n  'ConfigService',\n  'dragulaService',\n  'MatchService',\n  'NodeService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default MatchAuthoringController;\n"]}