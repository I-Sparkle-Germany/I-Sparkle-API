{"version":3,"sources":["matchService.es6"],"names":["MatchService","$filter","StudentDataService","UtilService","$translate","component","type","choices","buckets","feedback","ordered","componentStates","componentEvents","nodeEvents","node","result","length","submitRequired","showSubmitButton","showSaveButton","c","componentState","studentData","isSubmit","componentContent","b","bucket","items","choice","isCorrect","$inject"],"mappings":"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","file":"matchService.js","sourcesContent":["import ComponentService from '../componentService';\n\nclass MatchService extends ComponentService {\n  constructor($filter, StudentDataService, UtilService) {\n    super($filter, StudentDataService, UtilService);\n  }\n\n  getComponentTypeLabel() {\n    return this.$translate('match.componentTypeLabel');\n  }\n\n  createComponent() {\n    const component = super.createComponent();\n    component.type = 'Match';\n    component.choices = [];\n    component.buckets = [];\n    component.feedback = [\n      {\n        'bucketId': '0',\n        'choices': []\n      }\n    ];\n    component.ordered = false;\n    return component;\n  }\n\n  isCompleted(component, componentStates, componentEvents, nodeEvents, node) {\n    var result = false;\n\n    if (componentStates && componentStates.length) {\n      let submitRequired = node.showSubmitButton || (component.showSubmitButton && !node.showSaveButton);\n\n      // loop through all the component states\n      for (var c = 0; c < componentStates.length; c++) {\n\n        // the component state\n        var componentState = componentStates[c];\n\n        // get the student data from the component state\n        var studentData = componentState.studentData;\n\n        if (studentData != null) {\n          var buckets = studentData.buckets;\n\n          if (buckets && buckets.length) {\n            // there is a bucket, so the student has saved work\n            if (submitRequired) {\n              // completion requires a submission, so check for isSubmit\n              if (componentState.isSubmit) {\n                result = true;\n                break;\n              }\n            } else {\n              result = true;\n              break;\n            }\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  componentStateHasStudentWork(componentState, componentContent) {\n    if (componentState != null) {\n      let studentData = componentState.studentData;\n      if (studentData != null) {\n        let buckets = studentData.buckets;\n        if (buckets != null) {\n          for (let b = 0; b < buckets.length; b++) {\n            let bucket = buckets[b];\n            if (bucket != null) {\n              let items = bucket.items;\n              if (items != null && items.length > 0) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if a the component has a correct answer.\n   * @param component The component content object.\n   * @return Whether the component has a correct answer.\n   */\n  hasCorrectAnswer(component) {\n    if (component != null) {\n      for (let bucket of component.feedback) {\n        for (let choice of bucket.choices) {\n          if (choice.isCorrect) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n}\n\nMatchService.$inject = [\n  '$filter',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default MatchService;\n"]}