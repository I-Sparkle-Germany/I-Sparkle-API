{"version":3,"sources":["outsideURLController.es6"],"names":["OutsideURLController","$filter","$mdDialog","$q","$rootScope","$scope","$sce","ConfigService","NodeService","OutsideURLService","ProjectService","StudentDataService","UtilService","$translate","nodeId","componentId","componentContent","authoringComponentContent","showAdvancedAuthoring","showJSONAuthoring","url","maxWidth","maxHeight","currentNode","getCurrentNode","id","originalComponentContent","mode","summernoteRubricId","summernoteRubricHTML","rubric","insertAssetString","InsertAssetButton","createInsertAssetButton","summernoteRubricOptions","toolbar","height","disableDragAndDrop","buttons","insertAssetButton","updateAdvancedAuthoringView","$watch","newValue","oldValue","injectAssetPaths","setURL","$parent","nodeController","registerComponentController","getComponentState","deferred","defer","resolve","promise","bind","$on","event","args","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","summernoteId","target","isImage","$","summernote","isVideo","videoElement","document","createElement","controls","innerHTML","hide","trustedURL","trustAsResourceUrl","nodeAuthoringController","authoringViewNodeChanged","angular","fromJson","authoringComponentContentJSONString","replaceComponent","e","showSaveErrorAdvancedAuthoring","toJson","exitListener","html","removeAbsoluteAssetPaths","insertWISELinks","authoringViewComponentChanged","jsonStringChanged","advancedAuthoringViewComponentChanged","$broadcast","$inject"],"mappings":"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","file":"outsideURLController.js","sourcesContent":["class OutsideURLController {\n  constructor($filter,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $sce,\n      ConfigService,\n      NodeService,\n      OutsideURLService,\n      ProjectService,\n      StudentDataService,\n      UtilService) {\n\n    this.$filter = $filter;\n    this.$mdDialog = $mdDialog;\n    this.$q = $q;\n    this.$rootScope = $rootScope;\n    this.$scope = $scope;\n    this.$sce = $sce;\n    this.ConfigService = ConfigService;\n    this.NodeService = NodeService;\n    this.OutsideURLService = OutsideURLService;\n    this.ProjectService = ProjectService;\n    this.StudentDataService = StudentDataService;\n    this.UtilService = UtilService;\n\n    this.$translate = this.$filter('translate');\n\n    // the node id of the current node\n    this.nodeId = null;\n\n    // the component id\n    this.componentId = null;\n\n    // field that will hold the component content\n    this.componentContent = null;\n\n    // field that will hold the authoring component content\n    this.authoringComponentContent = null;\n\n    // flag for whether to show the advanced authoring\n    this.showAdvancedAuthoring = false;\n\n    // whether the JSON authoring is displayed\n    this.showJSONAuthoring = false;\n\n    // the url to the web page to display\n    this.url = null;\n\n    // the max width of the iframe\n    this.maxWidth = null;\n\n    // the max height of the iframe\n    this.maxHeight = null;\n\n    // get the current node and node id\n    var currentNode = this.StudentDataService.getCurrentNode();\n    if (currentNode != null) {\n      this.nodeId = currentNode.id;\n    } else {\n      this.nodeId = this.$scope.nodeId;\n    }\n\n    // get the component content from the scope\n    this.componentContent = this.$scope.componentContent;\n\n    // get the authoring component content\n    this.authoringComponentContent = this.$scope.authoringComponentContent;\n\n    /*\n     * get the original component content. this is used when showing\n     * previous work from another component.\n     */\n    this.originalComponentContent = this.$scope.originalComponentContent;\n\n    this.mode = this.$scope.mode;\n\n    if (this.componentContent != null) {\n\n      // get the component id\n      this.componentId = this.componentContent.id;\n\n      if (this.mode === 'authoring') {\n        // generate the summernote rubric element id\n        this.summernoteRubricId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n\n        // set the component rubric into the summernote rubric\n        this.summernoteRubricHTML = this.componentContent.rubric;\n\n        // the tooltip text for the insert WISE asset button\n        var insertAssetString = this.$translate('html.insertAsset');\n\n        /*\n         * create the custom button for inserting WISE assets into\n         * summernote\n         */\n        var InsertAssetButton = this.UtilService.createInsertAssetButton(this, null, this.nodeId, this.componentId, 'rubric', insertAssetString);\n\n        /*\n         * the options that specifies the tools to display in the\n         * summernote prompt\n         */\n        this.summernoteRubricOptions = {\n          toolbar: [\n            ['style', ['style']],\n            ['font', ['bold', 'underline', 'clear']],\n            ['fontname', ['fontname']],\n            ['fontsize', ['fontsize']],\n            ['color', ['color']],\n            ['para', ['ul', 'ol', 'paragraph']],\n            ['table', ['table']],\n            ['insert', ['link', 'video']],\n            ['view', ['fullscreen', 'codeview', 'help']],\n            ['customButton', ['insertAssetButton']]\n          ],\n          height: 300,\n          disableDragAndDrop: true,\n          buttons: {\n            insertAssetButton: InsertAssetButton\n          }\n        };\n\n        this.updateAdvancedAuthoringView();\n\n        $scope.$watch(() => {\n          return this.authoringComponentContent;\n        }, (newValue, oldValue) => {\n          this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n\n          // set the url\n          this.setURL(this.authoringComponentContent.url);\n        }, true);\n      }\n\n      if (this.componentContent != null) {\n        // set the url\n        this.setURL(this.componentContent.url);\n      }\n\n      // get the max width\n      this.maxWidth = this.componentContent.maxWidth ? this.componentContent.maxWidth : 'none';\n\n      // get the max height\n      this.maxHeight = this.componentContent.maxHeight ? this.componentContent.maxHeight : 'none';\n\n      if (this.$scope.$parent.nodeController != null) {\n        // register this component with the parent node\n        this.$scope.$parent.nodeController.registerComponentController(this.$scope, this.componentContent);\n      }\n    }\n\n    /**\n     * Get the component state from this component. The parent node will\n     * call this function to obtain the component state when it needs to\n     * save student data.\n     * @return a promise of a component state containing the student data\n     */\n    this.$scope.getComponentState = function() {\n      var deferred = this.$q.defer();\n\n      /*\n       * the student does not have any unsaved changes in this component\n       * so we don't need to save a component state for this component.\n       * we will immediately resolve the promise here.\n       */\n      deferred.resolve();\n\n      return deferred.promise;\n    }.bind(this);\n\n    /*\n     * Listen for the assetSelected event which occurs when the user\n     * selects an asset from the choose asset popup\n     */\n    this.$scope.$on('assetSelected', (event, args) => {\n\n      if (args != null) {\n\n        // make sure the event was fired for this component\n        if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n          // the asset was selected for this component\n          var assetItem = args.assetItem;\n\n          if (assetItem != null) {\n            var fileName = assetItem.fileName;\n\n            if (fileName != null) {\n              /*\n               * get the assets directory path\n               * e.g.\n               * /wise/curriculum/3/\n               */\n              var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n              var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n              var summernoteId = '';\n\n              if (args.target == 'prompt') {\n                // the target is the summernote prompt element\n                summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n              } else if (args.target == 'rubric') {\n                // the target is the summernote rubric element\n                summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n              }\n\n              if (summernoteId != '') {\n                if (this.UtilService.isImage(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // add the image html\n                  $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                } else if (this.UtilService.isVideo(fileName)) {\n                  /*\n                   * move the cursor back to its position when the asset chooser\n                   * popup was clicked\n                   */\n                  $('#' + summernoteId).summernote('editor.restoreRange');\n                  $('#' + summernoteId).summernote('editor.focus');\n\n                  // insert the video element\n                  var videoElement = document.createElement('video');\n                  videoElement.controls = 'true';\n                  videoElement.innerHTML = '<source ng-src=\"' + fullAssetPath + '\" type=\"video/mp4\">';\n                  $('#' + summernoteId).summernote('insertNode', videoElement);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      // close the popup\n      this.$mdDialog.hide();\n    });\n\n    /*\n     * The advanced button for a component was clicked. If the button was\n     * for this component, we will show the advanced authoring.\n     */\n    this.$scope.$on('componentAdvancedButtonClicked', (event, args) => {\n      if (args != null) {\n        let componentId = args.componentId;\n        if (this.componentId === componentId) {\n          this.showAdvancedAuthoring = !this.showAdvancedAuthoring;\n        }\n      }\n    });\n  }\n\n  /**\n   * Set the url\n   * @param url the url\n   */\n  setURL(url) {\n    if (url != null) {\n      var trustedURL = this.$sce.trustAsResourceUrl(url);\n      this.url = trustedURL;\n    }\n  };\n\n  /**\n   * The component has changed in the regular authoring view so we will save the project\n   */\n  authoringViewComponentChanged() {\n\n    // set the url\n    //this.setURL(this.authoringComponentContent.url);\n\n    // update the JSON string in the advanced authoring view textarea\n    this.updateAdvancedAuthoringView();\n\n    /*\n     * notify the parent node that the content has changed which will save\n     * the project to the server\n     */\n    this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n  };\n\n  /**\n   * The component has changed in the advanced authoring view so we will update\n   * the component and save the project.\n   */\n  advancedAuthoringViewComponentChanged() {\n\n    try {\n      /*\n       * create a new component by converting the JSON string in the advanced\n       * authoring view into a JSON object\n       */\n      var authoringComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n      // replace the component in the project\n      this.ProjectService.replaceComponent(this.nodeId, this.componentId, authoringComponentContent);\n\n      // set the new authoring component content\n      this.authoringComponentContent = authoringComponentContent;\n\n      // set the component content\n      this.componentContent = this.ProjectService.injectAssetPaths(authoringComponentContent);\n\n      /*\n       * notify the parent node that the content has changed which will save\n       * the project to the server\n       */\n      this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n    } catch(e) {\n      this.$scope.$parent.nodeAuthoringController.showSaveErrorAdvancedAuthoring();\n    }\n  };\n\n  /**\n   * Update the component JSON string that will be displayed in the advanced authoring view textarea\n   */\n  updateAdvancedAuthoringView() {\n    this.authoringComponentContentJSONString = angular.toJson(this.authoringComponentContent, 4);\n  };\n\n  /**\n   * Register the the listener that will listen for the exit event\n   * so that we can perform saving before exiting.\n   */\n  registerExitListener() {\n\n    /*\n     * Listen for the 'exit' event which is fired when the student exits\n     * the VLE. This will perform saving before the VLE exits.\n     */\n    this.exitListener = this.$scope.$on('exit', (event, args) => {\n\n    });\n  };\n\n  /**\n   * The author has changed the rubric\n   */\n  summernoteRubricHTMLChanged() {\n\n    // get the summernote rubric html\n    var html = this.summernoteRubricHTML;\n\n    /*\n     * remove the absolute asset paths\n     * e.g.\n     * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n     * will be changed to\n     * <img src='sun.png'/>\n     */\n    html = this.ConfigService.removeAbsoluteAssetPaths(html);\n\n    /*\n     * replace <a> and <button> elements with <wiselink> elements when\n     * applicable\n     */\n    html = this.UtilService.insertWISELinks(html);\n\n    // update the component rubric\n    this.authoringComponentContent.rubric = html;\n\n    // the authoring component content has changed so we will save the project\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * The show JSON button was clicked to show or hide the JSON authoring\n   */\n  showJSONButtonClicked() {\n    // toggle the JSON authoring textarea\n    this.showJSONAuthoring = !this.showJSONAuthoring;\n\n    if (this.jsonStringChanged && !this.showJSONAuthoring) {\n      /*\n       * the author has changed the JSON and has just closed the JSON\n       * authoring view so we will save the component\n       */\n      this.advancedAuthoringViewComponentChanged();\n\n      // scroll to the top of the component\n      this.$rootScope.$broadcast('scrollToComponent', { componentId: this.componentId });\n\n      this.jsonStringChanged = false;\n    }\n  }\n\n  /**\n   * The author has changed the JSON manually in the advanced view\n   */\n  authoringJSONChanged() {\n    this.jsonStringChanged = true;\n  }\n}\n\nOutsideURLController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$sce',\n  'ConfigService',\n  'NodeService',\n  'OutsideURLService',\n  'ProjectService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default OutsideURLController;\n"]}