{"version":3,"sources":["outsideURLController.es6"],"names":["OutsideURLController","$filter","$mdDialog","$q","$rootScope","$scope","$sce","ConfigService","NodeService","OutsideURLService","ProjectService","StudentDataService","UtilService","$translate","nodeId","componentId","componentContent","authoringComponentContent","showAdvancedAuthoring","url","maxWidth","maxHeight","currentNode","getCurrentNode","id","originalComponentContent","mode","summernoteRubricId","summernoteRubricHTML","rubric","insertAssetString","InsertAssetButton","createInsertAssetButton","summernoteRubricOptions","toolbar","height","disableDragAndDrop","buttons","insertAssetButton","updateAdvancedAuthoringView","$watch","newValue","oldValue","injectAssetPaths","setURL","$parent","nodeController","registerComponentController","getComponentState","deferred","defer","resolve","promise","bind","$on","event","args","assetItem","fileName","assetsDirectoryPath","getProjectAssetsDirectoryPath","fullAssetPath","summernoteId","target","isImage","$","summernote","isVideo","videoElement","document","createElement","controls","innerHTML","hide","trustedURL","trustAsResourceUrl","nodeAuthoringController","authoringViewNodeChanged","angular","fromJson","authoringComponentContentJSONString","replaceComponent","e","showSaveErrorAdvancedAuthoring","toJson","exitListener","html","removeAbsoluteAssetPaths","insertWISELinks","authoringViewComponentChanged","$inject"],"mappings":"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","file":"outsideURLController.js","sourcesContent":["class OutsideURLController {\n    constructor($filter,\n                $mdDialog,\n                $q,\n                $rootScope,\n                $scope,\n                $sce,\n                ConfigService,\n                NodeService,\n                OutsideURLService,\n                ProjectService,\n                StudentDataService,\n                UtilService) {\n\n        this.$filter = $filter;\n        this.$mdDialog = $mdDialog;\n        this.$q = $q;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$sce = $sce;\n        this.ConfigService = ConfigService;\n        this.NodeService = NodeService;\n        this.OutsideURLService = OutsideURLService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n        this.UtilService = UtilService;\n\n        this.$translate = this.$filter('translate');\n\n        // the node id of the current node\n        this.nodeId = null;\n\n        // the component id\n        this.componentId = null;\n\n        // field that will hold the component content\n        this.componentContent = null;\n\n        // field that will hold the authoring component content\n        this.authoringComponentContent = null;\n\n        // whether the advanced authoring textarea is displayed\n        this.showAdvancedAuthoring = false;\n\n        // the url to the web page to display\n        this.url = null;\n\n        // the max width of the iframe\n        this.maxWidth = null;\n\n        // the max height of the iframe\n        this.maxHeight = null;\n\n        // get the current node and node id\n        var currentNode = this.StudentDataService.getCurrentNode();\n        if (currentNode != null) {\n            this.nodeId = currentNode.id;\n        } else {\n            this.nodeId = this.$scope.nodeId;\n        }\n\n        // get the component content from the scope\n        this.componentContent = this.$scope.componentContent;\n\n        // get the authoring component content\n        this.authoringComponentContent = this.$scope.authoringComponentContent;\n\n        /*\n         * get the original component content. this is used when showing\n         * previous work from another component.\n         */\n        this.originalComponentContent = this.$scope.originalComponentContent;\n\n        this.mode = this.$scope.mode;\n\n        if (this.componentContent != null) {\n\n            // get the component id\n            this.componentId = this.componentContent.id;\n\n            if (this.mode === 'authoring') {\n                // generate the summernote rubric element id\n                this.summernoteRubricId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n\n                // set the component rubric into the summernote rubric\n                this.summernoteRubricHTML = this.componentContent.rubric;\n\n                // the tooltip text for the insert WISE asset button\n                var insertAssetString = this.$translate('html.insertAsset');\n\n                /*\n                 * create the custom button for inserting WISE assets into\n                 * summernote\n                 */\n                var InsertAssetButton = this.UtilService.createInsertAssetButton(this, null, this.nodeId, this.componentId, 'rubric', insertAssetString);\n\n                /*\n                 * the options that specifies the tools to display in the\n                 * summernote prompt\n                 */\n                this.summernoteRubricOptions = {\n                    toolbar: [\n                        ['style', ['style']],\n                        ['font', ['bold', 'underline', 'clear']],\n                        ['fontname', ['fontname']],\n                        ['fontsize', ['fontsize']],\n                        ['color', ['color']],\n                        ['para', ['ul', 'ol', 'paragraph']],\n                        ['table', ['table']],\n                        ['insert', ['link', 'video']],\n                        ['view', ['fullscreen', 'codeview', 'help']],\n                        ['customButton', ['insertAssetButton']]\n                    ],\n                    height: 300,\n                    disableDragAndDrop: true,\n                    buttons: {\n                        insertAssetButton: InsertAssetButton\n                    }\n                };\n\n                this.updateAdvancedAuthoringView();\n\n                $scope.$watch(() => {\n                    return this.authoringComponentContent;\n                }, (newValue, oldValue) => {\n                    this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n\n                    // set the url\n                    this.setURL(this.authoringComponentContent.url);\n                }, true);\n            }\n\n            if (this.componentContent != null) {\n                // set the url\n                this.setURL(this.componentContent.url);\n            }\n\n            // get the max width\n            this.maxWidth = this.componentContent.maxWidth ? this.componentContent.maxWidth : \"none\";\n\n            // get the max height\n            this.maxHeight = this.componentContent.maxHeight ? this.componentContent.maxHeight : \"none\";\n\n            if (this.$scope.$parent.nodeController != null) {\n                // register this component with the parent node\n                this.$scope.$parent.nodeController.registerComponentController(this.$scope, this.componentContent);\n            }\n        }\n\n        /**\n         * Get the component state from this component. The parent node will\n         * call this function to obtain the component state when it needs to\n         * save student data.\n         * @return a promise of a component state containing the student data\n         */\n        this.$scope.getComponentState = function() {\n            var deferred = this.$q.defer();\n\n            /*\n             * the student does not have any unsaved changes in this component\n             * so we don't need to save a component state for this component.\n             * we will immediately resolve the promise here.\n             */\n            deferred.resolve();\n\n            return deferred.promise;\n        }.bind(this);\n\n        /*\n         * Listen for the assetSelected event which occurs when the user\n         * selects an asset from the choose asset popup\n         */\n        this.$scope.$on('assetSelected', (event, args) => {\n\n            if (args != null) {\n\n                // make sure the event was fired for this component\n                if (args.nodeId == this.nodeId && args.componentId == this.componentId) {\n                    // the asset was selected for this component\n                    var assetItem = args.assetItem;\n\n                    if (assetItem != null) {\n                        var fileName = assetItem.fileName;\n\n                        if (fileName != null) {\n                            /*\n                             * get the assets directory path\n                             * e.g.\n                             * /wise/curriculum/3/\n                             */\n                            var assetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath();\n                            var fullAssetPath = assetsDirectoryPath + '/' + fileName;\n\n                            var summernoteId = '';\n\n                            if (args.target == 'prompt') {\n                                // the target is the summernote prompt element\n                                summernoteId = 'summernotePrompt_' + this.nodeId + '_' + this.componentId;\n                            } else if (args.target == 'rubric') {\n                                // the target is the summernote rubric element\n                                summernoteId = 'summernoteRubric_' + this.nodeId + '_' + this.componentId;\n                            }\n\n                            if (summernoteId != '') {\n                                if (this.UtilService.isImage(fileName)) {\n                                    /*\n                                     * move the cursor back to its position when the asset chooser\n                                     * popup was clicked\n                                     */\n                                    $('#' + summernoteId).summernote('editor.restoreRange');\n                                    $('#' + summernoteId).summernote('editor.focus');\n\n                                    // add the image html\n                                    $('#' + summernoteId).summernote('insertImage', fullAssetPath, fileName);\n                                } else if (this.UtilService.isVideo(fileName)) {\n                                    /*\n                                     * move the cursor back to its position when the asset chooser\n                                     * popup was clicked\n                                     */\n                                    $('#' + summernoteId).summernote('editor.restoreRange');\n                                    $('#' + summernoteId).summernote('editor.focus');\n\n                                    // insert the video element\n                                    var videoElement = document.createElement('video');\n                                    videoElement.controls = 'true';\n                                    videoElement.innerHTML = \"<source ng-src='\" + fullAssetPath + \"' type='video/mp4'>\";\n                                    $('#' + summernoteId).summernote('insertNode', videoElement);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            // close the popup\n            this.$mdDialog.hide();\n        });\n    }\n\n    /**\n     * Set the url\n     * @param url the url\n     */\n    setURL(url) {\n        if (url != null) {\n            var trustedURL = this.$sce.trustAsResourceUrl(url);\n            this.url = trustedURL;\n        }\n    };\n\n    /**\n     * The component has changed in the regular authoring view so we will save the project\n     */\n    authoringViewComponentChanged() {\n\n        // set the url\n        //this.setURL(this.authoringComponentContent.url);\n\n        // update the JSON string in the advanced authoring view textarea\n        this.updateAdvancedAuthoringView();\n\n        /*\n         * notify the parent node that the content has changed which will save\n         * the project to the server\n         */\n        this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n    };\n\n    /**\n     * The component has changed in the advanced authoring view so we will update\n     * the component and save the project.\n     */\n    advancedAuthoringViewComponentChanged() {\n\n        try {\n            /*\n             * create a new component by converting the JSON string in the advanced\n             * authoring view into a JSON object\n             */\n            var authoringComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n            // replace the component in the project\n            this.ProjectService.replaceComponent(this.nodeId, this.componentId, authoringComponentContent);\n\n            // set the new authoring component content\n            this.authoringComponentContent = authoringComponentContent;\n\n            // set the component content\n            this.componentContent = this.ProjectService.injectAssetPaths(authoringComponentContent);\n\n            /*\n             * notify the parent node that the content has changed which will save\n             * the project to the server\n             */\n            this.$scope.$parent.nodeAuthoringController.authoringViewNodeChanged();\n        } catch(e) {\n            this.$scope.$parent.nodeAuthoringController.showSaveErrorAdvancedAuthoring();\n        }\n    };\n\n    /**\n     * Update the component JSON string that will be displayed in the advanced authoring view textarea\n     */\n    updateAdvancedAuthoringView() {\n        this.authoringComponentContentJSONString = angular.toJson(this.authoringComponentContent, 4);\n    };\n\n    /**\n     * Register the the listener that will listen for the exit event\n     * so that we can perform saving before exiting.\n     */\n    registerExitListener() {\n\n        /*\n         * Listen for the 'exit' event which is fired when the student exits\n         * the VLE. This will perform saving before the VLE exits.\n         */\n        this.exitListener = this.$scope.$on('exit', (event, args) => {\n\n        });\n    };\n\n    /**\n     * The author has changed the rubric\n     */\n    summernoteRubricHTMLChanged() {\n\n        // get the summernote rubric html\n        var html = this.summernoteRubricHTML;\n\n        /*\n         * remove the absolute asset paths\n         * e.g.\n         * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n         * will be changed to\n         * <img src='sun.png'/>\n         */\n        html = this.ConfigService.removeAbsoluteAssetPaths(html);\n\n        /*\n         * replace <a> and <button> elements with <wiselink> elements when\n         * applicable\n         */\n        html = this.UtilService.insertWISELinks(html);\n\n        // update the component rubric\n        this.authoringComponentContent.rubric = html;\n\n        // the authoring component content has changed so we will save the project\n        this.authoringViewComponentChanged();\n    }\n}\n\nOutsideURLController.$inject = [\n    '$filter',\n    '$mdDialog',\n    '$q',\n    '$rootScope',\n    '$scope',\n    '$sce',\n    'ConfigService',\n    'NodeService',\n    'OutsideURLService',\n    'ProjectService',\n    'StudentDataService',\n    'UtilService'\n];\n\nexport default OutsideURLController;\n"]}