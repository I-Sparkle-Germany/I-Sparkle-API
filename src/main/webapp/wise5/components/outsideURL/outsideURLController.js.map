{"version":3,"sources":["outsideURLController.es6"],"names":[],"mappings":"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","file":"outsideURLController.js","sourcesContent":["class OutsideURLController {\n    constructor($scope,\n                $sce,\n                NodeService,\n                OutsideURLService,\n                ProjectService,\n                StudentDataService) {\n\n        this.$scope = $scope;\n        this.$sce = $sce;\n        this.NodeService = NodeService;\n        this.OutsideURLService = OutsideURLService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n\n        // the node id of the current node\n        this.nodeId = null;\n\n        // the component id\n        this.componentId = null;\n\n        // field that will hold the component content\n        this.componentContent = null;\n\n        // the url to the web page to display\n        this.url = null;\n\n        // the max width of the iframe\n        this.maxWidth = null;\n\n        // the max height of the iframe\n        this.maxHeight = null;\n\n        // get the current node and node id\n        var currentNode = this.StudentDataService.getCurrentNode();\n        if (currentNode != null) {\n            this.nodeId = currentNode.id;\n        }\n\n        // get the component content from the scope\n        this.componentContent = this.$scope.component;\n\n        this.mode = this.$scope.mode;\n\n        if (this.componentContent != null) {\n\n            // get the component id\n            this.componentId = this.componentContent.id;\n\n            if (this.mode === 'authoring') {\n                this.updateAdvancedAuthoringView();\n            }\n\n            // get the show previous work node id if it is provided\n            var showPreviousWorkNodeId = this.componentContent.showPreviousWorkNodeId;\n\n            if (showPreviousWorkNodeId != null) {\n                // this component is showing previous work\n                this.isShowPreviousWork = true;\n\n                // get the show previous work component id if it is provided\n                var showPreviousWorkComponentId = this.componentContent.showPreviousWorkComponentId;\n\n                // get the node content for the other node\n                var showPreviousWorkNodeContent = this.ProjectService.getNodeContentByNodeId(showPreviousWorkNodeId);\n\n                // get the component content for the component we are showing previous work for\n                this.componentContent = this.NodeService.getComponentContentById(showPreviousWorkNodeContent, showPreviousWorkComponentId);\n\n                if (this.componentContent != null) {\n                    // set the url\n                    this.setURL(this.componentContent.url);\n                }\n\n                // disable the component since we are just showing previous work\n                this.isDisabled = true;\n            } else {\n                // this is a regular component\n\n                if (this.componentContent != null) {\n                    // set the url\n                    this.setURL(this.componentContent.url);\n                }\n            }\n\n            // get the max width\n            this.maxWidth = this.componentContent.maxWidth ? this.componentContent.maxWidth : \"none\";\n\n            // get the max height\n            this.maxHeight = this.componentContent.maxHeight ? this.componentContent.maxHeight : \"none\";\n\n            if (this.$scope.$parent.registerComponentController != null) {\n                // register this component with the parent node\n                this.$scope.$parent.registerComponentController(this.$scope, this.componentContent);\n            }\n        }\n\n        /**\n         * Get the component state from this component. The parent node will\n         * call this function to obtain the component state when it needs to\n         * save student data.\n         * @return a component state containing the student data\n         */\n        this.$scope.getComponentState = function() {\n            var studentWork = null;\n\n            return studentWork;\n        }.bind(this);\n    }\n\n    /**\n     * Set the url\n     * @param url the url\n     */\n    setURL(url) {\n        if (url != null) {\n            var trustedURL = this.$sce.trustAsResourceUrl(url);\n            this.url = trustedURL;\n        }\n    };\n\n    /**\n     * The component has changed in the regular authoring view so we will save the project\n     */\n    authoringViewComponentChanged() {\n\n        // set the url\n        this.setURL(this.componentContent.url);\n\n        // update the JSON string in the advanced authoring view textarea\n        this.updateAdvancedAuthoringView();\n\n        // save the project to the server\n        this.ProjectService.saveProject();\n    };\n\n    /**\n     * The component has changed in the advanced authoring view so we will update\n     * the component and save the project.\n     */\n    advancedAuthoringViewComponentChanged() {\n\n        try {\n            /*\n             * create a new comopnent by converting the JSON string in the advanced\n             * authoring view into a JSON object\n             */\n            var editedComponentContent = angular.fromJson(this.componentContentJSONString);\n\n            // replace the component in the project\n            this.ProjectService.replaceComponent(this.nodeId, this.componentId, editedComponentContent);\n\n            // set the new component into the controller\n            this.componentContent = editedComponentContent;\n\n            // set the url\n            this.setURL(this.componentContent.url);\n\n            // save the project to the server\n            this.ProjectService.saveProject();\n        } catch(e) {\n\n        }\n    };\n\n    /**\n     * Update the component JSON string that will be displayed in the advanced authoring view textarea\n     */\n    updateAdvancedAuthoringView() {\n        this.componentContentJSONString = angular.toJson(this.componentContent, 4);\n    };\n\n    /**\n     * Register the the listener that will listen for the exit event\n     * so that we can perform saving before exiting.\n     */\n    registerExitListener() {\n\n        /*\n         * Listen for the 'exit' event which is fired when the student exits\n         * the VLE. This will perform saving before the VLE exits.\n         */\n        this.exitListener = this.$scope.$on('exit', angular.bind(this, function(event, args) {\n\n        }));\n    };\n}\n\nOutsideURLController.$inject = [\n    '$scope',\n    '$sce',\n    'NodeService',\n    'OutsideURLService',\n    'ProjectService',\n    'StudentDataService'\n];\n\nexport default OutsideURLController;\n"]}