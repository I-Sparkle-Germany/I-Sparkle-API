{"version":3,"sources":["outsideURLController.es6"],"names":[],"mappings":"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","file":"outsideURLController.js","sourcesContent":["class OutsideURLController {\n    constructor($q,\n                $scope,\n                $sce,\n                NodeService,\n                OutsideURLService,\n                ProjectService,\n                StudentDataService) {\n\n        this.$q = $q;\n        this.$scope = $scope;\n        this.$sce = $sce;\n        this.NodeService = NodeService;\n        this.OutsideURLService = OutsideURLService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n\n        // the node id of the current node\n        this.nodeId = null;\n\n        // the component id\n        this.componentId = null;\n\n        // field that will hold the component content\n        this.componentContent = null;\n\n        // field that will hold the authoring component content\n        this.authoringComponentContent = null;\n\n        // the url to the web page to display\n        this.url = null;\n\n        // the max width of the iframe\n        this.maxWidth = null;\n\n        // the max height of the iframe\n        this.maxHeight = null;\n\n        // get the current node and node id\n        var currentNode = this.StudentDataService.getCurrentNode();\n        if (currentNode != null) {\n            this.nodeId = currentNode.id;\n        } else {\n            this.nodeId = this.$scope.nodeId;\n        }\n\n        // get the component content from the scope\n        this.componentContent = this.$scope.componentContent;\n\n        // get the authoring component content\n        this.authoringComponentContent = this.$scope.authoringComponentContent;\n\n        /*\n         * get the original component content. this is used when showing\n         * previous work from another component.\n         */\n        this.originalComponentContent = this.$scope.originalComponentContent;\n\n        this.mode = this.$scope.mode;\n\n        if (this.componentContent != null) {\n\n            // get the component id\n            this.componentId = this.componentContent.id;\n\n            if (this.mode === 'authoring') {\n                this.updateAdvancedAuthoringView();\n\n                $scope.$watch(() => {\n                    return this.authoringComponentContent;\n                }, (newValue, oldValue) => {\n                    this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n\n                    // set the url\n                    this.setURL(this.authoringComponentContent.url);\n                }, true);\n            }\n            \n            if (this.componentContent != null) {\n                // set the url\n                this.setURL(this.componentContent.url);\n            }\n\n            // get the max width\n            this.maxWidth = this.componentContent.maxWidth ? this.componentContent.maxWidth : \"none\";\n\n            // get the max height\n            this.maxHeight = this.componentContent.maxHeight ? this.componentContent.maxHeight : \"none\";\n\n            if (this.$scope.$parent.registerComponentController != null) {\n                // register this component with the parent node\n                this.$scope.$parent.registerComponentController(this.$scope, this.componentContent);\n            }\n        }\n\n        /**\n         * Get the component state from this component. The parent node will\n         * call this function to obtain the component state when it needs to\n         * save student data.\n         * @return a promise of a component state containing the student data\n         */\n        this.$scope.getComponentState = function() {\n            var deferred = this.$q.defer();\n            \n            /*\n             * the student does not have any unsaved changes in this component\n             * so we don't need to save a component state for this component.\n             * we will immediately resolve the promise here.\n             */\n            deferred.resolve();\n            \n            return deferred.promise;\n        }.bind(this);\n    }\n\n    /**\n     * Set the url\n     * @param url the url\n     */\n    setURL(url) {\n        if (url != null) {\n            var trustedURL = this.$sce.trustAsResourceUrl(url);\n            this.url = trustedURL;\n        }\n    };\n\n    /**\n     * The component has changed in the regular authoring view so we will save the project\n     */\n    authoringViewComponentChanged() {\n\n        // set the url\n        //this.setURL(this.authoringComponentContent.url);\n\n        // update the JSON string in the advanced authoring view textarea\n        this.updateAdvancedAuthoringView();\n\n        /*\n         * notify the parent node that the content has changed which will save\n         * the project to the server\n         */\n        this.$scope.$parent.nodeController.authoringViewNodeChanged();\n    };\n\n    /**\n     * The component has changed in the advanced authoring view so we will update\n     * the component and save the project.\n     */\n    advancedAuthoringViewComponentChanged() {\n\n        try {\n            /*\n             * create a new component by converting the JSON string in the advanced\n             * authoring view into a JSON object\n             */\n            var authoringComponentContent = angular.fromJson(this.authoringComponentContentJSONString);\n\n            // replace the component in the project\n            this.ProjectService.replaceComponent(this.nodeId, this.componentId, authoringComponentContent);\n\n            // set the new authoring component content\n            this.authoringComponentContent = authoringComponentContent;\n\n            // set the component content\n            this.componentContent = this.ProjectService.injectAssetPaths(authoringComponentContent);\n\n            /*\n             * notify the parent node that the content has changed which will save\n             * the project to the server\n             */\n            this.$scope.$parent.nodeController.authoringViewNodeChanged();\n        } catch(e) {\n            console.error(e.toString());\n        }\n    };\n\n    /**\n     * Update the component JSON string that will be displayed in the advanced authoring view textarea\n     */\n    updateAdvancedAuthoringView() {\n        this.authoringComponentContentJSONString = angular.toJson(this.authoringComponentContent, 4);\n    };\n\n    /**\n     * Register the the listener that will listen for the exit event\n     * so that we can perform saving before exiting.\n     */\n    registerExitListener() {\n\n        /*\n         * Listen for the 'exit' event which is fired when the student exits\n         * the VLE. This will perform saving before the VLE exits.\n         */\n        this.exitListener = this.$scope.$on('exit', (event, args) => {\n\n        });\n    };\n}\n\nOutsideURLController.$inject = [\n    '$q',\n    '$scope',\n    '$sce',\n    'NodeService',\n    'OutsideURLService',\n    'ProjectService',\n    'StudentDataService'\n];\n\nexport default OutsideURLController;\n"]}