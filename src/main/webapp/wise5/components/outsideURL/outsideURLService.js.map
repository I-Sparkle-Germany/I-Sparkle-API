{"version":3,"sources":["outsideURLService.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;IAEM;;;AACF,aADE,iBACF,GAAc;8BADZ,mBACY;;sEADZ,+BACY;KAAd;;;;;;;;;;;iBADE;;oCAaU,WAAW,iBAAiB,iBAAiB,YAAY;AACjE,gBAAI,SAAS,KAAT,CAD6D;;AAGjE,gBAAI,cAAc,IAAd,EAAoB;;;AAGpB,qBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,WAAW,MAAX,EAAmB,GAAvC,EAA4C;;;AAGxC,wBAAI,QAAQ,WAAW,CAAX,CAAR,CAHoC;;AAKxC,wBAAI,SAAS,IAAT,IAAiB,MAAM,KAAN,KAAgB,aAAhB,EAA+B;AAChD,iCAAS,IAAT,CADgD;AAEhD,8BAFgD;qBAApD;iBALJ;aAHJ;;AAeA,mBAAO,MAAP,CAlBiE;;;;WAbnE;;;AAoCN,kBAAkB,OAAlB,GAA4B,EAA5B;;kBAIe","file":"outsideURLService.js","sourcesContent":["import NodeService from '../../services/nodeService';\n\nclass OutsideURLService extends NodeService {\n    constructor() {\n        super();\n    }\n\n    /**\n     * Check if the component was completed\n     * @param component the component object\n     * @param componentStates the component states for the specific component\n     * @param componentEvents the events for the specific component\n     * @param nodeEvents the events for the parent node of the component\n     * @returns whether the component was completed\n     */\n    isCompleted(component, componentStates, componentEvents, nodeEvents) {\n        var result = false;\n\n        if (nodeEvents != null) {\n\n            // loop through all the events\n            for (var e = 0; e < nodeEvents.length; e++) {\n\n                // get an event\n                var event = nodeEvents[e];\n\n                if (event != null && event.event === 'nodeEntered') {\n                    result = true;\n                    break;\n                }\n            }\n        }\n\n        return result;\n    };\n}\n\n\nOutsideURLService.$inject = [\n\n];\n\nexport default OutsideURLService;"]}