{"version":3,"sources":["outsideURLService.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;IAEM;;;AACF,aADE,iBACF,CAAY,WAAZ,EAAyB;8BADvB,mBACuB;;2EADvB,+BACuB;;AAErB,cAAK,WAAL,GAAmB,WAAnB,CAFqB;;KAAzB;;;;;;;;iBADE;;0CAUgB;AACd,gBAAI,YAAY,EAAZ,CADU;AAEd,sBAAU,EAAV,GAAe,KAAK,WAAL,CAAiB,WAAjB,EAAf,CAFc;AAGd,sBAAU,IAAV,GAAiB,YAAjB,CAHc;AAId,sBAAU,GAAV,GAAgB,EAAhB,CAJc;AAKd,sBAAU,cAAV,GAA2B,KAA3B,CALc;AAMd,sBAAU,gBAAV,GAA6B,KAA7B,CANc;AAOd,mBAAO,SAAP,CAPc;;;;;;;;;;sCAcJ,iBAAiB;AAC3B,gBAAI,YAAY,KAAK,eAAL,EAAZ,CADuB;AAE3B,sBAAU,GAAV,GAAgB,gBAAgB,GAAhB,CAFW;AAG3B,sBAAU,cAAV,GAA2B,gBAAgB,cAAhB,CAHA;AAI3B,sBAAU,gBAAV,GAA6B,gBAAgB,gBAAhB,CAJF;AAK3B,mBAAO,SAAP,CAL2B;;;;;;;;;;;;;;oCAgBnB,WAAW,iBAAiB,iBAAiB,YAAY;AACjE,gBAAI,SAAS,KAAT,CAD6D;;AAGjE,gBAAI,cAAc,IAAd,EAAoB;;;AAGpB,qBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,WAAW,MAAX,EAAmB,GAAvC,EAA4C;;;AAGxC,wBAAI,QAAQ,WAAW,CAAX,CAAR,CAHoC;;AAKxC,wBAAI,SAAS,IAAT,IAAiB,MAAM,KAAN,KAAgB,aAAhB,EAA+B;AAChD,iCAAS,IAAT,CADgD;AAEhD,8BAFgD;qBAApD;iBALJ;aAHJ;;AAeA,mBAAO,MAAP,CAlBiE;;;;WAxCnE;;;AA+DN,kBAAkB,OAAlB,GAA4B,CACxB,aADwB,CAA5B;;kBAIe","file":"outsideURLService.js","sourcesContent":["import NodeService from '../../services/nodeService';\n\nclass OutsideURLService extends NodeService {\n    constructor(UtilService) {\n        super();\n        this.UtilService = UtilService;\n    }\n\n    /**\n     * Create an OutsideURL component object\n     * @returns a new OutsideURL component object\n     */\n    createComponent() {\n        var component = {};\n        component.id = this.UtilService.generateKey();\n        component.type = 'OutsideURL';\n        component.url = '';\n        component.showSaveButton = false;\n        component.showSubmitButton = false;\n        return component;\n    }\n\n    /**\n     * Copies an existing OutsideURL component object\n     * @returns a copied OutsideURL component object\n     */\n    copyComponent(componentToCopy) {\n        var component = this.createComponent();\n        component.url = componentToCopy.url;\n        component.showSaveButton = componentToCopy.showSaveButton;\n        component.showSubmitButton = componentToCopy.showSubmitButton;\n        return component;\n    }\n\n    /**\n     * Check if the component was completed\n     * @param component the component object\n     * @param componentStates the component states for the specific component\n     * @param componentEvents the events for the specific component\n     * @param nodeEvents the events for the parent node of the component\n     * @returns whether the component was completed\n     */\n    isCompleted(component, componentStates, componentEvents, nodeEvents) {\n        var result = false;\n\n        if (nodeEvents != null) {\n\n            // loop through all the events\n            for (var e = 0; e < nodeEvents.length; e++) {\n\n                // get an event\n                var event = nodeEvents[e];\n\n                if (event != null && event.event === 'nodeEntered') {\n                    result = true;\n                    break;\n                }\n            }\n        }\n\n        return result;\n    };\n}\n\n\nOutsideURLService.$inject = [\n    'UtilService'\n];\n\nexport default OutsideURLService;"]}