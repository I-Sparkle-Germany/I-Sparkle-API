{"version":3,"sources":["tableService.es6"],"names":["TableService","$filter","$q","StudentAssetService","StudentDataService","UtilService","$translate","component","type","globalCellSize","numRows","numColumns","tableData","componentStates","componentEvents","nodeEvents","node","componentHasEditableCells","length","submitRequired","showSubmitButton","showSaveButton","c","l","componentState","studentData","isSubmit","r","row","cell","editable","componentContent","studentTableData","componentContentTableData","studentRows","studentRow","studentCell","getTableDataCellValue","componentContentCell","x","y","table","cellValue","text","deferred","defer","tableElement","angular","element","nodeId","componentId","then","canvas","img_b64","toDataURL","imageObject","getImageObjectFromBase64String","uploadAsset","asset","resolve","promise","$inject"],"mappings":"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","file":"tableService.js","sourcesContent":["import ComponentService from '../componentService';\nimport html2canvas from 'html2canvas';\n\nclass TableService extends ComponentService {\n\n  constructor($filter,\n      $q,\n      StudentAssetService,\n      StudentDataService,\n      UtilService) {\n    super($filter, StudentDataService, UtilService);\n    this.$q = $q;\n    this.StudentAssetService = StudentAssetService;\n  }\n\n  getComponentTypeLabel() {\n    return this.$translate('table.componentTypeLabel');\n  }\n\n  createComponent() {\n    const component = super.createComponent();\n    component.type = 'Table';\n    component.globalCellSize = 10;\n    component.numRows = 3;\n    component.numColumns = 3;\n    component.tableData = [\n      [\n        {\n          'text': '',\n          'editable': true,\n          'size': null\n        },\n        {\n          'text': '',\n          'editable': true,\n          'size': null\n        },\n        {\n          'text': '',\n          'editable': true,\n          'size': null\n        }\n      ],\n      [\n        {\n          'text': '',\n          'editable': true,\n          'size': null\n        },\n        {\n          'text': '',\n          'editable': true,\n          'size': null\n        },\n        {\n          'text': '',\n          'editable': true,\n          'size': null\n        }\n      ],\n      [\n        {\n          'text': '',\n          'editable': true,\n          'size': null\n        },\n        {\n          'text': '',\n          'editable': true,\n          'size': null\n        },\n        {\n          'text': '',\n          'editable': true,\n          'size': null\n        }\n      ]\n    ];\n\n    return component;\n  }\n\n  isCompleted(component, componentStates, componentEvents, nodeEvents, node) {\n    if (!this.componentHasEditableCells(component)) {\n      /*\n       * The component does not have any editable cells so we will say\n       * it is completed.\n       */\n      return true;\n    }\n    if (componentStates && componentStates.length) {\n      let submitRequired = node.showSubmitButton || (component.showSubmitButton && !node.showSaveButton);\n\n      // loop through all the component states\n      for (let c = 0, l = componentStates.length; c < l; c++) {\n\n        // the component state\n        let componentState = componentStates[c];\n\n        // get the student data from the component state\n        let studentData = componentState.studentData;\n\n        if (studentData != null) {\n          let tableData = studentData.tableData;\n\n          if (tableData != null) {\n            // there is a table data so the component has saved work\n            // TODO: check for actual student data from the table (compare to starting state)\n            if (submitRequired) {\n              // completion requires a submission, so check for isSubmit\n              if (componentState.isSubmit) {\n                return true;\n              }\n            } else {\n              return true;\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Check if a table component has any editable cells.\n   * @param component The component content.\n   * @return Whether the component has any editable cells.\n   */\n  componentHasEditableCells(component) {\n    if (component != null) {\n      let tableData = component.tableData;\n      if (tableData != null) {\n        for (let r = 0; r < tableData.length; r++) {\n          let row = tableData[r];\n          if (row != null) {\n            for (let c = 0; c < row.length; c++) {\n              let cell = row[c];\n              if (cell != null) {\n                if (cell.editable === true) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  componentStateHasStudentWork(componentState, componentContent) {\n\n    if (componentState != null) {\n\n      let studentData = componentState.studentData;\n\n      if (studentData != null) {\n\n        // get the table from the student data\n        let studentTableData = studentData.tableData;\n\n        // get the table from the component content\n        let componentContentTableData = componentContent.tableData;\n\n        if (studentTableData != null) {\n\n          let studentRows = studentTableData;\n\n          // loop through the student rows\n          for (let r = 0; r < studentRows.length; r++) {\n            let studentRow = studentRows[r];\n\n            if (studentRow != null) {\n\n              // loop through the student columns\n              for (let c = 0; c < studentRow.length; c++) {\n\n                // get cell from the student\n                let studentCell = this.getTableDataCellValue(r, c, studentTableData);\n\n                // get a cell from the component content\n                let componentContentCell = this.getTableDataCellValue(r, c, componentContentTableData);\n\n                if (studentCell !== componentContentCell) {\n                  /*\n                   * the cell values are not the same which means\n                   * the student has changed the table\n                   */\n                  return true;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Get the value of a cell in the table\n   * @param x the x coordinate\n   * @param y the y coordinate\n   * @param table (optional) table data to get the value from. this is used\n   * when we want to look up the value in the default authored table\n   * @returns the cell value (text or a number)\n   */\n  getTableDataCellValue(x, y, table) {\n\n    var cellValue = null;\n\n    if (table != null) {\n\n      // get the row we want\n      var row = table[y];\n\n      if (row != null) {\n\n        // get the cell we want\n        var cell = row[x];\n\n        if (cell != null) {\n\n          // set the value into the cell\n          cellValue = cell.text;\n        }\n      }\n    }\n\n    return cellValue;\n  }\n\n  /**\n   * The component state has been rendered in a <component></component> element\n   * and now we want to take a snapshot of the work.\n   * @param componentState The component state that has been rendered.\n   * @return A promise that will return an image object.\n   */\n  generateImageFromRenderedComponentState(componentState) {\n    let deferred = this.$q.defer();\n    let tableElement = angular.element('#table_' + componentState.nodeId + '_' + componentState.componentId);\n    if (tableElement != null && tableElement.length > 0) {\n      tableElement = tableElement[0];\n      // convert the table element to a canvas element\n      html2canvas(tableElement).then((canvas) => {\n        // get the canvas as a base64 string\n        let img_b64 = canvas.toDataURL('image/png');\n\n        // get the image object\n        let imageObject = this.UtilService.getImageObjectFromBase64String(img_b64);\n\n        // add the image to the student assets\n        this.StudentAssetService.uploadAsset(imageObject).then((asset) => {\n          deferred.resolve(asset);\n        });\n      });\n    }\n    return deferred.promise;\n  }\n}\n\nTableService.$inject = [\n  '$filter',\n  '$q',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default TableService;\n"]}