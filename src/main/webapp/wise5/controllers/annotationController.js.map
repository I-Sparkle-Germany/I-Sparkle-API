{"version":3,"sources":["annotationController.es6"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;IAEP,oBAAoB;AACtB,aADE,oBAAoB,CACV,iBAAiB,EACjB,aAAa,EACb,WAAW,EAAE;8BAHvB,oBAAoB;;AAKlB,YAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AAC3C,YAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACnC,YAAI,CAAC,WAAW,GAAG,WAAW,CAAC;;AAE/B,YAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,YAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,YAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,YAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC5B,YAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,YAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC7B,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;AAElB,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;KAC9C;;;;;AAAA;iBApBC,oBAAoB;;yCAyBL;;AAEb,gBAAI,IAAI,CAAC,KAAK,IAAI,IAAI,IAClB,IAAI,CAAC,QAAQ,IAAI,IAAI,IACrB,IAAI,CAAC,MAAM,IAAI,IAAI,IACnB,IAAI,CAAC,WAAW,IAAI,IAAI,IACxB,IAAI,CAAC,eAAe,IAAI,IAAI,IAC5B,IAAI,CAAC,aAAa,IAAI,IAAI,IAC1B,IAAI,CAAC,IAAI,IAAI,IAAI,IACjB,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;;;AAGpB,oBAAI,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;;;AAAC,AAG1C,oBAAI,KAAK,GAAG,IAAI,CAAC,KAAK;;;AAAC,AAGvB,qBAAK,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;;AAEtD,oBAAI,IAAI,GAAG,EAAE,CAAC;AACd,oBAAI,CAAC,KAAK,GAAG,KAAK;;;AAAC,AAGnB,oBAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CACpD,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,IAAI,EACT,IAAI,EACJ,cAAc,CAAC;;;AAAC,AAGpB,oBAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,UAAS,MAAM,EAAE;AACvF,wBAAI,eAAe,GAAG,MAAM,CAAC;;AAE7B,wBAAI,eAAe,IAAI,IAAI,EAAE;AACzB,4BAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;;AAE3B,gCAAI,CAAC,YAAY,GAAG,eAAe,CAAC,EAAE,CAAC;yBAC1C;qBACJ;iBACJ,CAAC,CAAC,CAAC;aACP;SACJ;;;WA1EC,oBAAoB;;;AA6E1B,oBAAoB,CAAC,OAAO,GAAG,CAC3B,mBAAmB,EACnB,eAAe,EACf,aAAa,CAChB,CAAC;;kBAEa,oBAAoB","file":"annotationController.js","sourcesContent":["'use strict';\n\nclass AnnotationController {\n    constructor(AnnotationService,\n                ConfigService,\n                UtilService) {\n\n        this.AnnotationService = AnnotationService;\n        this.ConfigService = ConfigService;\n        this.UtilService = UtilService;\n\n        this.annotationId = null;\n        this.nodeId = null;\n        this.periodId = null;\n        this.componentId = null;\n        this.fromWorkgroupId = null;\n        this.toWorkgroupId = null;\n        this.componentStateId = null;\n        this.type = null;\n        this.value = null;\n\n        this.runId = this.ConfigService.getRunId();\n    }\n\n    /**\n     * Save the annotation to the server\n     */\n    postAnnotation() {\n\n        if (this.runId != null &&\n            this.periodId != null &&\n            this.nodeId != null &&\n            this.componentId != null &&\n            this.fromWorkgroupId != null &&\n            this.toWorkgroupId != null &&\n            this.type != null &&\n            this.value != null) {\n\n            // get the current time\n            var clientSaveTime = new Date().getTime();\n\n            // get the value\n            var value = this.value;\n\n            // convert the value to a number if possible\n            value = this.UtilService.convertStringToNumber(value);\n\n            var data = {};\n            data.value = value;\n\n            // create the annotation object\n            var annotation = this.AnnotationService.createAnnotation(\n                this.annotationId,\n                this.runId,\n                this.periodId,\n                this.fromWorkgroupId,\n                this.toWorkgroupId,\n                this.nodeId,\n                this.componentId,\n                this.componentStateId,\n                this.type,\n                data,\n                clientSaveTime);\n\n            // save the annotation to the server\n            this.AnnotationService.saveAnnotation(annotation).then(angular.bind(this, function(result) {\n                var localAnnotation = result;\n\n                if (localAnnotation != null) {\n                    if (this.annotationId == null) {\n                        // set the annotation id if there was no annotation id\n                        this.annotationId = localAnnotation.id;\n                    }\n                }\n            }));\n        }\n    };\n}\n\nAnnotationController.$inject = [\n    'AnnotationService',\n    'ConfigService',\n    'UtilService'\n];\n\nexport default AnnotationController;\n"]}