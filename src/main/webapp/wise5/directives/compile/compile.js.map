{"version":3,"sources":["compile.es6"],"names":["CompileController","$compile","$element","$scope","$watch","data","html","contents","$inject","Compile","bindings","controller"],"mappings":";;;;;;;;AAAA;;;;;IAKMA,iB,GACF,2BAAYC,QAAZ,EAAsBC,QAAtB,EAAgCC,MAAhC,EAAwC;AAAA;;AAAA;;AAEpCA,WAAOC,MAAP,CAAc,YAAM;AAChB,eAAO,MAAKC,IAAZ;AACH,KAFD,EAEG,UAACA,IAAD,EAAU;AACT;AACAH,iBAASI,IAAT,CAAcD,IAAd;AACAJ,iBAASC,SAASK,QAAT,EAAT,EAA8BJ,MAA9B;AACH,KAND;AAOH,C;;AAGLH,kBAAkBQ,OAAlB,GAA4B,CAAC,UAAD,EAAa,UAAb,EAAyB,QAAzB,CAA5B;;AAEA,IAAMC,UAAU;AACZC,cAAU;AACNL,cAAM;AADA,KADE;AAIZM,gBAAYX;AAJA,CAAhB;;kBAOeS,O","file":"compile.js","sourcesContent":["/**\n * The <compile> component compiles the \"data\" attribute of the element and replaces it in the element's HTML.\n * This is often used in rendering component's prompt string, as sometimes they contain other components like wiselink\n * that needs to be compiled before rendering.\n */\nclass CompileController {\n    constructor($compile, $element, $scope) {\n\n        $scope.$watch(() => {\n            return this.data;\n        }, (data) => {\n            // update the html\n            $element.html(data);\n            $compile($element.contents())($scope);\n        })\n    }\n}\n\nCompileController.$inject = ['$compile', '$element', '$scope'];\n\nconst Compile = {\n    bindings: {\n        data: '<'\n    },\n    controller: CompileController\n};\n\nexport default Compile;\n"]}