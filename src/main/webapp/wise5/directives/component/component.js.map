{"version":3,"sources":["component.es6"],"names":["ComponentController","$injector","$scope","$compile","$element","ConfigService","NodeService","NotebookService","ProjectService","StudentDataService","UtilService","mode","$on","event","$eventArgs","imageElement","target","imageObject","getImageObjectFromImageElement","addNewItem","workgroupId","parseInt","e","teacherWorkgroupId","componentState","getLatestComponentStateByNodeIdAndComponentId","nodeId","componentId","angular","fromJson","authoringComponentContent","getComponentByNodeIdAndComponentId","componentContent","injectAssetPaths","replaceStudentNames","isNotebookEnabled","injectClickToSnipImage","authoringComponentContentJSONString","toJson","nodeAuthoringController","$parent","componentTemplatePath","getComponentTemplatePath","type","nodeController","originalNodeId","originalComponentId","originalComponentContent","componentHTML","html","contents","$inject","Component","bindings","scope","controller"],"mappings":"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","file":"component.js","sourcesContent":["\r\nclass ComponentController {\r\n    constructor($injector, $scope, $compile, $element, ConfigService, NodeService, NotebookService, ProjectService, StudentDataService, UtilService) {\r\n        this.$injector = $injector;\r\n        this.$compile = $compile;\r\n        this.ConfigService = ConfigService;\r\n        this.NodeService = NodeService;\r\n        this.NotebookService = NotebookService;\r\n        this.ProjectService = ProjectService;\r\n        this.StudentDataService = StudentDataService;\r\n        this.UtilService = UtilService;\r\n\r\n        if (this.mode) {\r\n            $scope.mode = this.mode;\r\n        } else {\r\n            $scope.mode = \"student\";\r\n        }\r\n\r\n        /**\r\n         * Snip an image from the VLE\r\n         * @param $event the click event from the student clicking on the image\r\n         */\r\n        $scope.$on(\"snipImage\", (event, $eventArgs) => {\r\n            // get the target that was clicked\r\n            var imageElement = $eventArgs.target;\r\n\r\n            if (imageElement != null) {\r\n\r\n                // create an image object\r\n                var imageObject = this.UtilService.getImageObjectFromImageElement(imageElement);\r\n\r\n                if (imageObject != null) {\r\n\r\n                    // create a notebook item with the image populated into it\r\n                    this.NotebookService.addNewItem($eventArgs, imageObject);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (this.workgroupId != null) {\r\n            try {\r\n                this.workgroupId = parseInt(this.workgroupId);\r\n            } catch(e) {\r\n\r\n            }\r\n        }\r\n\r\n        if (this.teacherWorkgroupId) {\r\n            try {\r\n                this.teacherWorkgroupId = parseInt(this.teacherWorkgroupId);\r\n            } catch(e) {\r\n\r\n            }\r\n        }\r\n\r\n        if (this.componentState == null || this.componentState === '') {\r\n            this.componentState = this.StudentDataService.getLatestComponentStateByNodeIdAndComponentId(this.nodeId, this.componentId);\r\n        } else {\r\n            this.componentState = angular.fromJson(this.componentState);\r\n            this.nodeId = this.componentState.nodeId;\r\n            this.componentId = this.componentState.componentId;\r\n\r\n        }\r\n\r\n        var authoringComponentContent = this.ProjectService.getComponentByNodeIdAndComponentId(this.nodeId, this.componentId);\r\n        var componentContent = this.ProjectService.injectAssetPaths(authoringComponentContent);\r\n\r\n        // replace any student names in the component content\r\n        componentContent = this.ConfigService.replaceStudentNames(componentContent);\r\n\r\n        if (this.NotebookService.isNotebookEnabled()) {\r\n            // inject the click attribute that will snip the image when the image is clicked\r\n            componentContent = this.ProjectService.injectClickToSnipImage(componentContent);\r\n        }\r\n\r\n        if ($scope.mode === 'authoring') {\r\n            $scope.authoringComponentContent = authoringComponentContent;\r\n            $scope.authoringComponentContentJSONString = angular.toJson($scope.authoringComponentContent, 4);\r\n            $scope.nodeAuthoringController = $scope.$parent.nodeAuthoringController;\r\n        }\r\n\r\n        $scope.componentContent = componentContent;\r\n        $scope.componentState = this.componentState;\r\n        $scope.componentTemplatePath = this.NodeService.getComponentTemplatePath(componentContent.type);\r\n        $scope.nodeId = this.nodeId;\r\n        $scope.workgroupId = this.workgroupId;\r\n        $scope.teacherWorkgroupId = this.teacherWorkgroupId;\r\n        $scope.type = componentContent.type;\r\n        $scope.nodeController = $scope.$parent.nodeController;\r\n\r\n        if (this.originalNodeId != null && this.originalComponentId != null) {\r\n            /*\r\n             * set the original node id and component id. this is used\r\n             * when we are showing previous work from another component.\r\n             */\r\n            $scope.originalNodeId = this.originalNodeId;\r\n            $scope.originalComponentId = this.originalComponentId;\r\n\r\n            // get the original component\r\n            var originalComponentContent = this.ProjectService.getComponentByNodeIdAndComponentId(this.originalNodeId, this.originalComponentId);\r\n            $scope.originalComponentContent = originalComponentContent;\r\n        }\r\n\r\n        var componentHTML = '<div ng-include=\"componentTemplatePath\" class=\"component__content component__content--{{type}}\"></div>';\r\n\r\n        if (componentHTML != null) {\r\n            $element.html(componentHTML);\r\n            this.$compile($element.contents())($scope);\r\n        }\r\n    }\r\n}\r\n\r\nComponentController.$inject = ['$injector', '$scope', '$compile', '$element', 'ConfigService', 'NodeService', 'NotebookService', 'ProjectService', 'StudentDataService', 'UtilService'];\r\n\r\nconst Component = {\r\n    bindings: {\r\n        componentContent: '@',\r\n        componentId: '@',\r\n        componentState: '@',\r\n        mode: '@',\r\n        nodeId: '@',\r\n        originalNodeId: '@',\r\n        originalComponentId: '@',\r\n        teacherWorkgroupId: '@',\r\n        workgroupId: '@'\r\n    },\r\n    scope: true,\r\n    controller: ComponentController\r\n};\r\n\r\nexport default Component;\r\n"]}