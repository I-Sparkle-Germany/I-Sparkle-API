{"version":3,"sources":["component.es6"],"names":["ComponentController","$injector","$scope","$compile","$element","ConfigService","NodeService","NotebookService","ProjectService","StudentDataService","mode","workgroupId","parseInt","e","teacherWorkgroupId","componentState","getLatestComponentStateByNodeIdAndComponentId","nodeId","componentId","angular","fromJson","authoringComponentContent","getComponentByNodeIdAndComponentId","componentContent","injectAssetPaths","replaceStudentNames","isNotebookEnabled","injectClickToSnipImage","authoringComponentContentJSONString","toJson","nodeAuthoringController","$parent","componentTemplatePath","getComponentTemplatePath","type","nodeController","originalNodeId","originalComponentId","originalComponentContent","componentHTML","html","contents","$inject","Component","bindings","scope","controller"],"mappings":"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","file":"component.js","sourcesContent":["\nclass ComponentController {\n    constructor($injector, $scope, $compile, $element, ConfigService, NodeService, NotebookService, ProjectService, StudentDataService) {\n        this.$injector = $injector;\n        this.$compile = $compile;\n        this.ConfigService = ConfigService;\n        this.NodeService = NodeService;\n        this.NotebookService = NotebookService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n\n        if (this.mode) {\n            $scope.mode = this.mode;\n        } else {\n            $scope.mode = \"student\";\n        }\n\n        if (this.workgroupId != null) {\n            try {\n                this.workgroupId = parseInt(this.workgroupId);\n            } catch(e) {\n\n            }\n        }\n\n        if (this.teacherWorkgroupId) {\n            try {\n                this.teacherWorkgroupId = parseInt(this.teacherWorkgroupId);\n            } catch(e) {\n\n            }\n        }\n\n        if (this.componentState == null || this.componentState === '') {\n            this.componentState = this.StudentDataService.getLatestComponentStateByNodeIdAndComponentId(this.nodeId, this.componentId);\n        } else {\n            this.componentState = angular.fromJson(this.componentState);\n            this.nodeId = this.componentState.nodeId;\n            this.componentId = this.componentState.componentId;\n\n        }\n\n        var authoringComponentContent = this.ProjectService.getComponentByNodeIdAndComponentId(this.nodeId, this.componentId);\n        var componentContent = this.ProjectService.injectAssetPaths(authoringComponentContent);\n\n        // replace any student names in the component content\n        componentContent = this.ConfigService.replaceStudentNames(componentContent);\n\n        if (this.NotebookService.isNotebookEnabled()) {\n            // inject the click attribute that will snip the image when the image is clicked\n            componentContent = this.ProjectService.injectClickToSnipImage(componentContent);\n        }\n\n        if ($scope.mode === 'authoring') {\n            $scope.authoringComponentContent = authoringComponentContent;\n            $scope.authoringComponentContentJSONString = angular.toJson($scope.authoringComponentContent, 4);\n            $scope.nodeAuthoringController = $scope.$parent.nodeAuthoringController;\n        }\n\n        $scope.componentContent = componentContent;\n        $scope.componentState = this.componentState;\n        $scope.componentTemplatePath = this.NodeService.getComponentTemplatePath(componentContent.type);\n        $scope.nodeId = this.nodeId;\n        $scope.workgroupId = this.workgroupId;\n        $scope.teacherWorkgroupId = this.teacherWorkgroupId;\n        $scope.type = componentContent.type;\n        $scope.nodeController = $scope.$parent.nodeController;\n\n        if (this.originalNodeId != null && this.originalComponentId != null) {\n            /*\n             * set the original node id and component id. this is used\n             * when we are showing previous work from another component.\n             */\n            $scope.originalNodeId = this.originalNodeId;\n            $scope.originalComponentId = this.originalComponentId;\n\n            // get the original component\n            var originalComponentContent = this.ProjectService.getComponentByNodeIdAndComponentId(this.originalNodeId, this.originalComponentId);\n            $scope.originalComponentContent = originalComponentContent;\n        }\n\n        var componentHTML = '<div id=\"{{component.id}}\" class=\"component-wrapper\">' +\n            '<div ng-include=\"componentTemplatePath\" class=\"component component--{{type}}\"></div></div>';\n\n        if (componentHTML != null) {\n            $element.html(componentHTML);\n            this.$compile($element.contents())($scope);\n        }\n    }\n}\n\nComponentController.$inject = ['$injector', '$scope', '$compile', '$element', 'ConfigService', 'NodeService', 'NotebookService', 'ProjectService', 'StudentDataService'];\n\nconst Component = {\n    bindings: {\n        componentContent: '@',\n        componentId: '@',\n        componentState: '@',\n        mode: '@',\n        nodeId: '@',\n        originalNodeId: '@',\n        originalComponentId: '@',\n        teacherWorkgroupId: '@',\n        workgroupId: '@'\n    },\n    scope: true,\n    controller: ComponentController\n};\n\nexport default Component;"]}