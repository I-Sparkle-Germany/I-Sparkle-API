{"version":3,"sources":["componentAnnotations.es6"],"names":["ComponentAnnotationsController","$scope","$element","$translate","ConfigService","ProjectService","StudentDataService","maxScoreDisplay","parseInt","maxScore","themeSettings","getThemeSettings","hideComponentScores","nodeId","componentId","latestAnnotationTime","isNew","label","icon","showScore","showComment","$on","event","args","studentWork","$onChanges","changes","processAnnotations","latest","annotations","comment","score","commentSaveTime","serverSaveTime","scoreSaveTime","getLatestAnnotation","time","convertToClientTimestamp","nodeEvents","getEventsByNodeId","n","length","visitTime","i","latestState","getLatestComponentStateByNodeIdAndComponentId","saveTime","latestVisitTime","getLatestVisitTime","latestSaveTime","getLatestSaveTime","getLatestAnnotationTime","type","then","translations","automatedFeedbackLabel","teacherFeedbackLabel","displayAnnotation","setLabelAndIcon","$inject","ComponentAnnotations","bindings","templateUrl","controller","controllerAs"],"mappings":"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","file":"componentAnnotations.js","sourcesContent":["'use strict';\n\nclass ComponentAnnotationsController {\n    constructor($scope,\n                $element,\n                $translate,\n                ConfigService,\n                ProjectService,\n                StudentDataService) {\n        this.$scope = $scope;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n\n        this.maxScoreDisplay = (parseInt(this.maxScore) > 0) ? '/' + this.maxScore : '';\n\n        this.themeSettings = this.ProjectService.getThemeSettings();\n        this.hideComponentScores = this.themeSettings.hideComponentScores;\n\n        this.nodeId = null;\n        this.componentId = null;\n\n        // the latest annoation time\n        this.latestAnnotationTime = null;\n\n        // whether the annotation is new or not\n        this.isNew = false;\n\n        // the annotation label\n        this.label = '';\n\n        // the avatar icon (default to person/teacher)\n        this.icon = 'person';\n        \n        this.showScore = true;\n        this.showComment = true;\n\n        // watch for new component states\n        this.$scope.$on('studentWorkSavedToServer', (event, args) => {\n            let nodeId = args.studentWork.nodeId;\n            let componentId = args.studentWork.componentId;\n            if (nodeId === this.nodeId && componentId === this.componentId) {\n                this.isNew = false;\n            }\n        });\n\n        this.$onChanges = (changes) => {\n            //if (changes.annotations) {\n                //this.annotations = angular.copy(changes.annotations.currentValue);\n                this.processAnnotations();\n            //}\n        };\n    }\n\n    /**\n     * Get the most recent annotation (from the current score and comment annotations)\n     * @return Object (latest annotation)\n     */\n    getLatestAnnotation() {\n        let latest = null;\n\n        if (this.annotations.comment || this.annotations.score) {\n            let commentSaveTime = this.annotations.comment ? this.annotations.comment.serverSaveTime : 0;\n            let scoreSaveTime = this.annotations.score ? this.annotations.score.serverSaveTime : 0;\n\n            if (commentSaveTime >= scoreSaveTime) {\n                latest = this.annotations.comment;\n            } else if (scoreSaveTime > commentSaveTime) {\n                latest = this.annotations.score;\n            }\n        }\n\n        return latest;\n    };\n\n    /**\n     * Calculate the save time of the latest annotation\n     * @return Number (latest annotation post time)\n     */\n    getLatestAnnotationTime() {\n        let latest = this.getLatestAnnotation();\n        let time = null;\n\n        if (latest) {\n            let serverSaveTime = latest.serverSaveTime;\n            time = this.ConfigService.convertToClientTimestamp(serverSaveTime)\n        }\n\n        return time;\n    };\n\n    /**\n     * Find nodeExited time of the latest node visit for this component\n     * @return Number (latest node exit time)\n     */\n    getLatestVisitTime() {\n        let nodeEvents = this.StudentDataService.getEventsByNodeId(this.nodeId);\n        let n = nodeEvents.length - 1;\n        let visitTime = null;\n\n        for (let i = n; i > 0; i--) {\n            let event = nodeEvents[i];\n            if (event.event === 'nodeExited') {\n                visitTime = this.ConfigService.convertToClientTimestamp(event.serverSaveTime);\n                break;\n            }\n        }\n\n        return visitTime;\n    };\n\n    /**\n     * Find and the latest save time for this component\n     * @return Number (latest save time)\n     */\n    getLatestSaveTime() {\n        let latestState = this.StudentDataService.getLatestComponentStateByNodeIdAndComponentId(this.nodeId, this.componentId);\n        let saveTime = null;\n\n        if (latestState) {\n            saveTime = this.ConfigService.convertToClientTimestamp(latestState.serverSaveTime);\n        }\n\n        return saveTime;\n    };\n\n    /**\n     * Check whether the current annotation for this component is new to the\n     * workgroup (i.e. if the workgroup hasn't seen the annotation on a previous\n     * node visit and the latest annotation came after the latest component state)\n     * @return Boolean (true or false)\n     */\n    isNewAnnotation() {\n        let latestVisitTime = this.getLatestVisitTime();\n        let latestSaveTime = this.getLatestSaveTime();\n        let latestAnnotationTime = this.getLatestAnnotationTime();\n        let isNew = true;\n\n        if (latestVisitTime && (latestVisitTime > latestAnnotationTime)) {\n            isNew = false;\n        }\n\n        if (latestSaveTime && (latestSaveTime > latestAnnotationTime)) {\n            isNew = false;\n        }\n\n        return isNew;\n    };\n\n    /**\n     * Set the label based on whether this is an automated or teacher annotation\n     **/\n    setLabelAndIcon() {\n        let latest = this.getLatestAnnotation();\n\n        if (latest) {\n            if (latest.type === 'autoComment' || latest.type === 'autoScore') {\n                this.$translate(['automatedFeedbackLabel']).then((translations) => {\n                    this.label = translations.automatedFeedbackLabel;\n                    this.icon = 'keyboard';\n                });\n            } else {\n                this.$translate(['teacherFeedbackLabel']).then((translations) => {\n                    this.label = translations.teacherFeedbackLabel;\n                    this.icon = \"person\";\n                });\n            }\n        }\n    };\n\n    processAnnotations() {\n        if (this.annotations != null) {\n            if (this.annotations.comment || this.annotations.score) {\n                this.nodeId = this.annotations.comment ? this.annotations.comment.nodeId : this.annotations.score.nodeId;\n                this.componentId = this.annotations.comment ? this.annotations.comment.componentId : this.annotations.score.nodeId;\n\n                if (!this.ProjectService.displayAnnotation(this.annotations.score)) {\n                    // we do not want to show the score\n                    this.showScore = false;\n                }\n                \n                if (!this.ProjectService.displayAnnotation(this.annotations.comment)) {\n                    // we do not want to show the comment\n                    this.showComment = false;\n                }\n                \n                // set the annotation label and icon\n                this.setLabelAndIcon();\n            }\n        }\n    };\n}\n\nComponentAnnotationsController.$inject = [\n    '$scope',\n    '$element',\n    '$translate',\n    'ConfigService',\n    'ProjectService',\n    'StudentDataService'\n];\n\nconst ComponentAnnotations = {\n    bindings: {\n        annotations: '<',\n        maxScore: '<'\n    },\n    templateUrl: 'wise5/directives/componentAnnotations/componentAnnotations.html',\n    controller: ComponentAnnotationsController,\n    controllerAs: 'componentAnnotationsCtrl'\n};\n\nexport default ComponentAnnotations;\n"]}