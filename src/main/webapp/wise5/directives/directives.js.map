{"version":3,"sources":["directives.es6"],"names":[],"mappings":"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","file":"directives.js","sourcesContent":["'use strict';\n\nimport AnnotationController from './annotation/annotationController';\nimport ComponentAnnotationsController from './componentAnnotations/componentAnnotationsController';\nimport PossibleScoreController from './possibleScore/possibleScoreController';\n\nclass ComponentDirective {\n    constructor($injector, $compile, NodeService, ProjectService, StudentDataService) {\n        this.restrict = 'E';\n        this.$injector = $injector;\n        this.$compile = $compile;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n    }\n\n    static directiveFactory($injector, $compile, NodeService, ProjectService, StudentDataService) {\n        ComponentDirective.instance = new ComponentDirective($injector, $compile, NodeService, ProjectService, StudentDataService);\n        return ComponentDirective.instance;\n    }\n\n    link($scope, element, attrs) {\n        var nodeId = attrs.nodeid;\n        var componentId = attrs.componentid;\n        var componentState = attrs.componentstate;\n        var workgroupId = null;\n        var teacherWorkgroupId = null;\n        var originalNodeId = attrs.originalnodeid;\n        var originalComponentId = attrs.originalcomponentid;\n\n        $scope.mode = \"student\";\n        if (attrs.mode) {\n            $scope.mode = attrs.mode;\n        }\n\n        if (attrs.workgroupid != null) {\n            try {\n                workgroupId = parseInt(attrs.workgroupid);\n            } catch(e) {\n\n            }\n        }\n\n        if (attrs.teacherworkgroupid) {\n            try {\n                teacherWorkgroupId = parseInt(attrs.teacherworkgroupid);\n            } catch(e) {\n\n            }\n        }\n\n        if (componentState == null || componentState === '') {\n            componentState = ComponentDirective.instance.StudentDataService.getLatestComponentStateByNodeIdAndComponentId(nodeId, componentId);\n        } else {\n            componentState = angular.fromJson(componentState);\n            nodeId = componentState.nodeId;\n            componentId = componentState.componentId;\n\n        }\n\n        var authoringComponentContent = ComponentDirective.instance.ProjectService.getComponentByNodeIdAndComponentId(nodeId, componentId);\n        var componentContent = ComponentDirective.instance.ProjectService.injectAssetPaths(authoringComponentContent);\n        \n        // inject the click attribute that will snip the image when the image is clicked\n        componentContent = ComponentDirective.instance.ProjectService.injectClickToSnipImage(componentContent);\n\n        $scope.componentContent = componentContent;\n        $scope.authoringComponentContent = authoringComponentContent;\n        $scope.componentState = componentState;\n        $scope.componentTemplatePath = ComponentDirective.instance.NodeService.getComponentTemplatePath(componentContent.type);\n        $scope.nodeId = nodeId;\n        $scope.workgroupId = workgroupId;\n        $scope.teacherWorkgroupId = teacherWorkgroupId;\n        $scope.type = componentContent.type;\n\n        if (originalNodeId != null && originalComponentId != null) {\n            /*\n             * set the original node id and component id. this is used\n             * when we are showing previous work from another component.\n             */\n            $scope.originalNodeId = originalNodeId;\n            $scope.originalComponentId = originalComponentId;\n\n            // get the original component\n            var originalComponentContent = ComponentDirective.instance.ProjectService.getComponentByNodeIdAndComponentId(originalNodeId, originalComponentId);\n            $scope.originalComponentContent = originalComponentContent;\n        }\n\n        var componentHTML = '<div id=\"{{component.id}}\" class=\"component-wrapper\">' +\n            '<div ng-include=\"componentTemplatePath\" class=\"component component--{{type}}\"></div></div>';\n\n        if (componentHTML != null) {\n            element.html(componentHTML);\n            ComponentDirective.instance.$compile(element.contents())($scope);\n        }\n    }\n}\n\nclass ClassResponseDirective {\n    constructor(StudentStatusService) {\n        this.restrict = 'E';\n        this.scope = {\n            response: '=',\n            submitbuttonclicked: '&',\n            studentdatachanged: '&'\n        };\n        this.templateUrl = 'wise5/components/discussion/classResponse.html';\n        this.StudentStatusService = StudentStatusService;\n    }\n\n    static directiveFactory(StudentStatusService) {\n        ClassResponseDirective.instance = new ClassResponseDirective(StudentStatusService);\n        return ClassResponseDirective.instance;\n    }\n\n    link($scope, $element, attrs) {\n        $scope.element = $element[0];\n\n        $scope.getAvatarColorForWorkgroupId = function (workgroupId) {\n            return ClassResponseDirective.instance.StudentStatusService.getAvatarColorForWorkgroupId(workgroupId);\n        };\n\n        // handle the submit button click\n        $scope.submitButtonClicked = function(response) {\n            $scope.submitbuttonclicked({r: response});\n        };\n\n        $scope.expanded = false;\n\n        $scope.$watch(\n            function () { return $scope.response.replies.length; },\n            function (oldValue, newValue) {\n                if (newValue !== oldValue) {\n                    $scope.toggleExpanded(true);\n                }\n            }\n        );\n\n        $scope.toggleExpanded = function (open) {\n            if (open) {\n                $scope.expanded = true;\n            } else {\n                $scope.expanded = !$scope.expanded;\n            }\n\n            if ($scope.expanded) {\n                var $clist = $($scope.element).find('.discussion-comments__list');\n                setTimeout(function () {\n                    $clist.animate({scrollTop: $clist.height()}, 250);\n                }, 250);\n            }\n        };\n    };\n}\n\nclass CompileDirective {\n    constructor($compile) {\n\n        this.$compile = $compile;\n    }\n\n    static directiveFactory($compile) {\n        CompileDirective.instance = new CompileDirective($compile);\n        return CompileDirective.instance;\n    }\n\n    link(scope, ele, attrs) {\n        scope.$watch(\n            function(scope) {\n                return scope.$eval(attrs.compile);\n            },\n            function(value) {\n                ele.html(value);\n                CompileDirective.instance.$compile(ele.contents())(scope);\n            }\n        );\n    }\n}\n\n/**\n * A directive that asks the user if they are sure they want to change a\n * number input value to a lower value. We will not ask the user if they\n * change the number to a higher value. This directive is intended to\n * be used in cases when changing to a lower value will have a destructive\n * effect such as setting the number of rows in the authoring view of the\n * table component.\n */\nclass ConfirmNumberDecrease {\n    constructor() {\n        this.priority = -1;\n        this.restrict = 'A';\n        this.require = 'ngModel';\n    }\n\n    static directiveFactory() {\n        ConfirmNumberDecrease.instance = new ConfirmNumberDecrease();\n        return ConfirmNumberDecrease.instance;\n    }\n\n    link($scope, element, attrs, modelCtrl) {\n\n        // get the message\n        var message = attrs.confirmNumberDecrease;\n\n        modelCtrl.$parsers.push(function (newValue) {\n\n            // get the old value\n            var oldValue = modelCtrl.$modelValue;\n\n            // check if the new value is less than the old value\n            if (newValue < oldValue) {\n                /*\n                 * the new value is less than the old value so we will ask them to confirm\n                 * the change since it may be destructive\n                 */\n                var answer = confirm(message);\n\n                if (answer) {\n                    // the user wants to change the value\n                    return newValue;\n                } else {\n                    // the user does not want to change the value so we will roll it back\n                    modelCtrl.$setViewValue(oldValue);\n                    modelCtrl.$render();\n                    return oldValue;\n                }\n            } else {\n                /*\n                 * the new value is equal or greater than the old value so we do\n                 * not need the user to confirm the change\n                 */\n                return newValue;\n            }\n        });\n    }\n}\n\n/**\n * Disable the backspace key so that it does not navigate the user back\n * in their browser history.\n */\nclass DisableDeleteKeypress {\n    constructor($document) {\n        this.restrict = 'A';\n        this.$document = $document;\n    }\n\n    static directiveFactory($document) {\n        DisableDeleteKeypress.instance = new DisableDeleteKeypress($document);\n        return DisableDeleteKeypress.instance;\n    }\n\n    link($document) {\n        DisableDeleteKeypress.instance.$document.bind('keydown', function(e) {\n\n            // check for the delete key press\n            if (e.keyCode === 8) {\n                // the delete key was pressed\n\n                // get the name of the node e.g. body, input, div, etc.\n                var nodeName = e.target.nodeName;\n\n                // get the type if applicable e.g. text, password, file, etc.\n                var targetType = e.target.type;\n\n                if (nodeName != null) {\n                    nodeName = nodeName.toLowerCase();\n                }\n\n                if (targetType != null) {\n                    targetType = targetType.toLowerCase();\n                }\n\n                if ((nodeName === 'input' && targetType === 'text') ||\n                    (nodeName === 'input' && targetType === 'password') ||\n                    (nodeName === 'input' && targetType === 'file') ||\n                    (nodeName === 'input' && targetType === 'search') ||\n                    (nodeName === 'input' && targetType === 'email') ||\n                    (nodeName === 'input' && targetType === 'number') ||\n                    (nodeName === 'input' && targetType === 'date') ||\n                    nodeName === 'textarea') {\n                    /*\n                     * the user is typing in a valid input element so we will\n                     * allow the delete key press\n                     */\n                } else {\n                    /*\n                     * the user is not typing in an input element so we will\n                     * not allow the delete key press\n                     */\n                    e.preventDefault();\n                }\n            }\n        });\n    }\n}\n\n/**\n * Listen for the backspace key press so we can perform special processing\n * specific for components such as deleting a point in a graph component.\n */\nclass ListenForDeleteKeypress {\n    constructor($document) {\n        this.restrict = 'A';\n        this.$document = $document;\n    }\n\n    static directiveFactory($document) {\n        ListenForDeleteKeypress.instance = new ListenForDeleteKeypress($document);\n        return ListenForDeleteKeypress.instance;\n    }\n\n    link($scope) {\n        ListenForDeleteKeypress.instance.$document.bind('keydown', function(e) {\n\n            // check for the delete key press\n            if (e.keyCode === 8) {\n                // the delete key was pressed\n\n                // fire the deleteKeyPressed event\n                $scope.$broadcast('deleteKeyPressed');\n            }\n        })\n    }\n}\n\n/**\n * Creates a link or button that the student can click on to navigate to\n * another step or activity in the project.\n */\nclass wiselink {\n    constructor($document, StudentDataService) {\n        this.restrict = 'E';\n        this.$document = $document;\n        this.StudentDataService = StudentDataService;\n    }\n\n    static directiveFactory($document, StudentDataService) {\n        wiselink.instance = new wiselink($document, StudentDataService);\n        return wiselink.instance;\n    }\n\n    link($scope, element, attrs) {\n\n        // the node id to navigate the student to\n        var nodeId = attrs.nodeid;\n\n        // the text to display in the link or button\n        var linkText = attrs.linktext;\n\n        // the type is optional and defaults to link\n        var type = attrs.type;\n\n        if (nodeId != null) {\n            if (type == 'button') {\n                // we will make a button\n                element.html('<button>' + linkText + '</button>');\n            } else {\n                // we will make a link\n                element.html('<a>' + linkText + '</a>');\n            }\n\n            element.bind('click', function() {\n                /*\n                 * when the link or button is clicked, navigate the student to\n                 * the appropriate step or activity\n                 */\n                wiselink.instance.StudentDataService.endCurrentNodeAndSetCurrentNodeByNodeId(nodeId);\n            });\n        }\n    }\n}\n\nconst Annotation = {\n    bindings: {\n        annotation: '<',\n        type: '@',\n        mode: '<',\n        nodeId: '<',\n        componentId: '<',\n        fromWorkgroupId: '<',\n        toWorkgroupId: '<',\n        componentStateId: '<',\n        active: '<',\n        maxScore: '<'\n    },\n    templateUrl: 'wise5/directives/annotation/annotation.html',\n    controller: 'AnnotationController as annotationController'\n}\n\nconst ComponentAnnotations = {\n    bindings: {\n        scoreAnnotation: '<',\n        commentAnnotation: '<',\n        maxScore: '<'\n    },\n    templateUrl: 'wise5/directives/componentAnnotations/componentAnnotations.html',\n    controller: 'ComponentAnnotationsController as componentAnnotationsCtrl'\n}\n\nconst PossibleScore = {\n    bindings: {\n        maxScore: '<'\n    },\n    templateUrl: 'wise5/directives/possibleScore/possibleScore.html',\n    controller: 'PossibleScoreController as possibleScoreCtrl'\n}\n\nlet Directives = angular.module('directives', []);\n\nClassResponseDirective.directiveFactory.$inject = ['StudentStatusService'];\nCompileDirective.directiveFactory.$inject = ['$compile'];\nComponentDirective.directiveFactory.$inject = ['$injector', '$compile', 'NodeService', 'ProjectService', 'StudentDataService'];\nConfirmNumberDecrease.directiveFactory.$inject = [];\nDisableDeleteKeypress.directiveFactory.$inject = ['$document'];\nListenForDeleteKeypress.directiveFactory.$inject = ['$document'];\nwiselink.directiveFactory.$inject = ['$document', 'StudentDataService'];\n\nDirectives.controller('AnnotationController', AnnotationController);\nDirectives.component('annotation', Annotation);\nDirectives.controller('ComponentAnnotationsController', ComponentAnnotationsController);\nDirectives.component('componentAnnotations', ComponentAnnotations);\nDirectives.controller('PossibleScoreController', PossibleScoreController);\nDirectives.component('possibleScore', PossibleScore);\nDirectives.directive('classResponse', ClassResponseDirective.directiveFactory);\nDirectives.directive('compile', CompileDirective.directiveFactory);\nDirectives.directive('component', ComponentDirective.directiveFactory);\nDirectives.directive('confirmNumberDecrease', ConfirmNumberDecrease.directiveFactory);\nDirectives.directive('disableDeleteKeypress', DisableDeleteKeypress.directiveFactory);\nDirectives.directive('listenForDeleteKeypress', ListenForDeleteKeypress.directiveFactory);\nDirectives.directive('wiselink', wiselink.directiveFactory);\n\nexport default Directives;\n"]}