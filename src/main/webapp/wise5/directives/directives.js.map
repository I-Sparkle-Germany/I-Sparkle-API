{"version":3,"sources":["directives.es6"],"names":["ComponentDirective","$injector","$compile","ConfigService","NodeService","ProjectService","StudentDataService","restrict","$scope","element","attrs","nodeId","nodeid","componentId","componentid","componentState","componentstate","workgroupId","teacherWorkgroupId","originalNodeId","originalnodeid","originalComponentId","originalcomponentid","mode","workgroupid","parseInt","e","teacherworkgroupid","instance","getLatestComponentStateByNodeIdAndComponentId","angular","fromJson","authoringComponentContent","getComponentByNodeIdAndComponentId","componentContent","injectAssetPaths","replaceStudentNames","injectClickToSnipImage","componentTemplatePath","getComponentTemplatePath","type","originalComponentContent","componentHTML","html","contents","ClassResponseDirective","StudentStatusService","scope","response","submitbuttonclicked","studentdatachanged","templateUrl","$element","getAvatarColorForWorkgroupId","replyEntered","$event","keyCode","replyText","submitButtonClicked","r","expanded","$watch","replies","length","oldValue","newValue","toggleExpanded","open","$clist","$","find","setTimeout","animate","scrollTop","height","adjustClientSaveTime","time","convertToClientTimestamp","CompileDirective","ele","$eval","compile","value","ConfirmNumberDecrease","priority","require","modelCtrl","message","confirmNumberDecrease","$parsers","push","$modelValue","answer","confirm","$setViewValue","$render","DisableDeleteKeypress","$document","bind","nodeName","target","targetType","toLowerCase","contentEditable","preventDefault","ListenForDeleteKeypress","$broadcast","DraggableDirective","attr","startX","startY","attributes","on","event","leftString","topString","left","top","style","replace","pageX","pageY","mousemove","mouseup","linkTypeChooserWidth","linkTypeChooserHeight","linkTypeChooserWidthString","css","linkTypeChooserHeightString","overlayWidth","overlayHeight","x","y","conceptMapController","conceptMapContainer","offset","offsetTop","off","Wiselink","bindings","linkText","tooltip","linkClass","controller","Annotation","annotation","fromWorkgroupId","toWorkgroupId","componentStateId","active","maxScore","ComponentAnnotations","annotations","PossibleScore","Directives","module","directiveFactory","$inject","component","directive"],"mappings":"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","file":"directives.js","sourcesContent":["'use strict';\n\nimport AnnotationController from './annotation/annotationController';\nimport ComponentAnnotationsController from './componentAnnotations/componentAnnotationsController';\nimport PossibleScoreController from './possibleScore/possibleScoreController';\nimport WiselinkController from './wiselink/wiselinkController';\n\nclass ComponentDirective {\n    constructor($injector, $compile, ConfigService, NodeService, ProjectService, StudentDataService) {\n        this.restrict = 'E';\n        this.$injector = $injector;\n        this.$compile = $compile;\n        this.ConfigService = ConfigService;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n    }\n\n    static directiveFactory($injector, $compile, ConfigService, NodeService, ProjectService, StudentDataService) {\n        ComponentDirective.instance = new ComponentDirective($injector, $compile, ConfigService, NodeService, ProjectService, StudentDataService);\n        return ComponentDirective.instance;\n    }\n\n    link($scope, element, attrs) {\n        var nodeId = attrs.nodeid;\n        var componentId = attrs.componentid;\n        var componentState = attrs.componentstate;\n        var workgroupId = null;\n        var teacherWorkgroupId = null;\n        var originalNodeId = attrs.originalnodeid;\n        var originalComponentId = attrs.originalcomponentid;\n\n        $scope.mode = \"student\";\n        if (attrs.mode) {\n            $scope.mode = attrs.mode;\n        }\n\n        if (attrs.workgroupid != null) {\n            try {\n                workgroupId = parseInt(attrs.workgroupid);\n            } catch(e) {\n\n            }\n        }\n\n        if (attrs.teacherworkgroupid) {\n            try {\n                teacherWorkgroupId = parseInt(attrs.teacherworkgroupid);\n            } catch(e) {\n\n            }\n        }\n\n        if (componentState == null || componentState === '') {\n            componentState = ComponentDirective.instance.StudentDataService.getLatestComponentStateByNodeIdAndComponentId(nodeId, componentId);\n        } else {\n            componentState = angular.fromJson(componentState);\n            nodeId = componentState.nodeId;\n            componentId = componentState.componentId;\n\n        }\n\n        var authoringComponentContent = ComponentDirective.instance.ProjectService.getComponentByNodeIdAndComponentId(nodeId, componentId);\n        var componentContent = ComponentDirective.instance.ProjectService.injectAssetPaths(authoringComponentContent);\n        \n        // replace any student names in the component content\n        componentContent = ComponentDirective.instance.ConfigService.replaceStudentNames(componentContent);\n        \n        // inject the click attribute that will snip the image when the image is clicked\n        componentContent = ComponentDirective.instance.ProjectService.injectClickToSnipImage(componentContent);\n\n        $scope.componentContent = componentContent;\n        $scope.authoringComponentContent = authoringComponentContent;\n        $scope.componentState = componentState;\n        $scope.componentTemplatePath = ComponentDirective.instance.NodeService.getComponentTemplatePath(componentContent.type);\n        $scope.nodeId = nodeId;\n        $scope.workgroupId = workgroupId;\n        $scope.teacherWorkgroupId = teacherWorkgroupId;\n        $scope.type = componentContent.type;\n\n        if (originalNodeId != null && originalComponentId != null) {\n            /*\n             * set the original node id and component id. this is used\n             * when we are showing previous work from another component.\n             */\n            $scope.originalNodeId = originalNodeId;\n            $scope.originalComponentId = originalComponentId;\n\n            // get the original component\n            var originalComponentContent = ComponentDirective.instance.ProjectService.getComponentByNodeIdAndComponentId(originalNodeId, originalComponentId);\n            $scope.originalComponentContent = originalComponentContent;\n        }\n\n        var componentHTML = '<div id=\"{{component.id}}\" class=\"component-wrapper\">' +\n            '<div ng-include=\"componentTemplatePath\" class=\"component component--{{type}}\"></div></div>';\n\n        if (componentHTML != null) {\n            element.html(componentHTML);\n            ComponentDirective.instance.$compile(element.contents())($scope);\n        }\n    }\n}\n\nclass ClassResponseDirective {\n    constructor(StudentStatusService, ConfigService) {\n        this.restrict = 'E';\n        this.scope = {\n            response: '=',\n            submitbuttonclicked: '&',\n            studentdatachanged: '&'\n        };\n        this.templateUrl = 'wise5/components/discussion/classResponse.html';\n        this.StudentStatusService = StudentStatusService;\n        this.ConfigService = ConfigService;\n    }\n\n    static directiveFactory(StudentStatusService, ConfigService) {\n        ClassResponseDirective.instance = new ClassResponseDirective(StudentStatusService, ConfigService);\n        return ClassResponseDirective.instance;\n    }\n\n    link($scope, $element, attrs) {\n        $scope.element = $element[0];\n\n        $scope.getAvatarColorForWorkgroupId = function (workgroupId) {\n            return ClassResponseDirective.instance.StudentStatusService.getAvatarColorForWorkgroupId(workgroupId);\n        };\n\n        $scope.replyEntered = function($event, response) {\n            if ($event.keyCode === 13) {\n                if (response.replyText) {\n                    $scope.submitButtonClicked(response);\n                }\n            }\n        }\n\n        // handle the submit button click\n        $scope.submitButtonClicked = function(response) {\n            $scope.submitbuttonclicked({r: response});\n        };\n\n        $scope.expanded = false;\n\n        $scope.$watch(\n            function () { return $scope.response.replies.length; },\n            function (oldValue, newValue) {\n                if (newValue !== oldValue) {\n                    $scope.toggleExpanded(true);\n                    $scope.response.replyText = '';\n                }\n            }\n        );\n\n        $scope.toggleExpanded = function (open) {\n            if (open) {\n                $scope.expanded = true;\n            } else {\n                $scope.expanded = !$scope.expanded;\n            }\n\n            if ($scope.expanded) {\n                var $clist = $($scope.element).find('.discussion-comments__list');\n                setTimeout(function () {\n                    $clist.animate({scrollTop: $clist.height()}, 250);\n                }, 250);\n            }\n        };\n\n        $scope.adjustClientSaveTime = function(time) {\n            return ClassResponseDirective.instance.ConfigService.convertToClientTimestamp(time);\n        };\n    };\n}\n\nclass CompileDirective {\n    constructor($compile) {\n\n        this.$compile = $compile;\n    }\n\n    static directiveFactory($compile) {\n        CompileDirective.instance = new CompileDirective($compile);\n        return CompileDirective.instance;\n    }\n\n    link(scope, ele, attrs) {\n        scope.$watch(\n            function(scope) {\n                return scope.$eval(attrs.compile);\n            },\n            function(value) {\n                ele.html(value);\n                CompileDirective.instance.$compile(ele.contents())(scope);\n            }\n        );\n    }\n}\n\n/**\n * A directive that asks the user if they are sure they want to change a\n * number input value to a lower value. We will not ask the user if they\n * change the number to a higher value. This directive is intended to\n * be used in cases when changing to a lower value will have a destructive\n * effect such as setting the number of rows in the authoring view of the\n * table component.\n */\nclass ConfirmNumberDecrease {\n    constructor() {\n        this.priority = -1;\n        this.restrict = 'A';\n        this.require = 'ngModel';\n    }\n\n    static directiveFactory() {\n        ConfirmNumberDecrease.instance = new ConfirmNumberDecrease();\n        return ConfirmNumberDecrease.instance;\n    }\n\n    link($scope, element, attrs, modelCtrl) {\n\n        // get the message\n        var message = attrs.confirmNumberDecrease;\n\n        modelCtrl.$parsers.push(function (newValue) {\n\n            // get the old value\n            var oldValue = modelCtrl.$modelValue;\n\n            // check if the new value is less than the old value\n            if (newValue < oldValue) {\n                /*\n                 * the new value is less than the old value so we will ask them to confirm\n                 * the change since it may be destructive\n                 */\n                var answer = confirm(message);\n\n                if (answer) {\n                    // the user wants to change the value\n                    return newValue;\n                } else {\n                    // the user does not want to change the value so we will roll it back\n                    modelCtrl.$setViewValue(oldValue);\n                    modelCtrl.$render();\n                    return oldValue;\n                }\n            } else {\n                /*\n                 * the new value is equal or greater than the old value so we do\n                 * not need the user to confirm the change\n                 */\n                return newValue;\n            }\n        });\n    }\n}\n\n/**\n * Disable the backspace key so that it does not navigate the user back\n * in their browser history.\n */\nclass DisableDeleteKeypress {\n    constructor($document) {\n        this.restrict = 'A';\n        this.$document = $document;\n    }\n\n    static directiveFactory($document) {\n        DisableDeleteKeypress.instance = new DisableDeleteKeypress($document);\n        return DisableDeleteKeypress.instance;\n    }\n\n    link($document) {\n        DisableDeleteKeypress.instance.$document.bind('keydown', function(e) {\n\n            // check for the delete key press\n            if (e.keyCode === 8) {\n                // the delete key was pressed\n\n                // get the name of the node e.g. body, input, div, etc.\n                let nodeName = e.target.nodeName;\n\n                // get the type if applicable e.g. text, password, file, etc.\n                let targetType = e.target.type;\n\n                if (nodeName != null) {\n                    nodeName = nodeName.toLowerCase();\n                }\n\n                if (targetType != null) {\n                    targetType = targetType.toLowerCase();\n                }\n\n                let contentEditable = e.target.contentEditable === 'true';\n\n                if ((nodeName === 'input' && targetType === 'text') ||\n                    (nodeName === 'input' && targetType === 'password') ||\n                    (nodeName === 'input' && targetType === 'file') ||\n                    (nodeName === 'input' && targetType === 'search') ||\n                    (nodeName === 'input' && targetType === 'email') ||\n                    (nodeName === 'input' && targetType === 'number') ||\n                    (nodeName === 'input' && targetType === 'date') ||\n                    nodeName === 'textarea' || contentEditable) {\n                    /*\n                     * the user is typing in a valid input element so we will\n                     * allow the delete key press\n                     */\n                } else {\n                    /*\n                     * the user is not typing in an input element so we will\n                     * not allow the delete key press\n                     */\n                    e.preventDefault();\n                }\n            }\n        });\n    }\n}\n\n/**\n * Listen for the backspace key press so we can perform special processing\n * specific for components such as deleting a point in a graph component.\n */\nclass ListenForDeleteKeypress {\n    constructor($document) {\n        this.restrict = 'A';\n        this.$document = $document;\n    }\n\n    static directiveFactory($document) {\n        ListenForDeleteKeypress.instance = new ListenForDeleteKeypress($document);\n        return ListenForDeleteKeypress.instance;\n    }\n\n    link($scope) {\n        ListenForDeleteKeypress.instance.$document.bind('keydown', function(e) {\n\n            // check for the delete key press\n            if (e.keyCode === 8) {\n                // the delete key was pressed\n\n                // fire the deleteKeyPressed event\n                $scope.$broadcast('deleteKeyPressed');\n            }\n        })\n    }\n}\n\n/**\n * Make the element draggable\n */\nclass DraggableDirective {\n    constructor($document) {\n        this.restrict = 'A';\n        this.$document = $document;\n    }\n\n    static directiveFactory($document) {\n        DraggableDirective.instance = new DraggableDirective($document);\n        return DraggableDirective.instance;\n    }\n\n    /**\n     * Set up the element\n     */\n    link(scope, element, attr) {\n\n        var $document = this.$document;\n\n        /*\n         * used to remember the start x and y coordinate of the top left corner\n         * of the element\n         */\n        var startX = 0;\n        var startY = 0;\n\n        // set the attributes into the element so we can access them later\n        this.attributes = attr;\n\n        /*\n         * listen for the mouse down event so we can set up the variables\n         * to start dragging\n         */\n        element.on('mousedown', (event) => {\n\n            // Prevent default dragging of selected content\n            event.preventDefault();\n\n            var leftString = null;\n            var topString = null;\n            var left = null;\n            var top = null;\n\n            if (element != null && element.length > 0) {\n                /*\n                 * get the pixel location of the top left corner relative to its\n                 * parent container\n                 */\n                leftString = element[0].style.left;\n                topString = element[0].style.top;\n\n                if (leftString != null) {\n                    // get the integer value of the left\n                    left = parseInt(leftString.replace('px', ''));\n                }\n\n                if (topString != null) {\n                    // get the integer value of the top\n                    top = parseInt(topString.replace('px', ''));\n                }\n\n                /*\n                 * get the position of the mouse and subtract the distance from\n                 * the upper left corner of the parent container to the upper\n                 * left corner of the element.\n                 * this will be equal to the sum of two values.\n                 * the first value is the x and y difference between the upper\n                 * left corner of the browser screen to the upper left corner\n                 * of the parent container.\n                 * the second value is the x and y difference between the upper\n                 * left corner of the element to the mouse position.\n                 * we will use the sum of these two values later to calculate\n                 * where to place the element when it is being dragged.\n                 */\n                startX = event.pageX - left;\n                startY = event.pageY - top;\n\n                // add mouse listeners to handle moving the element\n                $document.on('mousemove', mousemove);\n                $document.on('mouseup', mouseup);\n            }\n        });\n\n        /**\n         * Called when the user is dragging the element\n         * @param event the event\n         */\n        function mousemove(event) {\n\n            var linkTypeChooserWidth = null;\n            var linkTypeChooserHeight = null;\n\n            // get the width and height of the element we are dragging\n            var linkTypeChooserWidthString = angular.element(element[0]).css('width');\n            var linkTypeChooserHeightString = angular.element(element[0]).css('height');\n\n            if (linkTypeChooserWidthString != null && linkTypeChooserHeightString != null) {\n                // get the integer values of the width and height\n                linkTypeChooserWidth = parseInt(linkTypeChooserWidthString.replace('px', ''));\n                linkTypeChooserHeight = parseInt(linkTypeChooserHeightString.replace('px', ''));\n            }\n\n            /*\n             * get the width and height of the container that we want to restrict\n             * the element within. the user will not be able to drag the element\n             * outside of these boundaries.\n             */\n            var overlayWidth = element.scope().$eval(element[0].attributes['container-width'].value);\n            var overlayHeight = element.scope().$eval(element[0].attributes['container-height'].value);\n\n            /*\n             * calculate the x and y position of where the element should be\n             * placed. we will calculate the position by taking the mouse\n             * position and subtracting the value we previously calculated\n             * in the mousedown event. performing the subtraction will give\n             * us the x and y difference between the upper left corner of the\n             * parent container and the upper left corner of the element.\n             */\n            var x = event.pageX - startX;\n            var y = event.pageY - startY;\n\n            var top = 0;\n\n            if (element.scope().conceptMapController.mode == 'authoring') {\n                /*\n                 * if we are in authoring mode we need to include the offset of\n                 * the container for some reason.\n                 * TODO: figure out why the offset is required in authoring mode\n                 * but not in student mode.\n                 */\n\n                // get the concept map container\n                var conceptMapContainer = angular.element('#conceptMapContainer');\n\n                // get the offset of the container relative to the whole page\n                var offset = conceptMapContainer.offset();\n\n                // get the top offset\n                var offsetTop = offset.top;\n\n                // set the top to the offset\n                top = offsetTop;\n            }\n\n            if (x < 0) {\n                /*\n                 * the x position that we have calculated for the left\n                 * side of the element is past the left side of the parent\n                 * container so we will set the x position to 0 so that the\n                 * element is up against the left side of the parent container\n                 */\n                x = 0;\n            } else if((x + linkTypeChooserWidth) > overlayWidth) {\n                /*\n                 * the x position that we have calculated for the right\n                 * side of the element is past the right side of the parent\n                 * container so we will set the x position so that the element\n                 * is up against the right side of the parent container\n                 */\n                x = overlayWidth - linkTypeChooserWidth;\n            }\n\n            if (y < top) {\n                /*\n                 * the y position that we have calculated for the top\n                 * side of the element is past the top side of the parent\n                 * container so we will set the y position to 0 so that the\n                 * element is up against the top side of the parent container\n                 */\n                y = top;\n            } else if ((y + linkTypeChooserHeight) > (overlayHeight + top)) {\n                /*\n                 * the y position that we have calculated for the bottom\n                 * side of the element is past the bottom side of the parent\n                 * container so we will set the y position so that the element\n                 * is up against the bottom side of the parent container\n                 */\n                y = (overlayHeight + top) - linkTypeChooserHeight;\n            }\n\n            // move the element to the new position\n            element.css({\n                top: y + 'px',\n                left:  x + 'px'\n            });\n        }\n\n        /**\n         * Called when the user has released the mouse button\n         */\n        function mouseup() {\n            // remove the mousemove listener\n            $document.off('mousemove', mousemove);\n\n            // remove the mouseup listener\n            $document.off('mouseup', mouseup);\n        }\n    };\n}\n\n/**\n * Creates a link or button that the student can click on to navigate to\n * another step or activity in the project.\n */\nconst Wiselink = {\n    bindings: {\n        nodeId: '@',\n        linkText: '@',\n        tooltip: '@',\n        linkClass: '@',\n        type: '@'\n    },\n    templateUrl: 'wise5/directives/wiselink/wiselink.html',\n    controller: 'WiselinkController as wiselinkCtrl'\n}\n\nconst Annotation = {\n    bindings: {\n        annotation: '<',\n        type: '@',\n        mode: '<',\n        nodeId: '<',\n        componentId: '<',\n        fromWorkgroupId: '<',\n        toWorkgroupId: '<',\n        componentStateId: '<',\n        active: '<',\n        maxScore: '<'\n    },\n    templateUrl: 'wise5/directives/annotation/annotation.html',\n    controller: 'AnnotationController as annotationController'\n}\n\nconst ComponentAnnotations = {\n    bindings: {\n        annotations: '<',\n        maxScore: '<'\n    },\n    templateUrl: 'wise5/directives/componentAnnotations/componentAnnotations.html',\n    controller: 'ComponentAnnotationsController as componentAnnotationsCtrl'\n}\n\nconst PossibleScore = {\n    bindings: {\n        maxScore: '<'\n    },\n    templateUrl: 'wise5/directives/possibleScore/possibleScore.html',\n    controller: 'PossibleScoreController as possibleScoreCtrl'\n}\n\nlet Directives = angular.module('directives', []);\n\nClassResponseDirective.directiveFactory.$inject = ['StudentStatusService', 'ConfigService'];\nCompileDirective.directiveFactory.$inject = ['$compile'];\nComponentDirective.directiveFactory.$inject = ['$injector', '$compile', 'ConfigService', 'NodeService', 'ProjectService', 'StudentDataService'];\nConfirmNumberDecrease.directiveFactory.$inject = [];\nDisableDeleteKeypress.directiveFactory.$inject = ['$document'];\nListenForDeleteKeypress.directiveFactory.$inject = ['$document'];\nDraggableDirective.directiveFactory.$inject = ['$document'];\n\nDirectives.controller('AnnotationController', AnnotationController);\nDirectives.component('annotation', Annotation);\nDirectives.controller('ComponentAnnotationsController', ComponentAnnotationsController);\nDirectives.component('componentAnnotations', ComponentAnnotations);\nDirectives.controller('PossibleScoreController', PossibleScoreController);\nDirectives.component('wiselink', Wiselink);\nDirectives.controller('WiselinkController', WiselinkController);\nDirectives.component('possibleScore', PossibleScore);\nDirectives.directive('classResponse', ClassResponseDirective.directiveFactory);\nDirectives.directive('compile', CompileDirective.directiveFactory);\nDirectives.directive('component', ComponentDirective.directiveFactory);\nDirectives.directive('confirmNumberDecrease', ConfirmNumberDecrease.directiveFactory);\nDirectives.directive('disableDeleteKeypress', DisableDeleteKeypress.directiveFactory);\nDirectives.directive('draggable', DraggableDirective.directiveFactory);\nDirectives.directive('listenForDeleteKeypress', ListenForDeleteKeypress.directiveFactory);\n\nexport default Directives;\n"]}