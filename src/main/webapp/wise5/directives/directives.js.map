{"version":3,"sources":["directives.es6"],"names":[],"mappings":"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","file":"directives.js","sourcesContent":["'use strict';\n\nimport AnnotationController from './annotation/annotationController';\nimport ComponentAnnotationsController from './componentAnnotations/componentAnnotationsController';\nimport PossibleScoreController from './possibleScore/possibleScoreController';\nimport WiselinkController from './wiselink/wiselinkController';\n\nclass ComponentDirective {\n    constructor($injector, $compile, NodeService, ProjectService, StudentDataService) {\n        this.restrict = 'E';\n        this.$injector = $injector;\n        this.$compile = $compile;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n    }\n\n    static directiveFactory($injector, $compile, NodeService, ProjectService, StudentDataService) {\n        ComponentDirective.instance = new ComponentDirective($injector, $compile, NodeService, ProjectService, StudentDataService);\n        return ComponentDirective.instance;\n    }\n\n    link($scope, element, attrs) {\n        var nodeId = attrs.nodeid;\n        var componentId = attrs.componentid;\n        var componentState = attrs.componentstate;\n        var workgroupId = null;\n        var teacherWorkgroupId = null;\n        var originalNodeId = attrs.originalnodeid;\n        var originalComponentId = attrs.originalcomponentid;\n\n        $scope.mode = \"student\";\n        if (attrs.mode) {\n            $scope.mode = attrs.mode;\n        }\n\n        if (attrs.workgroupid != null) {\n            try {\n                workgroupId = parseInt(attrs.workgroupid);\n            } catch(e) {\n\n            }\n        }\n\n        if (attrs.teacherworkgroupid) {\n            try {\n                teacherWorkgroupId = parseInt(attrs.teacherworkgroupid);\n            } catch(e) {\n\n            }\n        }\n\n        if (componentState == null || componentState === '') {\n            componentState = ComponentDirective.instance.StudentDataService.getLatestComponentStateByNodeIdAndComponentId(nodeId, componentId);\n        } else {\n            componentState = angular.fromJson(componentState);\n            nodeId = componentState.nodeId;\n            componentId = componentState.componentId;\n\n        }\n\n        var authoringComponentContent = ComponentDirective.instance.ProjectService.getComponentByNodeIdAndComponentId(nodeId, componentId);\n        var componentContent = ComponentDirective.instance.ProjectService.injectAssetPaths(authoringComponentContent);\n\n        // inject the click attribute that will snip the image when the image is clicked\n        componentContent = ComponentDirective.instance.ProjectService.injectClickToSnipImage(componentContent);\n\n        $scope.componentContent = componentContent;\n        $scope.authoringComponentContent = authoringComponentContent;\n        $scope.componentState = componentState;\n        $scope.componentTemplatePath = ComponentDirective.instance.NodeService.getComponentTemplatePath(componentContent.type);\n        $scope.nodeId = nodeId;\n        $scope.workgroupId = workgroupId;\n        $scope.teacherWorkgroupId = teacherWorkgroupId;\n        $scope.type = componentContent.type;\n\n        if (originalNodeId != null && originalComponentId != null) {\n            /*\n             * set the original node id and component id. this is used\n             * when we are showing previous work from another component.\n             */\n            $scope.originalNodeId = originalNodeId;\n            $scope.originalComponentId = originalComponentId;\n\n            // get the original component\n            var originalComponentContent = ComponentDirective.instance.ProjectService.getComponentByNodeIdAndComponentId(originalNodeId, originalComponentId);\n            $scope.originalComponentContent = originalComponentContent;\n        }\n\n        var componentHTML = '<div id=\"{{component.id}}\" class=\"component-wrapper\">' +\n            '<div ng-include=\"componentTemplatePath\" class=\"component component--{{type}}\"></div></div>';\n\n        if (componentHTML != null) {\n            element.html(componentHTML);\n            ComponentDirective.instance.$compile(element.contents())($scope);\n        }\n    }\n}\n\nclass ClassResponseDirective {\n    constructor(StudentStatusService, ConfigService) {\n        this.restrict = 'E';\n        this.scope = {\n            response: '=',\n            submitbuttonclicked: '&',\n            studentdatachanged: '&'\n        };\n        this.templateUrl = 'wise5/components/discussion/classResponse.html';\n        this.StudentStatusService = StudentStatusService;\n        this.ConfigService = ConfigService;\n    }\n\n    static directiveFactory(StudentStatusService, ConfigService) {\n        ClassResponseDirective.instance = new ClassResponseDirective(StudentStatusService, ConfigService);\n        return ClassResponseDirective.instance;\n    }\n\n    link($scope, $element, attrs) {\n        $scope.element = $element[0];\n\n        $scope.getAvatarColorForWorkgroupId = function (workgroupId) {\n            return ClassResponseDirective.instance.StudentStatusService.getAvatarColorForWorkgroupId(workgroupId);\n        };\n\n        // handle the submit button click\n        $scope.submitButtonClicked = function(response) {\n            $scope.submitbuttonclicked({r: response});\n        };\n\n        $scope.expanded = false;\n\n        $scope.$watch(\n            function () { return $scope.response.replies.length; },\n            function (oldValue, newValue) {\n                if (newValue !== oldValue) {\n                    $scope.toggleExpanded(true);\n                }\n            }\n        );\n\n        $scope.toggleExpanded = function (open) {\n            if (open) {\n                $scope.expanded = true;\n            } else {\n                $scope.expanded = !$scope.expanded;\n            }\n\n            if ($scope.expanded) {\n                var $clist = $($scope.element).find('.discussion-comments__list');\n                setTimeout(function () {\n                    $clist.animate({scrollTop: $clist.height()}, 250);\n                }, 250);\n            }\n        };\n\n        $scope.adjustClientSaveTime = function(time) {\n            return ClassResponseDirective.instance.ConfigService.convertToClientTimestamp(time);\n        };\n    };\n}\n\nclass CompileDirective {\n    constructor($compile) {\n\n        this.$compile = $compile;\n    }\n\n    static directiveFactory($compile) {\n        CompileDirective.instance = new CompileDirective($compile);\n        return CompileDirective.instance;\n    }\n\n    link(scope, ele, attrs) {\n        scope.$watch(\n            function(scope) {\n                return scope.$eval(attrs.compile);\n            },\n            function(value) {\n                ele.html(value);\n                CompileDirective.instance.$compile(ele.contents())(scope);\n            }\n        );\n    }\n}\n\n/**\n * A directive that asks the user if they are sure they want to change a\n * number input value to a lower value. We will not ask the user if they\n * change the number to a higher value. This directive is intended to\n * be used in cases when changing to a lower value will have a destructive\n * effect such as setting the number of rows in the authoring view of the\n * table component.\n */\nclass ConfirmNumberDecrease {\n    constructor() {\n        this.priority = -1;\n        this.restrict = 'A';\n        this.require = 'ngModel';\n    }\n\n    static directiveFactory() {\n        ConfirmNumberDecrease.instance = new ConfirmNumberDecrease();\n        return ConfirmNumberDecrease.instance;\n    }\n\n    link($scope, element, attrs, modelCtrl) {\n\n        // get the message\n        var message = attrs.confirmNumberDecrease;\n\n        modelCtrl.$parsers.push(function (newValue) {\n\n            // get the old value\n            var oldValue = modelCtrl.$modelValue;\n\n            // check if the new value is less than the old value\n            if (newValue < oldValue) {\n                /*\n                 * the new value is less than the old value so we will ask them to confirm\n                 * the change since it may be destructive\n                 */\n                var answer = confirm(message);\n\n                if (answer) {\n                    // the user wants to change the value\n                    return newValue;\n                } else {\n                    // the user does not want to change the value so we will roll it back\n                    modelCtrl.$setViewValue(oldValue);\n                    modelCtrl.$render();\n                    return oldValue;\n                }\n            } else {\n                /*\n                 * the new value is equal or greater than the old value so we do\n                 * not need the user to confirm the change\n                 */\n                return newValue;\n            }\n        });\n    }\n}\n\n/**\n * Disable the backspace key so that it does not navigate the user back\n * in their browser history.\n */\nclass DisableDeleteKeypress {\n    constructor($document) {\n        this.restrict = 'A';\n        this.$document = $document;\n    }\n\n    static directiveFactory($document) {\n        DisableDeleteKeypress.instance = new DisableDeleteKeypress($document);\n        return DisableDeleteKeypress.instance;\n    }\n\n    link($document) {\n        DisableDeleteKeypress.instance.$document.bind('keydown', function(e) {\n\n            // check for the delete key press\n            if (e.keyCode === 8) {\n                // the delete key was pressed\n\n                // get the name of the node e.g. body, input, div, etc.\n                let nodeName = e.target.nodeName;\n\n                // get the type if applicable e.g. text, password, file, etc.\n                let targetType = e.target.type;\n\n                if (nodeName != null) {\n                    nodeName = nodeName.toLowerCase();\n                }\n\n                if (targetType != null) {\n                    targetType = targetType.toLowerCase();\n                }\n\n                let contentEditable = e.target.contentEditable === 'true';\n\n                if ((nodeName === 'input' && targetType === 'text') ||\n                    (nodeName === 'input' && targetType === 'password') ||\n                    (nodeName === 'input' && targetType === 'file') ||\n                    (nodeName === 'input' && targetType === 'search') ||\n                    (nodeName === 'input' && targetType === 'email') ||\n                    (nodeName === 'input' && targetType === 'number') ||\n                    (nodeName === 'input' && targetType === 'date') ||\n                    nodeName === 'textarea' || contentEditable) {\n                    /*\n                     * the user is typing in a valid input element so we will\n                     * allow the delete key press\n                     */\n                } else {\n                    /*\n                     * the user is not typing in an input element so we will\n                     * not allow the delete key press\n                     */\n                    e.preventDefault();\n                }\n            }\n        });\n    }\n}\n\n/**\n * Listen for the backspace key press so we can perform special processing\n * specific for components such as deleting a point in a graph component.\n */\nclass ListenForDeleteKeypress {\n    constructor($document) {\n        this.restrict = 'A';\n        this.$document = $document;\n    }\n\n    static directiveFactory($document) {\n        ListenForDeleteKeypress.instance = new ListenForDeleteKeypress($document);\n        return ListenForDeleteKeypress.instance;\n    }\n\n    link($scope) {\n        ListenForDeleteKeypress.instance.$document.bind('keydown', function(e) {\n\n            // check for the delete key press\n            if (e.keyCode === 8) {\n                // the delete key was pressed\n\n                // fire the deleteKeyPressed event\n                $scope.$broadcast('deleteKeyPressed');\n            }\n        })\n    }\n}\n\n/**\n * Make the element draggable\n */\nclass DraggableDirective {\n    constructor($document) {\n        this.restrict = 'A';\n        this.$document = $document;\n    }\n\n    static directiveFactory($document) {\n        DraggableDirective.instance = new DraggableDirective($document);\n        return DraggableDirective.instance;\n    }\n\n    /**\n     * Set up the element\n     */\n    link(scope, element, attr) {\n        \n        var $document = this.$document;\n        \n        /*\n         * used to remember the start x and y coordinate of the top left corner\n         * of the element\n         */\n        var startX = 0;\n        var startY = 0;\n        \n        // set the attributes into the element so we can access them later\n        this.attributes = attr;\n        \n        /*\n         * listen for the mouse down event so we can set up the variables\n         * to start dragging\n         */\n        element.on('mousedown', (event) => {\n            \n            // Prevent default dragging of selected content\n            event.preventDefault();\n            \n            var leftString = null;\n            var topString = null;\n            var left = null;\n            var top = null;\n            \n            if (element != null && element.length > 0) {\n                /*\n                 * get the pixel location of the top left corner relative to its\n                 * parent container\n                 */\n                leftString = element[0].style.left;\n                topString = element[0].style.top;\n                \n                if (leftString != null) {\n                    // get the integer value of the left\n                    left = parseInt(leftString.replace('px', ''));\n                }\n                \n                if (topString != null) {\n                    // get the integer value of the top\n                    top = parseInt(topString.replace('px', ''));\n                }\n                \n                /*\n                 * get the position of the mouse and subtract the distance from\n                 * the upper left corner of the parent container to the upper\n                 * left corner of the element. \n                 * this will be equal to the sum of two values.\n                 * the first value is the x and y difference between the upper\n                 * left corner of the browser screen to the upper left corner\n                 * of the parent container.\n                 * the second value is the x and y difference between the upper\n                 * left corner of the element to the mouse position.\n                 * we will use the sum of these two values later to calculate\n                 * where to place the element when it is being dragged.\n                 */\n                startX = event.pageX - left;\n                startY = event.pageY - top;\n                \n                // add mouse listeners to handle moving the element\n                $document.on('mousemove', mousemove);\n                $document.on('mouseup', mouseup);\n            }\n        });\n        \n        /**\n         * Called when the user is dragging the element\n         * @param event the event\n         */\n        function mousemove(event) {\n            \n            var linkTypeChooserWidth = null;\n            var linkTypeChooserHeight = null;\n            \n            // get the width and height of the element we are dragging\n            var linkTypeChooserWidthString = angular.element(element[0]).css('width');\n            var linkTypeChooserHeightString = angular.element(element[0]).css('height');\n            \n            if (linkTypeChooserWidthString != null && linkTypeChooserHeightString != null) {\n                // get the integer values of the width and height\n                linkTypeChooserWidth = parseInt(linkTypeChooserWidthString.replace('px', ''));\n                linkTypeChooserHeight = parseInt(linkTypeChooserHeightString.replace('px', ''));\n            }\n            \n            /*\n             * get the width and height of the container that we want to restrict\n             * the element within. the user will not be able to drag the element\n             * outside of these boundaries.\n             */\n            var overlayWidth = element.scope().$eval(element[0].attributes['container-width'].value);\n            var overlayHeight = element.scope().$eval(element[0].attributes['container-height'].value);\n            \n            /*\n             * calculate the x and y position of where the element should be\n             * placed. we will calculate the position by taking the mouse\n             * position and subtracting the value we previously calculated \n             * in the mousedown event. performing the subtraction will give\n             * us the x and y difference between the upper left corner of the\n             * parent container and the upper left corner of the element.\n             */\n            var x = event.pageX - startX;\n            var y = event.pageY - startY;\n            \n            var top = 0;\n            \n            if (element.scope().conceptMapController.mode == 'authoring') {\n                /*\n                 * if we are in authoring mode we need to include the offset of\n                 * the container for some reason.\n                 * TODO: figure out why the offset is required in authoring mode\n                 * but not in student mode.\n                 */\n                \n                // get the concept map container\n                var conceptMapContainer = angular.element('#conceptMapContainer');\n                \n                // get the offset of the container relative to the whole page\n                var offset = conceptMapContainer.offset();\n                \n                // get the top offset\n                var offsetTop = offset.top;\n                \n                // set the top to the offset\n                top = offsetTop;\n            }\n            \n            if (x < 0) {\n                /* \n                 * the x position that we have calculated for the left\n                 * side of the element is past the left side of the parent\n                 * container so we will set the x position to 0 so that the\n                 * element is up against the left side of the parent container\n                 */\n                x = 0;\n            } else if((x + linkTypeChooserWidth) > overlayWidth) {\n                /* \n                 * the x position that we have calculated for the right\n                 * side of the element is past the right side of the parent\n                 * container so we will set the x position so that the element\n                 * is up against the right side of the parent container\n                 */\n                x = overlayWidth - linkTypeChooserWidth;\n            }\n            \n            if (y < top) {\n                /* \n                 * the y position that we have calculated for the top\n                 * side of the element is past the top side of the parent\n                 * container so we will set the y position to 0 so that the\n                 * element is up against the top side of the parent container\n                 */\n                y = top;\n            } else if ((y + linkTypeChooserHeight) > (overlayHeight + top)) {\n                /* \n                 * the y position that we have calculated for the bottom\n                 * side of the element is past the bottom side of the parent\n                 * container so we will set the y position so that the element\n                 * is up against the bottom side of the parent container\n                 */\n                y = (overlayHeight + top) - linkTypeChooserHeight;\n            }\n            \n            // move the element to the new position\n            element.css({\n                top: y + 'px',\n                left:  x + 'px'\n            });\n        }\n        \n        /**\n         * Called when the user has released the mouse button\n         */\n        function mouseup() {\n            // remove the mousemove listener\n            $document.off('mousemove', mousemove);\n            \n            // remove the mouseup listener\n            $document.off('mouseup', mouseup);\n        }\n    };\n}\n\n/**\n * Creates a link or button that the student can click on to navigate to\n * another step or activity in the project.\n */\nconst Wiselink = {\n    bindings: {\n        nodeId: '@',\n        linkText: '@',\n        tooltip: '@',\n        linkClass: '@',\n        type: '@'\n    },\n    templateUrl: 'wise5/directives/wiselink/wiselink.html',\n    controller: 'WiselinkController as wiselinkCtrl'\n}\n\nconst Annotation = {\n    bindings: {\n        annotation: '<',\n        type: '@',\n        mode: '<',\n        nodeId: '<',\n        componentId: '<',\n        fromWorkgroupId: '<',\n        toWorkgroupId: '<',\n        componentStateId: '<',\n        active: '<',\n        maxScore: '<'\n    },\n    templateUrl: 'wise5/directives/annotation/annotation.html',\n    controller: 'AnnotationController as annotationController'\n}\n\nconst ComponentAnnotations = {\n    bindings: {\n        scoreAnnotation: '<',\n        commentAnnotation: '<',\n        maxScore: '<'\n    },\n    templateUrl: 'wise5/directives/componentAnnotations/componentAnnotations.html',\n    controller: 'ComponentAnnotationsController as componentAnnotationsCtrl'\n}\n\nconst PossibleScore = {\n    bindings: {\n        maxScore: '<'\n    },\n    templateUrl: 'wise5/directives/possibleScore/possibleScore.html',\n    controller: 'PossibleScoreController as possibleScoreCtrl'\n}\n\nlet Directives = angular.module('directives', []);\n\nClassResponseDirective.directiveFactory.$inject = ['StudentStatusService', 'ConfigService'];\nCompileDirective.directiveFactory.$inject = ['$compile'];\nComponentDirective.directiveFactory.$inject = ['$injector', '$compile', 'NodeService', 'ProjectService', 'StudentDataService'];\nConfirmNumberDecrease.directiveFactory.$inject = [];\nDisableDeleteKeypress.directiveFactory.$inject = ['$document'];\nListenForDeleteKeypress.directiveFactory.$inject = ['$document'];\nDraggableDirective.directiveFactory.$inject = ['$document'];\n\nDirectives.controller('AnnotationController', AnnotationController);\nDirectives.component('annotation', Annotation);\nDirectives.controller('ComponentAnnotationsController', ComponentAnnotationsController);\nDirectives.component('componentAnnotations', ComponentAnnotations);\nDirectives.controller('PossibleScoreController', PossibleScoreController);\nDirectives.component('wiselink', Wiselink);\nDirectives.controller('WiselinkController', WiselinkController);\nDirectives.component('possibleScore', PossibleScore);\nDirectives.directive('classResponse', ClassResponseDirective.directiveFactory);\nDirectives.directive('compile', CompileDirective.directiveFactory);\nDirectives.directive('component', ComponentDirective.directiveFactory);\nDirectives.directive('confirmNumberDecrease', ConfirmNumberDecrease.directiveFactory);\nDirectives.directive('disableDeleteKeypress', DisableDeleteKeypress.directiveFactory);\nDirectives.directive('draggable', DraggableDirective.directiveFactory);\nDirectives.directive('listenForDeleteKeypress', ListenForDeleteKeypress.directiveFactory);\n\nexport default Directives;\n"]}