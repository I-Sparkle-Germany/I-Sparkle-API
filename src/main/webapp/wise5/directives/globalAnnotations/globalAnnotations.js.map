{"version":3,"sources":["globalAnnotations.es6"],"names":["GlobalAnnotationsController","$mdDialog","$rootScope","$scope","$translate","AnnotationService","StudentDataService","$on","event","args","show","calculateActiveGlobalAnnoationGroups","globalAnnotationGroups","getActiveGlobalAnnotationGroups","map","globalAnnotationGroup","globalAnnotations","annotations","globalAnnotation","data","isGlobal","unGlobalizeConditional","unGlobalizeCriteriaArray","unGlobalizeCriteria","anySatified","i","length","unGlobalizeCriteriaResult","evaluateCriteria","unGlobalizedTimestamp","Date","parse","saveAnnotations","allSatified","$event","latestGlobalAnnotationGroup","getLatestGlobalAnnotationGroup","targetEvent","template","controller","GlobalAnnotationsDialogController","locals","close","hide","$inject","latest","total","GlobalAnnotations","bindings"],"mappings":"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","file":"globalAnnotations.js","sourcesContent":["\"use strict\";\n\nclass GlobalAnnotationsController {\n    constructor($mdDialog,\n                $rootScope,\n                $scope,\n                $translate,\n                AnnotationService,\n                StudentDataService) {\n        this.$mdDialog = $mdDialog;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$translate = $translate;\n        this.AnnotationService = AnnotationService;\n        this.StudentDataService = StudentDataService;\n\n        // listen for the display global annotation event\n        this.$rootScope.$on('displayGlobalAnnotations', (event, args) => {\n            this.show(event);\n        });\n\n        this.$scope.$on('nodeStatusesChanged', (event, args) => {\n            // calculate active global annotations and group them by group name as needed\n            this.AnnotationService.calculateActiveGlobalAnnoationGroups();\n\n            // go through the global annotations and see if they can be un-globalized by checking if their criterias have been met.\n            let globalAnnotationGroups = this.AnnotationService.getActiveGlobalAnnotationGroups();\n            globalAnnotationGroups.map((globalAnnotationGroup) => {\n                let globalAnnotations = globalAnnotationGroup.annotations;\n                globalAnnotations.map((globalAnnotation) => {\n                    if (globalAnnotation.data != null && globalAnnotation.data.isGlobal) {\n                        let unGlobalizeConditional = globalAnnotation.data.unGlobalizeConditional;\n                        let unGlobalizeCriteriaArray = globalAnnotation.data.unGlobalizeCriteria;\n                        if (unGlobalizeCriteriaArray != null) {\n                            if (unGlobalizeConditional === \"any\") {\n                                // at least one criteria in unGlobalizeCriteriaArray must be satisfied in any order before un-globalizing this annotation\n                                let anySatified = false;\n                                for (let i = 0; i < unGlobalizeCriteriaArray.length; i++) {\n                                    let unGlobalizeCriteria = unGlobalizeCriteriaArray[i];\n                                    let unGlobalizeCriteriaResult = this.StudentDataService.evaluateCriteria(unGlobalizeCriteria);\n                                    anySatified = anySatified || unGlobalizeCriteriaResult;\n                                }\n                                if (anySatified) {\n                                    globalAnnotation.data.unGlobalizedTimestamp = Date.parse(new Date());  // save when criteria was satisfied\n                                    this.StudentDataService.saveAnnotations([globalAnnotation]);  // save changes to server\n                                }\n                            } else if (unGlobalizeConditional === \"all\") {\n                                // all criteria in unGlobalizeCriteriaArray must be satisfied in any order before un-globalizing this annotation\n                                let allSatified = true;\n                                for (let i = 0; i < unGlobalizeCriteriaArray.length; i++) {\n                                    let unGlobalizeCriteria = unGlobalizeCriteriaArray[i];\n                                    let unGlobalizeCriteriaResult = this.StudentDataService.evaluateCriteria(unGlobalizeCriteria);\n                                    allSatified = allSatified && unGlobalizeCriteriaResult;\n                                }\n                                if (allSatified) {\n                                    globalAnnotation.data.unGlobalizedTimestamp = Date.parse(new Date());  // save when criteria was satisfied\n                                    this.StudentDataService.saveAnnotations([globalAnnotation]);  // save changes to server\n                                }\n                            }\n                        }\n                    }\n                });\n            })\n        });\n    };\n\n    show($event) {\n        let latestGlobalAnnotationGroup = this.getLatestGlobalAnnotationGroup();\n        //this.$translate(['itemLocked', 'ok']).then((translations) => {\n            this.$mdDialog.show({\n                targetEvent: $event,\n                template:\n                    `<md-dialog aria-label=\"Global Feedback Dialog\">\n                        <md-dialog-content class=\"md-dialog-content\">\n                            <div ng-repeat=\"globalAnnotation in latestGlobalAnnotationGroup.annotations\">\n                                <div ng-if=\"globalAnnotation.type == 'autoScore'\">Score: {{globalAnnotation.data.value}}</div>\n                                <compile ng-if=\"globalAnnotation.type == 'autoComment'\" data=\"globalAnnotation.data.value\"></compile>\n                            </div>\n                        </md-dialog-content>\n                        <md-dialog-actions>\n                            <md-button ng-click=\"close()\" class=\"md-primary\">\n                                Close\n                            </md-button>\n                        </md-dialog-actions>\n                    </md-dialog>`,\n                controller: GlobalAnnotationsDialogController,\n                locals: {\n                    latestGlobalAnnotationGroup: latestGlobalAnnotationGroup\n                }\n            });\n\n            function GlobalAnnotationsDialogController($scope, $mdDialog, latestGlobalAnnotationGroup) {\n                $scope.latestGlobalAnnotationGroup = latestGlobalAnnotationGroup;\n\n                $scope.close = function() {\n                    $mdDialog.hide();\n                }\n            }\n\n            GlobalAnnotationsDialogController.$inject = [\"$scope\", \"$mdDialog\", \"latestGlobalAnnotationGroup\"];\n        //})\n    }\n\n    /**\n     * Return an array containing active annotations\n     */\n    getLatestGlobalAnnotationGroup() {\n        let latest = null;\n\n        let annotations = this.AnnotationService.getActiveGlobalAnnotationGroups();\n        let total = annotations.length;\n\n        if (total) {\n            latest = annotations[total - 1];\n        }\n\n        return latest;\n    }\n}\n\nGlobalAnnotationsController.$inject = [\n    '$mdDialog',\n    '$rootScope',\n    '$scope',\n    '$translate',\n    'AnnotationService',\n    'StudentDataService'\n];\n\nconst GlobalAnnotations = {\n    bindings: {},\n    controller: GlobalAnnotationsController\n};\n\nexport default GlobalAnnotations;\n"]}