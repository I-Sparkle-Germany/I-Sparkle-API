{"version":3,"sources":["notebookItemReportController.es6"],"names":["NotebookItemReportController","$injector","$mdBottomSheet","$rootScope","$scope","$filter","ConfigService","NotebookService","ProjectService","StudentAssetService","StudentDataService","$translate","mode","getMode","dirty","autoSaveInterval","saveMessage","text","time","reportItem","getLatestNotebookReportItemByReportId","reportId","workgroupId","serverSaveTime","clientSaveTime","convertToClientTimestamp","setSaveMessage","getTemplateReportItemByReportId","notebookConfig","getNotebookConfig","label","itemTypes","report","reportItemContent","injectAssetPaths","content","summernoteOptions","toolbar","popover","image","customButton","buttonText","tooltip","buttonClass","action","$event","addNotebookItemContent","disableDragAndDrop","toolbarContainer","callbacks","onBlur","$","summernote","$watch","newValue","oldValue","$on","saveNotebookReportItem","startAutoSaveInterval","item","nodeId","getNodePositionAndTitleByNodeId","templateUrl","ev","notebookItems","getNotebookByWorkgroup","items","themePath","reportTextareaCursorPosition","angular","element","prop","$reportElement","show","parent","document","body","locals","controller","NotebookItemChooserController","controllerAs","bindToController","chooseNotebookItem","notebookItem","$item","css","attachments","a","length","notebookItemAttachment","$img","iconURL","addClass","append","$caption","hide","$inject","stopAutoSaveInterval","autoSaveIntervalId","setInterval","clearInterval","Date","parse","id","saveNotebookItem","localNotebookItemId","type","title","then","result","distance","elem","edge","scrollBarWidth","clientWidth","querySelector","outerWidth","find","message","removeAbsoluteAssetPaths","windowString","w","window","open","write","close"],"mappings":"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","file":"notebookItemReportController.js","sourcesContent":["'use strict';\r\n\r\nclass NotebookItemReportController {\r\n\r\n    constructor($injector,\r\n                $mdBottomSheet,\r\n                $rootScope,\r\n                $scope,\r\n                $filter,\r\n                ConfigService,\r\n                NotebookService,\r\n                ProjectService,\r\n                StudentAssetService,\r\n                StudentDataService) {\r\n        this.$injector = $injector;\r\n        this.$mdBottomSheet = $mdBottomSheet;\r\n        this.$rootScope = $rootScope;\r\n        this.$scope = $scope;\r\n        this.$filter = $filter;\r\n        this.ConfigService = ConfigService;\r\n        this.NotebookService = NotebookService;\r\n        this.ProjectService = ProjectService;\r\n        this.StudentAssetService = StudentAssetService;\r\n        this.StudentDataService = StudentDataService;\r\n\r\n        this.$translate = this.$filter('translate');\r\n        this.mode = this.ConfigService.getMode();\r\n\r\n        this.dirty = false;\r\n\r\n        this.autoSaveInterval = 60000;  // the auto save interval in milliseconds\r\n\r\n        this.saveMessage = {\r\n            text: '',\r\n            time: ''\r\n        };\r\n\r\n        this.reportItem = this.NotebookService.getLatestNotebookReportItemByReportId(this.reportId, this.workgroupId);\r\n        if (this.reportItem) {\r\n            let serverSaveTime = this.reportItem.serverSaveTime;\r\n            let clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\r\n            this.setSaveMessage(this.$translate('LAST_SAVED'), clientSaveTime);\r\n        } else {\r\n            // Student doesn't have work for this report yet, so we'll use the template.\r\n            this.reportItem = this.NotebookService.getTemplateReportItemByReportId(this.reportId);\r\n            if (this.reportItem == null) {\r\n                // if there is no template, don't allow student to work on the report.\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.notebookConfig = this.NotebookService.getNotebookConfig();\r\n        this.label = this.notebookConfig.itemTypes.report.label;\r\n\r\n        // replace relative asset paths with absolute asset paths\r\n        this.reportItemContent = this.ProjectService.injectAssetPaths(this.reportItem.content.content);\r\n\r\n        // summernote editor options\r\n        this.summernoteOptions = {\r\n            toolbar: [\r\n                ['edit', ['undo', 'redo']],\r\n                ['style', ['bold', 'italic', 'underline'/*, 'superscript', 'subscript', 'strikethrough', 'clear'*/]],\r\n                //['style', ['style']],\r\n                //['fontface', ['fontname']],\r\n                //['textsize', ['fontsize']],\r\n                //['fontclr', ['color']],\r\n                ['para', ['ul', 'ol', 'paragraph'/*, 'lineheight'*/]],\r\n                //['height', ['height']],\r\n                //['table', ['table']],\r\n                //['insert', ['link','picture','video','hr']],\r\n                //['view', ['fullscreen', 'codeview']],\r\n                //['help', ['help']]\r\n                ['customButton', ['customButton']]\r\n                //['print', ['print']]\r\n            ],\r\n            popover: {\r\n                image: [\r\n                    ['imagesize', ['imageSize100', 'imageSize50', 'imageSize25']],\r\n                    //['float', ['floatLeft', 'floatRight', 'floatNone']],\r\n                    ['remove', ['removeMedia']]\r\n                ]\r\n            },\r\n            customButton: {\r\n                buttonText: 'Add ' + this.notebookConfig.label + ' Item +',\r\n                tooltip: 'Insert from ' + this.notebookConfig.label,\r\n                buttonClass: 'accent-1 notebook-item--report__add-note',\r\n                action: ($event) => {\r\n                    this.addNotebookItemContent($event);\r\n                }\r\n            },\r\n            disableDragAndDrop: true,\r\n            toolbarContainer: '#' + this.reportId + '-toolbar',\r\n            callbacks: {\r\n                onBlur: function () {\r\n                    $(this).summernote('saveRange');\r\n                }\r\n            }\r\n        };\r\n\r\n        this.$scope.$watch(() => {\r\n            return this.reportItem.content.content;\r\n        }, (newValue, oldValue) => {\r\n            if (newValue !== oldValue) {\r\n                this.dirty = true;\r\n            }\r\n        });\r\n\r\n        this.$scope.$on('toggleNotebook', () => {\r\n            if (this.dirty) {\r\n                this.saveNotebookReportItem();\r\n            }\r\n        });\r\n\r\n        // start the auto save interval\r\n        if (this.mode != \"classroomMonitor\") {\r\n            this.startAutoSaveInterval();\r\n        }\r\n    }\r\n\r\n    getItemNodeId() {\r\n        if (this.item == null) {\r\n            return null;\r\n        } else {\r\n            return this.item.nodeId;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this NotebookItem's position and title.\r\n     */\r\n    getItemNodePositionAndTitle() {\r\n        if (this.item == null) {\r\n            return \"\";\r\n        } else {\r\n            return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\r\n        }\r\n    }\r\n\r\n    getTemplateUrl() {\r\n        return this.templateUrl;\r\n    }\r\n\r\n    addNotebookItemContent(ev) {\r\n        let notebookItems = this.NotebookService.getNotebookByWorkgroup(this.workgroupId).items;\r\n        let templateUrl = this.themePath + '/notebook/notebookItemChooser.html';\r\n        let reportTextareaCursorPosition = angular.element('textarea.report').prop(\"selectionStart\"); // insert the notebook item at the cursor position later\r\n        let $reportElement = $('#' + this.reportId);\r\n\r\n        this.$mdBottomSheet.show({\r\n            parent: angular.element(document.body),\r\n            templateUrl: templateUrl,\r\n            locals: {\r\n                notebookItems: notebookItems,\r\n                reportItem: this.reportItem,\r\n                reportTextareaCursorPosition: reportTextareaCursorPosition,\r\n                themePath: this.themePath,\r\n                notebookConfig: this.notebookConfig\r\n            },\r\n            controller: NotebookItemChooserController,\r\n            controllerAs: 'notebookItemChooserController',\r\n            bindToController: true\r\n        });\r\n\r\n        function NotebookItemChooserController($mdBottomSheet, $scope, notebookItems, reportItem, reportTextareaCursorPosition, themePath) {\r\n            $scope.notebookItems = notebookItems;\r\n            $scope.reportItem = reportItem;\r\n            $scope.reportTextareaCursorPosition = reportTextareaCursorPosition;\r\n            $scope.themePath = themePath;\r\n            $scope.chooseNotebookItem = (notebookItem) => {\r\n                let $item = $('<div></div>').css('text-align', 'center');\r\n                if (notebookItem.content && notebookItem.content.attachments) {\r\n                    for (let a = 0; a < notebookItem.content.attachments.length; a++) {\r\n                        let notebookItemAttachment = notebookItem.content.attachments[a];\r\n                        let $img = $('<img src=\"' + notebookItemAttachment.iconURL + '\" alt=\"notebook image\" style=\"width: 75%; max-width: 100%; height: auto; border: 1px solid #aaaaaa; padding: 8px; margin-bottom: 4px;\" />');\r\n                        $img.addClass('notebook-item--report__note-img');\r\n                        $item.append($img);\r\n                    }\r\n                }\r\n                if (notebookItem.content && notebookItem.content.text) {\r\n                    let $caption = $('<div><b>' + notebookItem.content.text + '</b></div>').css({'text-align': 'center'});\r\n                    $item.append($caption);\r\n                }\r\n\r\n                $reportElement.summernote('focus');\r\n                $reportElement.summernote('restoreRange');\r\n                $reportElement.summernote('insertNode', $item[0]);\r\n\r\n                // hide chooser\r\n                $mdBottomSheet.hide();\r\n            };\r\n        }\r\n\r\n        NotebookItemChooserController.$inject = [\"$mdBottomSheet\", \"$scope\", \"notebookItems\", \"reportItem\", \"reportTextareaCursorPosition\", \"themePath\"];\r\n    }\r\n\r\n    /**\r\n     * Start the auto save interval for this report\r\n     */\r\n    startAutoSaveInterval() {\r\n        this.stopAutoSaveInterval();  // stop any existing interval\r\n        this.autoSaveIntervalId = setInterval(() => {\r\n            // check if the student work is dirty\r\n            if (this.dirty) {\r\n                // the student work is dirty so we will save.\r\n                // obtain the component states from the children and save them to the server\r\n                this.saveNotebookReportItem();\r\n            }\r\n        }, this.autoSaveInterval);\r\n    };\r\n\r\n    /**\r\n     * Stop the auto save interval for this report\r\n     */\r\n    stopAutoSaveInterval() {\r\n        clearInterval(this.autoSaveIntervalId);\r\n    };\r\n\r\n    /**\r\n     * Save the notebook report item to server\r\n     */\r\n    saveNotebookReportItem() {\r\n        // save new report notebook item\r\n        this.reportItem.content.clientSaveTime = Date.parse(new Date());  // set save timestamp\r\n        this.reportItem.id = null;  // set the id to null so it can be inserted as initial version, as opposed to updated. this is true for both new and just-loaded reports.\r\n\r\n        this.NotebookService.saveNotebookItem(this.reportItem.id, this.reportItem.nodeId, this.reportItem.localNotebookItemId,\r\n            this.reportItem.type, this.reportItem.title, this.reportItem.content, this.reportItem.content.clientSaveTime)\r\n            .then((result) => {\r\n                if (result) {\r\n                    this.dirty = false;\r\n                    this.reportItem.id = result.id; // set the reportNotebookItemId to the newly-incremented id so that future saves during this visit will be an update instead of an insert.\r\n                    let serverSaveTime = result.serverSaveTime;\r\n                    let clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\r\n\r\n                    // set save message\r\n                    this.setSaveMessage(this.$translate('SAVED'), clientSaveTime);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Account for potential vertical scrollbar on Notebook content and set\r\n     * fixed rich text toolbar location accordingly\r\n     */\r\n    setEditorPosition(distance, elem, edge) {\r\n        let scrollBarWidth = document.body.clientWidth - angular.element(document.querySelector('#notebook')).outerWidth(true);\r\n        elem.find('.notebook-item--report__toolbar').css('right', scrollBarWidth);\r\n    }\r\n\r\n    /**\r\n     * Set the message next to the save button\r\n     * @param message the message to display\r\n     * @param time the time to display\r\n     */\r\n    setSaveMessage(message, time) {\r\n        this.saveMessage.text = message;\r\n        this.saveMessage.time = time;\r\n    }\r\n\r\n    /**\r\n     * The report item content changed\r\n     */\r\n    reportItemContentChanged() {\r\n        /*\r\n         * remove the absolute asset paths\r\n         * e.g.\r\n         * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\r\n         * will be changed to\r\n         * <img src='sun.png'/>\r\n         */\r\n        this.reportItem.content.content = this.ConfigService.removeAbsoluteAssetPaths(this.reportItemContent);\r\n    }\r\n\r\n    /**\r\n     * Print the selected report\r\n     */\r\n    print() {\r\n        // get the report content\r\n        let content = this.reportItem.content.content;\r\n\r\n        // create the window string\r\n        let windowString =\r\n            \"<html>\" +\r\n                \"<head>\" +\r\n                    \"<link rel='stylesheet' href='../wise5/lib/bootstrap/css/bootstrap.min.css'>\" +\r\n                    \"<link rel='stylesheet' href='../wise5/themes/default/style/monitor.css'>\" +\r\n                    \"<link rel='stylesheet' href='../wise5/themes/default/style/angular-material.css'>\" +\r\n                    \"<link rel='stylesheet' href='../wise5/lib/summernote/dist/summernote.css'>\" +\r\n                    \"<script>window.addEventListener('load', function() { window.print(); window.close(); });</script>\" +\r\n                \"</html>\" +\r\n                \"<body style='background-color: #ffffff;'>\" +\r\n                    \"<div class='md-padding'>\" + content + \"</div>\" +\r\n                \"</body>\" +\r\n            \"</html>\";\r\n\r\n        // open a new window\r\n        let w = window.open('', '');\r\n\r\n        // write the report content to the new window and close\r\n        w.document.write(windowString);\r\n        w.document.close();\r\n    }\r\n}\r\n\r\nNotebookItemReportController.$inject = [\r\n    \"$injector\",\r\n    '$mdBottomSheet',\r\n    \"$rootScope\",\r\n    \"$scope\",\r\n    \"$filter\",\r\n    \"ConfigService\",\r\n    \"NotebookService\",\r\n    \"ProjectService\",\r\n    \"StudentAssetService\",\r\n    \"StudentDataService\"\r\n];\r\n\r\nexport default NotebookItemReportController;\r\n"]}