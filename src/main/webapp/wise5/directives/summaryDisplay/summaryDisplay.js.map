{"version":3,"sources":["summaryDisplay.es6"],"names":["SummaryDisplayController","$injector","$q","ConfigService","ProjectService","dataService","mode","getMode","isPreview","get","renderDisplay","$onChanges","changes","summaryComponent","getComponentByNodeIdAndComponentId","nodeId","componentId","getComponentStates","periodId","then","componentStates","processComponentStates","clearChartConfig","chartConfig","options","legend","enabled","exporting","credits","getClassmateStudentWorkForPreview","getClassmateStudentWork","retrieveStudentDataByNodeIdAndComponentIdAndPeriodId","createDummyClassmateStudentWork","componentState","getLatestComponentStateByNodeIdAndComponentId","push","deferred","defer","setTimeout","resolve","promise","component","choices","dummyComponentStates","dummyCounter","createDummyComponentState","studentData","studentChoices","id","getRandomChoice","Math","floor","random","length","summaryData","createSummaryData","createSeriesData","data","total","series","createSeries","chartType","title","xAxisType","createChartConfig","choice","createChoiceSummaryData","text","isCorrect","addComponentStateDataToSummaryData","count","incrementSummaryData","chart","type","tooltip","formatter","s","point","key","round","y","xAxis","hasCorrectness","hasCorrectAnswer","getSummaryDataCount","color","getDataPointColor","dataPoint","createDataPoint","name","dataLabels","$inject","SummaryDisplay","bindings","templateUrl","controller","controllerAs"],"mappings":"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","sourcesContent":["'use strict';\n\nclass SummaryDisplayController {\n  constructor($injector,\n      $q,\n      ConfigService,\n      ProjectService) {\n    this.$injector = $injector;\n    this.$q = $q;\n    this.ConfigService = ConfigService;\n    this.ProjectService = ProjectService;\n    this.dataService = null;\n    const mode = this.ConfigService.getMode();\n    if (this.ConfigService.isPreview() || mode === 'studentRun') {\n      this.dataService = this.$injector.get('StudentDataService');\n    } else if (mode === 'classroomMonitor' || mode === 'author') {\n      this.dataService = this.$injector.get('TeacherDataService'); \n    }\n    this.renderDisplay();\n    this.$onChanges = (changes) => {\n      this.renderDisplay();\n    }\n  }\n\n  renderDisplay() {\n    const summaryComponent = \n        this.ProjectService.getComponentByNodeIdAndComponentId(this.nodeId, this.componentId);\n    if (summaryComponent != null) {\n      this.getComponentStates(this.nodeId, this.componentId, this.periodId)\n          .then((componentStates) => {\n        this.processComponentStates(componentStates);\n      });\n    } else {\n      this.clearChartConfig();\n    }\n  }\n\n  clearChartConfig() {\n    this.chartConfig = {\n      options: {\n        legend: {\n          enabled: false\n        },\n        exporting: {\n          enabled: false\n        },\n        credits: {\n          enabled: false\n        }\n      }\n    };\n  }\n\n  getComponentStates(nodeId, componentId, periodId) {\n    if (this.ConfigService.isPreview() || this.ConfigService.getMode() === 'author') {\n      return this.getClassmateStudentWorkForPreview(nodeId, componentId);\n    } else if (this.ConfigService.getMode() === 'studentRun') {\n      return this.dataService.getClassmateStudentWork(nodeId, componentId, periodId);\n    } else if (this.ConfigService.getMode() === 'classroomMonitor') {\n      return this.dataService.retrieveStudentDataByNodeIdAndComponentIdAndPeriodId(\n          nodeId, componentId, periodId);\n    }\n  }\n\n  getClassmateStudentWorkForPreview(nodeId, componentId) {\n    const componentStates = this.createDummyClassmateStudentWork();\n    if (this.ConfigService.isPreview()) {\n      const componentState = this.dataService\n          .getLatestComponentStateByNodeIdAndComponentId(nodeId, componentId);\n      if (componentState != null) {\n        componentStates.push(componentState);\n      }\n    }\n    // We need to set a delay otherwise the graph won't render properly\n    const deferred = this.$q.defer();\n    setTimeout(function() {\n      deferred.resolve(componentStates);\n    }, 1);\n    return deferred.promise;\n  }\n\n  createDummyClassmateStudentWork() {\n    const component = this.ProjectService.getComponentByNodeIdAndComponentId(\n        this.nodeId, this.componentId);\n    const choices = component.choices;\n    const dummyComponentStates = [];\n    for (let dummyCounter = 0; dummyCounter < 10; dummyCounter++) {\n      dummyComponentStates.push(this.createDummyComponentState(choices));\n    }\n    return dummyComponentStates;\n  }\n\n  createDummyComponentState(choices) {\n    return {\n      studentData: {\n        studentChoices: [\n          { id: this.getRandomChoice(choices).id }\n        ]\n      }\n    }; \n  }\n  \n  getRandomChoice(choices) {\n    return choices[Math.floor(Math.random() * choices.length)];\n  }\n\n  processComponentStates(componentStates) {\n    const component = this.ProjectService.getComponentByNodeIdAndComponentId(\n        this.nodeId, this.componentId);\n    const summaryData = this.createSummaryData(component, componentStates);\n    const { data, total } = this.createSeriesData(component, summaryData);\n    const series = this.createSeries(data);\n    const chartType = 'column';\n    const title = 'Class Results';\n    const xAxisType = 'category';\n    this.chartConfig =  this.createChartConfig(chartType, title, xAxisType, total, series);\n  }\n\n  createSummaryData(component, componentStates) {\n    const summaryData = {};\n    for (const choice of component.choices) {\n      summaryData[choice.id] = this.createChoiceSummaryData(\n          choice.id, choice.text, choice.isCorrect);\n    }\n    for (const componentState of componentStates) {\n      this.addComponentStateDataToSummaryData(summaryData, componentState);\n    }\n    return summaryData;\n  }\n\n  createChoiceSummaryData(id, text, isCorrect) {\n    return {\n      id: id,\n      text: text,\n      isCorrect: isCorrect,\n      count: 0\n    };\n  }\n\n  addComponentStateDataToSummaryData(summaryData, componentState) {\n    for (const choice of componentState.studentData.studentChoices) {\n      this.incrementSummaryData(summaryData, choice.id);\n    }\n  }\n\n  incrementSummaryData(summaryData, id) {\n    summaryData[id].count += 1;\n  }\n\n  getSummaryDataCount(summaryData, id) {\n    return summaryData[id].count;\n  }\n\n  createChartConfig(chartType, title, xAxisType, total, series) {\n    return {\n      options: {\n        chart: {\n          type: chartType\n        },\n        legend: {\n          enabled: false\n        },\n        tooltip: {\n          formatter: function(s, point) {\n            return this.key + ': ' + Math.round(100 * this.y / total) + '%';\n          }\n        },\n        exporting: {\n          enabled: false\n        },\n        credits: {\n          enabled: false\n        }\n      },\n      title: {\n        text: title\n      },\n      xAxis: {\n        type: xAxisType\n      },\n      series: series\n    };\n  }\n\n  hasCorrectAnswer(component) {\n    for (const choice of component.choices) {\n      if (choice.isCorrect) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  createSeriesData(component, summaryData) {\n    const data = [];\n    let total = 0;\n    const hasCorrectness = this.hasCorrectAnswer(component);\n    for (const choice of component.choices) {\n      const count = this.getSummaryDataCount(summaryData, choice.id);\n      total += count;\n      const color = this.getDataPointColor(choice, hasCorrectness);\n      const dataPoint = this.createDataPoint(choice.text, count, color);\n      data.push(dataPoint);\n    }\n    return { data: data, total: total };\n  }\n\n  getDataPointColor(choice, hasCorrectness) {\n    let color = null;\n    if (hasCorrectness) {\n      if (choice.isCorrect) {\n        color = 'green';\n      } else {\n        color = 'red';\n      }\n    }\n    return color;\n  }\n  \n  createDataPoint(name, y, color) {\n    return {\n      name: name,\n      y: y,\n      color: color\n    };\n  }\n\n  createSeries(data) {\n    return [{\n      data: data,\n      dataLabels: {\n        enabled: true\n      }\n    }];\n  }\n}\n\nSummaryDisplayController.$inject = [\n  '$injector',\n  '$q',\n  'ConfigService',\n  'ProjectService',\n  'StudentDataService'\n];\n\nconst SummaryDisplay = {\n  bindings: {\n    nodeId: '<',\n    componentId: '<',\n    periodId: '<'\n  },\n  templateUrl: 'wise5/directives/summaryDisplay/summaryDisplay.html',\n  controller: SummaryDisplayController,\n  controllerAs: 'summaryDisplayCtrl'\n}\n\nexport default SummaryDisplay;"],"file":"summaryDisplay.js"}