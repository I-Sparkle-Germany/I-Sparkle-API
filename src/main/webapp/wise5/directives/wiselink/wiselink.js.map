{"version":3,"sources":["wiselink.es6"],"names":["WiselinkController","$scope","StudentDataService","$timeout","componentElement","$","componentId","originalBg","css","animate","scrollTop","prop","transition","currentNode","getCurrentNode","id","nodeId","scrollAndHighlightComponent","$on","event","args","endCurrentNodeAndSetCurrentNodeByNodeId","$inject","Wiselink","bindings","linkText","tooltip","linkClass","type","templateUrl","controller","controllerAs"],"mappings":"AAAA;;;;;;;;;;IAEMA,kB;AACF,gCAAYC,MAAZ,EACYC,kBADZ,EAEYC,QAFZ,EAEsB;AAAA;;AAClB,aAAKF,MAAL,GAAcA,MAAd;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;sDAE6B;AAAA;;AAC1B,iBAAKA,QAAL,CAAc,YAAM;AAChB,oBAAIC,mBAAmBC,EAAE,MAAM,MAAKC,WAAb,CAAvB;AACA,oBAAIC,aAAaH,iBAAiBI,GAAjB,CAAqB,iBAArB,CAAjB,CAFgB,CAE2C;AAC3DJ,iCAAiBI,GAAjB,CAAqB,kBAArB,EAAyC,SAAzC,EAHgB,CAGsC;;AAEtD;AACAH,kBAAE,UAAF,EAAcI,OAAd,CAAsB;AAClBC,+BAAWN,iBAAiBO,IAAjB,CAAsB,WAAtB;AADO,iBAAtB,EAEG,IAFH;;AAIA;AACAP,iCAAiBI,GAAjB,CAAqB;AACjBI,gCAAY,iCADK;AAEjB,wCAAoBL;AAFH,iBAArB;;AAKA;AACA,sBAAKJ,QAAL,CAAc,YAAM;AACjBC,qCAAiBI,GAAjB,CAAqB,YAArB,EAAmC,EAAnC;AACF,iBAFD,EAEG,IAFH;AAGH,aApBD,EAoBG,GApBH;AAqBH;;;iCAEQ;AAAA;;AACL,gBAAIK,cAAc,KAAKX,kBAAL,CAAwBY,cAAxB,EAAlB;AACA,gBAAID,eAAe,IAAf,IAAuBA,YAAYE,EAAZ,KAAmB,KAAKC,MAA/C,IAAyD,KAAKV,WAAL,IAAoB,IAAjF,EAAuF;AACnF;AACA,qBAAKW,2BAAL;AACH,aAHD,MAGO;AACH,qBAAKhB,MAAL,CAAYiB,GAAZ,CAAgB,oBAAhB,EAAsC,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACnD,wBAAIP,cAAc,OAAKX,kBAAL,CAAwBY,cAAxB,EAAlB;;AAEA;AACA,wBAAI,OAAKR,WAAL,IAAoB,IAApB,IAA4BO,eAAe,IAA3C,IAAmDA,YAAYE,EAAZ,KAAmB,OAAKC,MAA/E,EAAuF;AACnF,+BAAKC,2BAAL;AACH;AACJ,iBAPD;AAQA,qBAAKf,kBAAL,CAAwBmB,uCAAxB,CAAgE,KAAKL,MAArE;AACH;AACJ;;;;;;AAGLhB,mBAAmBsB,OAAnB,GAA6B,CAAC,QAAD,EAAW,oBAAX,EAAiC,UAAjC,CAA7B;;AAEA;;;;AAIA,IAAMC,WAAW;AACbC,cAAU;AACNR,gBAAQ,GADF;AAENV,qBAAa,GAFP;AAGNmB,kBAAU,GAHJ;AAINC,iBAAS,GAJH;AAKNC,mBAAW,GALL;AAMNC,cAAM;AANA,KADG;AASbC,iBAAa,yCATA;AAUbC,gBAAY9B,kBAVC;AAWb+B,kBAAc;AAXD,CAAjB;;kBAceR,Q","file":"wiselink.js","sourcesContent":["'use strict';\n\nclass WiselinkController {\n    constructor($scope,\n                StudentDataService,\n                $timeout) {\n        this.$scope = $scope;\n        this.StudentDataService = StudentDataService;\n        this.$timeout = $timeout;\n    }\n\n    scrollAndHighlightComponent() {\n        this.$timeout(() => {\n            let componentElement = $(\"#\" + this.componentId);\n            let originalBg = componentElement.css(\"backgroundColor\");  // save the original background image\n            componentElement.css(\"background-color\", \"#FFFF9C\");  // highlight the background briefly to draw attention to it\n\n            // scroll to the component\n            $('#content').animate({\n                scrollTop: componentElement.prop(\"offsetTop\")\n            }, 1000);\n\n            // slowly fade back to original background color\n            componentElement.css({\n                transition: 'background-color 3s ease-in-out',\n                \"background-color\": originalBg\n            });\n\n            // we need this to remove the transition animation so the highlight works again next time\n            this.$timeout(() => {\n               componentElement.css(\"transition\", \"\");\n            }, 4000);\n        }, 500);\n    }\n\n    follow() {\n        let currentNode = this.StudentDataService.getCurrentNode();\n        if (currentNode != null && currentNode.id === this.nodeId && this.componentId != null) {\n            // this is a link to the component in this current step\n            this.scrollAndHighlightComponent();\n        } else {\n            this.$scope.$on('currentNodeChanged', (event, args) => {\n                let currentNode = this.StudentDataService.getCurrentNode();\n\n                // if componentId is also specified in this wiselink, scroll to it\n                if (this.componentId != null && currentNode != null && currentNode.id === this.nodeId) {\n                    this.scrollAndHighlightComponent();\n                }\n            });\n            this.StudentDataService.endCurrentNodeAndSetCurrentNodeByNodeId(this.nodeId);\n        }\n    }\n}\n\nWiselinkController.$inject = ['$scope', 'StudentDataService', '$timeout'];\n\n/**\n * Creates a link or button that the student can click on to navigate to\n * another step or activity in the project.\n */\nconst Wiselink = {\n    bindings: {\n        nodeId: '@',\n        componentId: '@',\n        linkText: '@',\n        tooltip: '@',\n        linkClass: '@',\n        type: '@'\n    },\n    templateUrl: 'wise5/directives/wiselink/wiselink.html',\n    controller: WiselinkController,\n    controllerAs: 'wiselinkCtrl'\n};\n\nexport default Wiselink;\n"]}