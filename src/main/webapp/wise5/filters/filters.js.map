{"version":3,"sources":["filters.es6"],"names":["Filters","angular","module","filter","$sce","htmlCode","trustAsHtml","bytes","roundToDecimal","num","decimal","rounder","Math","pow","round"],"mappings":"AAAA;;;;;AAEA,IAAIA,UAAUC,QAAQC,MAAR,CAAe,SAAf,EAA0B,EAA1B,EACTC,MADS,CACF,cADE,EACc,CAAC,MAAD,EAAS,UAASC,IAAT,EAAe;AAC5C,WAAO,UAASC,QAAT,EAAmB;AACtB,eAAOD,KAAKE,WAAL,CAAiBD,QAAjB,CAAP;AACH,KAFD;AAGH,CAJuB,CADd,EAOTF,MAPS,CAOF,qBAPE,EAOqB,YAAW;AACtC;;;;AAIA,WAAO,UAASI,KAAT,EAAgB;AACnB;;;;;AAKA,YAAIC,iBAAiB,SAAjBA,cAAiB,CAASC,GAAT,EAAcC,OAAd,EAAuB;AACxC,gBAAIC,UAAU,CAAd;AACA,gBAAID,OAAJ,EAAa;AACTC,0BAAUC,KAAKC,GAAL,CAAS,EAAT,EAAaH,OAAb,CAAV;AACH;;AAED,mBAAOE,KAAKE,KAAL,CAAWL,MAAIE,OAAf,IAA0BA,OAAjC;AACH,SAPD;;AASA,YAAIJ,QAAQ,OAAZ,EAAqB;AACjB,mBAAOC,eAAiBD,QAAM,IAAP,GAAe,IAA/B,EAAsC,CAAtC,IAA2C,KAAlD;AACH,SAFD,MAEO,IAAIA,QAAQ,IAAZ,EAAkB;AACrB,mBAAOC,eAAgBD,QAAM,IAAtB,EAA6B,CAA7B,IAAkC,KAAzC;AACH,SAFM,MAEA;AACH,mBAAOA,QAAQ,IAAf;AACH;AACJ,KAtBD;AAuBH,CAnCS;;AAqCV;;;;;AArCU,CA0CTJ,MA1CS,CA0CF,gBA1CE,EA0CgB,YAAW;;AAEjC,WAAO,UAASM,GAAT,EAAcC,OAAd,EAAuB;AAC1B,YAAIC,UAAU,CAAd;AACA,YAAID,OAAJ,EAAa;AACTC,sBAAUC,KAAKC,GAAL,CAAS,EAAT,EAAaH,OAAb,CAAV;AACH;;AAED,eAAOE,KAAKE,KAAL,CAAWL,MAAIE,OAAf,IAA0BA,OAAjC;AACH,KAPD;AAQH,CApDS,CAAd;;kBAsDeX,O","file":"filters.js","sourcesContent":["'use strict';\n\nlet Filters = angular.module('filters', [])\n    .filter('sanitizeHTML', ['$sce', function($sce) {\n        return function(htmlCode) {\n            return $sce.trustAsHtml(htmlCode);\n        };\n    }])\n\n    .filter('appropriateSizeText', function() {\n        /**\n         * Given a string of a number of bytes, returns a string of the size\n         * in either: bytes, kilobytes or megabytes depending on the size.\n         */\n        return function(bytes) {\n            /**\n             * Returns the given number @param num to the nearest\n             * given decimal place @param decimal. (e.g if called\n             * roundToDecimal(4.556, 1) it will return 4.6.\n             */\n            var roundToDecimal = function(num, decimal) {\n                var rounder = 1;\n                if (decimal) {\n                    rounder = Math.pow(10, decimal);\n                };\n\n                return Math.round(num*rounder) / rounder;\n            };\n\n            if (bytes > 1048576) {\n                return roundToDecimal(((bytes/1024) / 1024), 1) + ' mb';\n            } else if (bytes > 1024) {\n                return roundToDecimal((bytes/1024), 1) + ' kb';\n            } else {\n                return bytes + ' b';\n            };\n        };\n    })\n\n    /**\n     * Returns the given number @param num to the nearest\n     * given decimal place @param decimal. (e.g if called\n     * roundToDecimal(4.556, 1) it will return 4.6.\n     */\n    .filter('roundToDecimal', function() {\n\n        return function(num, decimal) {\n            var rounder = 1;\n            if (decimal) {\n                rounder = Math.pow(10, decimal);\n            };\n\n            return Math.round(num*rounder) / rounder;\n        };\n    });\n\nexport default Filters;"]}