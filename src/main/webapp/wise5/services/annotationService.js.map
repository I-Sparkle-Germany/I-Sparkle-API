{"version":3,"sources":["annotationService.es6"],"names":[],"mappings":"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","file":"annotationService.js","sourcesContent":["'use strict';\n\nclass AnnotationService {\n    constructor($http, $rootScope, ConfigService, UtilService) {\n        this.$http = $http;\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n        this.UtilService = UtilService;\n\n        this.annotations = null;\n    }\n\n    /**\n     * Get the latest annotation with the given params\n     * @param params an object containing the params to match\n     * @returns the latest annotation that matches the params\n     */\n    getLatestAnnotation(params) {\n        var annotation = null;\n\n        if (params != null) {\n            var nodeId = params.nodeId;\n            var componentId = params.componentId;\n            var fromWorkgroupId = params.fromWorkgroupId;\n            var toWorkgroupId = params.toWorkgroupId;\n            var type = params.type;\n\n            var annotations = this.annotations;\n\n            if (annotations != null) {\n                for (var a = annotations.length - 1; a >= 0; a--) {\n                    var tempAnnotation = annotations[a];\n\n                    if (tempAnnotation != null) {\n\n                        if (tempAnnotation.nodeId === nodeId &&\n                            tempAnnotation.componentId === componentId &&\n                            tempAnnotation.fromWorkgroupId === fromWorkgroupId &&\n                            tempAnnotation.toWorkgroupId === toWorkgroupId &&\n                            tempAnnotation.type === type) {\n\n                            annotation = tempAnnotation;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return annotation;\n    };\n\n    /**\n     * Create an annotation object\n     * @param annotationId the annotation id\n     * @param runId the run id\n     * @param periodId the period id\n     * @param fromWorkgroupId the from workgroup id\n     * @param toWorkgroupId the to workgroup id\n     * @param nodeId the node id\n     * @param componentId the component id\n     * @param studentWorkId the student work id\n     * @param annotationType the annotation type\n     * @param data the data\n     * @param clientSaveTime the client save time\n     * @returns an annotation object\n     */\n    createAnnotation(\n        annotationId, runId, periodId, fromWorkgroupId, toWorkgroupId,\n        nodeId, componentId, studentWorkId,\n        annotationType, data, clientSaveTime) {\n\n        var annotation = {};\n        annotation.id = annotationId;\n        annotation.runId = runId;\n        annotation.periodId = periodId;\n        annotation.fromWorkgroupId = fromWorkgroupId;\n        annotation.toWorkgroupId = toWorkgroupId;\n        annotation.nodeId = nodeId;\n        annotation.componentId = componentId;\n        annotation.studentWorkId = studentWorkId;\n        annotation.type = annotationType;\n        annotation.data = data;\n        annotation.clientSaveTime = clientSaveTime;\n\n        return annotation;\n    };\n\n    /**\n     * Save the annotation to the server\n     * @param annotation the annotation object\n     * @returns a promise\n     */\n    saveAnnotation(annotation) {\n\n        if (annotation != null) {\n            var annotations = [];\n            annotations.push(annotation);\n\n            // loop through all the annotations and inject a request token\n            if (annotations != null && annotations.length > 0) {\n                for (var a = 0; a < annotations.length; a++) {\n                    var annotation = annotations[a];\n\n                    if (annotation != null) {\n                        annotation.requestToken = this.UtilService.generateKey(); // use this to keep track of unsaved annotations.\n                        this.addOrUpdateAnnotation(annotation);\n                    }\n                }\n            } else {\n                annotations = [];\n            }\n\n            var params = {};\n            params.runId = this.ConfigService.getRunId();\n            params.workgroupId = this.ConfigService.getWorkgroupId();\n            params.annotations = angular.toJson(annotations);\n\n            var httpParams = {};\n            httpParams.method = 'POST';\n            httpParams.url = this.ConfigService.getConfigParam('teacherDataURL');\n            httpParams.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            httpParams.data = $.param(params);\n\n            return this.$http(httpParams).then(angular.bind(this, function(result) {\n\n                var localAnnotation = null;\n\n                if (result != null && result.data != null) {\n                    var data = result.data;\n\n                    if (data != null) {\n\n                        // get the saved annotations\n                        var savedAnnotations = data.annotations;\n\n                        // get the local annotations\n                        var localAnnotations = this.annotations;\n\n                        if (savedAnnotations != null && localAnnotations != null) {\n\n                            // loop through all the saved annotations\n                            for (var x = 0; x < savedAnnotations.length; x++) {\n                                var savedAnnotation = savedAnnotations[x];\n\n                                // loop through all the local annotations\n                                for (var y = localAnnotations.length - 1; y >= 0; y--) {\n                                    localAnnotation = localAnnotations[y];\n\n                                    if (localAnnotation.requestToken != null &&\n                                        localAnnotation.requestToken === savedAnnotation.requestToken) {\n\n                                        // we have found the matching local annotation so we will update it\n                                        localAnnotation.id = savedAnnotation.id;\n                                        localAnnotation.serverSaveTime = savedAnnotation.serverSaveTime;\n                                        localAnnotation.requestToken = null; // requestToken is no longer needed.\n\n                                        this.$rootScope.$broadcast('annotationSavedToServer', {annotation: localAnnotation});\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                return localAnnotation;\n            }));\n        }\n    };\n\n    /**\n     * Add or update the annotation to our local collection\n     * @param annotation the annotation object\n     */\n    addOrUpdateAnnotation(annotation) {\n\n        if (annotation != null) {\n\n            var updated = false;\n\n            var annotations = this.annotations;\n\n            if (annotations != null) {\n\n                // loop through all the local annotations\n                for (var a = annotations.length - 1; a >= 0; a--) {\n                    var tempAnnotation = annotations[a];\n\n                    if (tempAnnotation != null) {\n\n                        if (annotation.id == tempAnnotation.id &&\n                            annotation.nodeId == tempAnnotation.nodeId &&\n                            annotation.componentId == tempAnnotation.componentId &&\n                            annotation.fromWorkgroupId == tempAnnotation.fromWorkgroupId &&\n                            annotation.toWorkgroupId == tempAnnotation.toWorkgroupId &&\n                            annotation.type == tempAnnotation.type &&\n                            annotation.studentWorkId == tempAnnotation.studentWorkId &&\n                            annotation.runId == tempAnnotation.runId &&\n                            annotation.periodId == tempAnnotation.periodId) {\n\n                            // the annotation matches so we will update it\n                            tempAnnotation.data = annotation.data;\n                            tempAnnotation.clientSaveTime = annotation.clientSaveTime;\n                            tempAnnotation.serverSaveTime = annotation.serverSaveTime;\n                        }\n                    }\n                }\n            }\n\n            if (!updated) {\n                // we did not find a match so we will add it\n                annotations.push(annotation);\n            }\n        }\n    };\n\n    /**\n     * Set the annotations\n     * @param annotations the annotations aray\n     */\n    setAnnotations(annotations) {\n        this.annotations = annotations;\n    };\n}\n\nAnnotationService.$inject = ['$http', '$rootScope', 'ConfigService', 'UtilService'];\n\nexport default AnnotationService;\n"]}