{"version":3,"sources":["authorWebSocketService.es6"],"names":["AuthorWebSocketService","$rootScope","$websocket","ConfigService","dataStream","webSocketURL","getWebSocketURL","onMessage","message","handleMessage","data","JSON","parse","messageType","$broadcast","currentAuthorsUsernames","messageJSON","send","$inject"],"mappings":";;;;;;;;;;IAAMA,sB;AACF,oCAAYC,UAAZ,EAAwBC,UAAxB,EAAoCC,aAApC,EAAmD;AAAA;;AAC/C,aAAKF,UAAL,GAAkBA,UAAlB;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKC,UAAL,GAAkB,IAAlB;AACH;;AAED;;;;;;;qCAGa;AAAA;;AACT;AACA,gBAAIC,eAAe,KAAKF,aAAL,CAAmBG,eAAnB,EAAnB;AACA,iBAAKF,UAAL,GAAkB,KAAKF,UAAL,CAAgBG,YAAhB,CAAlB;;AAEA;AACA,iBAAKD,UAAL,CAAgBG,SAAhB,CAA0B,UAACC,OAAD,EAAa;AACnC,sBAAKC,aAAL,CAAmBD,OAAnB;AACH,aAFD;AAGH;;;sCAEaA,O,EAAS;AACnB,gBAAIE,OAAOC,KAAKC,KAAL,CAAWJ,QAAQE,IAAnB,CAAX;AACA,gBAAIG,cAAcH,KAAKG,WAAvB;;AAEA,gBAAIA,gBAAgB,gBAApB,EAAsC;AAClC,qBAAKZ,UAAL,CAAgBa,UAAhB,CAA2B,wBAA3B,EAAqD,EAACC,yBAAyBL,KAAKK,uBAA/B,EAArD;AACH;AAEJ;;;oCAGWC,W,EAAa;AACrB;AACA,iBAAKZ,UAAL,CAAgBa,IAAhB,CAAqBD,WAArB;AACH;;;;;;AAGLhB,uBAAuBkB,OAAvB,GAAiC,CAC7B,YAD6B,EAE7B,YAF6B,EAG7B,eAH6B,CAAjC;;kBAMelB,sB","file":"authorWebSocketService.js","sourcesContent":["class AuthorWebSocketService {\n    constructor($rootScope, $websocket, ConfigService) {\n        this.$rootScope = $rootScope;\n        this.$websocket = $websocket;\n        this.ConfigService = ConfigService;\n        this.dataStream = null;\n    }\n\n    /**\n     * Initialize the websocket connection\n     */\n    initialize() {\n        // start the websocket connection\n        var webSocketURL = this.ConfigService.getWebSocketURL();\n        this.dataStream = this.$websocket(webSocketURL);\n\n        // this is the function that handles messages we receive from web sockets\n        this.dataStream.onMessage((message) => {\n            this.handleMessage(message);\n        });\n    };\n\n    handleMessage(message) {\n        let data = JSON.parse(message.data);\n        let messageType = data.messageType;\n\n        if (messageType === \"currentAuthors\") {\n            this.$rootScope.$broadcast('currentAuthorsReceived', {currentAuthorsUsernames: data.currentAuthorsUsernames});\n        }\n\n    };\n\n\n    sendMessage(messageJSON) {\n        // send the websocket message\n        this.dataStream.send(messageJSON);\n    }\n}\n\nAuthorWebSocketService.$inject = [\n    '$rootScope',\n    '$websocket',\n    'ConfigService'\n];\n\nexport default AuthorWebSocketService;\n"]}