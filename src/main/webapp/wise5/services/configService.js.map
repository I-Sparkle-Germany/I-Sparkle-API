{"version":3,"sources":["configService.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;;;IAEM;AAEF,aAFE,aAEF,CAAY,KAAZ,EAAmB,SAAnB,EAA8B;8BAF5B,eAE4B;;AAC1B,aAAK,KAAL,GAAa,KAAb,CAD0B;AAE1B,aAAK,SAAL,GAAiB,SAAjB,CAF0B;AAG1B,aAAK,MAAL,GAAc,IAAd,CAH0B;KAA9B;;iBAFE;;kCAQQ,QAAQ;AACd,iBAAK,MAAL,GAAc,MAAd,CADc;AAEd,iBAAK,0CAAL,GAFc;;;;uCAKH,WAAW;;;AACtB,mBAAO,KAAK,KAAL,CAAW,GAAX,CAAe,SAAf,EAA0B,IAA1B,CAA+B,UAAC,MAAD,EAAY;AAC9C,oBAAI,aAAa,OAAO,IAAP,CAD6B;;AAG9C,oBAAI,WAAW,kBAAX,IAAiC,IAAjC,EAAuC;;AAEvC,wBAAI,kBAAkB,IAAI,IAAJ,GAAW,OAAX,EAAlB;;;AAFmC,wBAKnC,kBAAkB,WAAW,kBAAX;;;AALiB,wBAQnC,gBAAgB,kBAAkB,eAAlB;;;AARmB,8BAWvC,CAAW,aAAX,GAA2B,aAA3B,CAXuC;iBAA3C;;AAcA,oBAAI,cAAc,IAAd;;;AAjB0C,oBAoB1C,SAAS,MAAK,SAAL,CAAe,QAAf;;;AApBiC,oBAuB1C,QAAQ,IAAI,MAAJ,CAAW,mBAAX,EAAgC,IAAhC,CAAR,CAvB0C;;AAyB9C,oBAAI,UAAU,IAAV,IAAkB,OAAO,KAAP,CAAa,KAAb,CAAlB,EAAuC;;AAEvC,kCAAc,KAAd,CAFuC;iBAA3C;;;AAzB8C,0BA+B9C,CAAW,WAAX,GAAyB,WAAzB,CA/B8C;;AAiC9C,sBAAK,SAAL,CAAe,UAAf,EAjC8C;;AAmC9C,oBAAI,MAAK,SAAL,EAAJ,EAAsB;;AAElB,wBAAI,aAAa,MAAK,aAAL,EAAb,CAFc;AAGlB,wBAAI,cAAc,IAAd,EAAoB;;AAEpB,mCAAW,WAAX,GAAyB,KAAK,KAAL,CAAW,MAAM,KAAK,MAAL,EAAN,CAAX,GAAkC,CAAlC,CAFL;qBAAxB;iBAHJ;;AASA,uBAAO,UAAP,CA5C8C;aAAZ,CAAtC,CADsB;;;;uCAiDX,WAAW;AACtB,gBAAI,KAAK,MAAL,KAAgB,IAAhB,EAAsB;AACtB,uBAAO,KAAK,MAAL,CAAY,SAAZ,CAAP,CADsB;aAA1B,MAEO;AACH,uBAAO,IAAP,CADG;aAFP;;;;8CAOkB;AAClB,mBAAO,KAAK,cAAL,CAAoB,kBAApB,CAAP,CADkB;;;;6CAID;AACjB,mBAAO,KAAK,cAAL,CAAoB,iBAApB,CAAP,CADiB;;;;6CAIA;AACjB,mBAAO,KAAK,cAAL,CAAoB,iBAApB,CAAP,CADiB;;;;mCAIV;AACP,mBAAO,KAAK,cAAL,CAAoB,OAApB,CAAP,CADO;;;;uCAII;AACX,mBAAO,KAAK,cAAL,CAAoB,WAApB,CAAP,CADW;;;;wCAIC;AACZ,mBAAO,KAAK,cAAL,CAAoB,YAApB,CAAP,CADY;;;;8CAIM;AAClB,mBAAO,KAAK,cAAL,CAAoB,kBAApB,CAAP,CADkB;;;;8CAIA;AAClB,mBAAO,KAAK,cAAL,CAAoB,kBAApB,CAAP,CADkB;;;;8CAIA;AAClB,mBAAO,KAAK,cAAL,CAAoB,kBAApB,CAAP,CADkB;;;;uDAIS;AAC3B,mBAAO,KAAK,cAAL,CAAoB,2BAApB,CAAP,CAD2B;;;;gDAIP;AACpB,mBAAO,KAAK,cAAL,CAAoB,oBAApB,CAAP,CADoB;;;;mDAIG;AACvB,mBAAO,KAAK,cAAL,CAAoB,uBAApB,CAAP,CADuB;;;;sCAIb;AACV,mBAAO,KAAK,cAAL,CAAoB,UAApB,CAAP,CADU;;;;0CAII;AACd,mBAAO,KAAK,cAAL,CAAoB,cAApB,CAAP,CADc;;;;yCAID;AACb,mBAAO,KAAK,cAAL,CAAoB,aAApB,CAAP,CADa;;;;oCAIL;AACR,mBAAO,KAAK,cAAL,CAAoB,QAApB,KAAiC,IAAjC,CADC;;;;kCAIF;AACN,mBAAO,KAAK,cAAL,CAAoB,MAApB,CAAP,CADM;;;;;;;;;sCAOI;AACV,gBAAI,WAAW,IAAX,CADM;AAEV,gBAAI,aAAa,KAAK,aAAL,EAAb,CAFM;AAGV,gBAAI,cAAc,IAAd,EAAoB;AACpB,2BAAW,WAAW,QAAX,CADS;aAAxB;AAGA,mBAAO,QAAP,CANU;;;;;;;;;;qCAaD;AACT,gBAAI,UAAU,EAAV,CADK;;AAGT,gBAAI,aAAa,KAAK,aAAL,EAAb,CAHK;AAIT,gBAAI,cAAc,IAAd,EAAoB;;AAEpB,oBAAI,cAAc,WAAW,WAAX,CAFE;AAGpB,oBAAI,eAAe,IAAf,EAAqB;;AAErB,wBAAI,YAAY,OAAZ,IAAuB,IAAvB,EAA6B;AAC7B,kCAAU,YAAY,OAAZ,CADmB;qBAAjC;iBAFJ;aAHJ;;AAWA,mBAAO,OAAP,CAfS;;;;yCAkBI;AACb,gBAAI,cAAc,IAAd,CADS;;AAGb,gBAAI,aAAa,KAAK,aAAL,EAAb,CAHS;AAIb,gBAAI,cAAc,IAAd,EAAoB;AACpB,8BAAc,WAAW,WAAX,CADM;aAAxB;;AAIA,mBAAO,WAAP,CARa;;;;wCAWD;AACZ,gBAAI,aAAa,IAAb,CADQ;;AAGZ,gBAAI,WAAW,KAAK,WAAL,EAAX,CAHQ;AAIZ,gBAAI,YAAY,IAAZ,EAAkB;AAClB,6BAAa,SAAS,UAAT,CADK;aAAtB;;AAIA,mBAAO,UAAP,CARY;;;;gDAWQ;AACpB,gBAAI,qBAAqB,IAArB,CADgB;AAEpB,gBAAI,aAAa,KAAK,aAAL,EAAb,CAFgB;AAGpB,gBAAI,cAAc,IAAd,EAAoB;AACpB,oBAAI,cAAc,WAAW,WAAX,CADE;AAEpB,oBAAI,eAAe,IAAf,EAAqB;AACrB,yCAAqB,YAAY,kBAAZ,CADA;iBAAzB;aAFJ;;AAOA,mBAAO,kBAAP,CAVoB;;;;gDAaA;AACpB,gBAAI,qBAAqB,IAArB,CADgB;AAEpB,gBAAI,kBAAkB,KAAK,kBAAL,EAAlB,CAFgB;AAGpB,gBAAI,mBAAmB,IAAnB,EAAyB;AACzB,qCAAqB,gBAAgB,WAAhB,CADI;aAA7B;AAGA,mBAAO,kBAAP,CANoB;;;;6CASH;AACjB,gBAAI,kBAAkB,IAAlB,CADa;AAEjB,gBAAI,aAAa,KAAK,aAAL,EAAb,CAFa;AAGjB,gBAAI,cAAc,IAAd,EAAoB;AACpB,oBAAI,cAAc,WAAW,WAAX,CADE;AAEpB,oBAAI,eAAe,IAAf,EAAqB;AACrB,sCAAkB,YAAY,eAAZ,CADG;iBAAzB;aAFJ;AAMA,mBAAO,eAAP,CATiB;;;;;;;;;oDAeO;AACxB,gBAAI,yBAAyB,IAAzB,CADoB;AAExB,gBAAI,aAAa,KAAK,aAAL,EAAb,CAFoB;AAGxB,gBAAI,cAAc,IAAd,EAAoB;AACpB,oBAAI,cAAc,WAAW,WAAX,CADE;AAEpB,oBAAI,eAAe,IAAf,EAAqB;AACrB,6CAAyB,YAAY,sBAAZ,CADJ;iBAAzB;aAFJ;AAMA,mBAAO,sBAAP,CATwB;;;;iDAYH,aAAa;AAClC,gBAAI,eAAe,EAAf,CAD8B;;AAGlC,gBAAI,WAAJ,EAAiB;AACb,6BAAa,IAAb,CAAkB,KAAK,cAAL,EAAlB,EADa;aAAjB;;AAIA,gBAAI,qBAAqB,KAAK,qBAAL,EAArB,CAP8B;;AASlC,gBAAI,sBAAsB,IAAtB,EAA4B;AAC5B,qBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,mBAAmB,MAAnB,EAA2B,GAA/C,EAAoD;AAChD,wBAAI,oBAAoB,mBAAmB,CAAnB,CAApB,CAD4C;;AAGhD,wBAAI,qBAAqB,IAArB,EAA2B;AAC3B,4BAAI,cAAc,kBAAkB,WAAlB,CADS;;AAG3B,4BAAI,eAAe,IAAf,EAAqB;AACrB,yCAAa,IAAb,CAAkB,WAAlB,EADqB;yBAAzB;qBAHJ;iBAHJ;aADJ;;AAcA,mBAAO,YAAP,CAvBkC;;;;qEA0BO;AACzC,gBAAI,qBAAqB,KAAK,qBAAL,EAArB,CADqC;;AAGzC,gBAAI,sBAAsB,IAAtB,EAA4B;AAC5B,mCAAmB,IAAnB,CAAwB,KAAK,gDAAL,CAAxB,CAD4B;aAAhC;;AAIA,mBAAO,kBAAP,CAPyC;;;;yEAUI,GAAG,GAAG;AACnD,gBAAI,YAAY,EAAE,QAAF,CADmC;AAEnD,gBAAI,YAAY,EAAE,QAAF,CAFmC;AAGnD,gBAAI,SAAS,CAAT,CAH+C;;AAKnD,gBAAI,YAAY,SAAZ,EAAuB;AACvB,yBAAS,CAAC,CAAD,CADc;aAA3B,MAEO,IAAI,YAAY,SAAZ,EAAuB;AAC9B,yBAAS,CAAT,CAD8B;aAA3B;;AAIP,mBAAO,MAAP,CAXmD;;;;iDAc9B,aAAa;AAClC,gBAAI,WAAW,IAAX,CAD8B;;AAGlC,gBAAI,eAAe,IAAf,EAAqB;;AAErB,oBAAI,aAAa,KAAK,aAAL,EAAb,CAFiB;;AAIrB,oBAAI,cAAc,IAAd,EAAoB;AACpB,wBAAI,kBAAkB,WAAW,WAAX,CADF;;AAGpB,wBAAI,gBAAgB,eAAhB,EAAiC;AACjC,mCAAW,UAAX,CADiC;qBAArC;iBAHJ;;AAQA,oBAAI,YAAY,IAAZ,EAAkB;AAClB,wBAAI,qBAAqB,KAAK,qBAAL,EAArB,CADc;;AAGlB,wBAAI,sBAAsB,IAAtB,EAA4B;AAC5B,6BAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,mBAAmB,MAAnB,EAA2B,GAA/C,EAAoD;AAChD,gCAAI,oBAAoB,mBAAmB,CAAnB,CAApB,CAD4C;;AAGhD,gCAAI,qBAAqB,IAArB,EAA2B;AAC3B,oCAAI,kBAAkB,kBAAkB,WAAlB,CADK;;AAG3B,oCAAI,eAAe,eAAf,EAAgC;AAChC,+CAAW,iBAAX,CADgC;AAEhC,0CAFgC;iCAApC;6BAHJ;yBAHJ;qBADJ;iBAHJ;aAZJ;;AAgCA,mBAAO,QAAP,CAnCkC;;;;;;;;;;;iDA2Cb,aAAa;AAClC,gBAAI,WAAW,IAAX,CAD8B;;AAGlC,gBAAI,eAAe,IAAf,EAAqB;AACrB,oBAAI,WAAW,KAAK,wBAAL,CAA8B,WAA9B,CAAX,CADiB;;AAGrB,oBAAI,YAAY,IAAZ,EAAkB;AAClB,+BAAW,SAAS,QAAT,CADO;iBAAtB;aAHJ;;AAQA,mBAAO,QAAP,CAXkC;;;;;;;;;;;0DAmBJ,aAAa;AAC3C,gBAAI,eAAe,EAAf;;;AADuC,gBAIvC,YAAY,KAAK,wBAAL,CAA8B,WAA9B,CAAZ,CAJuC;;AAM3C,gBAAI,aAAa,IAAb,EAAmB;;AAEnB,oBAAI,iBAAiB,UAAU,KAAV,CAAgB,GAAhB,CAAjB,CAFe;;AAInB,oBAAI,kBAAkB,IAAlB,EAAwB;;AAExB,yBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,eAAe,MAAf,EAAuB,GAA3C,EAAgD;;AAE5C,4BAAI,WAAW,eAAe,CAAf,CAAX;;;AAFwC,4BAKxC,eAAe,SAAS,OAAT,CAAiB,GAAjB,CAAf;;;AALwC,4BAQxC,mBAAmB,SAAS,SAAT,CAAmB,CAAnB,EAAsB,YAAtB,CAAnB;;;AARwC,oCAW5C,CAAa,IAAb,CAAkB,gBAAlB,EAX4C;qBAAhD;iBAFJ;aAJJ;;AAsBA,mBAAO,YAAP,CA5B2C;;;;iDA+BtB,aAAa;AAClC,gBAAI,WAAW,IAAX,CAD8B;;AAGlC,gBAAI,eAAe,IAAf,EAAqB;AACrB,oBAAI,WAAW,KAAK,wBAAL,CAA8B,WAA9B,CAAX,CADiB;;AAGrB,oBAAI,YAAY,IAAZ,EAAkB;AAClB,+BAAW,SAAS,QAAT,CADO;iBAAtB;aAHJ;;AAQA,mBAAO,QAAP,CAXkC;;;;kDAcZ,aAAa;AACnC,gBAAI,mBAAmB,EAAnB,CAD+B;;AAGnC,gBAAI,eAAe,IAAf,EAAqB;AACrB,oBAAI,WAAW,KAAK,wBAAL,CAA8B,WAA9B,CAAX,CADiB;;AAGrB,oBAAI,YAAY,IAAZ,EAAkB;AAClB,wBAAI,YAAY,SAAS,QAAT,CAAkB,KAAlB,CAAwB,GAAxB,CAAZ,CADc;;AAGlB,yBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,UAAU,MAAV,EAAkB,GAAtC,EAA2C;AACvC,4BAAI,OAAO,UAAU,CAAV,CAAP,CADmC;AAEvC,4BAAI,KAAK,EAAL,CAFmC;AAGvC,4BAAI,QAAQ,gBAAR,CAHmC;AAIvC,4BAAI,UAAU,MAAM,IAAN,CAAW,IAAX,CAAV,CAJmC;AAKvC,4BAAI,OAAJ,EAAa;AACT,mCAAO,QAAQ,CAAR,CAAP,CADS;AAET,iCAAK,QAAQ,CAAR,CAAL,CAFS;yBAAb;AAIA,yCAAiB,IAAjB,CAAsB;AAClB,kCAAM,IAAN;AACA,gCAAI,EAAJ;yBAFJ,EATuC;qBAA3C;iBAHJ;aAHJ;;AAuBA,mBAAO,gBAAP,CA1BmC;;;;oCA6B3B;AACR,gBAAI,SAAS,KAAT,CADI;;AAGR,gBAAI,OAAO,KAAK,OAAL,EAAP,CAHI;;AAKR,gBAAI,QAAQ,IAAR,IAAgB,SAAS,SAAT,EAAoB;AACpC,yBAAS,IAAT,CADoC;aAAxC;;AAIA,mBAAO,MAAP,CATQ;;;;;;;;;;;iDAiBa,iBAAiB;;;AAGtC,gBAAI,gBAAgB,KAAK,cAAL,CAAoB,eAApB,CAAhB;;;AAHkC,gBAMlC,kBAAkB,kBAAkB,aAAlB,CANgB;;AAQtC,mBAAO,eAAP,CARsC;;;;;;;;;;;iDAgBjB,iBAAiB;;;AAGtC,gBAAI,gBAAgB,KAAK,cAAL,CAAoB,eAApB,CAAhB;;;AAHkC,gBAMlC,kBAAkB,kBAAkB,aAAlB,CANgB;;AAQtC,mBAAO,eAAP,CARsC;;;;;;;;;;;mCAgB/B,aAAa;;AAEpB,gBAAI,SAAS,KAAT,CAFgB;;AAIpB,gBAAI,eAAe,IAAf,EAAqB;AACrB,oBAAI,kBAAkB,KAAK,kBAAL,EAAlB,CADiB;;AAGrB,oBAAI,mBAAmB,IAAnB,EAAyB;;AAEzB,wBAAI,eAAe,gBAAgB,WAAhB,EAA6B;AAC5C,iCAAS,IAAT,CAD4C;qBAAhD;iBAFJ;aAHJ;;AAWA,mBAAO,MAAP,CAfoB;;;;;;;;;;;2CAuBL,aAAa;;AAE5B,gBAAI,SAAS,KAAT,CAFwB;;AAI5B,gBAAI,eAAe,IAAf,EAAqB;AACrB,oBAAI,yBAAyB,KAAK,yBAAL,EAAzB,CADiB;;AAGrB,oBAAI,0BAA0B,IAA1B,EAAgC;;AAEhC,yBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,uBAAuB,MAAvB,EAA+B,GAAnD,EAAwD;AACpD,4BAAI,wBAAwB,uBAAuB,CAAvB,CAAxB,CADgD;;AAGpD,4BAAI,yBAAyB,IAAzB,EAA+B;AAC/B,gCAAI,eAAe,sBAAsB,WAAtB,EAAmC;AAClD,yCAAS,IAAT,CADkD;6BAAtD;yBADJ;qBAHJ;iBAFJ;aAHJ;;AAiBA,mBAAO,MAAP,CArB4B;;;;;;;;;;;;uCA8BjB,aAAa;AACxB,gBAAI,OAAO,IAAP,CADoB;;AAGxB,gBAAI,KAAK,UAAL,CAAgB,WAAhB,CAAJ,EAAkC;;AAE9B,uBAAO,OAAP,CAF8B;aAAlC,MAGO,IAAI,KAAK,kBAAL,CAAwB,WAAxB,CAAJ,EAA0C;;AAE7C,uBAAO,KAAK,oBAAL,CAA0B,WAA1B,CAAP,CAF6C;aAA1C;;AAKP,mBAAO,IAAP,CAXwB;;;;;;;;;;;;6CAoBP,aAAa;AAC9B,gBAAI,OAAO,IAAP,CAD0B;;AAG9B,gBAAI,eAAe,IAAf,EAAqB;AACrB,oBAAI,yBAAyB,KAAK,yBAAL,EAAzB,CADiB;;AAGrB,oBAAI,0BAA0B,IAA1B,EAAgC;;AAEhC,yBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,uBAAuB,MAAvB,EAA+B,GAAnD,EAAwD;AACpD,4BAAI,wBAAwB,uBAAuB,CAAvB,CAAxB,CADgD;;AAGpD,4BAAI,yBAAyB,IAAzB,EAA+B;AAC/B,gCAAI,eAAe,sBAAsB,WAAtB,EAAmC;AAClD,uCAAO,sBAAsB,IAAtB,CAD2C;6BAAtD;yBADJ;qBAHJ;iBAFJ;aAHJ;;AAiBA,mBAAO,IAAP,CApB8B;;;;;;;;;;;;;4CA8Bd,SAAS;AACzB,gBAAI,WAAW,IAAX,EAAiB;;AAEjB,oBAAI,gBAAgB,OAAhB,CAFa;;AAIjB,oBAAI,QAAO,yDAAP,KAAmB,QAAnB,EAA6B;;AAE7B,oCAAgB,KAAK,SAAL,CAAe,OAAf,CAAhB,CAF6B;iBAAjC;;AAKA,oBAAI,iBAAiB,IAAjB,EAAuB;;;AAGvB,wBAAI,cAAc,KAAK,cAAL,EAAd;;;AAHmB,wBAMnB,aAAa,KAAK,iCAAL,CAAuC,WAAvC,CAAb,CANmB;;AAQvB,wBAAI,WAAW,MAAX,IAAqB,CAArB,EAAwB;;;;;;AAMxB,wCAAgB,cAAc,OAAd,CAAsB,IAAI,MAAJ,CAAW,2BAAX,EAAwC,IAAxC,CAAtB,EAAqE,WAAW,CAAX,CAArE,CAAhB;;;;;;AANwB,qCAYxB,GAAgB,cAAc,OAAd,CAAsB,IAAI,MAAJ,CAAW,uBAAX,EAAoC,IAApC,CAAtB,EAAiE,WAAW,IAAX,CAAgB,IAAhB,CAAjE,CAAhB,CAZwB;qBAA5B;;AAeA,wBAAI,WAAW,MAAX,IAAqB,CAArB,EAAwB;;;;;;AAMxB,wCAAgB,cAAc,OAAd,CAAsB,IAAI,MAAJ,CAAW,4BAAX,EAAyC,IAAzC,CAAtB,EAAsE,WAAW,CAAX,CAAtE,CAAhB,CANwB;qBAA5B;;AASA,wBAAI,WAAW,MAAX,IAAqB,CAArB,EAAwB;;;;;;AAMxB,wCAAgB,cAAc,OAAd,CAAsB,IAAI,MAAJ,CAAW,2BAAX,EAAwC,IAAxC,CAAtB,EAAqE,WAAW,CAAX,CAArE,CAAhB,CANwB;qBAA5B;iBAhCJ;;AA0CA,oBAAI,QAAO,yDAAP,KAAmB,QAAnB,EAA6B;;AAE7B,8BAAU,KAAK,KAAL,CAAW,aAAX,CAAV,CAF6B;iBAAjC,MAGO,IAAI,OAAO,OAAP,KAAmB,QAAnB,EAA6B;;AAEpC,8BAAU,aAAV,CAFoC;iBAAjC;aAtDX;;AA4DA,mBAAO,OAAP,CA7DyB;;;;WArkB3B;;;AAooBL;;AAED,cAAc,OAAd,GAAwB,CACpB,OADoB,EAEpB,WAFoB,CAAxB;;kBAKe","file":"configService.js","sourcesContent":["'use strict';\n\nclass ConfigService {\n\n    constructor($http, $location) {\n        this.$http = $http;\n        this.$location = $location;\n        this.config = null;\n    };\n\n    setConfig(config) {\n        this.config = config;\n        this.sortClassmateUserInfosAlphabeticallyByName();\n    };\n\n    retrieveConfig(configURL) {\n        return this.$http.get(configURL).then((result) => {\n            var configJSON = result.data;\n\n            if (configJSON.retrievalTimestamp != null) {\n                // get the client timestamp\n                var clientTimestamp = new Date().getTime();\n\n                // get the server timestamp\n                var serverTimestamp = configJSON.retrievalTimestamp;\n\n                // get the difference between the client and server time\n                var timestampDiff = clientTimestamp - serverTimestamp;\n\n                // add the timestamp diff to the config object\n                configJSON.timestampDiff = timestampDiff;\n            }\n            \n            var constraints = true;\n            \n            // get the full url\n            var absURL = this.$location.$$absUrl;\n            \n            // regex to match constraints=false in the url\n            var regEx = new RegExp(\"constraints=false\", 'gi');\n            \n            if (absURL != null && absURL.match(regEx)) {\n                // the url contains constraints=false\n                constraints = false;\n            }\n            \n            // set the constraints value into the config so we can access it later\n            configJSON.constraints = constraints;\n\n            this.setConfig(configJSON);\n\n            if (this.isPreview()) {\n                // assign a random workgroup id\n                var myUserInfo = this.getMyUserInfo();\n                if (myUserInfo != null) {\n                    // set the workgroup id to a random integer between 1 and 100\n                    myUserInfo.workgroupId = Math.floor(100 * Math.random()) + 1;\n                }\n            }\n\n            return configJSON;\n        });\n    };\n\n    getConfigParam(paramName) {\n        if (this.config !== null) {\n            return this.config[paramName];\n        } else {\n            return null;\n        }\n    };\n\n    getCRaterRequestURL() {\n        return this.getConfigParam('cRaterRequestURL');\n    };\n\n    getMainHomePageURL() {\n        return this.getConfigParam('mainHomePageURL');\n    };\n\n    getNotificationURL() {\n        return this.getConfigParam('notificationURL');\n    };\n\n    getRunId() {\n        return this.getConfigParam('runId');\n    };\n\n    getProjectId() {\n        return this.getConfigParam('projectId');\n    };\n\n    getOpenCPUURL() {\n        return this.getConfigParam('openCPUURL');\n    };\n\n    getSessionLogOutURL() {\n        return this.getConfigParam('sessionLogOutURL');\n    };\n\n    getStudentAssetsURL() {\n        return this.getConfigParam('studentAssetsURL');\n    };\n\n    getStudentStatusURL() {\n        return this.getConfigParam('studentStatusURL');\n    };\n\n    getStudentMaxTotalAssetsSize() {\n        return this.getConfigParam('studentMaxTotalAssetsSize');\n    };\n\n    getStudentNotebookURL() {\n        return this.getConfigParam('studentNotebookURL');\n    };\n\n    getStudentUploadsBaseURL() {\n        return this.getConfigParam('studentUploadsBaseURL');\n    };\n\n    getUserInfo() {\n        return this.getConfigParam('userInfo');\n    };\n\n    getWebSocketURL() {\n        return this.getConfigParam('webSocketURL');\n    };\n\n    getWISEBaseURL() {\n        return this.getConfigParam('wiseBaseURL');\n    };\n\n    getLocale() {\n        return this.getConfigParam('locale') || 'en';\n    };\n\n    getMode() {\n        return this.getConfigParam('mode');\n    };\n\n    /**\n     * Returns the period id of the logged-in user.\n     */\n    getPeriodId() {\n        var periodId = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            periodId = myUserInfo.periodId;\n        }\n        return periodId;\n    };\n\n    /**\n     * Get the periods\n     * @returns an array of period objects\n     */\n    getPeriods() {\n        var periods = [];\n\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n\n                if (myClassInfo.periods != null) {\n                    periods = myClassInfo.periods;\n                }\n            }\n        }\n\n        return periods;\n    };\n\n    getWorkgroupId() {\n        var workgroupId = null;\n\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            workgroupId = myUserInfo.workgroupId;\n        }\n\n        return workgroupId;\n    };\n\n    getMyUserInfo() {\n        var myUserInfo = null;\n\n        var userInfo = this.getUserInfo();\n        if (userInfo != null) {\n            myUserInfo = userInfo.myUserInfo;\n        }\n\n        return myUserInfo;\n    };\n\n    getClassmateUserInfos() {\n        var classmateUserInfos = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                classmateUserInfos = myClassInfo.classmateUserInfos;\n            }\n        }\n\n        return classmateUserInfos;\n    };\n\n    getTeacherWorkgroupId() {\n        var teacherWorkgroupId = null;\n        var teacherUserInfo = this.getTeacherUserInfo();\n        if (teacherUserInfo != null) {\n            teacherWorkgroupId = teacherUserInfo.workgroupId;\n        }\n        return teacherWorkgroupId;\n    };\n\n    getTeacherUserInfo() {\n        var teacherUserInfo = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                teacherUserInfo = myClassInfo.teacherUserInfo;\n            }\n        }\n        return teacherUserInfo;\n    };\n    \n    /**\n     * Get the shared teacher user infos for the run\n     */\n    getSharedTeacherUserInfos() {\n        var sharedTeacherUserInfos = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                sharedTeacherUserInfos = myClassInfo.sharedTeacherUserInfos;\n            }\n        }\n        return sharedTeacherUserInfos;\n    }\n\n    getClassmateWorkgroupIds(includeSelf) {\n        var workgroupIds = [];\n\n        if (includeSelf) {\n            workgroupIds.push(this.getWorkgroupId());\n        }\n\n        var classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos != null) {\n            for (var c = 0; c < classmateUserInfos.length; c++) {\n                var classmateUserInfo = classmateUserInfos[c];\n\n                if (classmateUserInfo != null) {\n                    var workgroupId = classmateUserInfo.workgroupId;\n\n                    if (workgroupId != null) {\n                        workgroupIds.push(workgroupId);\n                    }\n                }\n            }\n        }\n\n        return workgroupIds;\n    };\n\n    sortClassmateUserInfosAlphabeticallyByName() {\n        var classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos != null) {\n            classmateUserInfos.sort(this.sortClassmateUserInfosAlphabeticallyByNameHelper);\n        }\n\n        return classmateUserInfos;\n    };\n\n    sortClassmateUserInfosAlphabeticallyByNameHelper(a, b) {\n        var aUserName = a.userName;\n        var bUserName = b.userName;\n        var result = 0;\n\n        if (aUserName < bUserName) {\n            result = -1;\n        } else if (aUserName > bUserName) {\n            result = 1;\n        }\n\n        return result;\n    };\n\n    getUserInfoByWorkgroupId(workgroupId) {\n        var userInfo = null;\n\n        if (workgroupId != null) {\n\n            var myUserInfo = this.getMyUserInfo();\n\n            if (myUserInfo != null) {\n                var tempWorkgroupId = myUserInfo.workgroupId;\n\n                if (workgroupId === tempWorkgroupId) {\n                    userInfo = myUserInfo;\n                }\n            }\n\n            if (userInfo == null) {\n                var classmateUserInfos = this.getClassmateUserInfos();\n\n                if (classmateUserInfos != null) {\n                    for (var c = 0; c < classmateUserInfos.length; c++) {\n                        var classmateUserInfo = classmateUserInfos[c];\n\n                        if (classmateUserInfo != null) {\n                            var tempWorkgroupId = classmateUserInfo.workgroupId;\n\n                            if (workgroupId == tempWorkgroupId) {\n                                userInfo = classmateUserInfo;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return userInfo;\n    };\n\n    /**\n     * Get the period id for a workgroup id\n     * @param workgroupId the workgroup id\n     * @returns the period id the workgroup id is in\n     */\n    getPeriodIdByWorkgroupId(workgroupId) {\n        var periodId = null;\n\n        if (workgroupId != null) {\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                periodId = userInfo.periodId;\n            }\n        }\n\n        return periodId;\n    };\n\n    /**\n     * Get the student names\n     * @param workgroupId the workgroup id\n     * @return an array containing the student names\n     */\n    getStudentFirstNamesByWorkgroupId(workgroupId) {\n        var studentNames = [];\n\n        // get the user names for the workgroup e.g. \"Spongebob Squarepants (SpongebobS0101):Patrick Star (PatrickS0101)\"\n        var userNames = this.getUserNameByWorkgroupId(workgroupId);\n\n        if (userNames != null) {\n            // split the user names string by ':'\n            var userNamesSplit = userNames.split(':');\n\n            if (userNamesSplit != null) {\n                // loop through each user name\n                for (var x = 0; x < userNamesSplit.length; x++) {\n                    // get a user name e.g. \"Spongebob Squarepants (spongebobs0101)\"\n                    var userName = userNamesSplit[x];\n\n                    // get the index of the first empty space\n                    var indexOfSpace = userName.indexOf(' ');\n\n                    // get the student first name e.g. \"Spongebob\"\n                    var studentFirstName = userName.substring(0, indexOfSpace);\n\n                    // add the student name to the array\n                    studentNames.push(studentFirstName);\n                }\n            }\n        }\n\n        return studentNames;\n    };\n\n    getUserNameByWorkgroupId(workgroupId) {\n        var userName = null;\n\n        if (workgroupId != null) {\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                userName = userInfo.userName;\n            }\n        }\n\n        return userName;\n    };\n\n    getUserNamesByWorkgroupId(workgroupId) {\n        let userNamesObjects = [];\n\n        if (workgroupId != null) {\n            let userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                let userNames = userInfo.userName.split(':');\n\n                for (let i = 0; i < userNames.length; i++) {\n                    let name = userNames[i];\n                    let id = \"\";\n                    let regex = /(.+) \\((.+)\\)/g;\n                    let matches = regex.exec(name);\n                    if (matches) {\n                        name = matches[1];\n                        id = matches[2];\n                    }\n                    userNamesObjects.push({\n                        name: name,\n                        id: id\n                    });\n                }\n            }\n        }\n\n        return userNamesObjects;\n    };\n\n    isPreview() {\n        var result = false;\n\n        var mode = this.getMode();\n\n        if (mode != null && mode === 'preview') {\n            result = true;\n        }\n\n        return result;\n    };\n\n    /**\n     * Convert a client timestamp to a server timestamp. This is required\n     * in case the client and server clocks are not synchronized.\n     * @param clientTimestamp the client timestamp\n     */\n    convertToServerTimestamp(clientTimestamp) {\n\n        // get the difference between the client time and server time\n        var timestampDiff = this.getConfigParam('timestampDiff');\n\n        // convert the client timestamp to a server timestamp\n        var serverTimestamp = clientTimestamp - timestampDiff;\n\n        return serverTimestamp;\n    }\n\n    /**\n     * Convert a server timestamp to a client timestamp. This is required\n     * in case the client and server clocks are not synchronized.\n     * @param serverTimestamp the client timestamp\n     */\n    convertToClientTimestamp(serverTimestamp) {\n\n        // get the difference between the client time and server time\n        var timestampDiff = this.getConfigParam('timestampDiff');\n\n        // convert the client timestamp to a server timestamp\n        var clientTimestamp = serverTimestamp + timestampDiff;\n\n        return clientTimestamp;\n    }\n    \n    /**\n     * Check if the workgroup is the owner of the run\n     * @param workgroupId the workgroup id\n     * @returns whether the workgroup is the owner of the run\n     */\n    isRunOwner(workgroupId) {\n        \n        var result = false;\n        \n        if (workgroupId != null) {\n            var teacherUserInfo = this.getTeacherUserInfo();\n            \n            if (teacherUserInfo != null) {\n                \n                if (workgroupId == teacherUserInfo.workgroupId) {\n                    result = true;\n                }\n            }\n        }\n        \n        return result;\n    }\n    \n    /**\n     * Check if the workgroup is a shared teacher for the run\n     * @param workgroupId the workgroup id\n     * @returns whether the workgroup is a shared teacher of the run\n     */\n    isRunSharedTeacher(workgroupId) {\n        \n        var result = false;\n        \n        if (workgroupId != null) {\n            var sharedTeacherUserInfos = this.getSharedTeacherUserInfos();\n            \n            if (sharedTeacherUserInfos != null) {\n                \n                for (var s = 0; s < sharedTeacherUserInfos.length; s++) {\n                    var sharedTeacherUserInfo = sharedTeacherUserInfos[s];\n                    \n                    if (sharedTeacherUserInfo != null) {\n                        if (workgroupId == sharedTeacherUserInfo.workgroupId) {\n                            result = true;\n                        }\n                    }\n                }\n            }\n        }\n        \n        return result;\n    }\n    \n    /**\n     * Get the teacher role for the run\n     * @param workgroupId the workgroup id\n     * @returns the role of the teacher for the run. the possible values are\n     * 'owner', 'write', 'read'\n     */\n    getTeacherRole(workgroupId) {\n        var role = null;\n        \n        if (this.isRunOwner(workgroupId)) {\n            // the teacher is the owner of the run\n            role = 'owner';\n        } else if (this.isRunSharedTeacher(workgroupId)) {\n            // the teacher is a shared teacher so their role may be 'write' or 'read'\n            role = this.getSharedTeacherRole(workgroupId);\n        }\n        \n        return role;\n    }\n    \n    /**\n     * Get the shared teacher role for the run\n     * @param workgroupId the workgroup id\n     * @returns the shared teacher role for the run. the possible values are\n     * 'write' or 'read'\n     */\n    getSharedTeacherRole(workgroupId) {\n        var role = null;\n        \n        if (workgroupId != null) {\n            var sharedTeacherUserInfos = this.getSharedTeacherUserInfos();\n            \n            if (sharedTeacherUserInfos != null) {\n                \n                for (var s = 0; s < sharedTeacherUserInfos.length; s++) {\n                    var sharedTeacherUserInfo = sharedTeacherUserInfos[s];\n                    \n                    if (sharedTeacherUserInfo != null) {\n                        if (workgroupId == sharedTeacherUserInfo.workgroupId) {\n                            role = sharedTeacherUserInfo.role;\n                        }\n                    }\n                }\n            }\n        }\n        \n        return role;\n    }\n    \n    /** \n     * Replace student names in the content.\n     * For example, we will replace instances of {{firstStudentFirstName}} \n     * with the actual first name of the first student in the workgroup.\n     * @param content a content object or string\n     * @return an updated content object or string\n     */\n    replaceStudentNames(content) {\n        if (content != null) {\n\n            var contentString = content;\n\n            if (typeof content === 'object') {\n                // get the content as a string\n                contentString = JSON.stringify(content);\n            }\n            \n            if (contentString != null) {\n\n                // get the workgroup id\n                var workgroupId = this.getWorkgroupId();\n                \n                // get all the first names\n                var firstNames = this.getStudentFirstNamesByWorkgroupId(workgroupId);\n                \n                if (firstNames.length >= 1) {\n                    /*\n                     * there are 1 or more students in the workgroup so we can \n                     * replace the first student first name with the actual\n                     * name\n                     */\n                    contentString = contentString.replace(new RegExp('{{firstStudentFirstName}}', 'gi'), firstNames[0]);\n                    \n                    /*\n                     * there are 1 or more students in the workgroup so we can \n                     * replace the student first names with the actual names\n                     */\n                    contentString = contentString.replace(new RegExp('{{studentFirstNames}}', 'gi'), firstNames.join(\", \"));\n                }\n                \n                if (firstNames.length >= 2) {\n                    /*\n                     * there are 2 or more students in the workgroup so we can \n                     * replace the second student first name with the actual\n                     * name\n                     */\n                    contentString = contentString.replace(new RegExp('{{secondStudentFirstName}}', 'gi'), firstNames[1]);\n                }\n                \n                if (firstNames.length >= 3) {\n                    /*\n                     * there are 3 or more students in the workgroup so we can \n                     * replace the third student first name with the actual\n                     * name\n                     */\n                    contentString = contentString.replace(new RegExp('{{thirdStudentFirstName}}', 'gi'), firstNames[2]);\n                }\n            }\n            \n            if (typeof content === 'object') {\n                // convert the content string back into an object\n                content = JSON.parse(contentString);\n            } else if (typeof content === 'string') {\n                // the content was a string so we can just use the content string\n                content = contentString;\n            }\n        }\n\n        return content;\n    }\n};\n\nConfigService.$inject = [\n    '$http',\n    '$location'\n];\n\nexport default ConfigService;\n"]}