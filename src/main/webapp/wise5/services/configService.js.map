{"version":3,"sources":["configService.es6"],"names":[],"mappings":"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","file":"configService.js","sourcesContent":["'use strict';\n\nclass ConfigService {\n\n    constructor($http, $location) {\n        this.$http = $http;\n        this.$location = $location;\n        this.config = null;\n    };\n\n    setConfig(config) {\n        this.config = config;\n        this.sortClassmateUserInfosAlphabeticallyByName();\n    };\n\n    retrieveConfig(configURL) {\n        return this.$http.get(configURL).then((result) => {\n            var configJSON = result.data;\n\n            if (configJSON.retrievalTimestamp != null) {\n                // get the client timestamp\n                var clientTimestamp = new Date().getTime();\n\n                // get the server timestamp\n                var serverTimestamp = configJSON.retrievalTimestamp;\n\n                // get the difference between the client and server time\n                var timestampDiff = clientTimestamp - serverTimestamp;\n\n                // add the timestamp diff to the config object\n                configJSON.timestampDiff = timestampDiff;\n            }\n            \n            var constraints = true;\n            \n            // get the full url\n            var absURL = this.$location.$$absUrl;\n            \n            // regex to match constraints=false in the url\n            var regEx = new RegExp(\"constraints=false\", 'gi');\n            \n            if (absURL != null && absURL.match(regEx)) {\n                // the url contains constraints=false\n                constraints = false;\n            }\n            \n            // set the constraints value into the config so we can access it later\n            configJSON.constraints = constraints;\n\n            this.setConfig(configJSON);\n\n            if (this.isPreview()) {\n                // assign a random workgroup id\n                var myUserInfo = this.getMyUserInfo();\n                if (myUserInfo != null) {\n                    // set the workgroup id to a random integer between 1 and 100\n                    myUserInfo.workgroupId = Math.floor(100 * Math.random()) + 1;\n                }\n            }\n\n            return configJSON;\n        });\n    };\n\n    getConfigParam(paramName) {\n        if (this.config !== null) {\n            return this.config[paramName];\n        } else {\n            return null;\n        }\n    };\n\n    getCRaterRequestURL() {\n        return this.getConfigParam('cRaterRequestURL');\n    };\n\n    getMainHomePageURL() {\n        return this.getConfigParam('mainHomePageURL');\n    };\n\n    getNotificationURL() {\n        return this.getConfigParam('notificationURL');\n    };\n\n    getRunId() {\n        return this.getConfigParam('runId');\n    };\n\n    getProjectId() {\n        return this.getConfigParam('projectId');\n    };\n\n    getOpenCPUURL() {\n        return this.getConfigParam('openCPUURL');\n    };\n\n    getSessionLogOutURL() {\n        return this.getConfigParam('sessionLogOutURL');\n    };\n\n    getStudentAssetsURL() {\n        return this.getConfigParam('studentAssetsURL');\n    };\n\n    getStudentStatusURL() {\n        return this.getConfigParam('studentStatusURL');\n    };\n\n    getStudentMaxTotalAssetsSize() {\n        return this.getConfigParam('studentMaxTotalAssetsSize');\n    };\n\n    getStudentNotebookURL() {\n        return this.getConfigParam('studentNotebookURL');\n    };\n\n    getStudentUploadsBaseURL() {\n        return this.getConfigParam('studentUploadsBaseURL');\n    };\n\n    getUserInfo() {\n        return this.getConfigParam('userInfo');\n    };\n\n    getWebSocketURL() {\n        return this.getConfigParam('webSocketURL');\n    };\n\n    getWISEBaseURL() {\n        return this.getConfigParam('wiseBaseURL');\n    };\n\n    getLocale() {\n        return this.getConfigParam('locale') || 'en';\n    };\n\n    getMode() {\n        return this.getConfigParam('mode');\n    };\n\n    /**\n     * Returns the period id of the logged-in user.\n     */\n    getPeriodId() {\n        var periodId = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            periodId = myUserInfo.periodId;\n        }\n        return periodId;\n    };\n\n    /**\n     * Get the periods\n     * @returns an array of period objects\n     */\n    getPeriods() {\n        var periods = [];\n\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n\n                if (myClassInfo.periods != null) {\n                    periods = myClassInfo.periods;\n                }\n            }\n        }\n\n        return periods;\n    };\n\n    getWorkgroupId() {\n        var workgroupId = null;\n\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            workgroupId = myUserInfo.workgroupId;\n        }\n\n        return workgroupId;\n    };\n\n    getMyUserInfo() {\n        var myUserInfo = null;\n\n        var userInfo = this.getUserInfo();\n        if (userInfo != null) {\n            myUserInfo = userInfo.myUserInfo;\n        }\n\n        return myUserInfo;\n    };\n\n    getClassmateUserInfos() {\n        var classmateUserInfos = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                classmateUserInfos = myClassInfo.classmateUserInfos;\n            }\n        }\n\n        return classmateUserInfos;\n    };\n\n    getTeacherWorkgroupId() {\n        var teacherWorkgroupId = null;\n        var teacherUserInfo = this.getTeacherUserInfo();\n        if (teacherUserInfo != null) {\n            teacherWorkgroupId = teacherUserInfo.workgroupId;\n        }\n        return teacherWorkgroupId;\n    };\n\n    getTeacherUserInfo() {\n        var teacherUserInfo = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                teacherUserInfo = myClassInfo.teacherUserInfo;\n            }\n        }\n        return teacherUserInfo;\n    };\n    \n    /**\n     * Get the shared teacher user infos for the run\n     */\n    getSharedTeacherUserInfos() {\n        var sharedTeacherUserInfos = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                sharedTeacherUserInfos = myClassInfo.sharedTeacherUserInfos;\n            }\n        }\n        return sharedTeacherUserInfos;\n    }\n\n    getClassmateWorkgroupIds(includeSelf) {\n        var workgroupIds = [];\n\n        if (includeSelf) {\n            workgroupIds.push(this.getWorkgroupId());\n        }\n\n        var classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos != null) {\n            for (var c = 0; c < classmateUserInfos.length; c++) {\n                var classmateUserInfo = classmateUserInfos[c];\n\n                if (classmateUserInfo != null) {\n                    var workgroupId = classmateUserInfo.workgroupId;\n\n                    if (workgroupId != null) {\n                        workgroupIds.push(workgroupId);\n                    }\n                }\n            }\n        }\n\n        return workgroupIds;\n    };\n\n    sortClassmateUserInfosAlphabeticallyByName() {\n        var classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos != null) {\n            classmateUserInfos.sort(this.sortClassmateUserInfosAlphabeticallyByNameHelper);\n        }\n\n        return classmateUserInfos;\n    };\n\n    sortClassmateUserInfosAlphabeticallyByNameHelper(a, b) {\n        var aUserName = a.userName;\n        var bUserName = b.userName;\n        var result = 0;\n\n        if (aUserName < bUserName) {\n            result = -1;\n        } else if (aUserName > bUserName) {\n            result = 1;\n        }\n\n        return result;\n    };\n\n    getUserInfoByWorkgroupId(workgroupId) {\n        var userInfo = null;\n\n        if (workgroupId != null) {\n\n            var myUserInfo = this.getMyUserInfo();\n\n            if (myUserInfo != null) {\n                var tempWorkgroupId = myUserInfo.workgroupId;\n\n                if (workgroupId === tempWorkgroupId) {\n                    userInfo = myUserInfo;\n                }\n            }\n\n            if (userInfo == null) {\n                var classmateUserInfos = this.getClassmateUserInfos();\n\n                if (classmateUserInfos != null) {\n                    for (var c = 0; c < classmateUserInfos.length; c++) {\n                        var classmateUserInfo = classmateUserInfos[c];\n\n                        if (classmateUserInfo != null) {\n                            var tempWorkgroupId = classmateUserInfo.workgroupId;\n\n                            if (workgroupId == tempWorkgroupId) {\n                                userInfo = classmateUserInfo;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return userInfo;\n    };\n\n    /**\n     * Get the period id for a workgroup id\n     * @param workgroupId the workgroup id\n     * @returns the period id the workgroup id is in\n     */\n    getPeriodIdByWorkgroupId(workgroupId) {\n        var periodId = null;\n\n        if (workgroupId != null) {\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                periodId = userInfo.periodId;\n            }\n        }\n\n        return periodId;\n    };\n\n    /**\n     * Get the student names\n     * @param workgroupId the workgroup id\n     * @return an array containing the student names\n     */\n    getStudentFirstNamesByWorkgroupId(workgroupId) {\n        var studentNames = [];\n\n        // get the user names for the workgroup e.g. \"Spongebob Squarepants (SpongebobS0101):Patrick Star (PatrickS0101)\"\n        var userNames = this.getUserNameByWorkgroupId(workgroupId);\n\n        if (userNames != null) {\n            // split the user names string by ':'\n            var userNamesSplit = userNames.split(':');\n\n            if (userNamesSplit != null) {\n                // loop through each user name\n                for (var x = 0; x < userNamesSplit.length; x++) {\n                    // get a user name e.g. \"Spongebob Squarepants (spongebobs0101)\"\n                    var userName = userNamesSplit[x];\n\n                    // get the index of the first empty space\n                    var indexOfSpace = userName.indexOf(' ');\n\n                    // get the student first name e.g. \"Spongebob\"\n                    var studentFirstName = userName.substring(0, indexOfSpace);\n\n                    // add the student name to the array\n                    studentNames.push(studentFirstName);\n                }\n            }\n        }\n\n        return studentNames;\n    };\n\n    getUserNameByWorkgroupId(workgroupId) {\n        var userName = null;\n\n        if (workgroupId != null) {\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                userName = userInfo.userName;\n            }\n        }\n\n        return userName;\n    };\n\n    getUserNamesByWorkgroupId(workgroupId) {\n        let userNamesObjects = [];\n\n        if (workgroupId != null) {\n            let userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                let userNames = userInfo.userName.split(':');\n\n                for (let i = 0; i < userNames.length; i++) {\n                    let name = userNames[i];\n                    let id = \"\";\n                    let regex = /(.+) \\((.+)\\)/g;\n                    let matches = regex.exec(name);\n                    if (matches) {\n                        name = matches[1];\n                        id = matches[2];\n                    }\n                    userNamesObjects.push({\n                        name: name,\n                        id: id\n                    });\n                }\n            }\n        }\n\n        return userNamesObjects;\n    };\n\n    isPreview() {\n        var result = false;\n\n        var mode = this.getMode();\n\n        if (mode != null && mode === 'preview') {\n            result = true;\n        }\n\n        return result;\n    };\n\n    /**\n     * Convert a client timestamp to a server timestamp. This is required\n     * in case the client and server clocks are not synchronized.\n     * @param clientTimestamp the client timestamp\n     */\n    convertToServerTimestamp(clientTimestamp) {\n\n        // get the difference between the client time and server time\n        var timestampDiff = this.getConfigParam('timestampDiff');\n\n        // convert the client timestamp to a server timestamp\n        var serverTimestamp = clientTimestamp - timestampDiff;\n\n        return serverTimestamp;\n    }\n\n    /**\n     * Convert a server timestamp to a client timestamp. This is required\n     * in case the client and server clocks are not synchronized.\n     * @param serverTimestamp the client timestamp\n     */\n    convertToClientTimestamp(serverTimestamp) {\n\n        // get the difference between the client time and server time\n        var timestampDiff = this.getConfigParam('timestampDiff');\n\n        // convert the client timestamp to a server timestamp\n        var clientTimestamp = serverTimestamp + timestampDiff;\n\n        return clientTimestamp;\n    }\n    \n    /**\n     * Check if the workgroup is the owner of the run\n     * @param workgroupId the workgroup id\n     * @returns whether the workgroup is the owner of the run\n     */\n    isRunOwner(workgroupId) {\n        \n        var result = false;\n        \n        if (workgroupId != null) {\n            var teacherUserInfo = this.getTeacherUserInfo();\n            \n            if (teacherUserInfo != null) {\n                \n                if (workgroupId == teacherUserInfo.workgroupId) {\n                    result = true;\n                }\n            }\n        }\n        \n        return result;\n    }\n    \n    /**\n     * Check if the workgroup is a shared teacher for the run\n     * @param workgroupId the workgroup id\n     * @returns whether the workgroup is a shared teacher of the run\n     */\n    isRunSharedTeacher(workgroupId) {\n        \n        var result = false;\n        \n        if (workgroupId != null) {\n            var sharedTeacherUserInfos = this.getSharedTeacherUserInfos();\n            \n            if (sharedTeacherUserInfos != null) {\n                \n                for (var s = 0; s < sharedTeacherUserInfos.length; s++) {\n                    var sharedTeacherUserInfo = sharedTeacherUserInfos[s];\n                    \n                    if (sharedTeacherUserInfo != null) {\n                        if (workgroupId == sharedTeacherUserInfo.workgroupId) {\n                            result = true;\n                        }\n                    }\n                }\n            }\n        }\n        \n        return result;\n    }\n    \n    /**\n     * Get the teacher role for the run\n     * @param workgroupId the workgroup id\n     * @returns the role of the teacher for the run. the possible values are\n     * 'owner', 'write', 'read'\n     */\n    getTeacherRole(workgroupId) {\n        var role = null;\n        \n        if (this.isRunOwner(workgroupId)) {\n            // the teacher is the owner of the run\n            role = 'owner';\n        } else if (this.isRunSharedTeacher(workgroupId)) {\n            // the teacher is a shared teacher so their role may be 'write' or 'read'\n            role = this.getSharedTeacherRole(workgroupId);\n        }\n        \n        return role;\n    }\n    \n    /**\n     * Get the shared teacher role for the run\n     * @param workgroupId the workgroup id\n     * @returns the shared teacher role for the run. the possible values are\n     * 'write' or 'read'\n     */\n    getSharedTeacherRole(workgroupId) {\n        var role = null;\n        \n        if (workgroupId != null) {\n            var sharedTeacherUserInfos = this.getSharedTeacherUserInfos();\n            \n            if (sharedTeacherUserInfos != null) {\n                \n                for (var s = 0; s < sharedTeacherUserInfos.length; s++) {\n                    var sharedTeacherUserInfo = sharedTeacherUserInfos[s];\n                    \n                    if (sharedTeacherUserInfo != null) {\n                        if (workgroupId == sharedTeacherUserInfo.workgroupId) {\n                            role = sharedTeacherUserInfo.role;\n                        }\n                    }\n                }\n            }\n        }\n        \n        return role;\n    }\n};\n\nConfigService.$inject = [\n    '$http',\n    '$location'\n];\n\nexport default ConfigService;\n"]}