{"version":3,"sources":["configService.es6"],"names":["ConfigService","$filter","$http","$location","config","$translate","sortClassmateUserInfosAlphabeticallyByName","setPermissions","setClassmateDisplayNames","configURL","get","then","result","configJSON","data","retrievalTimestamp","clientTimestamp","Date","getTime","serverTimestamp","timestampDiff","constraints","mode","absURL","$$absUrl","constraintsRegEx","RegExp","match","showProjectPathRegEx","host","location","origin","projectURL","projectPath","console","log","setConfig","isPreview","myUserInfo","getMyUserInfo","workgroupId","Math","floor","random","paramName","getConfigParam","periodId","periods","myClassInfo","userId","id","userInfo","getUserInfo","userName","classmateUserInfos","getClassmateUserInfos","n","length","i","workgroup","displayNames","getDisplayUserNamesByWorkgroupId","sortedClassmateUserInfos","c","push","sort","compareClassmateUserInfosByWorkgroupId","a","b","teacherWorkgroupId","teacherUserInfo","getTeacherUserInfo","sharedTeacherUserInfos","includeSelf","workgroupIds","getWorkgroupId","classmateUserInfo","sortClassmateUserInfosAlphabeticallyByNameHelper","aUserName","toLowerCase","bUserName","role","getTeacherRole","canViewStudentNames","canGradeStudentWork","isSwitchedUser","tempWorkgroupId","getUserInfoByWorkgroupId","studentNames","userNames","getUserNameByWorkgroupId","userNamesSplit","split","x","indexOfSpace","indexOf","studentFirstName","substring","userIds","userNamesObjects","name","regex","matches","exec","usernames","getPermissions","names","getUserNamesByWorkgroupId","l","getUserIdsByWorkgroupId","getMode","getSharedTeacherUserInfos","s","sharedTeacherUserInfo","isRunOwner","isRunSharedTeacher","getSharedTeacherRole","content","contentString","JSON","stringify","firstNames","getStudentFirstNamesByWorkgroupId","replace","join","parse","avatarColors","modulo","getLibraryProjectsURL","reverse","includeHost","projectAssetsDirectoryPath","projectBaseURL","window","html","assetsDirectoryPathIncludingHost","getProjectAssetsDirectoryPath","assetsDirectoryPathIncludingHostRegEx","assetsDirectoryPathNotIncludingHost","assetsDirectoryPathNotIncludingHostRegEx","wiseIds","projects","sharedProjects","authorableProjects","concat","sortByProjectId","projectA","projectB","projectIdA","projectIdB","$inject"],"mappings":"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","file":"configService.js","sourcesContent":["'use strict';\r\n\r\nclass ConfigService {\r\n\r\n    constructor($filter, $http, $location) {\r\n        this.$filter = $filter;\r\n        this.$http = $http;\r\n        this.$location = $location;\r\n        this.config = null;\r\n\r\n        this.$translate = this.$filter('translate');\r\n    };\r\n\r\n    setConfig(config) {\r\n        this.config = config;\r\n        this.sortClassmateUserInfosAlphabeticallyByName();\r\n        this.setPermissions();\r\n        this.setClassmateDisplayNames();\r\n    };\r\n\r\n    retrieveConfig(configURL) {\r\n        return this.$http.get(configURL).then((result) => {\r\n            var configJSON = result.data;\r\n\r\n            if (configJSON.retrievalTimestamp != null) {\r\n                // get the client timestamp\r\n                var clientTimestamp = new Date().getTime();\r\n\r\n                // get the server timestamp\r\n                var serverTimestamp = configJSON.retrievalTimestamp;\r\n\r\n                // get the difference between the client and server time\r\n                var timestampDiff = clientTimestamp - serverTimestamp;\r\n\r\n                // add the timestamp diff to the config object\r\n                configJSON.timestampDiff = timestampDiff;\r\n            }\r\n\r\n            var constraints = true;\r\n\r\n            if (configJSON.mode == 'preview') {\r\n                // constraints can only be disabled using the url in preview mode\r\n\r\n                // get the full url\r\n                var absURL = this.$location.$$absUrl;\r\n\r\n                // regex to match constraints=false in the url\r\n                var constraintsRegEx = new RegExp(\"constraints=false\", 'gi');\r\n\r\n                if (absURL != null && absURL.match(constraintsRegEx)) {\r\n                    // the url contains constraints=false\r\n                    constraints = false;\r\n                }\r\n            }\r\n\r\n            // set the constraints value into the config so we can access it later\r\n            configJSON.constraints = constraints;\r\n\r\n            // regex to match showProjectPath=true in the url\r\n            var showProjectPathRegEx = new RegExp(\"showProjectPath=true\", 'gi');\r\n\r\n            if (absURL != null && absURL.match(showProjectPathRegEx)) {\r\n                // the url contains showProjectPath=true\r\n\r\n                // get the host e.g. http://wise.berkeley.edu\r\n                var host = location.origin;\r\n\r\n                // get the project URL e.g. /wise/curriculum/123/project.json\r\n                var projectURL = configJSON.projectURL;\r\n\r\n                // get the full project path\r\n                var projectPath = host + projectURL;\r\n\r\n                // output the full project path to the console\r\n                console.log(projectPath);\r\n            }\r\n\r\n            this.setConfig(configJSON);\r\n\r\n            if (this.isPreview()) {\r\n                // assign a random workgroup id\r\n                var myUserInfo = this.getMyUserInfo();\r\n                if (myUserInfo != null) {\r\n                    // set the workgroup id to a random integer between 1 and 100\r\n                    myUserInfo.workgroupId = Math.floor(100 * Math.random()) + 1;\r\n                }\r\n            }\r\n\r\n            return configJSON;\r\n        });\r\n    };\r\n\r\n    getConfigParam(paramName) {\r\n        if (this.config !== null) {\r\n            return this.config[paramName];\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    getAchievementsURL() {\r\n        return this.getConfigParam('achievementURL');\r\n    };\r\n\r\n    getCRaterRequestURL() {\r\n        return this.getConfigParam('cRaterRequestURL');\r\n    };\r\n\r\n    getMainHomePageURL() {\r\n        return this.getConfigParam('mainHomePageURL');\r\n    };\r\n\r\n    getNotificationURL() {\r\n        return this.getConfigParam('notificationURL');\r\n    };\r\n\r\n    getRunId() {\r\n        return this.getConfigParam('runId');\r\n    };\r\n\r\n    getProjectId() {\r\n        return this.getConfigParam('projectId');\r\n    };\r\n\r\n    getOpenCPUURL() {\r\n        return this.getConfigParam('openCPUURL');\r\n    };\r\n\r\n    getSessionLogOutURL() {\r\n        return this.getConfigParam('sessionLogOutURL');\r\n    };\r\n\r\n    getStudentAssetsURL() {\r\n        return this.getConfigParam('studentAssetsURL');\r\n    };\r\n\r\n    getStudentStatusURL() {\r\n        return this.getConfigParam('studentStatusURL');\r\n    };\r\n\r\n    getStudentMaxTotalAssetsSize() {\r\n        return this.getConfigParam('studentMaxTotalAssetsSize');\r\n    };\r\n\r\n    getStudentNotebookURL() {\r\n        return this.getConfigParam('studentNotebookURL');\r\n    };\r\n\r\n    getStudentUploadsBaseURL() {\r\n        return this.getConfigParam('studentUploadsBaseURL');\r\n    };\r\n\r\n    getUserInfo() {\r\n        return this.getConfigParam('userInfo');\r\n    };\r\n\r\n    getWebSocketURL() {\r\n        return this.getConfigParam('webSocketURL');\r\n    };\r\n\r\n    getWISEBaseURL() {\r\n        return this.getConfigParam('wiseBaseURL');\r\n    };\r\n\r\n    getLocale() {\r\n        return this.getConfigParam('locale') || 'en';\r\n    };\r\n\r\n    getMode() {\r\n        return this.getConfigParam('mode');\r\n    };\r\n\r\n    /**\r\n     * Returns the period id of the logged-in user.\r\n     */\r\n    getPeriodId() {\r\n        var periodId = null;\r\n        var myUserInfo = this.getMyUserInfo();\r\n        if (myUserInfo != null) {\r\n            periodId = myUserInfo.periodId;\r\n        }\r\n        return periodId;\r\n    };\r\n\r\n    /**\r\n     * Get the periods\r\n     * @returns an array of period objects\r\n     */\r\n    getPeriods() {\r\n        var periods = [];\r\n\r\n        var myUserInfo = this.getMyUserInfo();\r\n        if (myUserInfo != null) {\r\n\r\n            var myClassInfo = myUserInfo.myClassInfo;\r\n            if (myClassInfo != null) {\r\n\r\n                if (myClassInfo.periods != null) {\r\n                    periods = myClassInfo.periods;\r\n                }\r\n            }\r\n        }\r\n\r\n        return periods;\r\n    };\r\n\r\n    getWorkgroupId() {\r\n        var workgroupId = null;\r\n\r\n        var myUserInfo = this.getMyUserInfo();\r\n        if (myUserInfo != null) {\r\n            workgroupId = myUserInfo.workgroupId;\r\n        }\r\n\r\n        return workgroupId;\r\n    };\r\n\r\n    /**\r\n     * Get the user id (aka WISE ID)\r\n     * @return the user id\r\n     */\r\n    getUserId() {\r\n\r\n        var userId = null;\r\n\r\n        var myUserInfo = this.getMyUserInfo();\r\n\r\n        if (myUserInfo != null) {\r\n            userId = myUserInfo.id;\r\n        }\r\n\r\n        return userId;\r\n    }\r\n\r\n    getMyUserInfo() {\r\n        var myUserInfo = null;\r\n\r\n        var userInfo = this.getUserInfo();\r\n        if (userInfo != null) {\r\n            myUserInfo = userInfo.myUserInfo;\r\n        }\r\n\r\n        return myUserInfo;\r\n    };\r\n\r\n    /**\r\n     * Get the user name of the signed in user\r\n     * @return the user name of the signed in user\r\n     */\r\n    getMyUserName() {\r\n\r\n        var userName = null;\r\n\r\n        // get my user info\r\n        var myUserInfo = this.getMyUserInfo();\r\n\r\n        if (myUserInfo != null) {\r\n            // get the user name\r\n            userName = myUserInfo.userName;\r\n        }\r\n\r\n        return userName;\r\n    }\r\n\r\n    getClassmateUserInfos() {\r\n        var classmateUserInfos = null;\r\n        var myUserInfo = this.getMyUserInfo();\r\n        if (myUserInfo != null) {\r\n            var myClassInfo = myUserInfo.myClassInfo;\r\n            if (myClassInfo != null) {\r\n                classmateUserInfos = myClassInfo.classmateUserInfos;\r\n            }\r\n        }\r\n\r\n        return classmateUserInfos;\r\n    };\r\n\r\n    setClassmateDisplayNames() {\r\n        let classmateUserInfos = this.getClassmateUserInfos();\r\n\r\n        if (classmateUserInfos) {\r\n            let n = classmateUserInfos.length;\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                let workgroup = classmateUserInfos[i];\r\n                workgroup.displayNames = this.getDisplayUserNamesByWorkgroupId(workgroup.workgroupId);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the classmate user infos sorted by ascending workgroup id\r\n     * @return an array of classmate user info objects sorted by ascending\r\n     * workgroup id\r\n     */\r\n    getClassmateUserInfosSortedByWorkgroupId() {\r\n\r\n        var sortedClassmateUserInfos = [];\r\n\r\n        // get all the classmate user info objects\r\n        var classmateUserInfos = this.getClassmateUserInfos();\r\n\r\n        if (classmateUserInfos != null) {\r\n\r\n            /*\r\n             * loop through all the classmate user info objects and add it to\r\n             * new array of classmate user infos\r\n             */\r\n            for (var c = 0; c < classmateUserInfos.length; c++) {\r\n                sortedClassmateUserInfos.push(classmateUserInfos[c]);\r\n            }\r\n        }\r\n\r\n        // sort the new classmate user infos array by ascending workgroup id\r\n        sortedClassmateUserInfos.sort(this.compareClassmateUserInfosByWorkgroupId);\r\n\r\n        return sortedClassmateUserInfos;\r\n    }\r\n\r\n    /**\r\n     * Used to sort the classmate user infos by ascending workgroup id.\r\n     * Use by calling myArray.sort(compareClassmateUserInfosByWorkgroupId)\r\n     * @param a a user info object\r\n     * @param b a user info Object\r\n     * @return -1 if a comes before b\r\n     * 1 if a comes after b\r\n     * 0 if a equals b\r\n     */\r\n    compareClassmateUserInfosByWorkgroupId(a, b) {\r\n        if (a.workgroupId < b.workgroupId) {\r\n            return -1;\r\n        } else if (a.workgroupId > b.workgroupId) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getTeacherWorkgroupId() {\r\n        var teacherWorkgroupId = null;\r\n        var teacherUserInfo = this.getTeacherUserInfo();\r\n        if (teacherUserInfo != null) {\r\n            teacherWorkgroupId = teacherUserInfo.workgroupId;\r\n        }\r\n        return teacherWorkgroupId;\r\n    };\r\n\r\n    getTeacherUserInfo() {\r\n        var teacherUserInfo = null;\r\n        var myUserInfo = this.getMyUserInfo();\r\n        if (myUserInfo != null) {\r\n            var myClassInfo = myUserInfo.myClassInfo;\r\n            if (myClassInfo != null) {\r\n                teacherUserInfo = myClassInfo.teacherUserInfo;\r\n            }\r\n        }\r\n        return teacherUserInfo;\r\n    };\r\n\r\n    /**\r\n     * Get the shared teacher user infos for the run\r\n     */\r\n    getSharedTeacherUserInfos() {\r\n        var sharedTeacherUserInfos = null;\r\n        var myUserInfo = this.getMyUserInfo();\r\n        if (myUserInfo != null) {\r\n            var myClassInfo = myUserInfo.myClassInfo;\r\n            if (myClassInfo != null) {\r\n                sharedTeacherUserInfos = myClassInfo.sharedTeacherUserInfos;\r\n            }\r\n        }\r\n        return sharedTeacherUserInfos;\r\n    }\r\n\r\n    getClassmateWorkgroupIds(includeSelf) {\r\n        var workgroupIds = [];\r\n\r\n        if (includeSelf) {\r\n            workgroupIds.push(this.getWorkgroupId());\r\n        }\r\n\r\n        var classmateUserInfos = this.getClassmateUserInfos();\r\n\r\n        if (classmateUserInfos != null) {\r\n            for (var c = 0; c < classmateUserInfos.length; c++) {\r\n                var classmateUserInfo = classmateUserInfos[c];\r\n\r\n                if (classmateUserInfo != null) {\r\n                    var workgroupId = classmateUserInfo.workgroupId;\r\n\r\n                    if (workgroupId != null) {\r\n                        workgroupIds.push(workgroupId);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return workgroupIds;\r\n    };\r\n\r\n    sortClassmateUserInfosAlphabeticallyByName() {\r\n        var classmateUserInfos = this.getClassmateUserInfos();\r\n\r\n        if (classmateUserInfos != null) {\r\n            classmateUserInfos.sort(this.sortClassmateUserInfosAlphabeticallyByNameHelper);\r\n        }\r\n\r\n        return classmateUserInfos;\r\n    };\r\n\r\n    sortClassmateUserInfosAlphabeticallyByNameHelper(a, b) {\r\n        var result = 0;\r\n\r\n        if (a != null && a.userName != null && b != null && b.userName != null) {\r\n            var aUserName = a.userName.toLowerCase();\r\n            var bUserName = b.userName.toLowerCase();\r\n\r\n            if (aUserName < bUserName) {\r\n                result = -1;\r\n            } else if (aUserName > bUserName) {\r\n                result = 1;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    setPermissions() {\r\n        // get the role of the teacher for the run e.g. 'owner', 'write', 'read'\r\n        let role = this.getTeacherRole(this.getWorkgroupId());\r\n\r\n        if (role === 'owner') {\r\n            // the teacher is the owner of the run and has full access\r\n            this.config.canViewStudentNames = true;\r\n            this.config.canGradeStudentWork = true;\r\n        } else if (role === 'write') {\r\n            // the teacher is a shared teacher that can grade the student work\r\n            this.config.canViewStudentNames = true;\r\n            this.config.canGradeStudentWork = true;\r\n        } else if (role === 'read') {\r\n            // the teacher is a shared teacher that can only view the student work\r\n            this.config.canViewStudentNames = false;\r\n            this.config.canGradeStudentWork = false;\r\n        } else {\r\n            // teacher role is null, so assume we're in student mode\r\n            this.config.canViewStudentNames = true;\r\n            this.config.canGradeStudentWork = false;\r\n        }\r\n    }\r\n\r\n    getPermissions() {\r\n\r\n        // a switched user (admin/researcher user impersonating a teacher) should not be able to view/grade\r\n        return {\r\n            canViewStudentNames: this.config.canViewStudentNames && !this.isSwitchedUser(),\r\n            canGradeStudentWork: this.config.canGradeStudentWork && !this.isSwitchedUser()\r\n        }\r\n    }\r\n\r\n    getUserInfoByWorkgroupId(workgroupId) {\r\n        var userInfo = null;\r\n\r\n        if (workgroupId != null) {\r\n\r\n            var myUserInfo = this.getMyUserInfo();\r\n\r\n            if (myUserInfo != null) {\r\n                var tempWorkgroupId = myUserInfo.workgroupId;\r\n\r\n                if (workgroupId === tempWorkgroupId) {\r\n                    userInfo = myUserInfo;\r\n                }\r\n            }\r\n\r\n            if (userInfo == null) {\r\n                var classmateUserInfos = this.getClassmateUserInfos();\r\n\r\n                if (classmateUserInfos != null) {\r\n                    for (var c = 0; c < classmateUserInfos.length; c++) {\r\n                        var classmateUserInfo = classmateUserInfos[c];\r\n\r\n                        if (classmateUserInfo != null) {\r\n                            var tempWorkgroupId = classmateUserInfo.workgroupId;\r\n\r\n                            if (workgroupId == tempWorkgroupId) {\r\n                                userInfo = classmateUserInfo;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return userInfo;\r\n    };\r\n\r\n    /**\r\n     * Get the period id for a workgroup id\r\n     * @param workgroupId the workgroup id\r\n     * @returns the period id the workgroup id is in\r\n     */\r\n    getPeriodIdByWorkgroupId(workgroupId) {\r\n        var periodId = null;\r\n\r\n        if (workgroupId != null) {\r\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\r\n\r\n            if (userInfo != null) {\r\n                periodId = userInfo.periodId;\r\n            }\r\n        }\r\n\r\n        return periodId;\r\n    };\r\n\r\n    /**\r\n     * Get the student names\r\n     * @param workgroupId the workgroup id\r\n     * @return an array containing the student names\r\n     */\r\n    getStudentFirstNamesByWorkgroupId(workgroupId) {\r\n        var studentNames = [];\r\n\r\n        // get the user names for the workgroup e.g. \"Spongebob Squarepants (SpongebobS0101):Patrick Star (PatrickS0101)\"\r\n        var userNames = this.getUserNameByWorkgroupId(workgroupId);\r\n\r\n        if (userNames != null) {\r\n            // split the user names string by ':'\r\n            var userNamesSplit = userNames.split(':');\r\n\r\n            if (userNamesSplit != null) {\r\n                // loop through each user name\r\n                for (var x = 0; x < userNamesSplit.length; x++) {\r\n                    // get a user name e.g. \"Spongebob Squarepants (spongebobs0101)\"\r\n                    var userName = userNamesSplit[x];\r\n\r\n                    // get the index of the first empty space\r\n                    var indexOfSpace = userName.indexOf(' ');\r\n\r\n                    // get the student first name e.g. \"Spongebob\"\r\n                    var studentFirstName = userName.substring(0, indexOfSpace);\r\n\r\n                    // add the student name to the array\r\n                    studentNames.push(studentFirstName);\r\n                }\r\n            }\r\n        }\r\n\r\n        return studentNames;\r\n    };\r\n\r\n    getUserIdsByWorkgroupId(workgroupId) {\r\n        var userIds = [];\r\n\r\n        if (workgroupId != null) {\r\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\r\n\r\n            if (userInfo != null) {\r\n                userIds = userInfo.userIds;\r\n            }\r\n        }\r\n\r\n        return userIds;\r\n    };\r\n\r\n    getUserNameByWorkgroupId(workgroupId) {\r\n        var userName = null;\r\n\r\n        if (workgroupId != null) {\r\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\r\n\r\n            if (userInfo != null) {\r\n                userName = userInfo.userName;\r\n            }\r\n        }\r\n\r\n        return userName;\r\n    };\r\n\r\n    getDisplayNamesByWorkgroupId(workgroupId) {\r\n        var displayNames = null;\r\n\r\n        if (workgroupId != null) {\r\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\r\n\r\n            if (userInfo != null) {\r\n                displayNames = userInfo.displayNames;\r\n            }\r\n        }\r\n\r\n        return displayNames;\r\n    };\r\n\r\n    getUserNamesByWorkgroupId(workgroupId) {\r\n        let userNamesObjects = [];\r\n\r\n        if (workgroupId != null) {\r\n            let userInfo = this.getUserInfoByWorkgroupId(workgroupId);\r\n\r\n            if (userInfo != null) {\r\n                let userNames = userInfo.userName.split(':');\r\n\r\n                for (let i = 0; i < userNames.length; i++) {\r\n                    let name = userNames[i];\r\n                    let id = \"\";\r\n                    let regex = /(.+) \\((.+)\\)/g;\r\n                    let matches = regex.exec(name);\r\n                    if (matches) {\r\n                        name = matches[1];\r\n                        id = matches[2];\r\n                    }\r\n                    userNamesObjects.push({\r\n                        name: name,\r\n                        id: id\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return userNamesObjects;\r\n    };\r\n\r\n    getDisplayUserNamesByWorkgroupId(workgroupId) {\r\n        let usernames = '';\r\n\r\n        if (workgroupId != null) {\r\n            if (this.getPermissions().canViewStudentNames) {\r\n                let names = this.getUserNamesByWorkgroupId(workgroupId);\r\n                let l = names.length;\r\n                for (let i = 0; i < l; i++) {\r\n                    let name = names[i].name;\r\n                    usernames += name;\r\n\r\n                    if (i < (l-1)) {\r\n                        usernames += ', ';\r\n                    }\r\n                }\r\n            } else {\r\n                // current user is not allowed to view student names, so return string with student ids\r\n                let userIds = this.getUserIdsByWorkgroupId(workgroupId);\r\n                for (let i = 0; i < userIds.length; i++) {\r\n                    let id = userIds[i];\r\n                    if (i !== 0) {\r\n                        usernames += ', ';\r\n                    }\r\n                    usernames += this.$translate('studentId', {id: id});\r\n                }\r\n            }\r\n        }\r\n\r\n        return usernames;\r\n    };\r\n\r\n    isPreview() {\r\n        var result = false;\r\n\r\n        var mode = this.getMode();\r\n\r\n        if (mode != null && mode === 'preview') {\r\n            result = true;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Convert a client timestamp to a server timestamp. This is required\r\n     * in case the client and server clocks are not synchronized.\r\n     * @param clientTimestamp the client timestamp\r\n     */\r\n    convertToServerTimestamp(clientTimestamp) {\r\n\r\n        // get the difference between the client time and server time\r\n        var timestampDiff = this.getConfigParam('timestampDiff');\r\n\r\n        // convert the client timestamp to a server timestamp\r\n        var serverTimestamp = clientTimestamp - timestampDiff;\r\n\r\n        return serverTimestamp;\r\n    }\r\n\r\n    /**\r\n     * Convert a server timestamp to a client timestamp. This is required\r\n     * in case the client and server clocks are not synchronized.\r\n     * @param serverTimestamp the client timestamp\r\n     */\r\n    convertToClientTimestamp(serverTimestamp) {\r\n\r\n        // get the difference between the client time and server time\r\n        var timestampDiff = this.getConfigParam('timestampDiff');\r\n\r\n        // convert the client timestamp to a server timestamp\r\n        var clientTimestamp = serverTimestamp + timestampDiff;\r\n\r\n        return clientTimestamp;\r\n    }\r\n\r\n    /**\r\n     * Check if the workgroup is the owner of the run\r\n     * @param workgroupId the workgroup id\r\n     * @returns whether the workgroup is the owner of the run\r\n     */\r\n    isRunOwner(workgroupId) {\r\n\r\n        var result = false;\r\n\r\n        if (workgroupId != null) {\r\n            var teacherUserInfo = this.getTeacherUserInfo();\r\n\r\n            if (teacherUserInfo != null) {\r\n\r\n                if (workgroupId == teacherUserInfo.workgroupId) {\r\n                    result = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Check if the workgroup is a shared teacher for the run\r\n     * @param workgroupId the workgroup id\r\n     * @returns whether the workgroup is a shared teacher of the run\r\n     */\r\n    isRunSharedTeacher(workgroupId) {\r\n\r\n        var result = false;\r\n\r\n        if (workgroupId != null) {\r\n            var sharedTeacherUserInfos = this.getSharedTeacherUserInfos();\r\n\r\n            if (sharedTeacherUserInfos != null) {\r\n\r\n                for (var s = 0; s < sharedTeacherUserInfos.length; s++) {\r\n                    var sharedTeacherUserInfo = sharedTeacherUserInfos[s];\r\n\r\n                    if (sharedTeacherUserInfo != null) {\r\n                        if (workgroupId == sharedTeacherUserInfo.workgroupId) {\r\n                            result = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Get the teacher role for the run\r\n     * @param workgroupId the workgroup id\r\n     * @returns the role of the teacher for the run. the possible values are\r\n     * 'owner', 'write', 'read'\r\n     */\r\n    getTeacherRole(workgroupId) {\r\n        var role = null;\r\n\r\n        if (this.isRunOwner(workgroupId)) {\r\n            // the teacher is the owner of the run\r\n            role = 'owner';\r\n        } else if (this.isRunSharedTeacher(workgroupId)) {\r\n            // the teacher is a shared teacher so their role may be 'write' or 'read'\r\n            role = this.getSharedTeacherRole(workgroupId);\r\n        }\r\n\r\n        return role;\r\n    }\r\n\r\n    /**\r\n     * Get the shared teacher role for the run\r\n     * @param workgroupId the workgroup id\r\n     * @returns the shared teacher role for the run. the possible values are\r\n     * 'write' or 'read'\r\n     */\r\n    getSharedTeacherRole(workgroupId) {\r\n        var role = null;\r\n\r\n        if (workgroupId != null) {\r\n            var sharedTeacherUserInfos = this.getSharedTeacherUserInfos();\r\n\r\n            if (sharedTeacherUserInfos != null) {\r\n\r\n                for (var s = 0; s < sharedTeacherUserInfos.length; s++) {\r\n                    var sharedTeacherUserInfo = sharedTeacherUserInfos[s];\r\n\r\n                    if (sharedTeacherUserInfo != null) {\r\n                        if (workgroupId == sharedTeacherUserInfo.workgroupId) {\r\n                            role = sharedTeacherUserInfo.role;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return role;\r\n    }\r\n\r\n    /**\r\n     * Replace student names in the content.\r\n     * For example, we will replace instances of {{firstStudentFirstName}}\r\n     * with the actual first name of the first student in the workgroup.\r\n     * @param content a content object or string\r\n     * @return an updated content object or string\r\n     */\r\n    replaceStudentNames(content) {\r\n        if (content != null) {\r\n\r\n            var contentString = content;\r\n\r\n            if (typeof content === 'object') {\r\n                // get the content as a string\r\n                contentString = JSON.stringify(content);\r\n            }\r\n\r\n            if (contentString != null) {\r\n\r\n                // get the workgroup id\r\n                var workgroupId = this.getWorkgroupId();\r\n\r\n                // get all the first names\r\n                var firstNames = this.getStudentFirstNamesByWorkgroupId(workgroupId);\r\n\r\n                if (firstNames.length >= 1) {\r\n                    /*\r\n                     * there are 1 or more students in the workgroup so we can\r\n                     * replace the first student first name with the actual\r\n                     * name\r\n                     */\r\n                    contentString = contentString.replace(new RegExp('{{firstStudentFirstName}}', 'gi'), firstNames[0]);\r\n\r\n                    /*\r\n                     * there are 1 or more students in the workgroup so we can\r\n                     * replace the student first names with the actual names\r\n                     */\r\n                    contentString = contentString.replace(new RegExp('{{studentFirstNames}}', 'gi'), firstNames.join(\", \"));\r\n                }\r\n\r\n                if (firstNames.length >= 2) {\r\n                    /*\r\n                     * there are 2 or more students in the workgroup so we can\r\n                     * replace the second student first name with the actual\r\n                     * name\r\n                     */\r\n                    contentString = contentString.replace(new RegExp('{{secondStudentFirstName}}', 'gi'), firstNames[1]);\r\n                }\r\n\r\n                if (firstNames.length >= 3) {\r\n                    /*\r\n                     * there are 3 or more students in the workgroup so we can\r\n                     * replace the third student first name with the actual\r\n                     * name\r\n                     */\r\n                    contentString = contentString.replace(new RegExp('{{thirdStudentFirstName}}', 'gi'), firstNames[2]);\r\n                }\r\n            }\r\n\r\n            if (typeof content === 'object') {\r\n                // convert the content string back into an object\r\n                content = JSON.parse(contentString);\r\n            } else if (typeof content === 'string') {\r\n                // the content was a string so we can just use the content string\r\n                content = contentString;\r\n            }\r\n        }\r\n\r\n        return content;\r\n    }\r\n\r\n    getAvatarColorForWorkgroupId(workgroupId) {\r\n        var avatarColors = ['#E91E63', '#9C27B0', '#CDDC39', '#2196F3', '#FDD835', '#43A047', '#795548', '#EF6C00', '#C62828', '#607D8B'];\r\n        var modulo = workgroupId % 10;\r\n        return avatarColors[modulo];\r\n    }\r\n\r\n    /**\r\n     * Get the library projects\r\n     */\r\n    getLibraryProjects() {\r\n\r\n        // get the URL to get the list of library projects\r\n        var getLibraryProjectsURL = this.getConfigParam('getLibraryProjectsURL');\r\n\r\n        if (getLibraryProjectsURL != null) {\r\n\r\n            // request the list of library projects\r\n            return this.$http.get(getLibraryProjectsURL).then((result) => {\r\n\r\n                var data = result.data;\r\n\r\n                if (data != null) {\r\n                    // reverse the list so that it is ordered newest to oldest\r\n                    data.reverse();\r\n                }\r\n\r\n                return data;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the project assets folder path\r\n     * @param includeHost whether to include the host in the URL\r\n     * @return the project assets folder path\r\n     * e.g.\r\n     * with host\r\n     * http://wise.berkeley.edu/wise/curriculum/3/assets\r\n     * without host\r\n     * /wise/curriculum/3/assets\r\n     */\r\n    getProjectAssetsDirectoryPath(includeHost) {\r\n        var projectAssetsDirectoryPath = null;\r\n\r\n        // get the project base URL e.g. /wise/curriculum/3/\r\n        var projectBaseURL = this.getConfigParam('projectBaseURL');\r\n\r\n        if (projectBaseURL != null) {\r\n            if (includeHost) {\r\n                // get the host e.g. http://wise.berkeley.edu\r\n                var host = window.location.origin;\r\n\r\n                /*\r\n                 * get the full path including the host\r\n                 * e.g. http://wise.berkeley.edu/wise/curriculum/3/assets\r\n                 */\r\n                projectAssetsDirectoryPath = host + projectBaseURL + 'assets';\r\n            } else {\r\n                /*\r\n                 * get the full path not including the host\r\n                 * e.g. /wise/curriculum/3/assets\r\n                 */\r\n                projectAssetsDirectoryPath = projectBaseURL + 'assets';\r\n            }\r\n        }\r\n\r\n        return projectAssetsDirectoryPath;\r\n    }\r\n\r\n    /**\r\n     * Remove the absolute asset paths\r\n     * e.g.\r\n     * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\r\n     * will be changed to\r\n     * <img src='sun.png'/>\r\n     * @param html the html\r\n     * @return the modified html without the absolute asset paths\r\n     */\r\n    removeAbsoluteAssetPaths(html) {\r\n        /*\r\n         * get the assets directory path with the host\r\n         * e.g.\r\n         * https://wise.berkeley.edu/wise/curriculum/3/assets/\r\n         */\r\n        var includeHost = true;\r\n        var assetsDirectoryPathIncludingHost = this.getProjectAssetsDirectoryPath(includeHost);\r\n        var assetsDirectoryPathIncludingHostRegEx = new RegExp(assetsDirectoryPathIncludingHost, 'g');\r\n\r\n        /*\r\n         * get the assets directory path without the host\r\n         * e.g.\r\n         * /wise/curriculum/3/assets/\r\n         */\r\n        var assetsDirectoryPathNotIncludingHost = this.getProjectAssetsDirectoryPath() + '/';\r\n        var assetsDirectoryPathNotIncludingHostRegEx = new RegExp(assetsDirectoryPathNotIncludingHost, 'g');\r\n\r\n        /*\r\n         * remove the directory path from the html so that only the file name\r\n         * remains in asset references\r\n         * e.g.\r\n         * <img src='https://wise.berkeley.edu/wise/curriculum/3/assets/sun.png'/>\r\n         * will be changed to\r\n         * <img src='sun.png'/>\r\n         */\r\n        html = html.replace(assetsDirectoryPathIncludingHostRegEx, '');\r\n        html = html.replace(assetsDirectoryPathNotIncludingHostRegEx, '');\r\n\r\n        return html\r\n    }\r\n\r\n    /**\r\n     * Get the WISE IDs for a workgroup\r\n     * @param workgroupId get the WISE IDs for this workgroup\r\n     * @return an array of WISE IDs\r\n     */\r\n    getWISEIds(workgroupId) {\r\n\r\n        var wiseIds = [];\r\n\r\n        if (workgroupId != null) {\r\n            // get the user info object for the workgroup id\r\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\r\n\r\n            if (userInfo != null) {\r\n                // get the WISE IDs\r\n                wiseIds = userInfo.userIds;\r\n            }\r\n        }\r\n\r\n        return wiseIds;\r\n    }\r\n\r\n    /**\r\n     * Get all the authorable projects\r\n     */\r\n    getAuthorableProjects() {\r\n\r\n        // get the projects this teacher owns\r\n        var projects = this.getConfigParam('projects');\r\n\r\n        // get the projects that were shared with the teacher\r\n        var sharedProjects = this.getConfigParam('sharedProjects');\r\n\r\n        var authorableProjects = [];\r\n\r\n        if (projects != null) {\r\n            // add the owned projects\r\n            authorableProjects = authorableProjects.concat(projects);\r\n        }\r\n\r\n        if (sharedProjects != null) {\r\n            // add the shared projects\r\n            authorableProjects = authorableProjects.concat(sharedProjects);\r\n        }\r\n\r\n        // sort the projects by descending id\r\n        authorableProjects.sort(this.sortByProjectId);\r\n\r\n        return authorableProjects;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the current user is logged in as somebody else\r\n     * @return true iff the user is a switched user\r\n     */\r\n    isSwitchedUser() {\r\n        let myUserInfo = this.getMyUserInfo();\r\n\r\n        if (myUserInfo != null) {\r\n\r\n            if (myUserInfo.isSwitchedUser) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Sort the objects by descending id.\r\n     * @param projectA an object with an id field\r\n     * @param projectB an object with an id field\r\n     * @return 1 if projectA comes before projectB\r\n     * -1 if projectA comes after projectB\r\n     * 0 if they are the same\r\n     */\r\n    sortByProjectId(projectA, projectB) {\r\n        var projectIdA = projectA.id;\r\n        var projectIdB = projectB.id;\r\n\r\n        if (projectIdA < projectIdB) {\r\n            return 1;\r\n        } else if (projectIdA > projectIdB) {\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n};\r\n\r\nConfigService.$inject = [\r\n    '$filter',\r\n    '$http',\r\n    '$location'\r\n];\r\n\r\nexport default ConfigService;\r\n"]}