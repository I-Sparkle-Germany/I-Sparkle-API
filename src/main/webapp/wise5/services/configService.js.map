{"version":3,"sources":["configService.es6"],"names":["ConfigService","$filter","$http","$location","config","$translate","sortClassmateUserInfosAlphabeticallyByName","setPermissions","setClassmateDisplayNames","configURL","get","then","result","configJSON","data","retrievalTimestamp","clientTimestamp","Date","getTime","serverTimestamp","timestampDiff","constraints","mode","absURL","$$absUrl","constraintsRegEx","RegExp","match","showProjectPathRegEx","host","location","origin","projectURL","projectPath","console","log","setConfig","isPreview","myUserInfo","getMyUserInfo","workgroupId","Math","floor","random","paramName","getConfigParam","periodId","periods","myClassInfo","userInfo","getUserInfo","userName","classmateUserInfos","getClassmateUserInfos","n","length","i","workgroup","displayNames","getDisplayUserNamesByWorkgroupId","sortedClassmateUserInfos","c","push","sort","compareClassmateUserInfosByWorkgroupId","a","b","teacherWorkgroupId","teacherUserInfo","getTeacherUserInfo","sharedTeacherUserInfos","includeSelf","workgroupIds","getWorkgroupId","classmateUserInfo","sortClassmateUserInfosAlphabeticallyByNameHelper","aUserName","toLowerCase","bUserName","role","getTeacherRole","canViewStudentNames","canGradeStudentWork","tempWorkgroupId","getUserInfoByWorkgroupId","studentNames","userNames","getUserNameByWorkgroupId","userNamesSplit","split","x","indexOfSpace","indexOf","studentFirstName","substring","userNamesObjects","name","id","regex","matches","exec","usernames","names","getUserNamesByWorkgroupId","l","getMode","getSharedTeacherUserInfos","s","sharedTeacherUserInfo","isRunOwner","isRunSharedTeacher","getSharedTeacherRole","content","contentString","JSON","stringify","firstNames","getStudentFirstNamesByWorkgroupId","replace","join","parse","avatarColors","modulo","getLibraryProjectsURL","includeHost","projectAssetsDirectoryPath","projectBaseURL","window","html","assetsDirectoryPathIncludingHost","getProjectAssetsDirectoryPath","assetsDirectoryPathIncludingHostRegEx","assetsDirectoryPathNotIncludingHost","assetsDirectoryPathNotIncludingHostRegEx","wiseIds","userIds","$inject"],"mappings":"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","file":"configService.js","sourcesContent":["'use strict';\n\nclass ConfigService {\n\n    constructor($filter, $http, $location) {\n        this.$filter = $filter;\n        this.$http = $http;\n        this.$location = $location;\n        this.config = null;\n\n        this.$translate = this.$filter('translate');\n    };\n\n    setConfig(config) {\n        this.config = config;\n        this.sortClassmateUserInfosAlphabeticallyByName();\n        this.setPermissions();\n        this.setClassmateDisplayNames();\n    };\n\n    retrieveConfig(configURL) {\n        return this.$http.get(configURL).then((result) => {\n            var configJSON = result.data;\n\n            if (configJSON.retrievalTimestamp != null) {\n                // get the client timestamp\n                var clientTimestamp = new Date().getTime();\n\n                // get the server timestamp\n                var serverTimestamp = configJSON.retrievalTimestamp;\n\n                // get the difference between the client and server time\n                var timestampDiff = clientTimestamp - serverTimestamp;\n\n                // add the timestamp diff to the config object\n                configJSON.timestampDiff = timestampDiff;\n            }\n\n            var constraints = true;\n\n            if (configJSON.mode == 'preview') {\n                // constraints can only be disabled using the url in preview mode\n\n                // get the full url\n                var absURL = this.$location.$$absUrl;\n\n                // regex to match constraints=false in the url\n                var constraintsRegEx = new RegExp(\"constraints=false\", 'gi');\n\n                if (absURL != null && absURL.match(constraintsRegEx)) {\n                    // the url contains constraints=false\n                    constraints = false;\n                }\n            }\n\n            // set the constraints value into the config so we can access it later\n            configJSON.constraints = constraints;\n\n            // regex to match showProjectPath=true in the url\n            var showProjectPathRegEx = new RegExp(\"showProjectPath=true\", 'gi');\n\n            if (absURL != null && absURL.match(showProjectPathRegEx)) {\n                // the url contains showProjectPath=true\n\n                // get the host e.g. http://wise.berkeley.edu\n                var host = location.origin;\n\n                // get the project URL e.g. /wise/curriculum/123/project.json\n                var projectURL = configJSON.projectURL;\n\n                // get the full project path\n                var projectPath = host + projectURL;\n\n                // output the full project path to the console\n                console.log(projectPath);\n            }\n\n            this.setConfig(configJSON);\n\n            if (this.isPreview()) {\n                // assign a random workgroup id\n                var myUserInfo = this.getMyUserInfo();\n                if (myUserInfo != null) {\n                    // set the workgroup id to a random integer between 1 and 100\n                    myUserInfo.workgroupId = Math.floor(100 * Math.random()) + 1;\n                }\n            }\n\n            return configJSON;\n        });\n    };\n\n    getConfigParam(paramName) {\n        if (this.config !== null) {\n            return this.config[paramName];\n        } else {\n            return null;\n        }\n    };\n\n    getAchievementsURL() {\n        return this.getConfigParam('achievementURL');\n    };\n\n    getCRaterRequestURL() {\n        return this.getConfigParam('cRaterRequestURL');\n    };\n\n    getMainHomePageURL() {\n        return this.getConfigParam('mainHomePageURL');\n    };\n\n    getNotificationURL() {\n        return this.getConfigParam('notificationURL');\n    };\n\n    getRunId() {\n        return this.getConfigParam('runId');\n    };\n\n    getProjectId() {\n        return this.getConfigParam('projectId');\n    };\n\n    getOpenCPUURL() {\n        return this.getConfigParam('openCPUURL');\n    };\n\n    getSessionLogOutURL() {\n        return this.getConfigParam('sessionLogOutURL');\n    };\n\n    getStudentAssetsURL() {\n        return this.getConfigParam('studentAssetsURL');\n    };\n\n    getStudentStatusURL() {\n        return this.getConfigParam('studentStatusURL');\n    };\n\n    getStudentMaxTotalAssetsSize() {\n        return this.getConfigParam('studentMaxTotalAssetsSize');\n    };\n\n    getStudentNotebookURL() {\n        return this.getConfigParam('studentNotebookURL');\n    };\n\n    getStudentUploadsBaseURL() {\n        return this.getConfigParam('studentUploadsBaseURL');\n    };\n\n    getUserInfo() {\n        return this.getConfigParam('userInfo');\n    };\n\n    getWebSocketURL() {\n        return this.getConfigParam('webSocketURL');\n    };\n\n    getWISEBaseURL() {\n        return this.getConfigParam('wiseBaseURL');\n    };\n\n    getLocale() {\n        return this.getConfigParam('locale') || 'en';\n    };\n\n    getMode() {\n        return this.getConfigParam('mode');\n    };\n\n    /**\n     * Returns the period id of the logged-in user.\n     */\n    getPeriodId() {\n        var periodId = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            periodId = myUserInfo.periodId;\n        }\n        return periodId;\n    };\n\n    /**\n     * Get the periods\n     * @returns an array of period objects\n     */\n    getPeriods() {\n        var periods = [];\n\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n\n                if (myClassInfo.periods != null) {\n                    periods = myClassInfo.periods;\n                }\n            }\n        }\n\n        return periods;\n    };\n\n    getWorkgroupId() {\n        var workgroupId = null;\n\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            workgroupId = myUserInfo.workgroupId;\n        }\n\n        return workgroupId;\n    };\n\n    getMyUserInfo() {\n        var myUserInfo = null;\n\n        var userInfo = this.getUserInfo();\n        if (userInfo != null) {\n            myUserInfo = userInfo.myUserInfo;\n        }\n\n        return myUserInfo;\n    };\n\n    /**\n     * Get the user name of the signed in user\n     * @return the user name of the signed in user\n     */\n    getMyUserName() {\n\n        var userName = null;\n\n        // get my user info\n        var myUserInfo = this.getMyUserInfo();\n\n        if (myUserInfo != null) {\n            // get the user name\n            userName = myUserInfo.userName;\n        }\n\n        return userName;\n    }\n\n    getClassmateUserInfos() {\n        var classmateUserInfos = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                classmateUserInfos = myClassInfo.classmateUserInfos;\n            }\n        }\n\n        return classmateUserInfos;\n    };\n\n    setClassmateDisplayNames() {\n        let classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos) {\n            let n = classmateUserInfos.length;\n\n            for (let i = 0; i < n; i++) {\n                let workgroup = classmateUserInfos[i];\n                workgroup.displayNames = this.getDisplayUserNamesByWorkgroupId(workgroup.workgroupId);\n            }\n        }\n    }\n\n    /**\n     * Get the classmate user infos sorted by ascending workgroup id\n     * @return an array of classmate user info objects sorted by ascending\n     * workgroup id\n     */\n    getClassmateUserInfosSortedByWorkgroupId() {\n\n        var sortedClassmateUserInfos = [];\n\n        // get all the classmate user info objects\n        var classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos != null) {\n\n            /*\n             * loop through all the classmate user info objects and add it to\n             * new array of classmate user infos\n             */\n            for (var c = 0; c < classmateUserInfos.length; c++) {\n                sortedClassmateUserInfos.push(classmateUserInfos[c]);\n            }\n        }\n\n        // sort the new classmate user infos array by ascending workgroup id\n        sortedClassmateUserInfos.sort(this.compareClassmateUserInfosByWorkgroupId);\n\n        return sortedClassmateUserInfos;\n    }\n\n    /**\n     * Used to sort the classmate user infos by ascending workgroup id.\n     * Use by calling myArray.sort(compareClassmateUserInfosByWorkgroupId)\n     * @param a a user info object\n     * @param b a user info Object\n     * @return -1 if a comes before b\n     * 1 if a comes after b\n     * 0 if a equals b\n     */\n    compareClassmateUserInfosByWorkgroupId(a, b) {\n        if (a.workgroupId < b.workgroupId) {\n            return -1;\n        } else if (a.workgroupId > b.workgroupId) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    getTeacherWorkgroupId() {\n        var teacherWorkgroupId = null;\n        var teacherUserInfo = this.getTeacherUserInfo();\n        if (teacherUserInfo != null) {\n            teacherWorkgroupId = teacherUserInfo.workgroupId;\n        }\n        return teacherWorkgroupId;\n    };\n\n    getTeacherUserInfo() {\n        var teacherUserInfo = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                teacherUserInfo = myClassInfo.teacherUserInfo;\n            }\n        }\n        return teacherUserInfo;\n    };\n\n    /**\n     * Get the shared teacher user infos for the run\n     */\n    getSharedTeacherUserInfos() {\n        var sharedTeacherUserInfos = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                sharedTeacherUserInfos = myClassInfo.sharedTeacherUserInfos;\n            }\n        }\n        return sharedTeacherUserInfos;\n    }\n\n    getClassmateWorkgroupIds(includeSelf) {\n        var workgroupIds = [];\n\n        if (includeSelf) {\n            workgroupIds.push(this.getWorkgroupId());\n        }\n\n        var classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos != null) {\n            for (var c = 0; c < classmateUserInfos.length; c++) {\n                var classmateUserInfo = classmateUserInfos[c];\n\n                if (classmateUserInfo != null) {\n                    var workgroupId = classmateUserInfo.workgroupId;\n\n                    if (workgroupId != null) {\n                        workgroupIds.push(workgroupId);\n                    }\n                }\n            }\n        }\n\n        return workgroupIds;\n    };\n\n    sortClassmateUserInfosAlphabeticallyByName() {\n        var classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos != null) {\n            classmateUserInfos.sort(this.sortClassmateUserInfosAlphabeticallyByNameHelper);\n        }\n\n        return classmateUserInfos;\n    };\n\n    sortClassmateUserInfosAlphabeticallyByNameHelper(a, b) {\n        var result = 0;\n\n        if (a != null && a.userName != null && b != null && b.userName != null) {\n            var aUserName = a.userName.toLowerCase();\n            var bUserName = b.userName.toLowerCase();\n\n            if (aUserName < bUserName) {\n                result = -1;\n            } else if (aUserName > bUserName) {\n                result = 1;\n            }\n        }\n\n        return result;\n    };\n\n    setPermissions() {\n        // get the role of the teacher for the run e.g. 'owner', 'write', 'read'\n        let role = this.getTeacherRole(this.getWorkgroupId());\n\n        if (role === 'owner') {\n            // the teacher is the owner of the run and has full access\n            this.config.canViewStudentNames = true;\n            this.config.canGradeStudentWork = true;\n        } else if (role === 'write') {\n            // the teacher is a shared teacher that can grade the student work\n            this.config.canViewStudentNames = true;\n            this.config.canGradeStudentWork = true;\n        } else if (role === 'read') {\n            // the teacher is a shared teacher that can only view the student work\n            this.config.canViewStudentNames = false;\n            this.config.canGradeStudentWork = false;\n        } else {\n            // teacher role is null, so assume we're in student mode\n            this.config.canViewStudentNames = true;\n            this.config.canGradeStudentWork = false;\n        }\n    }\n\n    getPermissions() {\n        return {\n            canViewStudentNames: this.config.canViewStudentNames,\n            canGradeStudentWork: this.config.canGradeStudentWork\n        }\n    }\n\n    getUserInfoByWorkgroupId(workgroupId) {\n        var userInfo = null;\n\n        if (workgroupId != null) {\n\n            var myUserInfo = this.getMyUserInfo();\n\n            if (myUserInfo != null) {\n                var tempWorkgroupId = myUserInfo.workgroupId;\n\n                if (workgroupId === tempWorkgroupId) {\n                    userInfo = myUserInfo;\n                }\n            }\n\n            if (userInfo == null) {\n                var classmateUserInfos = this.getClassmateUserInfos();\n\n                if (classmateUserInfos != null) {\n                    for (var c = 0; c < classmateUserInfos.length; c++) {\n                        var classmateUserInfo = classmateUserInfos[c];\n\n                        if (classmateUserInfo != null) {\n                            var tempWorkgroupId = classmateUserInfo.workgroupId;\n\n                            if (workgroupId == tempWorkgroupId) {\n                                userInfo = classmateUserInfo;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return userInfo;\n    };\n\n    /**\n     * Get the period id for a workgroup id\n     * @param workgroupId the workgroup id\n     * @returns the period id the workgroup id is in\n     */\n    getPeriodIdByWorkgroupId(workgroupId) {\n        var periodId = null;\n\n        if (workgroupId != null) {\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                periodId = userInfo.periodId;\n            }\n        }\n\n        return periodId;\n    };\n\n    /**\n     * Get the student names\n     * @param workgroupId the workgroup id\n     * @return an array containing the student names\n     */\n    getStudentFirstNamesByWorkgroupId(workgroupId) {\n        var studentNames = [];\n\n        // get the user names for the workgroup e.g. \"Spongebob Squarepants (SpongebobS0101):Patrick Star (PatrickS0101)\"\n        var userNames = this.getUserNameByWorkgroupId(workgroupId);\n\n        if (userNames != null) {\n            // split the user names string by ':'\n            var userNamesSplit = userNames.split(':');\n\n            if (userNamesSplit != null) {\n                // loop through each user name\n                for (var x = 0; x < userNamesSplit.length; x++) {\n                    // get a user name e.g. \"Spongebob Squarepants (spongebobs0101)\"\n                    var userName = userNamesSplit[x];\n\n                    // get the index of the first empty space\n                    var indexOfSpace = userName.indexOf(' ');\n\n                    // get the student first name e.g. \"Spongebob\"\n                    var studentFirstName = userName.substring(0, indexOfSpace);\n\n                    // add the student name to the array\n                    studentNames.push(studentFirstName);\n                }\n            }\n        }\n\n        return studentNames;\n    };\n\n    getUserNameByWorkgroupId(workgroupId) {\n        var userName = null;\n\n        if (workgroupId != null) {\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                userName = userInfo.userName;\n            }\n        }\n\n        return userName;\n    };\n\n    getDisplayNamesByWorkgroupId(workgroupId) {\n        var displayNames = null;\n\n        if (workgroupId != null) {\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                displayNames = userInfo.displayNames;\n            }\n        }\n\n        return displayNames;\n    };\n\n    getUserNamesByWorkgroupId(workgroupId) {\n        let userNamesObjects = [];\n\n        if (workgroupId != null) {\n            let userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                let userNames = userInfo.userName.split(':');\n\n                for (let i = 0; i < userNames.length; i++) {\n                    let name = userNames[i];\n                    let id = \"\";\n                    let regex = /(.+) \\((.+)\\)/g;\n                    let matches = regex.exec(name);\n                    if (matches) {\n                        name = matches[1];\n                        id = matches[2];\n                    }\n                    userNamesObjects.push({\n                        name: name,\n                        id: id\n                    });\n                }\n            }\n        }\n\n        return userNamesObjects;\n    };\n\n    getDisplayUserNamesByWorkgroupId(workgroupId) {\n        let usernames = '';\n\n        if (workgroupId != null) {\n            if (this.config.canViewStudentNames) {\n                let names = this.getUserNamesByWorkgroupId(workgroupId);\n                let l = names.length;\n                for (let i = 0; i < l; i++) {\n                    let name = names[i].name;\n                    usernames += name;\n\n                    if (i < (l-1)) {\n                        usernames += ', ';\n                    }\n                }\n            } else {\n                // current user is not allowed to view student names, so return string with workgroupId\n                usernames = this.$translate('teamId', {id: workgroupId});\n            }\n        }\n\n        return usernames;\n    };\n\n    isPreview() {\n        var result = false;\n\n        var mode = this.getMode();\n\n        if (mode != null && mode === 'preview') {\n            result = true;\n        }\n\n        return result;\n    };\n\n    /**\n     * Convert a client timestamp to a server timestamp. This is required\n     * in case the client and server clocks are not synchronized.\n     * @param clientTimestamp the client timestamp\n     */\n    convertToServerTimestamp(clientTimestamp) {\n\n        // get the difference between the client time and server time\n        var timestampDiff = this.getConfigParam('timestampDiff');\n\n        // convert the client timestamp to a server timestamp\n        var serverTimestamp = clientTimestamp - timestampDiff;\n\n        return serverTimestamp;\n    }\n\n    /**\n     * Convert a server timestamp to a client timestamp. This is required\n     * in case the client and server clocks are not synchronized.\n     * @param serverTimestamp the client timestamp\n     */\n    convertToClientTimestamp(serverTimestamp) {\n\n        // get the difference between the client time and server time\n        var timestampDiff = this.getConfigParam('timestampDiff');\n\n        // convert the client timestamp to a server timestamp\n        var clientTimestamp = serverTimestamp + timestampDiff;\n\n        return clientTimestamp;\n    }\n\n    /**\n     * Check if the workgroup is the owner of the run\n     * @param workgroupId the workgroup id\n     * @returns whether the workgroup is the owner of the run\n     */\n    isRunOwner(workgroupId) {\n\n        var result = false;\n\n        if (workgroupId != null) {\n            var teacherUserInfo = this.getTeacherUserInfo();\n\n            if (teacherUserInfo != null) {\n\n                if (workgroupId == teacherUserInfo.workgroupId) {\n                    result = true;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Check if the workgroup is a shared teacher for the run\n     * @param workgroupId the workgroup id\n     * @returns whether the workgroup is a shared teacher of the run\n     */\n    isRunSharedTeacher(workgroupId) {\n\n        var result = false;\n\n        if (workgroupId != null) {\n            var sharedTeacherUserInfos = this.getSharedTeacherUserInfos();\n\n            if (sharedTeacherUserInfos != null) {\n\n                for (var s = 0; s < sharedTeacherUserInfos.length; s++) {\n                    var sharedTeacherUserInfo = sharedTeacherUserInfos[s];\n\n                    if (sharedTeacherUserInfo != null) {\n                        if (workgroupId == sharedTeacherUserInfo.workgroupId) {\n                            result = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Get the teacher role for the run\n     * @param workgroupId the workgroup id\n     * @returns the role of the teacher for the run. the possible values are\n     * 'owner', 'write', 'read'\n     */\n    getTeacherRole(workgroupId) {\n        var role = null;\n\n        if (this.isRunOwner(workgroupId)) {\n            // the teacher is the owner of the run\n            role = 'owner';\n        } else if (this.isRunSharedTeacher(workgroupId)) {\n            // the teacher is a shared teacher so their role may be 'write' or 'read'\n            role = this.getSharedTeacherRole(workgroupId);\n        }\n\n        return role;\n    }\n\n    /**\n     * Get the shared teacher role for the run\n     * @param workgroupId the workgroup id\n     * @returns the shared teacher role for the run. the possible values are\n     * 'write' or 'read'\n     */\n    getSharedTeacherRole(workgroupId) {\n        var role = null;\n\n        if (workgroupId != null) {\n            var sharedTeacherUserInfos = this.getSharedTeacherUserInfos();\n\n            if (sharedTeacherUserInfos != null) {\n\n                for (var s = 0; s < sharedTeacherUserInfos.length; s++) {\n                    var sharedTeacherUserInfo = sharedTeacherUserInfos[s];\n\n                    if (sharedTeacherUserInfo != null) {\n                        if (workgroupId == sharedTeacherUserInfo.workgroupId) {\n                            role = sharedTeacherUserInfo.role;\n                        }\n                    }\n                }\n            }\n        }\n\n        return role;\n    }\n\n    /**\n     * Replace student names in the content.\n     * For example, we will replace instances of {{firstStudentFirstName}}\n     * with the actual first name of the first student in the workgroup.\n     * @param content a content object or string\n     * @return an updated content object or string\n     */\n    replaceStudentNames(content) {\n        if (content != null) {\n\n            var contentString = content;\n\n            if (typeof content === 'object') {\n                // get the content as a string\n                contentString = JSON.stringify(content);\n            }\n\n            if (contentString != null) {\n\n                // get the workgroup id\n                var workgroupId = this.getWorkgroupId();\n\n                // get all the first names\n                var firstNames = this.getStudentFirstNamesByWorkgroupId(workgroupId);\n\n                if (firstNames.length >= 1) {\n                    /*\n                     * there are 1 or more students in the workgroup so we can\n                     * replace the first student first name with the actual\n                     * name\n                     */\n                    contentString = contentString.replace(new RegExp('{{firstStudentFirstName}}', 'gi'), firstNames[0]);\n\n                    /*\n                     * there are 1 or more students in the workgroup so we can\n                     * replace the student first names with the actual names\n                     */\n                    contentString = contentString.replace(new RegExp('{{studentFirstNames}}', 'gi'), firstNames.join(\", \"));\n                }\n\n                if (firstNames.length >= 2) {\n                    /*\n                     * there are 2 or more students in the workgroup so we can\n                     * replace the second student first name with the actual\n                     * name\n                     */\n                    contentString = contentString.replace(new RegExp('{{secondStudentFirstName}}', 'gi'), firstNames[1]);\n                }\n\n                if (firstNames.length >= 3) {\n                    /*\n                     * there are 3 or more students in the workgroup so we can\n                     * replace the third student first name with the actual\n                     * name\n                     */\n                    contentString = contentString.replace(new RegExp('{{thirdStudentFirstName}}', 'gi'), firstNames[2]);\n                }\n            }\n\n            if (typeof content === 'object') {\n                // convert the content string back into an object\n                content = JSON.parse(contentString);\n            } else if (typeof content === 'string') {\n                // the content was a string so we can just use the content string\n                content = contentString;\n            }\n        }\n\n        return content;\n    }\n\n    getAvatarColorForWorkgroupId(workgroupId) {\n        var avatarColors = ['#E91E63', '#9C27B0', '#CDDC39', '#2196F3', '#FDD835', '#43A047', '#795548', '#EF6C00', '#C62828', '#607D8B'];\n        var modulo = workgroupId % 10;\n        return avatarColors[modulo];\n    }\n\n    /**\n     * Get the library projects\n     */\n    getLibraryProjects() {\n\n        // get the URL to get the list of library projects\n        var getLibraryProjectsURL = this.getConfigParam('getLibraryProjectsURL');\n\n        if (getLibraryProjectsURL != null) {\n\n            // request the list of library projects\n            return this.$http.get(getLibraryProjectsURL).then((result) => {\n                //console.log(result.data);\n                return result.data;\n            });\n        }\n    }\n\n    /**\n     * Get the project assets folder path\n     * @param includeHost whether to include the host in the URL\n     * @return the project assets folder path\n     * e.g.\n     * with host\n     * http://wise.berkeley.edu/wise/curriculum/3/assets\n     * without host\n     * /wise/curriculum/3/assets\n     */\n    getProjectAssetsDirectoryPath(includeHost) {\n        var projectAssetsDirectoryPath = null;\n\n        // get the project base URL e.g. /wise/curriculum/3/\n        var projectBaseURL = this.getConfigParam('projectBaseURL');\n\n        if (projectBaseURL != null) {\n            if (includeHost) {\n                // get the host e.g. http://wise.berkeley.edu\n                var host = window.location.origin;\n\n                /*\n                 * get the full path including the host\n                 * e.g. http://wise.berkeley.edu/wise/curriculum/3/assets\n                 */\n                projectAssetsDirectoryPath = host + projectBaseURL + 'assets';\n            } else {\n                /*\n                 * get the full path not including the host\n                 * e.g. /wise/curriculum/3/assets\n                 */\n                projectAssetsDirectoryPath = projectBaseURL + 'assets';\n            }\n        }\n\n        return projectAssetsDirectoryPath;\n    }\n\n    /**\n     * Remove the absolute asset paths\n     * e.g.\n     * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n     * will be changed to\n     * <img src='sun.png'/>\n     * @param html the html\n     * @return the modified html without the absolute asset paths\n     */\n    removeAbsoluteAssetPaths(html) {\n        /*\n         * get the assets directory path with the host\n         * e.g.\n         * https://wise.berkeley.edu/wise/curriculum/3/assets/\n         */\n        var includeHost = true;\n        var assetsDirectoryPathIncludingHost = this.getProjectAssetsDirectoryPath(includeHost);\n        var assetsDirectoryPathIncludingHostRegEx = new RegExp(assetsDirectoryPathIncludingHost, 'g');\n\n        /*\n         * get the assets directory path without the host\n         * e.g.\n         * /wise/curriculum/3/assets/\n         */\n        var assetsDirectoryPathNotIncludingHost = this.getProjectAssetsDirectoryPath() + '/';\n        var assetsDirectoryPathNotIncludingHostRegEx = new RegExp(assetsDirectoryPathNotIncludingHost, 'g');\n\n        /*\n         * remove the directory path from the html so that only the file name\n         * remains in asset references\n         * e.g.\n         * <img src='https://wise.berkeley.edu/wise/curriculum/3/assets/sun.png'/>\n         * will be changed to\n         * <img src='sun.png'/>\n         */\n        html = html.replace(assetsDirectoryPathIncludingHostRegEx, '');\n        html = html.replace(assetsDirectoryPathNotIncludingHostRegEx, '');\n\n        return html\n    }\n\n    /**\n     * Get the WISE IDs for a workgroup\n     * @param workgroupId get the WISE IDs for this workgroup\n     * @return an array of WISE IDs\n     */\n    getWISEIds(workgroupId) {\n\n        var wiseIds = [];\n\n        if (workgroupId != null) {\n            // get the user info object for the workgroup id\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                // get the WISE IDs\n                wiseIds = userInfo.userIds;\n            }\n        }\n\n        return wiseIds;\n    }\n};\n\nConfigService.$inject = [\n    '$filter',\n    '$http',\n    '$location'\n];\n\nexport default ConfigService;\n"]}