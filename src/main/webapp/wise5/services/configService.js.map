{"version":3,"sources":["configService.es6"],"names":["ConfigService","$http","$location","config","sortClassmateUserInfosAlphabeticallyByName","configURL","get","then","result","configJSON","data","retrievalTimestamp","clientTimestamp","Date","getTime","serverTimestamp","timestampDiff","constraints","absURL","$$absUrl","constraintsRegEx","RegExp","match","showProjectPathRegEx","host","location","origin","projectURL","projectPath","console","log","setConfig","isPreview","myUserInfo","getMyUserInfo","workgroupId","Math","floor","random","paramName","getConfigParam","periodId","periods","myClassInfo","userInfo","getUserInfo","userName","classmateUserInfos","sortedClassmateUserInfos","getClassmateUserInfos","c","length","push","sort","compareClassmateUserInfosByWorkgroupId","a","b","teacherWorkgroupId","teacherUserInfo","getTeacherUserInfo","sharedTeacherUserInfos","includeSelf","workgroupIds","getWorkgroupId","classmateUserInfo","sortClassmateUserInfosAlphabeticallyByNameHelper","aUserName","bUserName","tempWorkgroupId","getUserInfoByWorkgroupId","studentNames","userNames","getUserNameByWorkgroupId","userNamesSplit","split","x","indexOfSpace","indexOf","studentFirstName","substring","userNamesObjects","i","name","id","regex","matches","exec","mode","getMode","getSharedTeacherUserInfos","s","sharedTeacherUserInfo","role","isRunOwner","isRunSharedTeacher","getSharedTeacherRole","content","contentString","JSON","stringify","firstNames","getStudentFirstNamesByWorkgroupId","replace","join","parse","avatarColors","modulo","getLibraryProjectsURL","includeHost","projectAssetsDirectoryPath","projectBaseURL","window","html","assetsDirectoryPathIncludingHost","getProjectAssetsDirectoryPath","assetsDirectoryPathIncludingHostRegEx","assetsDirectoryPathNotIncludingHost","assetsDirectoryPathNotIncludingHostRegEx","wiseIds","userIds","$inject"],"mappings":"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","file":"configService.js","sourcesContent":["'use strict';\n\nclass ConfigService {\n\n    constructor($http, $location) {\n        this.$http = $http;\n        this.$location = $location;\n        this.config = null;\n    };\n\n    setConfig(config) {\n        this.config = config;\n        this.sortClassmateUserInfosAlphabeticallyByName();\n    };\n\n    retrieveConfig(configURL) {\n        return this.$http.get(configURL).then((result) => {\n            var configJSON = result.data;\n\n            if (configJSON.retrievalTimestamp != null) {\n                // get the client timestamp\n                var clientTimestamp = new Date().getTime();\n\n                // get the server timestamp\n                var serverTimestamp = configJSON.retrievalTimestamp;\n\n                // get the difference between the client and server time\n                var timestampDiff = clientTimestamp - serverTimestamp;\n\n                // add the timestamp diff to the config object\n                configJSON.timestampDiff = timestampDiff;\n            }\n\n            var constraints = true;\n\n            // get the full url\n            var absURL = this.$location.$$absUrl;\n\n            // regex to match constraints=false in the url\n            var constraintsRegEx = new RegExp(\"constraints=false\", 'gi');\n\n            if (absURL != null && absURL.match(constraintsRegEx)) {\n                // the url contains constraints=false\n                constraints = false;\n            }\n\n            // set the constraints value into the config so we can access it later\n            configJSON.constraints = constraints;\n\n            // regex to match showProjectPath=true in the url\n            var showProjectPathRegEx = new RegExp(\"showProjectPath=true\", 'gi');\n\n            if (absURL != null && absURL.match(showProjectPathRegEx)) {\n                // the url contains showProjectPath=true\n\n                // get the host e.g. http://wise.berkeley.edu\n                var host = location.origin;\n\n                // get the project URL e.g. /wise/curriculum/123/project.json\n                var projectURL = configJSON.projectURL;\n\n                // get the full project path\n                var projectPath = host + projectURL;\n\n                // output the full project path to the console\n                console.log(projectPath);\n            }\n\n            this.setConfig(configJSON);\n\n            if (this.isPreview()) {\n                // assign a random workgroup id\n                var myUserInfo = this.getMyUserInfo();\n                if (myUserInfo != null) {\n                    // set the workgroup id to a random integer between 1 and 100\n                    myUserInfo.workgroupId = Math.floor(100 * Math.random()) + 1;\n                }\n            }\n\n            return configJSON;\n        });\n    };\n\n    getConfigParam(paramName) {\n        if (this.config !== null) {\n            return this.config[paramName];\n        } else {\n            return null;\n        }\n    };\n\n    getCRaterRequestURL() {\n        return this.getConfigParam('cRaterRequestURL');\n    };\n\n    getMainHomePageURL() {\n        return this.getConfigParam('mainHomePageURL');\n    };\n\n    getNotificationURL() {\n        return this.getConfigParam('notificationURL');\n    };\n\n    getRunId() {\n        return this.getConfigParam('runId');\n    };\n\n    getProjectId() {\n        return this.getConfigParam('projectId');\n    };\n\n    getOpenCPUURL() {\n        return this.getConfigParam('openCPUURL');\n    };\n\n    getSessionLogOutURL() {\n        return this.getConfigParam('sessionLogOutURL');\n    };\n\n    getStudentAssetsURL() {\n        return this.getConfigParam('studentAssetsURL');\n    };\n\n    getStudentStatusURL() {\n        return this.getConfigParam('studentStatusURL');\n    };\n\n    getStudentMaxTotalAssetsSize() {\n        return this.getConfigParam('studentMaxTotalAssetsSize');\n    };\n\n    getStudentNotebookURL() {\n        return this.getConfigParam('studentNotebookURL');\n    };\n\n    getStudentUploadsBaseURL() {\n        return this.getConfigParam('studentUploadsBaseURL');\n    };\n\n    getUserInfo() {\n        return this.getConfigParam('userInfo');\n    };\n\n    getWebSocketURL() {\n        return this.getConfigParam('webSocketURL');\n    };\n\n    getWISEBaseURL() {\n        return this.getConfigParam('wiseBaseURL');\n    };\n\n    getLocale() {\n        return this.getConfigParam('locale') || 'en';\n    };\n\n    getMode() {\n        return this.getConfigParam('mode');\n    };\n\n    /**\n     * Returns the period id of the logged-in user.\n     */\n    getPeriodId() {\n        var periodId = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            periodId = myUserInfo.periodId;\n        }\n        return periodId;\n    };\n\n    /**\n     * Get the periods\n     * @returns an array of period objects\n     */\n    getPeriods() {\n        var periods = [];\n\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n\n                if (myClassInfo.periods != null) {\n                    periods = myClassInfo.periods;\n                }\n            }\n        }\n\n        return periods;\n    };\n\n    getWorkgroupId() {\n        var workgroupId = null;\n\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            workgroupId = myUserInfo.workgroupId;\n        }\n\n        return workgroupId;\n    };\n\n    getMyUserInfo() {\n        var myUserInfo = null;\n\n        var userInfo = this.getUserInfo();\n        if (userInfo != null) {\n            myUserInfo = userInfo.myUserInfo;\n        }\n\n        return myUserInfo;\n    };\n\n    /**\n     * Get the user name of the signed in user\n     * @return the user name of the signed in user\n     */\n    getMyUserName() {\n\n        var userName = null;\n\n        // get my user info\n        var myUserInfo = this.getMyUserInfo();\n\n        if (myUserInfo != null) {\n            // get the user name\n            userName = myUserInfo.userName;\n        }\n\n        return userName;\n    }\n\n    getClassmateUserInfos() {\n        var classmateUserInfos = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                classmateUserInfos = myClassInfo.classmateUserInfos;\n            }\n        }\n\n        return classmateUserInfos;\n    };\n\n    /**\n     * Get the classmate user infos sorted by ascending workgroup id\n     * @return an array of classmate user info objects sorted by ascending\n     * workgroup id\n     */\n    getClassmateUserInfosSortedByWorkgroupId() {\n\n        var sortedClassmateUserInfos = [];\n\n        // get all the classmate user info objects\n        var classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos != null) {\n\n            /*\n             * loop through all the classmate user info objects and add it to\n             * new array of classmate user infos\n             */\n            for (var c = 0; c < classmateUserInfos.length; c++) {\n                sortedClassmateUserInfos.push(classmateUserInfos[c]);\n            }\n        }\n\n        // sort the new classmate user infos array by ascending workgroup id\n        sortedClassmateUserInfos.sort(this.compareClassmateUserInfosByWorkgroupId);\n\n        return sortedClassmateUserInfos;\n    }\n\n    /**\n     * Used to sort the classmate user infos by ascending workgroup id.\n     * Use by calling myArray.sort(compareClassmateUserInfosByWorkgroupId)\n     * @param a a user info object\n     * @param b a user info Object\n     * @return -1 if a comes before b\n     * 1 if a comes after b\n     * 0 if a equals b\n     */\n    compareClassmateUserInfosByWorkgroupId(a, b) {\n        if (a.workgroupId < b.workgroupId) {\n            return -1;\n        } else if (a.workgroupId > b.workgroupId) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    getTeacherWorkgroupId() {\n        var teacherWorkgroupId = null;\n        var teacherUserInfo = this.getTeacherUserInfo();\n        if (teacherUserInfo != null) {\n            teacherWorkgroupId = teacherUserInfo.workgroupId;\n        }\n        return teacherWorkgroupId;\n    };\n\n    getTeacherUserInfo() {\n        var teacherUserInfo = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                teacherUserInfo = myClassInfo.teacherUserInfo;\n            }\n        }\n        return teacherUserInfo;\n    };\n\n    /**\n     * Get the shared teacher user infos for the run\n     */\n    getSharedTeacherUserInfos() {\n        var sharedTeacherUserInfos = null;\n        var myUserInfo = this.getMyUserInfo();\n        if (myUserInfo != null) {\n            var myClassInfo = myUserInfo.myClassInfo;\n            if (myClassInfo != null) {\n                sharedTeacherUserInfos = myClassInfo.sharedTeacherUserInfos;\n            }\n        }\n        return sharedTeacherUserInfos;\n    }\n\n    getClassmateWorkgroupIds(includeSelf) {\n        var workgroupIds = [];\n\n        if (includeSelf) {\n            workgroupIds.push(this.getWorkgroupId());\n        }\n\n        var classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos != null) {\n            for (var c = 0; c < classmateUserInfos.length; c++) {\n                var classmateUserInfo = classmateUserInfos[c];\n\n                if (classmateUserInfo != null) {\n                    var workgroupId = classmateUserInfo.workgroupId;\n\n                    if (workgroupId != null) {\n                        workgroupIds.push(workgroupId);\n                    }\n                }\n            }\n        }\n\n        return workgroupIds;\n    };\n\n    sortClassmateUserInfosAlphabeticallyByName() {\n        var classmateUserInfos = this.getClassmateUserInfos();\n\n        if (classmateUserInfos != null) {\n            classmateUserInfos.sort(this.sortClassmateUserInfosAlphabeticallyByNameHelper);\n        }\n\n        return classmateUserInfos;\n    };\n\n    sortClassmateUserInfosAlphabeticallyByNameHelper(a, b) {\n        var aUserName = a.userName;\n        var bUserName = b.userName;\n        var result = 0;\n\n        if (aUserName < bUserName) {\n            result = -1;\n        } else if (aUserName > bUserName) {\n            result = 1;\n        }\n\n        return result;\n    };\n\n    getUserInfoByWorkgroupId(workgroupId) {\n        var userInfo = null;\n\n        if (workgroupId != null) {\n\n            var myUserInfo = this.getMyUserInfo();\n\n            if (myUserInfo != null) {\n                var tempWorkgroupId = myUserInfo.workgroupId;\n\n                if (workgroupId === tempWorkgroupId) {\n                    userInfo = myUserInfo;\n                }\n            }\n\n            if (userInfo == null) {\n                var classmateUserInfos = this.getClassmateUserInfos();\n\n                if (classmateUserInfos != null) {\n                    for (var c = 0; c < classmateUserInfos.length; c++) {\n                        var classmateUserInfo = classmateUserInfos[c];\n\n                        if (classmateUserInfo != null) {\n                            var tempWorkgroupId = classmateUserInfo.workgroupId;\n\n                            if (workgroupId == tempWorkgroupId) {\n                                userInfo = classmateUserInfo;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return userInfo;\n    };\n\n    /**\n     * Get the period id for a workgroup id\n     * @param workgroupId the workgroup id\n     * @returns the period id the workgroup id is in\n     */\n    getPeriodIdByWorkgroupId(workgroupId) {\n        var periodId = null;\n\n        if (workgroupId != null) {\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                periodId = userInfo.periodId;\n            }\n        }\n\n        return periodId;\n    };\n\n    /**\n     * Get the student names\n     * @param workgroupId the workgroup id\n     * @return an array containing the student names\n     */\n    getStudentFirstNamesByWorkgroupId(workgroupId) {\n        var studentNames = [];\n\n        // get the user names for the workgroup e.g. \"Spongebob Squarepants (SpongebobS0101):Patrick Star (PatrickS0101)\"\n        var userNames = this.getUserNameByWorkgroupId(workgroupId);\n\n        if (userNames != null) {\n            // split the user names string by ':'\n            var userNamesSplit = userNames.split(':');\n\n            if (userNamesSplit != null) {\n                // loop through each user name\n                for (var x = 0; x < userNamesSplit.length; x++) {\n                    // get a user name e.g. \"Spongebob Squarepants (spongebobs0101)\"\n                    var userName = userNamesSplit[x];\n\n                    // get the index of the first empty space\n                    var indexOfSpace = userName.indexOf(' ');\n\n                    // get the student first name e.g. \"Spongebob\"\n                    var studentFirstName = userName.substring(0, indexOfSpace);\n\n                    // add the student name to the array\n                    studentNames.push(studentFirstName);\n                }\n            }\n        }\n\n        return studentNames;\n    };\n\n    getUserNameByWorkgroupId(workgroupId) {\n        var userName = null;\n\n        if (workgroupId != null) {\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                userName = userInfo.userName;\n            }\n        }\n\n        return userName;\n    };\n\n    getUserNamesByWorkgroupId(workgroupId) {\n        let userNamesObjects = [];\n\n        if (workgroupId != null) {\n            let userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                let userNames = userInfo.userName.split(':');\n\n                for (let i = 0; i < userNames.length; i++) {\n                    let name = userNames[i];\n                    let id = \"\";\n                    let regex = /(.+) \\((.+)\\)/g;\n                    let matches = regex.exec(name);\n                    if (matches) {\n                        name = matches[1];\n                        id = matches[2];\n                    }\n                    userNamesObjects.push({\n                        name: name,\n                        id: id\n                    });\n                }\n            }\n        }\n\n        return userNamesObjects;\n    };\n\n    isPreview() {\n        var result = false;\n\n        var mode = this.getMode();\n\n        if (mode != null && mode === 'preview') {\n            result = true;\n        }\n\n        return result;\n    };\n\n    /**\n     * Convert a client timestamp to a server timestamp. This is required\n     * in case the client and server clocks are not synchronized.\n     * @param clientTimestamp the client timestamp\n     */\n    convertToServerTimestamp(clientTimestamp) {\n\n        // get the difference between the client time and server time\n        var timestampDiff = this.getConfigParam('timestampDiff');\n\n        // convert the client timestamp to a server timestamp\n        var serverTimestamp = clientTimestamp - timestampDiff;\n\n        return serverTimestamp;\n    }\n\n    /**\n     * Convert a server timestamp to a client timestamp. This is required\n     * in case the client and server clocks are not synchronized.\n     * @param serverTimestamp the client timestamp\n     */\n    convertToClientTimestamp(serverTimestamp) {\n\n        // get the difference between the client time and server time\n        var timestampDiff = this.getConfigParam('timestampDiff');\n\n        // convert the client timestamp to a server timestamp\n        var clientTimestamp = serverTimestamp + timestampDiff;\n\n        return clientTimestamp;\n    }\n\n    /**\n     * Check if the workgroup is the owner of the run\n     * @param workgroupId the workgroup id\n     * @returns whether the workgroup is the owner of the run\n     */\n    isRunOwner(workgroupId) {\n\n        var result = false;\n\n        if (workgroupId != null) {\n            var teacherUserInfo = this.getTeacherUserInfo();\n\n            if (teacherUserInfo != null) {\n\n                if (workgroupId == teacherUserInfo.workgroupId) {\n                    result = true;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Check if the workgroup is a shared teacher for the run\n     * @param workgroupId the workgroup id\n     * @returns whether the workgroup is a shared teacher of the run\n     */\n    isRunSharedTeacher(workgroupId) {\n\n        var result = false;\n\n        if (workgroupId != null) {\n            var sharedTeacherUserInfos = this.getSharedTeacherUserInfos();\n\n            if (sharedTeacherUserInfos != null) {\n\n                for (var s = 0; s < sharedTeacherUserInfos.length; s++) {\n                    var sharedTeacherUserInfo = sharedTeacherUserInfos[s];\n\n                    if (sharedTeacherUserInfo != null) {\n                        if (workgroupId == sharedTeacherUserInfo.workgroupId) {\n                            result = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Get the teacher role for the run\n     * @param workgroupId the workgroup id\n     * @returns the role of the teacher for the run. the possible values are\n     * 'owner', 'write', 'read'\n     */\n    getTeacherRole(workgroupId) {\n        var role = null;\n\n        if (this.isRunOwner(workgroupId)) {\n            // the teacher is the owner of the run\n            role = 'owner';\n        } else if (this.isRunSharedTeacher(workgroupId)) {\n            // the teacher is a shared teacher so their role may be 'write' or 'read'\n            role = this.getSharedTeacherRole(workgroupId);\n        }\n\n        return role;\n    }\n\n    /**\n     * Get the shared teacher role for the run\n     * @param workgroupId the workgroup id\n     * @returns the shared teacher role for the run. the possible values are\n     * 'write' or 'read'\n     */\n    getSharedTeacherRole(workgroupId) {\n        var role = null;\n\n        if (workgroupId != null) {\n            var sharedTeacherUserInfos = this.getSharedTeacherUserInfos();\n\n            if (sharedTeacherUserInfos != null) {\n\n                for (var s = 0; s < sharedTeacherUserInfos.length; s++) {\n                    var sharedTeacherUserInfo = sharedTeacherUserInfos[s];\n\n                    if (sharedTeacherUserInfo != null) {\n                        if (workgroupId == sharedTeacherUserInfo.workgroupId) {\n                            role = sharedTeacherUserInfo.role;\n                        }\n                    }\n                }\n            }\n        }\n\n        return role;\n    }\n\n    /**\n     * Replace student names in the content.\n     * For example, we will replace instances of {{firstStudentFirstName}}\n     * with the actual first name of the first student in the workgroup.\n     * @param content a content object or string\n     * @return an updated content object or string\n     */\n    replaceStudentNames(content) {\n        if (content != null) {\n\n            var contentString = content;\n\n            if (typeof content === 'object') {\n                // get the content as a string\n                contentString = JSON.stringify(content);\n            }\n\n            if (contentString != null) {\n\n                // get the workgroup id\n                var workgroupId = this.getWorkgroupId();\n\n                // get all the first names\n                var firstNames = this.getStudentFirstNamesByWorkgroupId(workgroupId);\n\n                if (firstNames.length >= 1) {\n                    /*\n                     * there are 1 or more students in the workgroup so we can\n                     * replace the first student first name with the actual\n                     * name\n                     */\n                    contentString = contentString.replace(new RegExp('{{firstStudentFirstName}}', 'gi'), firstNames[0]);\n\n                    /*\n                     * there are 1 or more students in the workgroup so we can\n                     * replace the student first names with the actual names\n                     */\n                    contentString = contentString.replace(new RegExp('{{studentFirstNames}}', 'gi'), firstNames.join(\", \"));\n                }\n\n                if (firstNames.length >= 2) {\n                    /*\n                     * there are 2 or more students in the workgroup so we can\n                     * replace the second student first name with the actual\n                     * name\n                     */\n                    contentString = contentString.replace(new RegExp('{{secondStudentFirstName}}', 'gi'), firstNames[1]);\n                }\n\n                if (firstNames.length >= 3) {\n                    /*\n                     * there are 3 or more students in the workgroup so we can\n                     * replace the third student first name with the actual\n                     * name\n                     */\n                    contentString = contentString.replace(new RegExp('{{thirdStudentFirstName}}', 'gi'), firstNames[2]);\n                }\n            }\n\n            if (typeof content === 'object') {\n                // convert the content string back into an object\n                content = JSON.parse(contentString);\n            } else if (typeof content === 'string') {\n                // the content was a string so we can just use the content string\n                content = contentString;\n            }\n        }\n\n        return content;\n    }\n\n    getAvatarColorForWorkgroupId(workgroupId) {\n        var avatarColors = ['#E91E63', '#9C27B0', '#CDDC39', '#2196F3', '#FDD835', '#43A047', '#795548', '#EF6C00', '#C62828', '#607D8B'];\n        var modulo = workgroupId % 10;\n        return avatarColors[modulo];\n    }\n\n    /**\n     * Get the library projects\n     */\n    getLibraryProjects() {\n\n        // get the URL to get the list of library projects\n        var getLibraryProjectsURL = this.getConfigParam('getLibraryProjectsURL');\n\n        if (getLibraryProjectsURL != null) {\n\n            // request the list of library projects\n            return this.$http.get(getLibraryProjectsURL).then((result) => {\n                //console.log(result.data);\n                return result.data;\n            });\n        }\n    }\n\n    /**\n     * Get the project assets folder path\n     * @param includeHost whether to include the host in the URL\n     * @return the project assets folder path\n     * e.g.\n     * with host\n     * http://wise.berkeley.edu/wise/curriculum/3/\n     * without host\n     * /wise/curriculum/3/\n     */\n    getProjectAssetsDirectoryPath(includeHost) {\n        var projectAssetsDirectoryPath = null;\n\n        // get the project base URL e.g. /wise/curriculum/3/\n        var projectBaseURL = this.getConfigParam('projectBaseURL');\n\n        if (projectBaseURL != null) {\n            if (includeHost) {\n                // get the host e.g. http://wise.berkeley.edu\n                var host = window.location.origin;\n\n                /*\n                 * get the full path including the host\n                 * e.g. http://wise.berkeley.edu/wise/curriculum/3/\n                 */\n                projectAssetsDirectoryPath = host + projectBaseURL + 'assets';\n            } else {\n                /*\n                 * get the full path not including the host\n                 * e.g. /wise/curriculum/3/\n                 */\n                projectAssetsDirectoryPath = projectBaseURL + 'assets';\n            }\n        }\n\n        return projectAssetsDirectoryPath;\n    }\n\n    /**\n     * Remove the absolute asset paths\n     * e.g.\n     * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\n     * will be changed to\n     * <img src='sun.png'/>\n     * @param html the html\n     * @return the modified html without the absolute asset paths\n     */\n    removeAbsoluteAssetPaths(html) {\n        /*\n         * get the assets directory path with the host\n         * e.g.\n         * https://wise.berkeley.edu/wise/curriculum/3/assets/\n         */\n        var includeHost = true;\n        var assetsDirectoryPathIncludingHost = this.getProjectAssetsDirectoryPath(includeHost);\n        var assetsDirectoryPathIncludingHostRegEx = new RegExp(assetsDirectoryPathIncludingHost, 'g');\n\n        /*\n         * get the assets directory path without the host\n         * e.g.\n         * /wise/curriculum/3/assets/\n         */\n        var assetsDirectoryPathNotIncludingHost = this.getProjectAssetsDirectoryPath() + '/';\n        var assetsDirectoryPathNotIncludingHostRegEx = new RegExp(assetsDirectoryPathNotIncludingHost, 'g');\n\n        /*\n         * remove the directory path from the html so that only the file name\n         * remains in asset references\n         * e.g.\n         * <img src='https://wise.berkeley.edu/wise/curriculum/3/assets/sun.png'/>\n         * will be changed to\n         * <img src='sun.png'/>\n         */\n        html = html.replace(assetsDirectoryPathIncludingHostRegEx, '');\n        html = html.replace(assetsDirectoryPathNotIncludingHostRegEx, '');\n\n        return html\n    }\n\n    /**\n     * Get the WISE IDs for a workgroup\n     * @param workgroupId get the WISE IDs for this workgroup\n     * @return an array of WISE IDs\n     */\n    getWISEIds(workgroupId) {\n\n        var wiseIds = [];\n\n        if (workgroupId != null) {\n            // get the user info object for the workgroup id\n            var userInfo = this.getUserInfoByWorkgroupId(workgroupId);\n\n            if (userInfo != null) {\n                // get the WISE IDs\n                wiseIds = userInfo.userIds;\n            }\n        }\n\n        return wiseIds;\n    }\n};\n\nConfigService.$inject = [\n    '$http',\n    '$location'\n];\n\nexport default ConfigService;\n"]}