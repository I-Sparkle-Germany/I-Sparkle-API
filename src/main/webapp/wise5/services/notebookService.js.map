{"version":3,"sources":["notebookService.es6"],"names":[],"mappings":"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","file":"notebookService.js","sourcesContent":["class NotebookService {\n    constructor($http,\n                $rootScope,\n                ConfigService,\n                StudentAssetService,\n                StudentDataService) {\n\n        this.$http = $http;\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n\n        this.filters = [\n            {'name': 'all', 'label': 'All'},\n            {'name': 'notes', 'label': 'Notes'},\n            {'name': 'bookmarks', 'label': 'Bookmarks'},\n            {'name': 'questions', 'label': 'Questions'}\n        ];\n\n        this.notebook = {};\n        this.notebook.items = [];\n        this.notebook.deletedItems = [];\n    }\n\n    getFilters(){\n        return this.filters;\n    };\n\n    addItem(notebookItem) {\n        this.notebook.items.push(notebookItem);\n\n        // the current node is about to change\n        this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n    };\n\n    deleteItem(itemToDelete) {\n        var items = this.notebook.items;\n        var deletedItems = this.notebook.deletedItems;\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            if (item === itemToDelete) {\n                items.splice(i, 1);\n                deletedItems.push(itemToDelete);\n            }\n        }\n    };\n\n    calculateTotalUsage() {\n        // get the total size\n        var totalSizeSoFar = 0;\n        for (var i = 0; i < this.notebook.items.length; i++) {\n            var notebookItem = this.notebook.items[i];\n            if (notebookItem.studentAsset != null) {\n                var notebookItemSize = notebookItem.studentAsset.fileSize;\n                totalSizeSoFar += notebookItemSize;\n            }\n        }\n        this.notebook.totalSize = totalSizeSoFar;\n        this.notebook.totalSizeMax = this.ConfigService.getStudentMaxTotalAssetsSize();\n        this.notebook.usagePercentage = this.notebook.totalSize / this.notebook.totalSizeMax * 100;\n    };\n\n    retrieveNotebookItems() {\n        var config = {};\n        config.method = 'GET';\n        config.url = this.ConfigService.getStudentNotebookURL();\n        config.params = {};\n        config.params.periodId = this.ConfigService.getPeriodId();\n        config.params.workgroupId = this.ConfigService.getWorkgroupId();\n        return this.$http(config).then((response) => {\n            // loop through the assets and make them into JSON object with more details\n            this.notebook.items = [];  // clear local notebook items array\n            var allNotebookItems = response.data;\n            for (var n = 0; n < allNotebookItems.length; n++) {\n                var notebookItem = allNotebookItems[n];\n                if (notebookItem.studentAssetId != null) {\n                    // if this notebook item is a StudentAsset item, add the association here\n                    notebookItem.studentAsset = this.StudentAssetService.getAssetById(notebookItem.studentAssetId);\n                } else if (notebookItem.studentWorkId != null) {\n                    // if this notebook item is a StudentWork item, add the association here\n                    notebookItem.studentWork = this.StudentDataService.getStudentWorkByStudentWorkId(notebookItem.studentWorkId);\n                } else if (notebookItem.type === \"note\") {\n                    notebookItem.content = angular.fromJson(notebookItem.content);\n                }\n                if (notebookItem.serverDeleteTime == null) {\n                    this.notebook.items.push(notebookItem);\n                } else {\n                    this.notebook.deletedItems.push(notebookItem)\n                }\n            }\n            this.calculateTotalUsage();\n\n            return this.notebook;\n        });\n    };\n\n    hasStudentWorkNotebookItem(studentWork) {\n        for (var i = 0; i < this.notebook.items.length; i++) {\n            var notebookItem = this.notebook.items[i];\n            if (notebookItem.studentWorkId === studentWork.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    addStudentWorkNotebookItem(studentWork) {\n        // don't allow duplicate student work notebook items\n        if (this.hasStudentWorkNotebookItem(studentWork)) {\n            this.$rootScope.$broadcast('notebookAddDuplicateAttempt');\n            return;\n        }\n\n        var config = {};\n        config.method = 'POST';\n        config.url = this.ConfigService.getStudentNotebookURL();\n        config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n        var params = {};\n        params.workgroupId = this.ConfigService.getWorkgroupId();\n        params.periodId = this.ConfigService.getPeriodId();\n        params.nodeId = studentWork.nodeId;\n        params.componentId = studentWork.componentId;\n        params.studentWorkId = studentWork.id;\n        params.clientSaveTime = Date.parse(new Date());\n\n        config.data = $.param(params);\n\n        return this.$http(config).then((result) => {\n            var notebookItem = result.data;\n            if (notebookItem != null) {\n                notebookItem.studentWork = studentWork;\n                this.notebook.items.push(notebookItem);\n            }\n            return null;\n        });\n    };\n\n    saveNotebookItem(nodeId, type, title, content) {\n        var config = {};\n        config.method = 'POST';\n        config.url = this.ConfigService.getStudentNotebookURL();\n        config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n        var params = {};\n        params.workgroupId = this.ConfigService.getWorkgroupId();\n        params.periodId = this.ConfigService.getPeriodId();\n        params.nodeId = nodeId;\n        params.type = type;\n        params.title = title;\n        params.content = angular.toJson(content);\n        params.clientSaveTime = Date.parse(new Date());\n\n        config.data = $.param(params);\n\n        return this.$http(config).then((result) => {\n            var notebookItem = result.data;\n            if (notebookItem != null) {\n                if (notebookItem.type === \"note\") {\n                    notebookItem.content = angular.fromJson(notebookItem.content);\n                }\n                this.notebook.items.push(notebookItem);\n                this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n            }\n            return null;\n        });\n    };\n\n    uploadStudentAssetNotebookItem(file) {\n        this.StudentAssetService.uploadAsset(file).then((studentAsset) => {\n\n            var config = {};\n            config.method = 'POST';\n            config.url = this.ConfigService.getStudentNotebookURL();\n            config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            var params = {};\n            params.workgroupId = this.ConfigService.getWorkgroupId();\n            params.periodId = this.ConfigService.getPeriodId();\n            params.studentAssetId = studentAsset.id;\n            params.clientSaveTime = Date.parse(new Date());\n\n            config.data = $.param(params);\n\n            return this.$http(config).then((result) => {\n                var notebookItem = result.data;\n                if (notebookItem != null) {\n                    notebookItem.studentAsset = this.StudentAssetService.getAssetById(notebookItem.studentAssetId);\n                    this.notebook.items.push(notebookItem);\n                }\n                this.calculateTotalUsage();\n                return notebookItem;\n            });\n        });\n    }\n\n    saveNotebookToggleEvent(isOpen, currentNode) {\n        var nodeId = null;\n        var componentId = null;\n        var componentType = null;\n        var category = \"Notebook\";\n        var eventData = {};\n        eventData.curentNodeId = currentNode == null ? null : currentNode.id;\n\n        var event = isOpen ? \"notebookOpened\" : \"notebookClosed\";\n\n        // save notebook open/close event\n        this.StudentDataService.saveVLEEvent(nodeId, componentId, componentType, category, event, eventData);\n    };\n}\n\nNotebookService.$inject = [\n    '$http',\n    '$rootScope',\n    'ConfigService',\n    'StudentAssetService',\n    'StudentDataService'\n];\n\nexport default NotebookService;\n"]}