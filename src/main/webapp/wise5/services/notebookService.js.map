{"version":3,"sources":["notebookService.es6"],"names":[],"mappings":"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","file":"notebookService.js","sourcesContent":["class NotebookService {\n    constructor($http,\n                $q,\n                $rootScope,\n                ConfigService,\n                ProjectService,\n                StudentAssetService,\n                StudentDataService) {\n\n        this.$http = $http;\n        this.$q = $q;\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n\n        this.filters = [\n            {'name': 'all', 'type': 'all', 'label': 'All'},\n            {'name': 'notes', 'type': 'all', 'label': 'Notes'}\n            /*,\n            {'name': 'bookmarks', 'label': 'Bookmarks'},\n            {'name': 'questions', 'label': 'Questions'}\n            */\n        ];\n\n        this.notebook = {};\n        this.notebook.items = [];\n        this.notebook.deletedItems = [];\n\n        if (this.ProjectService.project != null) {\n            this.notebookConfig = this.ProjectService.project.notebook;\n            if (this.notebookConfig != null) {\n                if (this.notebookConfig.report != null && this.notebookConfig.report.enabled) {\n                    let reportNotes = this.notebookConfig.report.notes;\n                    for (let i = 0; i < reportNotes.length; i++) {\n                        let reportNote = reportNotes[i];\n                        this.filters.push({\n                            \"name\": reportNote.id,\n                            \"type\": \"report\",\n                            \"label\": reportNote.title\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    addItem(notebookItem) {\n        this.notebook.items.push(notebookItem);\n\n        // the current node is about to change\n        this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n    };\n\n    deleteItem(itemToDelete) {\n        var items = this.notebook.items;\n        var deletedItems = this.notebook.deletedItems;\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            if (item === itemToDelete) {\n                items.splice(i, 1);\n                deletedItems.push(itemToDelete);\n            }\n        }\n    };\n\n    getNotebookItemById(itemId) {\n        let notebookItem = null;\n        var items = this.notebook.items;\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            if (item.id === itemId) {\n                notebookItem = item;\n                break;\n            }\n        }\n        return notebookItem;\n    }\n\n    calculateTotalUsage() {\n        // get the total size\n        var totalSizeSoFar = 0;\n        for (var i = 0; i < this.notebook.items.length; i++) {\n            var notebookItem = this.notebook.items[i];\n            if (notebookItem.studentAsset != null) {\n                var notebookItemSize = notebookItem.studentAsset.fileSize;\n                totalSizeSoFar += notebookItemSize;\n            }\n        }\n        this.notebook.totalSize = totalSizeSoFar;\n        this.notebook.totalSizeMax = this.ConfigService.getStudentMaxTotalAssetsSize();\n        this.notebook.usagePercentage = this.notebook.totalSize / this.notebook.totalSizeMax * 100;\n    };\n\n    isNotebookEnabled() {\n        return this.notebookConfig != null && this.notebookConfig.enabled;\n    };\n\n    retrieveNotebookItems() {\n        var config = {};\n        config.method = 'GET';\n        config.url = this.ConfigService.getStudentNotebookURL();\n        config.params = {};\n        config.params.periodId = this.ConfigService.getPeriodId();\n        config.params.workgroupId = this.ConfigService.getWorkgroupId();\n        return this.$http(config).then((response) => {\n            // loop through the assets and make them into JSON object with more details\n            this.notebook.items = [];  // clear local notebook items array\n            var allNotebookItems = response.data;\n            for (var n = 0; n < allNotebookItems.length; n++) {\n                var notebookItem = allNotebookItems[n];\n                if (notebookItem.studentAssetId != null) {\n                    // if this notebook item is a StudentAsset item, add the association here\n                    notebookItem.studentAsset = this.StudentAssetService.getAssetById(notebookItem.studentAssetId);\n                } else if (notebookItem.studentWorkId != null) {\n                    // if this notebook item is a StudentWork item, add the association here\n                    notebookItem.studentWork = this.StudentDataService.getStudentWorkByStudentWorkId(notebookItem.studentWorkId);\n                } else if (notebookItem.type === \"note\") {\n                    notebookItem.content = angular.fromJson(notebookItem.content);\n                }\n                if (notebookItem.serverDeleteTime == null) {\n                    this.notebook.items.push(notebookItem);\n                } else {\n                    this.notebook.deletedItems.push(notebookItem)\n                }\n            }\n            this.calculateTotalUsage();\n\n            return this.notebook;\n        });\n    };\n\n    hasStudentWorkNotebookItem(studentWork) {\n        for (var i = 0; i < this.notebook.items.length; i++) {\n            var notebookItem = this.notebook.items[i];\n            if (notebookItem.studentWorkId === studentWork.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    saveNotebookItem(notebookItemId, nodeId, type, title, content) {\n        if (this.ConfigService.isPreview()) {\n            return this.$q((resolve, reject) => {\n                let notebookItem = {\n                    type: type,\n                    content: content\n                };\n                this.notebook.items.push(notebookItem);\n                this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n                resolve();\n            });\n        } else {\n            var config = {};\n            config.method = 'POST';\n            config.url = this.ConfigService.getStudentNotebookURL();\n            config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            var params = {};\n            params.workgroupId = this.ConfigService.getWorkgroupId();\n            params.periodId = this.ConfigService.getPeriodId();\n            params.notebookItemId = notebookItemId;\n            params.nodeId = nodeId;\n            params.type = type;\n            params.title = title;\n            params.content = angular.toJson(content);\n            params.clientSaveTime = Date.parse(new Date());\n            config.data = $.param(params);\n\n            return this.$http(config).then((result) => {\n                var notebookItem = result.data;\n                if (notebookItem != null) {\n                    if (notebookItem.type === \"note\") {\n                        notebookItem.content = angular.fromJson(notebookItem.content);\n                    }\n                    // add/update notebook\n                    let notebookItemExists = false;\n                    for (let n = 0; n < this.notebook.items.length; n++) {\n                        let localNotebookItem = this.notebook.items[n];\n                        if (localNotebookItem.id === notebookItem.id) {\n                            this.notebook.items[n] = notebookItem;\n                            notebookItemExists = true;\n                            break;\n                        }\n                    }\n                    if (!notebookItemExists) {\n                        this.notebook.items.push(notebookItem);\n                    }\n\n                    this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n                }\n                return null;\n            });\n        }\n    };\n\n    uploadStudentAssetNotebookItem(file) {\n        this.StudentAssetService.uploadAsset(file).then((studentAsset) => {\n\n            var config = {};\n            config.method = 'POST';\n            config.url = this.ConfigService.getStudentNotebookURL();\n            config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            var params = {};\n            params.workgroupId = this.ConfigService.getWorkgroupId();\n            params.periodId = this.ConfigService.getPeriodId();\n            params.studentAssetId = studentAsset.id;\n            params.clientSaveTime = Date.parse(new Date());\n\n            config.data = $.param(params);\n\n            return this.$http(config).then((result) => {\n                var notebookItem = result.data;\n                if (notebookItem != null) {\n                    notebookItem.studentAsset = this.StudentAssetService.getAssetById(notebookItem.studentAssetId);\n                    this.notebook.items.push(notebookItem);\n                }\n                this.calculateTotalUsage();\n                return notebookItem;\n            });\n        });\n    }\n\n    saveNotebookToggleEvent(isOpen, currentNode) {\n        var nodeId = null;\n        var componentId = null;\n        var componentType = null;\n        var category = \"Notebook\";\n        var eventData = {};\n        eventData.curentNodeId = currentNode == null ? null : currentNode.id;\n\n        var event = isOpen ? \"notebookOpened\" : \"notebookClosed\";\n\n        // save notebook open/close event\n        this.StudentDataService.saveVLEEvent(nodeId, componentId, componentType, category, event, eventData);\n    };\n}\n\nNotebookService.$inject = [\n    '$http',\n    '$q',\n    '$rootScope',\n    'ConfigService',\n    'ProjectService',\n    'StudentAssetService',\n    'StudentDataService'\n];\n\nexport default NotebookService;\n"]}