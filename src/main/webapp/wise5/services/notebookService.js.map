{"version":3,"sources":["notebookService.es6"],"names":["NotebookService","$http","$q","$rootScope","ConfigService","ProjectService","StudentAssetService","StudentDataService","config","enabled","label","enableAddNew","itemTypes","note","enableLink","enableClipping","enableStudentUploads","type","singular","plural","link","icon","color","question","report","notes","reports","notebook","allItems","items","deletedItems","notebookConfig","project","angular","merge","notebookItem","push","groupNotebookItems","$broadcast","ev","itemId","file","itemToDelete","i","length","item","splice","hasOwnProperty","last","reportId","getLatestNotebookItemByLocalNotebookItemId","templateReportItem","reportNotes","reportNote","id","localNotebookItemId","content","totalSizeSoFar","studentAsset","notebookItemSize","fileSize","totalSize","totalSizeMax","getStudentMaxTotalAssetsSize","usagePercentage","workgroupId","method","url","getStudentNotebookURL","params","getWorkgroupId","periodId","getPeriodId","then","response","allNotebookItems","data","n","studentAssetId","getAssetById","studentWorkId","studentWork","getStudentWorkByStudentWorkId","fromJson","serverDeleteTime","calculateTotalUsage","ni","notebookItemLocalNotebookItemId","notebookItemId","nodeId","title","isPreview","resolve","reject","headers","toJson","clientSaveTime","Date","parse","$","param","result","uploadAsset","isOpen","currentNode","componentId","componentType","category","eventData","curentNodeId","event","saveVLEEvent","$inject"],"mappings":"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","file":"notebookService.js","sourcesContent":["class NotebookService {\n    constructor($http,\n                $q,\n                $rootScope,\n                ConfigService,\n                ProjectService,\n                StudentAssetService,\n                StudentDataService) {\n\n        this.$http = $http;\n        this.$q = $q;\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n\n        // default notebook configuration\n        // TODO: i18n\n        // TODO: decide on desired defaults\n        // TODO: allow wise instance to set default enabled/disabled for each type in wise config?\n        this.config = {\n            enabled: false,\n            label: \"Notebook\",\n            enableAddNew: true,\n            itemTypes: {\n                note: {\n                    enabled: true,\n                    enableLink: true,\n                    enableClipping: true,\n                    enableStudentUploads: true,\n                    type: \"note\",\n                    label: {\n                        singular: \"note\",\n                        plural: \"notes\",\n                        link: \"Notes\",\n                        icon: \"note\",\n                        color: \"#1565C0\"\n                    }\n                },\n                question: {\n                    enabled: false,\n                    enableLink: true,\n                    enableClipping: true,\n                    enableStudentUploads: true,\n                    type: \"question\",\n                    label: {\n                        singular: \"question\",\n                        plural: \"questions\",\n                        link: \"Questions\",\n                        icon: \"live_help\",\n                        color: \"#F57C00\"\n                    }\n                },\n                report: {\n                    enabled: false,\n                    label: {\n                        singular: \"report\",\n                        plural: \"reports\",\n                        link: \"Report\",\n                        icon: \"assignment\",\n                        color: \"#AD1457\"\n                    },\n                    notes: []\n                }\n            }\n        };\n\n        this.reports = [];\n        this.notebook = {};\n        this.notebook.allItems = [];\n        this.notebook.items = {};\n        this.notebook.deletedItems = [];\n\n        this.notebookConfig = {};\n        if (this.ProjectService.project) {\n            // get notebook config from project\n            this.notebookConfig = this.ProjectService.project.notebook;\n            // update local notebook config, preserving any defaults that aren't overriden\n            if (this.notebookConfig !== null && typeof this.notebookConfig === 'object') {\n                this.config = angular.merge(this.config, this.notebookConfig);\n            }\n        }\n\n    }\n\n    addItem(notebookItem) {\n        this.notebook.allItems.push(notebookItem);\n\n        this.groupNotebookItems();\n\n        // the current node is about to change\n        this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n    };\n\n    editItem(ev, itemId) {\n        // broadcast edit notebook item event\n        this.$rootScope.$broadcast('editNote', {itemId: itemId, ev: ev});\n    };\n\n    addNewItem(ev, file) {\n        // broadcast create new notebook item event\n        this.$rootScope.$broadcast('addNewNote', {ev: ev, file: file});\n    };\n\n    deleteItem(itemToDelete) {\n        var items = this.notebook.items;\n        var deletedItems = this.notebook.deletedItems;\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            if (item === itemToDelete) {\n                items.splice(i, 1);\n                deletedItems.push(itemToDelete);\n            }\n        }\n    };\n\n    getLatestNotebookItemByLocalNotebookItemId(itemId) {\n        if (this.notebook.items.hasOwnProperty(itemId)) {\n            let items = this.notebook.items[itemId];\n            return items.last();\n        } else {\n            return null;\n        }\n    }\n\n    // returns student's report item if they've done work, or the template if they haven't.\n    getLatestNotebookReportItemByReportId(reportId) {\n        return this.getLatestNotebookItemByLocalNotebookItemId(reportId);\n    }\n\n    // returns the authored report item\n    getTemplateReportItemByReportId(reportId) {\n        let templateReportItem = null;\n        let reportNotes = this.notebookConfig.itemTypes.report.notes;\n        for (let i = 0; i < reportNotes.length; i++) {\n            let reportNote = reportNotes[i];\n            if (reportNote.reportId == reportId) {\n                templateReportItem = {};\n                templateReportItem.id = null;\n                templateReportItem.type = \"report\";\n                templateReportItem.localNotebookItemId = reportId;\n                templateReportItem.content = reportNote;\n                break;\n            }\n        }\n        return templateReportItem;\n    }\n\n    calculateTotalUsage() {\n        // get the total size\n        var totalSizeSoFar = 0;\n        for (var i = 0; i < this.notebook.items.length; i++) {\n            var notebookItem = this.notebook.items[i];\n            if (notebookItem.studentAsset != null) {\n                var notebookItemSize = notebookItem.studentAsset.fileSize;\n                totalSizeSoFar += notebookItemSize;\n            }\n        }\n        this.notebook.totalSize = totalSizeSoFar;\n        this.notebook.totalSizeMax = this.ConfigService.getStudentMaxTotalAssetsSize();\n        this.notebook.usagePercentage = this.notebook.totalSize / this.notebook.totalSizeMax * 100;\n    };\n\n    getNotebookConfig() {\n        return this.config;\n    };\n\n    isNotebookEnabled() {\n        return this.config.enabled;\n    };\n\n    retrieveNotebookItems(workgroupId = null) {\n        var config = {};\n        config.method = 'GET';\n        config.url = this.ConfigService.getStudentNotebookURL();\n        config.params = {};\n        if (workgroupId != null) {\n            config.params.workgroupId = workgroupId;\n        } else {\n            config.params.workgroupId = this.ConfigService.getWorkgroupId();\n            config.params.periodId = this.ConfigService.getPeriodId();\n        }\n        return this.$http(config).then((response) => {\n            // loop through the assets and make them into JSON object with more details\n            this.notebook.allItems = [];  // clear local notebook items array\n            var allNotebookItems = response.data;\n            for (var n = 0; n < allNotebookItems.length; n++) {\n                var notebookItem = allNotebookItems[n];\n                if (notebookItem.studentAssetId != null) {\n                    // if this notebook item is a StudentAsset item, add the association here\n                    notebookItem.studentAsset = this.StudentAssetService.getAssetById(notebookItem.studentAssetId);\n                } else if (notebookItem.studentWorkId != null) {\n                    // if this notebook item is a StudentWork item, add the association here\n                    notebookItem.studentWork = this.StudentDataService.getStudentWorkByStudentWorkId(notebookItem.studentWorkId);\n                } else if (notebookItem.type === \"note\" || notebookItem.type === \"report\") {\n                    notebookItem.content = angular.fromJson(notebookItem.content);\n                }\n                if (notebookItem.serverDeleteTime == null) {\n                    this.notebook.allItems.push(notebookItem);\n                } else {\n                    this.notebook.deletedItems.push(notebookItem)\n                }\n            }\n            this.calculateTotalUsage();\n\n            // now group notebook items based on item.localNotebookItemId\n            this.groupNotebookItems();\n\n            return this.notebook;\n        });\n    };\n\n    /**\n     * Groups the notebook items together in to a map-like structure inside this.notebook.items.\n     * {\n     *    \"abc123\": [{localNotebookItemId:\"abc123\", \"text\":\"first revision\"}, {localNotebookItemId:\"abc123\", \"text\":\"second revision\"}],\n     *    \"def456\": [{localNotebookItemId:\"def456\", \"text\":\"hello\"}, {localNotebookItemId:\"def456\", \"text\":\"hello my friend\"}]\n     * }\n     */\n    groupNotebookItems() {\n        this.notebook.items = {};\n        for (let ni = 0; ni < this.notebook.allItems.length; ni++) {\n            let notebookItem = this.notebook.allItems[ni];\n            let notebookItemLocalNotebookItemId = notebookItem.localNotebookItemId;\n            if (this.notebook.items.hasOwnProperty(notebookItemLocalNotebookItemId)) {\n                // if this was already added before, we'll append this notebook item to the array\n                this.notebook.items[notebookItemLocalNotebookItemId].push(notebookItem);\n            } else {\n                // otherwise, we'll create a new field and add the item to the array\n                this.notebook.items[notebookItemLocalNotebookItemId] = [notebookItem];\n            }\n        }\n    }\n\n    hasStudentWorkNotebookItem(studentWork) {\n        for (var i = 0; i < this.notebook.items.length; i++) {\n            var notebookItem = this.notebook.items[i];\n            if (notebookItem.studentWorkId === studentWork.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    saveNotebookItem(notebookItemId, nodeId, localNotebookItemId, type, title, content) {\n        if (this.ConfigService.isPreview()) {\n            return this.$q((resolve, reject) => {\n                let notebookItem = {\n                    type: type,\n                    content: content\n                };\n                this.notebook.items.push(notebookItem);\n                this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n                resolve();\n            });\n        } else {\n            var config = {};\n            config.method = 'POST';\n            config.url = this.ConfigService.getStudentNotebookURL();\n            config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            var params = {};\n            params.workgroupId = this.ConfigService.getWorkgroupId();\n            params.periodId = this.ConfigService.getPeriodId();\n            params.notebookItemId = notebookItemId;\n            params.localNotebookItemId = localNotebookItemId;\n            params.nodeId = nodeId;\n            params.type = type;\n            params.title = title;\n            params.content = angular.toJson(content);\n            params.clientSaveTime = Date.parse(new Date());\n            config.data = $.param(params);\n\n            return this.$http(config).then((result) => {\n                var notebookItem = result.data;\n                if (notebookItem != null) {\n                    if (notebookItem.type === \"note\" || notebookItem.type === \"report\") {\n                        notebookItem.content = angular.fromJson(notebookItem.content);\n                    }\n                    // add/update notebook\n                    this.notebook.allItems.push(notebookItem);\n                    this.groupNotebookItems();\n\n                    this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n                }\n                return result.data;\n            });\n        }\n    };\n\n    uploadStudentAssetNotebookItem(file) {\n        this.StudentAssetService.uploadAsset(file).then((studentAsset) => {\n\n            var config = {};\n            config.method = 'POST';\n            config.url = this.ConfigService.getStudentNotebookURL();\n            config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            var params = {};\n            params.workgroupId = this.ConfigService.getWorkgroupId();\n            params.periodId = this.ConfigService.getPeriodId();\n            params.studentAssetId = studentAsset.id;\n            params.clientSaveTime = Date.parse(new Date());\n\n            config.data = $.param(params);\n\n            return this.$http(config).then((result) => {\n                var notebookItem = result.data;\n                if (notebookItem != null) {\n                    notebookItem.studentAsset = this.StudentAssetService.getAssetById(notebookItem.studentAssetId);\n                    this.notebook.allItems.push(notebookItem);\n                    this.groupNotebookItems();\n                }\n                this.calculateTotalUsage();\n                return notebookItem;\n            });\n        });\n    }\n\n    saveNotebookToggleEvent(isOpen, currentNode) {\n        var nodeId = null;\n        var componentId = null;\n        var componentType = null;\n        var category = \"Notebook\";\n        var eventData = {};\n        eventData.curentNodeId = currentNode == null ? null : currentNode.id;\n\n        var event = isOpen ? \"notebookOpened\" : \"notebookClosed\";\n\n        // save notebook open/close event\n        this.StudentDataService.saveVLEEvent(nodeId, componentId, componentType, category, event, eventData);\n    };\n}\n\nNotebookService.$inject = [\n    '$http',\n    '$q',\n    '$rootScope',\n    'ConfigService',\n    'ProjectService',\n    'StudentAssetService',\n    'StudentDataService'\n];\n\nexport default NotebookService;\n"]}