{"version":3,"sources":["notebookService.es6"],"names":[],"mappings":"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","file":"notebookService.js","sourcesContent":["class NotebookService {\n    constructor($http,\n                $q,\n                $rootScope,\n                ConfigService,\n                StudentAssetService,\n                StudentDataService) {\n\n        this.$http = $http;\n        this.$q = $q;\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n        this.StudentAssetService = StudentAssetService;\n        this. StudentDataService = StudentDataService;\n\n        this.filters = [\n            {'name': 'all', 'label': 'All'},\n            //{'name': 'work', 'label': 'Work'}, TODO: uncomment me when adding student work to notebook is styled and ready for use in a run\n            {'name': 'files', 'label': 'Files'}\n            //{'name': 'ideas', 'label': 'Ideas'} TODO: Add when Idea Manager is active\n        ];\n\n        this.notebook = {};\n        this.notebook.items = [];\n        this.notebook.deletedItems = [];\n    }\n\n    getFilters(){\n        return this.filters;\n    };\n\n    addItem(notebookItem) {\n        this.notebook.items.push(notebookItem);\n\n        // the current node is about to change\n        $rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n    };\n\n    deleteItem(itemToDelete) {\n        var items = this.notebook.items;\n        var deletedItems = this.notebook.deletedItems;\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            if (item === itemToDelete) {\n                items.splice(i, 1);\n                deletedItems.push(itemToDelete);\n            }\n        }\n    };\n\n    calculateTotalUsage() {\n        // get the total size\n        var totalSizeSoFar = 0;\n        for (var i = 0; i < this.notebook.items.length; i++) {\n            var notebookItem = this.notebook.items[i];\n            if (notebookItem.studentAsset != null) {\n                var notebookItemSize = notebookItem.studentAsset.fileSize;\n                totalSizeSoFar += notebookItemSize;\n            }\n        }\n        this.notebook.totalSize = totalSizeSoFar;\n        this.notebook.totalSizeMax = ConfigService.getStudentMaxTotalAssetsSize();\n        this.notebook.usagePercentage = this.notebook.totalSize / this.notebook.totalSizeMax * 100;\n    };\n\n    retrieveNotebookItems() {\n        var config = {};\n        config.method = 'GET';\n        config.url = ConfigService.getStudentNotebookURL();\n        config.params = {};\n        config.params.periodId = ConfigService.getPeriodId();\n        config.params.workgroupId = ConfigService.getWorkgroupId();\n        return $http(config).then(angular.bind(this, function(response) {\n            // loop through the assets and make them into JSON object with more details\n            this.notebook.items = [];  // clear local notebook items array\n            var result = [];\n            var allNotebookItems = response.data;\n            for (var n = 0; n < allNotebookItems.length; n++) {\n                var notebookItem = allNotebookItems[n];\n                if (notebookItem.studentAssetId != null) {\n                    // if this notebook item is a StudentAsset item, add the association here\n                    notebookItem.studentAsset = StudentAssetService.getAssetById(notebookItem.studentAssetId);\n                } else if (notebookItem.studentWorkId != null) {\n                    // if this notebook item is a StudentWork item, add the association here\n                    notebookItem.studentWork = StudentDataService.getStudentWorkByStudentWorkId(notebookItem.studentWorkId);\n                }\n                if (notebookItem.serverDeleteTime == null) {\n                    this.notebook.items.push(notebookItem);\n                } else {\n                    this.notebook.deletedItems.push(notebookItem)\n                }\n            }\n            this.calculateTotalUsage();\n\n            return this.notebook;\n        }));\n    };\n\n    hasStudentWorkNotebookItem(studentWork) {\n        for (var i = 0; i < this.notebook.items.length; i++) {\n            var notebookItem = this.notebook.items[i];\n            if (notebookItem.studentWorkId === studentWork.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    addStudentWorkNotebookItem(studentWork) {\n        // don't allow duplicate student work notebook items\n        if (this.hasStudentWorkNotebookItem(studentWork)) {\n            $rootScope.$broadcast('notebookAddDuplicateAttempt');\n            return;\n        }\n\n        var config = {};\n        config.method = 'POST';\n        config.url = ConfigService.getStudentNotebookURL();\n        config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n        var params = {};\n        params.workgroupId = ConfigService.getWorkgroupId();\n        params.periodId = ConfigService.getPeriodId();\n        params.nodeId = studentWork.nodeId;\n        params.componentId = studentWork.componentId;\n        params.studentWorkId = studentWork.id;\n        params.clientSaveTime = Date.parse(new Date());\n\n        config.data = $.param(params);\n\n        return $http(config).then(angular.bind(this, function(result) {\n            var notebookItem = result.data;\n            if (notebookItem != null) {\n                notebookItem.studentWork = studentWork;\n                this.notebook.items.push(notebookItem);\n            }\n            return null;\n        }));\n    };\n\n    uploadStudentAssetNotebookItem(file) {\n        StudentAssetService.uploadAsset(file).then(angular.bind(this, function(studentAsset) {\n\n            var config = {};\n            config.method = 'POST';\n            config.url = ConfigService.getStudentNotebookURL();\n            config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            var params = {};\n            params.workgroupId = ConfigService.getWorkgroupId();\n            params.periodId = ConfigService.getPeriodId();\n            params.studentAssetId = studentAsset.id;\n            params.clientSaveTime = Date.parse(new Date());\n\n            config.data = $.param(params);\n\n            return $http(config).then(angular.bind(this, function(result) {\n                var notebookItem = result.data;\n                if (notebookItem != null) {\n                    notebookItem.studentAsset = StudentAssetService.getAssetById(notebookItem.studentAssetId);\n                    this.notebook.items.push(notebookItem);\n                }\n                this.calculateTotalUsage();\n                return notebookItem;\n            }));\n        }));\n    }\n\n    saveNotebookToggleEvent(isOpen, currentNode) {\n        var nodeId = null;\n        var componentId = null;\n        var componentType = null;\n        var category = \"Notebook\";\n        var eventData = {};\n        eventData.curentNodeId = currentNode == null ? null : currentNode.id;\n\n        var event = isOpen ? \"notebookOpened\" : \"notebookClosed\";\n\n        // save notebook open/close event\n        StudentDataService.saveVLEEvent(nodeId, componentId, componentType, category, event, eventData);\n    };\n}\n\nNotebookService.$inject = [\n    '$http',\n    '$q',\n    '$rootScope',\n    'ConfigService',\n    'StudentAssetService',\n    'StudentDataService'\n];\n\nexport default NotebookService;\n"]}