{"version":3,"sources":["notebookService.es6"],"names":[],"mappings":"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","file":"notebookService.js","sourcesContent":["class NotebookService {\n    constructor($http,\n                $q,\n                $rootScope,\n                ConfigService,\n                ProjectService,\n                StudentAssetService,\n                StudentDataService) {\n\n        this.$http = $http;\n        this.$q = $q;\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n\n        // default notebook configuration\n        // TODO: i18n\n        // TODO: decide on desired defaults\n        // TODO: allow wise instance to set default enabled/disabled for each type in wise config?\n        this.config = {\n            enabled: true,\n            label: \"Notebook\",\n            itemTypes: {\n                note: {\n                    enabled: true,\n                    enableAddNote: true,\n                    enableClipping: true,\n                    enableStudentUploads: true,\n                    type: \"note\",\n                    label: {\n                        singular: \"note\",\n                        plural: \"notes\",\n                        link: \"Notes\",\n                        icon: \"note\",\n                        color: \"#1565C0\"\n                    },\n                },\n                question: {\n                    enabled: false,\n                    enableAddNote: true,\n                    enableClipping: true,\n                    enableStudentUploads: true,\n                    type: \"question\",\n                    label: {\n                        singular: \"question\",\n                        plural: \"questions\",\n                        link: \"Questions\",\n                        icon: \"live_help\",\n                        color: \"#F57C00\"\n                    }\n                },\n                report: {\n                    enabled: false,\n                    label: {\n                        singular: \"report\",\n                        plural: \"reports\",\n                        link: \"Report\",\n                        icon: \"assignment\",\n                        color: \"#AD1457\"\n                    },\n                    notes: []\n                }\n            }\n        };\n\n        this.reports = [];\n        this.notebook = {};\n        this.notebook.allItems = [];\n        this.notebook.items = {};\n        this.notebook.deletedItems = [];\n\n        this.notebookConfig = {};\n        if (this.ProjectService.project) {\n            // get notebook config from project\n            this.notebookConfig = this.ProjectService.project.notebook;\n            // update local notebook config, preserving any defaults that aren't overriden\n            if (this.notebookConfig !== null && typeof this.notebookConfig === 'object') {\n                this.config = angular.merge(this.config, this.notebookConfig);\n            }\n        }\n\n    }\n\n    addItem(notebookItem) {\n        this.notebook.allItems.push(notebookItem);\n\n        this.groupNotebookItems();\n\n        // the current node is about to change\n        this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n    };\n\n    editItem(ev, itemId) {\n        // boradcast edit notebook item event\n        this.$rootScope.$broadcast('editNote', {itemId: itemId, ev: ev});\n    };\n\n    addNewItem(ev, file) {\n        // boradcast create new notebook item event\n        this.$rootScope.$broadcast('addNewNote', {ev: ev, file: file});\n    };\n\n    deleteItem(itemToDelete) {\n        var items = this.notebook.items;\n        var deletedItems = this.notebook.deletedItems;\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            if (item === itemToDelete) {\n                items.splice(i, 1);\n                deletedItems.push(itemToDelete);\n            }\n        }\n    };\n\n    getLatestNotebookItemByLocalNotebookItemId(itemId) {\n        if (this.notebook.items.hasOwnProperty(itemId)) {\n            let items = this.notebook.items[itemId];\n            return items.last();\n        } else {\n            return null;\n        }\n    }\n\n    // returns student's report item if they've done work, or the template if they haven't.\n    getLatestNotebookReportItemByReportId(reportId) {\n        return this.getLatestNotebookItemByLocalNotebookItemId(reportId);\n    }\n\n    // returns the authored report item\n    getTemplateReportItemByReportId(reportId) {\n        let templateReportItem = null;\n        let reportNotes = this.notebookConfig.itemTypes.report.notes;\n        for (let i = 0; i < reportNotes.length; i++) {\n            let reportNote = reportNotes[i];\n            if (reportNote.reportId == reportId) {\n                templateReportItem = {};\n                templateReportItem.id = null;\n                templateReportItem.type = \"report\";\n                templateReportItem.localNotebookItemId = reportId;\n                templateReportItem.content = reportNote;\n                break;\n            }\n        }\n        return templateReportItem;\n    }\n\n    calculateTotalUsage() {\n        // get the total size\n        var totalSizeSoFar = 0;\n        for (var i = 0; i < this.notebook.items.length; i++) {\n            var notebookItem = this.notebook.items[i];\n            if (notebookItem.studentAsset != null) {\n                var notebookItemSize = notebookItem.studentAsset.fileSize;\n                totalSizeSoFar += notebookItemSize;\n            }\n        }\n        this.notebook.totalSize = totalSizeSoFar;\n        this.notebook.totalSizeMax = this.ConfigService.getStudentMaxTotalAssetsSize();\n        this.notebook.usagePercentage = this.notebook.totalSize / this.notebook.totalSizeMax * 100;\n    };\n\n    getNotebookConfig() {\n        return this.config;\n    };\n\n    isNotebookEnabled() {\n        return this.config.enabled;\n    };\n\n    retrieveNotebookItems() {\n        var config = {};\n        config.method = 'GET';\n        config.url = this.ConfigService.getStudentNotebookURL();\n        config.params = {};\n        config.params.periodId = this.ConfigService.getPeriodId();\n        config.params.workgroupId = this.ConfigService.getWorkgroupId();\n        return this.$http(config).then((response) => {\n            // loop through the assets and make them into JSON object with more details\n            this.notebook.allItems = [];  // clear local notebook items array\n            var allNotebookItems = response.data;\n            for (var n = 0; n < allNotebookItems.length; n++) {\n                var notebookItem = allNotebookItems[n];\n                if (notebookItem.studentAssetId != null) {\n                    // if this notebook item is a StudentAsset item, add the association here\n                    notebookItem.studentAsset = this.StudentAssetService.getAssetById(notebookItem.studentAssetId);\n                } else if (notebookItem.studentWorkId != null) {\n                    // if this notebook item is a StudentWork item, add the association here\n                    notebookItem.studentWork = this.StudentDataService.getStudentWorkByStudentWorkId(notebookItem.studentWorkId);\n                } else if (notebookItem.type === \"note\" || notebookItem.type === \"report\") {\n                    notebookItem.content = angular.fromJson(notebookItem.content);\n                }\n                if (notebookItem.serverDeleteTime == null) {\n                    this.notebook.allItems.push(notebookItem);\n                } else {\n                    this.notebook.deletedItems.push(notebookItem)\n                }\n            }\n            this.calculateTotalUsage();\n\n            // now group notebook items based on item.localNotebookItemId\n            this.groupNotebookItems();\n\n            return this.notebook;\n        });\n    };\n\n    /**\n     * Groups the notebook items together in to a map-like structure inside this.notebook.items.\n     * {\n     *    \"abc123\": [{localNotebookItemId:\"abc123\", \"text\":\"first revision\"}, {localNotebookItemId:\"abc123\", \"text\":\"second revision\"}],\n     *    \"def456\": [{localNotebookItemId:\"def456\", \"text\":\"hello\"}, {localNotebookItemId:\"def456\", \"text\":\"hello my friend\"}]\n     * }\n     */\n    groupNotebookItems() {\n        this.notebook.items = {};\n        for (let ni = 0; ni < this.notebook.allItems.length; ni++) {\n            let notebookItem = this.notebook.allItems[ni];\n            let notebookItemLocalNotebookItemId = notebookItem.localNotebookItemId;\n            if (this.notebook.items.hasOwnProperty(notebookItemLocalNotebookItemId)) {\n                // if this was already added before, we'll append this notebook item to the array\n                this.notebook.items[notebookItemLocalNotebookItemId].push(notebookItem);\n            } else {\n                // otherwise, we'll create a new field and add the item to the array\n                this.notebook.items[notebookItemLocalNotebookItemId] = [notebookItem];\n            }\n        }\n    }\n\n    hasStudentWorkNotebookItem(studentWork) {\n        for (var i = 0; i < this.notebook.items.length; i++) {\n            var notebookItem = this.notebook.items[i];\n            if (notebookItem.studentWorkId === studentWork.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    saveNotebookItem(notebookItemId, nodeId, localNotebookItemId, type, title, content) {\n        if (this.ConfigService.isPreview()) {\n            return this.$q((resolve, reject) => {\n                let notebookItem = {\n                    type: type,\n                    content: content\n                };\n                this.notebook.items.push(notebookItem);\n                this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n                resolve();\n            });\n        } else {\n            var config = {};\n            config.method = 'POST';\n            config.url = this.ConfigService.getStudentNotebookURL();\n            config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            var params = {};\n            params.workgroupId = this.ConfigService.getWorkgroupId();\n            params.periodId = this.ConfigService.getPeriodId();\n            params.notebookItemId = notebookItemId;\n            params.localNotebookItemId = localNotebookItemId;\n            params.nodeId = nodeId;\n            params.type = type;\n            params.title = title;\n            params.content = angular.toJson(content);\n            params.clientSaveTime = Date.parse(new Date());\n            config.data = $.param(params);\n\n            return this.$http(config).then((result) => {\n                var notebookItem = result.data;\n                if (notebookItem != null) {\n                    if (notebookItem.type === \"note\" || notebookItem.type === \"report\") {\n                        notebookItem.content = angular.fromJson(notebookItem.content);\n                    }\n                    // add/update notebook\n                    this.notebook.allItems.push(notebookItem);\n                    this.groupNotebookItems();\n\n                    this.$rootScope.$broadcast('notebookUpdated', {notebook: this.notebook});\n                }\n                return result.data;\n            });\n        }\n    };\n\n    uploadStudentAssetNotebookItem(file) {\n        this.StudentAssetService.uploadAsset(file).then((studentAsset) => {\n\n            var config = {};\n            config.method = 'POST';\n            config.url = this.ConfigService.getStudentNotebookURL();\n            config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            var params = {};\n            params.workgroupId = this.ConfigService.getWorkgroupId();\n            params.periodId = this.ConfigService.getPeriodId();\n            params.studentAssetId = studentAsset.id;\n            params.clientSaveTime = Date.parse(new Date());\n\n            config.data = $.param(params);\n\n            return this.$http(config).then((result) => {\n                var notebookItem = result.data;\n                if (notebookItem != null) {\n                    notebookItem.studentAsset = this.StudentAssetService.getAssetById(notebookItem.studentAssetId);\n                    this.notebook.allItems.push(notebookItem);\n                    this.groupNotebookItems();\n                }\n                this.calculateTotalUsage();\n                return notebookItem;\n            });\n        });\n    }\n\n    saveNotebookToggleEvent(isOpen, currentNode) {\n        var nodeId = null;\n        var componentId = null;\n        var componentType = null;\n        var category = \"Notebook\";\n        var eventData = {};\n        eventData.curentNodeId = currentNode == null ? null : currentNode.id;\n\n        var event = isOpen ? \"notebookOpened\" : \"notebookClosed\";\n\n        // save notebook open/close event\n        this.StudentDataService.saveVLEEvent(nodeId, componentId, componentType, category, event, eventData);\n    };\n}\n\nNotebookService.$inject = [\n    '$http',\n    '$q',\n    '$rootScope',\n    'ConfigService',\n    'ProjectService',\n    'StudentAssetService',\n    'StudentDataService'\n];\n\nexport default NotebookService;\n"]}