{"version":3,"sources":["sessionService.es6"],"names":["SessionService","$http","$rootScope","ConfigService","warningVisible","checkMouseEventInMinutesInterval","showWarningInMinutesInterval","forceLogoutAfterWarningInMinutesInterval","updateLastActivityTimestamp","initializeListeners","initializeSession","$on","goHome","logOut","wiseBaseURL","getWISEBaseURL","userType","getConfigParam","href","getMainHomePageURL","window","location","$broadcast","getSessionLogOutURL","isPreview","startCheckMouseEvent","setInterval","checkMouseEvent","convertMinutesToMilliseconds","minutes","lastActivityTimestamp","Date","isActiveWithinLastMinute","renewSession","isInactiveLongEnoughToForceLogout","forceLogOut","isInactiveLongEnoughToWarn","isShowingWarning","showWarning","getInactiveTimeInMinutes","Math","floor","getInactiveTimeInMilliseconds","renewSessionURL","get","then","result","$inject"],"mappings":"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","sourcesContent":["class SessionService {\n  constructor($http, $rootScope, ConfigService) {\n    this.$http = $http;\n    this.$rootScope = $rootScope;\n    this.ConfigService = ConfigService;\n    this.warningVisible = false;\n    this.checkMouseEventInMinutesInterval = 1;\n    this.showWarningInMinutesInterval = 25;\n    this.forceLogoutAfterWarningInMinutesInterval = 5;\n    this.updateLastActivityTimestamp();\n    this.initializeListeners();\n    this.initializeSession();\n  }\n\n  initializeListeners() {\n    this.$rootScope.$on('goHome', () => {\n      this.goHome();\n    });\n\n    this.$rootScope.$on('logOut', () => {\n      this.logOut();\n    });\n  }\n\n  goHome() {\n    const wiseBaseURL = this.ConfigService.getWISEBaseURL();\n    const userType = this.ConfigService.getConfigParam('userType');\n    let href = this.ConfigService.getMainHomePageURL();\n    if (userType === 'student') {\n      href = wiseBaseURL + '/student';\n    } else if (userType === 'teacher') {\n      href = wiseBaseURL + '/teacher';\n    }\n    window.location.href = href;\n  }\n\n  logOut() {\n    this.$rootScope.$broadcast('exit');\n    window.location.href = this.ConfigService.getSessionLogOutURL();\n  }\n\n  initializeSession() {\n    if (!this.ConfigService.isPreview()) {\n      this.startCheckMouseEvent();\n    }\n  }\n\n  startCheckMouseEvent() {\n    setInterval(() => { this.checkMouseEvent(); },\n        this.convertMinutesToMilliseconds(this.checkMouseEventInMinutesInterval));\n  }\n\n  convertMinutesToMilliseconds(minutes) {\n    return minutes * 60 * 1000;\n  }\n\n  /**\n   * Note: This does not get called when the warning popup is being shown.\n   */\n  mouseMoved() {\n    this.updateLastActivityTimestamp();\n  }\n  \n  updateLastActivityTimestamp() {\n    this.lastActivityTimestamp = new Date();\n  }\n\n  checkMouseEvent() {\n    if (this.isActiveWithinLastMinute()) {\n      this.renewSession();\n    } else if (this.isInactiveLongEnoughToForceLogout()) {\n      this.forceLogOut();\n    } else if (this.isInactiveLongEnoughToWarn() && !this.isShowingWarning()) {\n      this.showWarning();\n    }\n  }\n\n  isActiveWithinLastMinute() {\n    return new Date() - this.lastActivityTimestamp < this.convertMinutesToMilliseconds(1);\n  }\n\n  isInactiveLongEnoughToForceLogout() {\n    return this.getInactiveTimeInMinutes() >=\n        (this.showWarningInMinutesInterval + this.forceLogoutAfterWarningInMinutesInterval);\n  }\n\n  isInactiveLongEnoughToWarn() {\n    return this.getInactiveTimeInMinutes() >= this.showWarningInMinutesInterval;\n  }\n\n  isShowingWarning() {\n    return this.warningVisible;\n  }\n\n  getInactiveTimeInMinutes() {\n    return Math.floor(this.getInactiveTimeInMilliseconds() / 1000 / 60);\n  }\n\n  getInactiveTimeInMilliseconds() {\n    return new Date() - this.lastActivityTimestamp;\n  }\n\n  forceLogOut() {\n    this.$rootScope.$broadcast('logOut');\n  }\n\n  showWarning() {\n    this.warningVisible = true;\n    this.$rootScope.$broadcast('showSessionWarning');\n  }\n\n  closeWarningAndRenewSession() {\n    this.warningVisible = false;\n    this.updateLastActivityTimestamp();\n    this.renewSession();\n  }\n\n  renewSession() {\n    const renewSessionURL = this.ConfigService.getConfigParam('renewSessionURL');\n    this.$http.get(renewSessionURL).then((result) => {\n\n    });\n  }\n}\n\nSessionService.$inject = [\n  '$http',\n  '$rootScope',\n  'ConfigService'\n];\n\nexport default SessionService;\n"],"file":"sessionService.js"}