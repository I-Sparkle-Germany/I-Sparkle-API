{"version":3,"sources":["studentAssetService.es6"],"names":["StudentAssetService","$filter","$http","$q","Upload","$rootScope","ConfigService","$translate","allAssets","assetId","a","length","asset","id","isPreview","deferred","defer","resolve","promise","config","method","url","getStudentAssetsURL","params","workgroupId","getWorkgroupId","then","response","result","assets","data","studentUploadsBaseURL","getStudentUploadsBaseURL","isReferenced","serverDeleteTime","fileName","filePath","isImage","type","iconURL","isAudio","push","assetContentURL","imageFileExtensions","assetURL","lastIndexOf","assetExtension","substring","indexOf","toLowerCase","file","reject","reader","FileReader","onload","theFile","e","fileSrc","target","name","$broadcast","readAsDataURL","studentAssetsURL","upload","fields","getRunId","getPeriodId","Date","parse","success","status","headers","alert","error","files","promises","map","progress","evt","progressPercentage","parseInt","loaded","total","all","studentAsset","studentAssetId","periodId","clientSaveTime","$","param","copiedAsset","clientDeleteTime","splice","$inject"],"mappings":"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","file":"studentAssetService.js","sourcesContent":["'use strict';\n\nclass StudentAssetService {\n    constructor($filter,\n                $http,\n                $q,\n                Upload,\n                $rootScope,\n                ConfigService) {\n\n        this.$filter = $filter;\n        this.$http = $http;\n        this.$q = $q;\n        this.Upload = Upload;\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n\n        this.$translate = this.$filter('translate');\n\n        this.allAssets = [];  // keep track of student's assets\n    }\n\n    getAssetById(assetId) {\n        for (var a = 0; a < this.allAssets.length; a++) {\n            var asset = this.allAssets[a];\n            if (asset.id === assetId) {\n                return asset;\n            }\n        }\n        return null;\n    };\n\n    retrieveAssets() {\n        if (this.ConfigService.isPreview()) {\n            // if we're in preview, don't make any request to the server but pretend we did\n            this.allAssets = [];\n            let deferred = this.$q.defer();\n            deferred.resolve(this.allAssets);\n            return deferred.promise;\n        } else {\n            let config = {\n                method: \"GET\",\n                url: this.ConfigService.getStudentAssetsURL(),\n                params: {\n                    workgroupId: this.ConfigService.getWorkgroupId()\n                }\n            };\n            return this.$http(config).then((response) => {\n                // loop through the assets and make them into JSON object with more details\n                let result = [];\n                let assets = response.data;\n                let studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n                for (let a = 0; a < assets.length; a++) {\n                    let asset = assets[a];\n                    if (!asset.isReferenced && asset.serverDeleteTime == null && asset.fileName !== '.DS_Store') {\n                        asset.url = studentUploadsBaseURL + asset.filePath;\n                        if (this.isImage(asset)) {\n                            asset.type = 'image';\n                            asset.iconURL = asset.url;\n                        } else if (this.isAudio(asset)) {\n                            asset.type = 'audio';\n                            asset.iconURL = 'wise5/vle/notebook/audio.png';\n                        } else {\n                            asset.type = 'file';\n                            asset.iconURL = 'wise5/vle/notebook/file.png';\n                        }\n                        result.push(asset);\n                    }\n                }\n                this.allAssets = result;\n                return result;\n            });\n        }\n    };\n\n    getAssetContent(asset) {\n        var assetContentURL = asset.url;\n\n        // retrieve the csv file and parse it\n        var config = {};\n        config.method = 'GET';\n        config.url = assetContentURL;\n        return this.$http(config).then((response) => {\n            return response.data;\n        });\n    };\n\n    isImage(asset) {\n        var isImage = false;\n        var imageFileExtensions = ['png', 'jpg', 'jpeg', 'gif'];\n        if (asset != null) {\n            var assetURL = asset.url;\n            if (assetURL != null && assetURL.lastIndexOf('.') !== -1) {\n                var assetExtension = assetURL.substring(assetURL.lastIndexOf('.') + 1);\n                if (imageFileExtensions.indexOf(assetExtension.toLowerCase()) != -1) {\n                    isImage = true;\n                }\n            }\n        }\n        return isImage;\n    };\n\n    isAudio(asset) {\n        var isAudio = false;\n        var imageFileExtensions = ['wav', 'mp3', 'ogg', 'm4a', 'm4p', 'raw', 'aiff'];\n        if (asset != null) {\n            var assetURL = asset.url;\n            if (assetURL != null && assetURL.lastIndexOf('.') != -1) {\n                var assetExtension = assetURL.substring(assetURL.lastIndexOf('.') + 1);\n                if (imageFileExtensions.indexOf(assetExtension.toLowerCase()) != -1) {\n                    isAudio = true;\n                }\n            }\n        }\n        return isAudio;\n    };\n\n    uploadAsset(file) {\n        if (this.ConfigService.isPreview()) {\n            return this.$q((resolve, reject) => {\n                var reader = new FileReader();\n\n                // Closure to capture the file information.\n                reader.onload = ( (theFile) => {\n                    return (e) => {\n                        let fileSrc = e.target.result;\n                        let fileName = theFile.name;\n\n                        let asset = {};\n                        asset.file = file;\n                        asset.url = fileSrc;\n                        // assume this is an image for now. in the future, support audio and other file formats.\n                        asset.type = 'image';\n                        asset.iconURL = asset.url;\n\n                        this.allAssets.push(asset);\n                        this.$rootScope.$broadcast('studentAssetsUpdated');\n                        return resolve(asset);\n                    };\n                })(file);\n\n                // Read in the image file as a data URL.\n                reader.readAsDataURL(file);\n            });\n        } else {\n            var studentAssetsURL = this.ConfigService.getStudentAssetsURL();\n            var deferred = this.$q.defer();\n\n            this.Upload.upload({\n                url: studentAssetsURL,\n                fields: {\n                    'runId': this.ConfigService.getRunId(),\n                    'workgroupId': this.ConfigService.getWorkgroupId(),\n                    'periodId': this.ConfigService.getPeriodId(),\n                    'clientSaveTime': Date.parse(new Date())\n                },\n                file: file\n            }).success((asset, status, headers, config) => {\n                if (asset === \"error\") {\n                    alert(this.$translate('THERE_WAS_AN_ERROR_UPLOADING'));\n                } else {\n                    var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n                    asset.url = studentUploadsBaseURL + asset.filePath;\n                    if (this.isImage(asset)) {\n                        asset.type = 'image';\n                        asset.iconURL = asset.url;\n                    } else if (this.isAudio(asset)) {\n                        asset.type = 'audio';\n                        asset.iconURL = 'wise5/vle/notebook/audio.png';\n                    } else {\n                        asset.type = 'file';\n                        asset.iconURL = 'wise5/vle/notebook/file.png';\n                    }\n                    this.allAssets.push(asset);\n                    this.$rootScope.$broadcast('studentAssetsUpdated');\n                    deferred.resolve(asset);\n                }\n            }).error((asset, status, headers, config) => {\n                alert(this.$translate('THERE_WAS_AN_ERROR_UPLOADING_YOU_MIGHT_HAVE_REACHED_LIMIT'));\n            });\n\n            return deferred.promise;\n        }\n    };\n\n    uploadAssets(files) {\n        var studentAssetsURL = this.ConfigService.getStudentAssetsURL();\n        var promises = files.map((file) => {\n            return this.Upload.upload({\n                url: studentAssetsURL,\n                fields: {\n                    'runId': this.ConfigService.getRunId(),\n                    'workgroupId': this.ConfigService.getWorkgroupId(),\n                    'periodId': this.ConfigService.getPeriodId(),\n                    'clientSaveTime': Date.parse(new Date())\n                },\n                file: file\n            }).progress((evt) => {\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                //console.log('progress: ' + progressPercentage + '% ' + evt.config.file.name);\n            }).success((data, status, headers, config) => {\n                //console.log('file ' + config.file.name + 'uploaded. Response: ' + JSON.stringify(data));\n            });\n        });\n        return this.$q.all(promises);\n    };\n\n    // given asset, makes a copy of it so steps can use for reference. Returns newly-copied asset.\n    copyAssetForReference(studentAsset) {\n        if (this.ConfigService.isPreview()) {\n            return this.$q((resolve, reject) => {\n                return resolve(studentAsset);\n            });\n        } else {\n            var config = {};\n            config.method = 'POST';\n            config.url = this.ConfigService.getStudentAssetsURL() + '/copy';\n            config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            var params = {};\n            params.studentAssetId = studentAsset.id;\n            params.workgroupId = this.ConfigService.getWorkgroupId();\n            params.periodId = this.ConfigService.getPeriodId();\n            params.clientSaveTime = Date.parse(new Date());\n\n            config.data = $.param(params);\n\n            return this.$http(config).then((result) => {\n                var copiedAsset = result.data;\n                if (copiedAsset != null) {\n                    var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n                    if (copiedAsset.isReferenced && copiedAsset.fileName !== '.DS_Store') {\n                        copiedAsset.url = studentUploadsBaseURL + copiedAsset.filePath;\n                        if (this.isImage(copiedAsset)) {\n                            copiedAsset.type = 'image';\n                            copiedAsset.iconURL = copiedAsset.url;\n                        } else if (this.isAudio(copiedAsset)) {\n                            copiedAsset.type = 'audio';\n                            copiedAsset.iconURL = 'wise5/vle/notebook/audio.png';\n                        } else {\n                            copiedAsset.type = 'file';\n                            copiedAsset.iconURL = 'wise5/vle/notebook/file.png';\n                        }\n                        //this.$rootScope.$broadcast('studentAssetsUpdated');\n                        return copiedAsset;\n                    }\n                }\n                return null;\n            });\n        }\n    };\n\n    deleteAsset(studentAsset) {\n        var config = {};\n        config.method = 'POST';\n        config.url = this.ConfigService.getStudentAssetsURL() + '/remove';\n        config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n        var params = {};\n        params.studentAssetId = studentAsset.id;\n        params.workgroupId = this.ConfigService.getWorkgroupId();\n        params.periodId = this.ConfigService.getPeriodId();\n        params.clientDeleteTime = Date.parse(new Date());\n        config.data = $.param(params);\n\n        return this.$http(config).then((result) => {\n            //var deletedAsset = result.data;\n            // also remove from local copy of all assets\n            this.allAssets = this.allAssets.splice(this.allAssets.indexOf(studentAsset), 1);\n            this.$rootScope.$broadcast('studentAssetsUpdated');\n            return studentAsset;\n        });\n    };\n}\n\nStudentAssetService.$inject = [\n    '$filter',\n    '$http',\n    '$q',\n    'Upload',\n    '$rootScope',\n    'ConfigService'];\n\nexport default StudentAssetService;\n"]}