{"version":3,"sources":["studentAssetService.es6"],"names":["StudentAssetService","$http","$q","Upload","$rootScope","ConfigService","allAssets","assetId","a","length","asset","id","config","method","url","getStudentAssetsURL","params","workgroupId","getWorkgroupId","then","response","result","assets","data","studentUploadsBaseURL","getStudentUploadsBaseURL","isReferenced","serverDeleteTime","fileName","filePath","isImage","type","iconURL","isAudio","push","assetContentURL","imageFileExtensions","assetURL","lastIndexOf","assetExtension","substring","indexOf","toLowerCase","file","isPreview","resolve","reject","reader","FileReader","onload","theFile","e","fileSrc","target","name","$broadcast","readAsDataURL","studentAssetsURL","deferred","defer","upload","fields","getRunId","getPeriodId","Date","parse","success","status","headers","alert","error","promise","files","promises","map","progress","evt","progressPercentage","parseInt","loaded","total","all","studentAsset","studentAssetId","periodId","clientSaveTime","$","param","copiedAsset","clientDeleteTime","splice","$inject"],"mappings":"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","file":"studentAssetService.js","sourcesContent":["'use strict';\n\nclass StudentAssetService {\n    constructor($http, $q, Upload, $rootScope, ConfigService) {\n        this.$http = $http;\n        this.$q = $q;\n        this.Upload = Upload;\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n\n        this.allAssets = [];  // keep track of student's assets\n    }\n\n    getAssetById(assetId) {\n        for (var a = 0; a < this.allAssets.length; a++) {\n            var asset = this.allAssets[a];\n            if (asset.id === assetId) {\n                return asset;\n            }\n        }\n        return null;\n    };\n\n    retrieveAssets() {\n        var config = {};\n        config.method = 'GET';\n        config.url = this.ConfigService.getStudentAssetsURL();\n        config.params = {};\n        config.params.workgroupId = this.ConfigService.getWorkgroupId();\n        return this.$http(config).then((response) => {\n            // loop through the assets and make them into JSON object with more details\n            var result = [];\n            var assets = response.data;\n            var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n            for (var a = 0; a < assets.length; a++) {\n                var asset = assets[a];\n                if (!asset.isReferenced && asset.serverDeleteTime == null && asset.fileName !== '.DS_Store') {\n                    asset.url = studentUploadsBaseURL + asset.filePath;\n                    if (this.isImage(asset)) {\n                        asset.type = 'image';\n                        asset.iconURL = asset.url;\n                    } else if (this.isAudio(asset)) {\n                        asset.type = 'audio';\n                        asset.iconURL = 'wise5/vle/notebook/audio.png';\n                    } else {\n                        asset.type = 'file';\n                        asset.iconURL = 'wise5/vle/notebook/file.png';\n                    }\n                    result.push(asset);\n                }\n            }\n            this.allAssets = result;\n            return result;\n        });\n    };\n\n    getAssetContent(asset) {\n        var assetContentURL = asset.url;\n\n        // retrieve the csv file and parse it\n        var config = {};\n        config.method = 'GET';\n        config.url = assetContentURL;\n        return this.$http(config).then((response) => {\n            return response.data;\n        });\n    };\n\n    isImage(asset) {\n        var isImage = false;\n        var imageFileExtensions = ['png', 'jpg', 'jpeg', 'gif'];\n        if (asset != null) {\n            var assetURL = asset.url;\n            if (assetURL != null && assetURL.lastIndexOf('.') !== -1) {\n                var assetExtension = assetURL.substring(assetURL.lastIndexOf('.') + 1);\n                if (imageFileExtensions.indexOf(assetExtension.toLowerCase()) != -1) {\n                    isImage = true;\n                }\n            }\n        }\n        return isImage;\n    };\n\n    isAudio(asset) {\n        var isAudio = false;\n        var imageFileExtensions = ['wav', 'mp3', 'ogg', 'm4a', 'm4p', 'raw', 'aiff'];\n        if (asset != null) {\n            var assetURL = asset.url;\n            if (assetURL != null && assetURL.lastIndexOf('.') != -1) {\n                var assetExtension = assetURL.substring(assetURL.lastIndexOf('.') + 1);\n                if (imageFileExtensions.indexOf(assetExtension.toLowerCase()) != -1) {\n                    isAudio = true;\n                }\n            }\n        }\n        return isAudio;\n    };\n\n    uploadAsset(file) {\n        if (this.ConfigService.isPreview()) {\n            return this.$q((resolve, reject) => {\n                var reader = new FileReader();\n\n                // Closure to capture the file information.\n                reader.onload = ( (theFile) => {\n                    return (e) => {\n                        let fileSrc = e.target.result;\n                        let fileName = theFile.name;\n\n                        let asset = {};\n                        asset.file = file;\n                        asset.url = fileSrc;\n                        // assume this is an image for now. in the future, support audio and other file formats.\n                        asset.type = 'image';\n                        asset.iconURL = asset.url;\n\n                        this.allAssets.push(asset);\n                        this.$rootScope.$broadcast('studentAssetsUpdated');\n                        return resolve(asset);\n                    };\n                })(file);\n\n                // Read in the image file as a data URL.\n                reader.readAsDataURL(file);\n            });\n        } else {\n            var studentAssetsURL = this.ConfigService.getStudentAssetsURL();\n            var deferred = this.$q.defer();\n\n            this.Upload.upload({\n                url: studentAssetsURL,\n                fields: {\n                    'runId': this.ConfigService.getRunId(),\n                    'workgroupId': this.ConfigService.getWorkgroupId(),\n                    'periodId': this.ConfigService.getPeriodId(),\n                    'clientSaveTime': Date.parse(new Date())\n                },\n                file: file\n            }).success((asset, status, headers, config) => {\n                if (asset === \"error\") {\n                    alert(\"There was an error uploading.\");\n                } else {\n                    var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n                    asset.url = studentUploadsBaseURL + asset.filePath;\n                    if (this.isImage(asset)) {\n                        asset.type = 'image';\n                        asset.iconURL = asset.url;\n                    } else if (this.isAudio(asset)) {\n                        asset.type = 'audio';\n                        asset.iconURL = 'wise5/vle/notebook/audio.png';\n                    } else {\n                        asset.type = 'file';\n                        asset.iconURL = 'wise5/vle/notebook/file.png';\n                    }\n                    this.allAssets.push(asset);\n                    this.$rootScope.$broadcast('studentAssetsUpdated');\n                    deferred.resolve(asset);\n                }\n            }).error((asset, status, headers, config) => {\n                alert(\"There was an error uploading. You might have reached your file upload limit or the file you tried to upload was too large. Please ask your teacher for help.\");\n            });\n\n            return deferred.promise;\n        }\n    };\n\n    uploadAssets(files) {\n        var studentAssetsURL = this.ConfigService.getStudentAssetsURL();\n        var promises = files.map((file) => {\n            return this.Upload.upload({\n                url: studentAssetsURL,\n                fields: {\n                    'runId': this.ConfigService.getRunId(),\n                    'workgroupId': this.ConfigService.getWorkgroupId(),\n                    'periodId': this.ConfigService.getPeriodId(),\n                    'clientSaveTime': Date.parse(new Date())\n                },\n                file: file\n            }).progress((evt) => {\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                //console.log('progress: ' + progressPercentage + '% ' + evt.config.file.name);\n            }).success((data, status, headers, config) => {\n                //console.log('file ' + config.file.name + 'uploaded. Response: ' + JSON.stringify(data));\n            });\n        });\n        return this.$q.all(promises);\n    };\n\n    // given asset, makes a copy of it so steps can use for reference. Returns newly-copied asset.\n    copyAssetForReference(studentAsset) {\n        if (this.ConfigService.isPreview()) {\n            return this.$q((resolve, reject) => {\n                return resolve(studentAsset);\n            });\n        } else {\n            var config = {};\n            config.method = 'POST';\n            config.url = this.ConfigService.getStudentAssetsURL() + '/copy';\n            config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n            var params = {};\n            params.studentAssetId = studentAsset.id;\n            params.workgroupId = this.ConfigService.getWorkgroupId();\n            params.periodId = this.ConfigService.getPeriodId();\n            params.clientSaveTime = Date.parse(new Date());\n\n            config.data = $.param(params);\n\n            return this.$http(config).then((result) => {\n                var copiedAsset = result.data;\n                if (copiedAsset != null) {\n                    var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n                    if (copiedAsset.isReferenced && copiedAsset.fileName !== '.DS_Store') {\n                        copiedAsset.url = studentUploadsBaseURL + copiedAsset.filePath;\n                        if (this.isImage(copiedAsset)) {\n                            copiedAsset.type = 'image';\n                            copiedAsset.iconURL = copiedAsset.url;\n                        } else if (this.isAudio(copiedAsset)) {\n                            copiedAsset.type = 'audio';\n                            copiedAsset.iconURL = 'wise5/vle/notebook/audio.png';\n                        } else {\n                            copiedAsset.type = 'file';\n                            copiedAsset.iconURL = 'wise5/vle/notebook/file.png';\n                        }\n                        //this.$rootScope.$broadcast('studentAssetsUpdated');\n                        return copiedAsset;\n                    }\n                }\n                return null;\n            });\n        }\n    };\n\n    deleteAsset(studentAsset) {\n        var config = {};\n        config.method = 'POST';\n        config.url = this.ConfigService.getStudentAssetsURL() + '/remove';\n        config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n        var params = {};\n        params.studentAssetId = studentAsset.id;\n        params.workgroupId = this.ConfigService.getWorkgroupId();\n        params.periodId = this.ConfigService.getPeriodId();\n        params.clientDeleteTime = Date.parse(new Date());\n        config.data = $.param(params);\n\n        return this.$http(config).then((result) => {\n            //var deletedAsset = result.data;\n            // also remove from local copy of all assets\n            this.allAssets = this.allAssets.splice(this.allAssets.indexOf(studentAsset), 1);\n            this.$rootScope.$broadcast('studentAssetsUpdated');\n            return studentAsset;\n        });\n    };\n}\n\nStudentAssetService.$inject = ['$http', '$q', 'Upload', '$rootScope', 'ConfigService'];\n\nexport default StudentAssetService;\n"]}