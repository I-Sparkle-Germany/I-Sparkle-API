{"version":3,"sources":["studentAssetService.es6"],"names":[],"mappings":"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","file":"studentAssetService.js","sourcesContent":["class StudentAssetService {\n    constructor($http, $q, Upload, $rootScope, ConfigService) {\n        this.$http = $http;\n        this.$q = $q;\n        this.Upload = Upload;\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n\n        this.allAssets = [];  // keep track of student's assets\n    }\n\n    getAssetById(assetId) {\n        for (var a = 0; a < this.allAssets.length; a++) {\n            var asset = this.allAssets[a];\n            if (asset.id === assetId) {\n                return asset;\n            }\n        }\n        return null;\n    };\n\n    retrieveAssets() {\n        var config = {};\n        config.method = 'GET';\n        config.url = this.ConfigService.getStudentAssetsURL();\n        config.params = {};\n        config.params.workgroupId = this.ConfigService.getWorkgroupId();\n        return this.$http(config).then(angular.bind(this, function(response) {\n            // loop through the assets and make them into JSON object with more details\n            var result = [];\n            var assets = response.data;\n            var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n            for (var a = 0; a < assets.length; a++) {\n                var asset = assets[a];\n                if (!asset.isReferenced && asset.serverDeleteTime == null && asset.fileName !== '.DS_Store') {\n                    asset.url = studentUploadsBaseURL + asset.filePath;\n                    if (this.isImage(asset)) {\n                        asset.type = 'image';\n                        asset.iconURL = asset.url;\n                    } else if (this.isAudio(asset)) {\n                        asset.type = 'audio';\n                        asset.iconURL = 'wise5/vle/notebook/audio.png';\n                    } else {\n                        asset.type = 'file';\n                        asset.iconURL = 'wise5/vle/notebook/file.png';\n                    }\n                    result.push(asset);\n                }\n            }\n            this.allAssets = result;\n            return result;\n        }));\n    };\n\n    getAssetContent(asset) {\n        var assetContentURL = asset.url;\n\n        // retrieve the csv file and parse it\n        var config = {};\n        config.method = 'GET';\n        config.url = assetContentURL;\n        return this.$http(config).then(angular.bind(this, function(response) {\n            return response.data;\n        }));\n    };\n\n    isImage(asset) {\n        var isImage = false;\n        var imageFileExtensions = ['png', 'jpg', 'jpeg', 'gif'];\n        if (asset != null) {\n            var assetURL = asset.url;\n            if (assetURL != null && assetURL.lastIndexOf('.') !== -1) {\n                var assetExtension = assetURL.substring(assetURL.lastIndexOf('.') + 1);\n                if (imageFileExtensions.indexOf(assetExtension.toLowerCase()) != -1) {\n                    isImage = true;\n                }\n            }\n        }\n        return isImage;\n    };\n\n    isAudio(asset) {\n        var isAudio = false;\n        var imageFileExtensions = ['wav', 'mp3', 'ogg', 'm4a', 'm4p', 'raw', 'aiff'];\n        if (asset != null) {\n            var assetURL = asset.url;\n            if (assetURL != null && assetURL.lastIndexOf('.') != -1) {\n                var assetExtension = assetURL.substring(assetURL.lastIndexOf('.') + 1);\n                if (imageFileExtensions.indexOf(assetExtension.toLowerCase()) != -1) {\n                    isAudio = true;\n                }\n            }\n        }\n        return isAudio;\n    };\n\n    uploadAsset(file) {\n        var studentAssetsURL = this.ConfigService.getStudentAssetsURL();\n        var deferred = this.$q.defer();\n\n        this.Upload.upload({\n            url: studentAssetsURL,\n            fields: {\n                'runId': this.ConfigService.getRunId(),\n                'workgroupId': this.ConfigService.getWorkgroupId(),\n                'periodId': this.ConfigService.getPeriodId(),\n                'clientSaveTime': Date.parse(new Date())\n            },\n            file: file\n        }).success(angular.bind(this, function (asset, status, headers, config) {\n            if (asset === \"error\") {\n                alert(\"There was an error uploading.\");\n            } else {\n                var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n                asset.url = studentUploadsBaseURL + asset.filePath;\n                if (this.isImage(asset)) {\n                    asset.type = 'image';\n                    asset.iconURL = asset.url;\n                } else if (this.isAudio(asset)) {\n                    asset.type = 'audio';\n                    asset.iconURL = 'wise5/vle/notebook/audio.png';\n                } else {\n                    asset.type = 'file';\n                    asset.iconURL = 'wise5/vle/notebook/file.png';\n                }\n                this.allAssets.push(asset);\n                this.$rootScope.$broadcast('studentAssetsUpdated');\n                deferred.resolve(asset);\n            }\n        })).error(angular.bind(this, function(asset, status, headers, config) {\n            alert(\"There was an error uploading. You might have reached your file upload limit or the file you tried to upload was too large. Please ask your teacher for help.\");\n        }));\n\n        return deferred.promise;\n    };\n\n    uploadAssets(files) {\n        var studentAssetsURL = this.ConfigService.getStudentAssetsURL();\n        var promises = files.map(function(file) {\n            return this.Upload.upload({\n                url: studentAssetsURL,\n                fields: {\n                    'runId': this.ConfigService.getRunId(),\n                    'workgroupId': this.ConfigService.getWorkgroupId(),\n                    'periodId': this.ConfigService.getPeriodId(),\n                    'clientSaveTime': Date.parse(new Date())\n                },\n                file: file\n            }).progress(function (evt) {\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                //console.log('progress: ' + progressPercentage + '% ' + evt.config.file.name);\n            }).success(function (data, status, headers, config) {\n                //console.log('file ' + config.file.name + 'uploaded. Response: ' + JSON.stringify(data));\n            });\n        });\n        return this.$q.all(promises);\n    };\n\n    // given asset, makes a copy of it so steps can use for reference. Returns newly-copied asset.\n    copyAssetForReference(studentAsset) {\n        var config = {};\n        config.method = 'POST';\n        config.url = this.ConfigService.getStudentAssetsURL() + '/copy';\n        config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n        var params = {};\n        params.studentAssetId = studentAsset.id;\n        params.workgroupId = this.ConfigService.getWorkgroupId();\n        params.periodId = this.ConfigService.getPeriodId();\n        params.clientSaveTime = Date.parse(new Date());\n\n        config.data = $.param(params);\n\n        return this.$http(config).then(angular.bind(this, function(result) {\n            var copiedAsset = result.data;\n            if (copiedAsset != null) {\n                var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n                if (copiedAsset.isReferenced && copiedAsset.fileName !== '.DS_Store') {\n                    copiedAsset.url = studentUploadsBaseURL + copiedAsset.filePath;\n                    if (this.isImage(copiedAsset)) {\n                        copiedAsset.type = 'image';\n                        copiedAsset.iconURL = copiedAsset.url;\n                    } else if (this.isAudio(copiedAsset)) {\n                        copiedAsset.type = 'audio';\n                        copiedAsset.iconURL = 'wise5/vle/notebook/audio.png';\n                    } else {\n                        copiedAsset.type = 'file';\n                        copiedAsset.iconURL = 'wise5/vle/notebook/file.png';\n                    }\n                    //this.$rootScope.$broadcast('studentAssetsUpdated');\n                    return copiedAsset;\n                }\n            }\n            return null;\n        }));\n    };\n\n    deleteAsset(studentAsset) {\n        var config = {};\n        config.method = 'POST';\n        config.url = this.ConfigService.getStudentAssetsURL() + '/remove';\n        config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n        var params = {};\n        params.studentAssetId = studentAsset.id;\n        params.workgroupId = this.ConfigService.getWorkgroupId();\n        params.periodId = this.ConfigService.getPeriodId();\n        params.clientDeleteTime = Date.parse(new Date());\n        config.data = $.param(params);\n\n        return this.$http(config).then(angular.bind(this, function(result) {\n            //var deletedAsset = result.data;\n            // also remove from local copy of all assets\n            this.allAssets = this.allAssets.splice(this.allAssets.indexOf(studentAsset), 1);\n            this.$rootScope.$broadcast('studentAssetsUpdated');\n            return studentAsset;\n        }));\n    };\n}\n\nStudentAssetService.$inject = ['$http', '$q', 'Upload', '$rootScope', 'ConfigService'];\n\nexport default StudentAssetService;\n"]}