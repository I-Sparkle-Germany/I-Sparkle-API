{"version":3,"sources":["studentAssetService.es6"],"names":["StudentAssetService","$http","$q","Upload","$rootScope","ConfigService","allAssets","assetId","a","length","asset","id","config","method","url","getStudentAssetsURL","params","workgroupId","getWorkgroupId","then","response","result","assets","data","studentUploadsBaseURL","getStudentUploadsBaseURL","isReferenced","serverDeleteTime","fileName","filePath","isImage","type","iconURL","isAudio","push","assetContentURL","imageFileExtensions","assetURL","lastIndexOf","assetExtension","substring","indexOf","toLowerCase","file","studentAssetsURL","deferred","defer","upload","fields","getRunId","getPeriodId","Date","parse","success","status","headers","alert","$broadcast","resolve","error","promise","files","promises","map","progress","evt","progressPercentage","parseInt","loaded","total","all","studentAsset","studentAssetId","periodId","clientSaveTime","$","param","copiedAsset","clientDeleteTime","splice","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,mB;AACF,iCAAYC,KAAZ,EAAmBC,EAAnB,EAAuBC,MAAvB,EAA+BC,UAA/B,EAA2CC,aAA3C,EAA0D;AAAA;;AACtD,aAAKJ,KAAL,GAAaA,KAAb;AACA,aAAKC,EAAL,GAAUA,EAAV;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACA,aAAKC,aAAL,GAAqBA,aAArB;;AAEA,aAAKC,SAAL,GAAiB,EAAjB,CAPsD,CAOhC;AACzB;;;;qCAEYC,O,EAAS;AAClB,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKF,SAAL,CAAeG,MAAnC,EAA2CD,GAA3C,EAAgD;AAC5C,oBAAIE,QAAQ,KAAKJ,SAAL,CAAeE,CAAf,CAAZ;AACA,oBAAIE,MAAMC,EAAN,KAAaJ,OAAjB,EAA0B;AACtB,2BAAOG,KAAP;AACH;AACJ;AACD,mBAAO,IAAP;AACH;;;yCAEgB;AAAA;;AACb,gBAAIE,SAAS,EAAb;AACAA,mBAAOC,MAAP,GAAgB,KAAhB;AACAD,mBAAOE,GAAP,GAAa,KAAKT,aAAL,CAAmBU,mBAAnB,EAAb;AACAH,mBAAOI,MAAP,GAAgB,EAAhB;AACAJ,mBAAOI,MAAP,CAAcC,WAAd,GAA4B,KAAKZ,aAAL,CAAmBa,cAAnB,EAA5B;AACA,mBAAO,KAAKjB,KAAL,CAAWW,MAAX,EAAmBO,IAAnB,CAAwB,UAACC,QAAD,EAAc;AACzC;AACA,oBAAIC,SAAS,EAAb;AACA,oBAAIC,SAASF,SAASG,IAAtB;AACA,oBAAIC,wBAAwB,MAAKnB,aAAL,CAAmBoB,wBAAnB,EAA5B;AACA,qBAAK,IAAIjB,IAAI,CAAb,EAAgBA,IAAIc,OAAOb,MAA3B,EAAmCD,GAAnC,EAAwC;AACpC,wBAAIE,QAAQY,OAAOd,CAAP,CAAZ;AACA,wBAAI,CAACE,MAAMgB,YAAP,IAAuBhB,MAAMiB,gBAAN,IAA0B,IAAjD,IAAyDjB,MAAMkB,QAAN,KAAmB,WAAhF,EAA6F;AACzFlB,8BAAMI,GAAN,GAAYU,wBAAwBd,MAAMmB,QAA1C;AACA,4BAAI,MAAKC,OAAL,CAAapB,KAAb,CAAJ,EAAyB;AACrBA,kCAAMqB,IAAN,GAAa,OAAb;AACArB,kCAAMsB,OAAN,GAAgBtB,MAAMI,GAAtB;AACH,yBAHD,MAGO,IAAI,MAAKmB,OAAL,CAAavB,KAAb,CAAJ,EAAyB;AAC5BA,kCAAMqB,IAAN,GAAa,OAAb;AACArB,kCAAMsB,OAAN,GAAgB,8BAAhB;AACH,yBAHM,MAGA;AACHtB,kCAAMqB,IAAN,GAAa,MAAb;AACArB,kCAAMsB,OAAN,GAAgB,6BAAhB;AACH;AACDX,+BAAOa,IAAP,CAAYxB,KAAZ;AACH;AACJ;AACD,sBAAKJ,SAAL,GAAiBe,MAAjB;AACA,uBAAOA,MAAP;AACH,aAxBM,CAAP;AAyBH;;;wCAEeX,K,EAAO;AACnB,gBAAIyB,kBAAkBzB,MAAMI,GAA5B;;AAEA;AACA,gBAAIF,SAAS,EAAb;AACAA,mBAAOC,MAAP,GAAgB,KAAhB;AACAD,mBAAOE,GAAP,GAAaqB,eAAb;AACA,mBAAO,KAAKlC,KAAL,CAAWW,MAAX,EAAmBO,IAAnB,CAAwB,UAACC,QAAD,EAAc;AACzC,uBAAOA,SAASG,IAAhB;AACH,aAFM,CAAP;AAGH;;;gCAEOb,K,EAAO;AACX,gBAAIoB,UAAU,KAAd;AACA,gBAAIM,sBAAsB,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,CAA1B;AACA,gBAAI1B,SAAS,IAAb,EAAmB;AACf,oBAAI2B,WAAW3B,MAAMI,GAArB;AACA,oBAAIuB,YAAY,IAAZ,IAAoBA,SAASC,WAAT,CAAqB,GAArB,MAA8B,CAAC,CAAvD,EAA0D;AACtD,wBAAIC,iBAAiBF,SAASG,SAAT,CAAmBH,SAASC,WAAT,CAAqB,GAArB,IAA4B,CAA/C,CAArB;AACA,wBAAIF,oBAAoBK,OAApB,CAA4BF,eAAeG,WAAf,EAA5B,KAA6D,CAAC,CAAlE,EAAqE;AACjEZ,kCAAU,IAAV;AACH;AACJ;AACJ;AACD,mBAAOA,OAAP;AACH;;;gCAEOpB,K,EAAO;AACX,gBAAIuB,UAAU,KAAd;AACA,gBAAIG,sBAAsB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,MAA3C,CAA1B;AACA,gBAAI1B,SAAS,IAAb,EAAmB;AACf,oBAAI2B,WAAW3B,MAAMI,GAArB;AACA,oBAAIuB,YAAY,IAAZ,IAAoBA,SAASC,WAAT,CAAqB,GAArB,KAA6B,CAAC,CAAtD,EAAyD;AACrD,wBAAIC,iBAAiBF,SAASG,SAAT,CAAmBH,SAASC,WAAT,CAAqB,GAArB,IAA4B,CAA/C,CAArB;AACA,wBAAIF,oBAAoBK,OAApB,CAA4BF,eAAeG,WAAf,EAA5B,KAA6D,CAAC,CAAlE,EAAqE;AACjET,kCAAU,IAAV;AACH;AACJ;AACJ;AACD,mBAAOA,OAAP;AACH;;;oCAEWU,I,EAAM;AAAA;;AACd,gBAAIC,mBAAmB,KAAKvC,aAAL,CAAmBU,mBAAnB,EAAvB;AACA,gBAAI8B,WAAW,KAAK3C,EAAL,CAAQ4C,KAAR,EAAf;;AAEA,iBAAK3C,MAAL,CAAY4C,MAAZ,CAAmB;AACfjC,qBAAK8B,gBADU;AAEfI,wBAAQ;AACJ,6BAAS,KAAK3C,aAAL,CAAmB4C,QAAnB,EADL;AAEJ,mCAAe,KAAK5C,aAAL,CAAmBa,cAAnB,EAFX;AAGJ,gCAAY,KAAKb,aAAL,CAAmB6C,WAAnB,EAHR;AAIJ,sCAAkBC,KAAKC,KAAL,CAAW,IAAID,IAAJ,EAAX;AAJd,iBAFO;AAQfR,sBAAMA;AARS,aAAnB,EASGU,OATH,CASW,UAAC3C,KAAD,EAAQ4C,MAAR,EAAgBC,OAAhB,EAAyB3C,MAAzB,EAAoC;AAC3C,oBAAIF,UAAU,OAAd,EAAuB;AACnB8C,0BAAM,+BAAN;AACH,iBAFD,MAEO;AACH,wBAAIhC,wBAAwB,OAAKnB,aAAL,CAAmBoB,wBAAnB,EAA5B;AACAf,0BAAMI,GAAN,GAAYU,wBAAwBd,MAAMmB,QAA1C;AACA,wBAAI,OAAKC,OAAL,CAAapB,KAAb,CAAJ,EAAyB;AACrBA,8BAAMqB,IAAN,GAAa,OAAb;AACArB,8BAAMsB,OAAN,GAAgBtB,MAAMI,GAAtB;AACH,qBAHD,MAGO,IAAI,OAAKmB,OAAL,CAAavB,KAAb,CAAJ,EAAyB;AAC5BA,8BAAMqB,IAAN,GAAa,OAAb;AACArB,8BAAMsB,OAAN,GAAgB,8BAAhB;AACH,qBAHM,MAGA;AACHtB,8BAAMqB,IAAN,GAAa,MAAb;AACArB,8BAAMsB,OAAN,GAAgB,6BAAhB;AACH;AACD,2BAAK1B,SAAL,CAAe4B,IAAf,CAAoBxB,KAApB;AACA,2BAAKN,UAAL,CAAgBqD,UAAhB,CAA2B,sBAA3B;AACAZ,6BAASa,OAAT,CAAiBhD,KAAjB;AACH;AACJ,aA7BD,EA6BGiD,KA7BH,CA6BS,UAACjD,KAAD,EAAQ4C,MAAR,EAAgBC,OAAhB,EAAyB3C,MAAzB,EAAoC;AACzC4C,sBAAM,8JAAN;AACH,aA/BD;;AAiCA,mBAAOX,SAASe,OAAhB;AACH;;;qCAEYC,K,EAAO;AAAA;;AAChB,gBAAIjB,mBAAmB,KAAKvC,aAAL,CAAmBU,mBAAnB,EAAvB;AACA,gBAAI+C,WAAWD,MAAME,GAAN,CAAU,UAACpB,IAAD,EAAU;AAC/B,uBAAO,OAAKxC,MAAL,CAAY4C,MAAZ,CAAmB;AACtBjC,yBAAK8B,gBADiB;AAEtBI,4BAAQ;AACJ,iCAAS,OAAK3C,aAAL,CAAmB4C,QAAnB,EADL;AAEJ,uCAAe,OAAK5C,aAAL,CAAmBa,cAAnB,EAFX;AAGJ,oCAAY,OAAKb,aAAL,CAAmB6C,WAAnB,EAHR;AAIJ,0CAAkBC,KAAKC,KAAL,CAAW,IAAID,IAAJ,EAAX;AAJd,qBAFc;AAQtBR,0BAAMA;AARgB,iBAAnB,EASJqB,QATI,CASK,UAACC,GAAD,EAAS;AACjB,wBAAIC,qBAAqBC,SAAS,QAAQF,IAAIG,MAAZ,GAAqBH,IAAII,KAAlC,CAAzB;AACA;AACH,iBAZM,EAYJhB,OAZI,CAYI,UAAC9B,IAAD,EAAO+B,MAAP,EAAeC,OAAf,EAAwB3C,MAAxB,EAAmC;AAC1C;AACH,iBAdM,CAAP;AAeH,aAhBc,CAAf;AAiBA,mBAAO,KAAKV,EAAL,CAAQoE,GAAR,CAAYR,QAAZ,CAAP;AACH;;;;;AAED;8CACsBS,Y,EAAc;AAAA;;AAChC,gBAAI3D,SAAS,EAAb;AACAA,mBAAOC,MAAP,GAAgB,MAAhB;AACAD,mBAAOE,GAAP,GAAa,KAAKT,aAAL,CAAmBU,mBAAnB,KAA2C,OAAxD;AACAH,mBAAO2C,OAAP,GAAiB,EAAC,gBAAgB,mCAAjB,EAAjB;AACA,gBAAIvC,SAAS,EAAb;AACAA,mBAAOwD,cAAP,GAAwBD,aAAa5D,EAArC;AACAK,mBAAOC,WAAP,GAAqB,KAAKZ,aAAL,CAAmBa,cAAnB,EAArB;AACAF,mBAAOyD,QAAP,GAAkB,KAAKpE,aAAL,CAAmB6C,WAAnB,EAAlB;AACAlC,mBAAO0D,cAAP,GAAwBvB,KAAKC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAAxB;;AAEAvC,mBAAOW,IAAP,GAAcoD,EAAEC,KAAF,CAAQ5D,MAAR,CAAd;;AAEA,mBAAO,KAAKf,KAAL,CAAWW,MAAX,EAAmBO,IAAnB,CAAwB,UAACE,MAAD,EAAY;AACvC,oBAAIwD,cAAcxD,OAAOE,IAAzB;AACA,oBAAIsD,eAAe,IAAnB,EAAyB;AACrB,wBAAIrD,wBAAwB,OAAKnB,aAAL,CAAmBoB,wBAAnB,EAA5B;AACA,wBAAIoD,YAAYnD,YAAZ,IAA4BmD,YAAYjD,QAAZ,KAAyB,WAAzD,EAAsE;AAClEiD,oCAAY/D,GAAZ,GAAkBU,wBAAwBqD,YAAYhD,QAAtD;AACA,4BAAI,OAAKC,OAAL,CAAa+C,WAAb,CAAJ,EAA+B;AAC3BA,wCAAY9C,IAAZ,GAAmB,OAAnB;AACA8C,wCAAY7C,OAAZ,GAAsB6C,YAAY/D,GAAlC;AACH,yBAHD,MAGO,IAAI,OAAKmB,OAAL,CAAa4C,WAAb,CAAJ,EAA+B;AAClCA,wCAAY9C,IAAZ,GAAmB,OAAnB;AACA8C,wCAAY7C,OAAZ,GAAsB,8BAAtB;AACH,yBAHM,MAGA;AACH6C,wCAAY9C,IAAZ,GAAmB,MAAnB;AACA8C,wCAAY7C,OAAZ,GAAsB,6BAAtB;AACH;AACD;AACA,+BAAO6C,WAAP;AACH;AACJ;AACD,uBAAO,IAAP;AACH,aArBM,CAAP;AAsBH;;;oCAEWN,Y,EAAc;AAAA;;AACtB,gBAAI3D,SAAS,EAAb;AACAA,mBAAOC,MAAP,GAAgB,MAAhB;AACAD,mBAAOE,GAAP,GAAa,KAAKT,aAAL,CAAmBU,mBAAnB,KAA2C,SAAxD;AACAH,mBAAO2C,OAAP,GAAiB,EAAC,gBAAgB,mCAAjB,EAAjB;AACA,gBAAIvC,SAAS,EAAb;AACAA,mBAAOwD,cAAP,GAAwBD,aAAa5D,EAArC;AACAK,mBAAOC,WAAP,GAAqB,KAAKZ,aAAL,CAAmBa,cAAnB,EAArB;AACAF,mBAAOyD,QAAP,GAAkB,KAAKpE,aAAL,CAAmB6C,WAAnB,EAAlB;AACAlC,mBAAO8D,gBAAP,GAA0B3B,KAAKC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAA1B;AACAvC,mBAAOW,IAAP,GAAcoD,EAAEC,KAAF,CAAQ5D,MAAR,CAAd;;AAEA,mBAAO,KAAKf,KAAL,CAAWW,MAAX,EAAmBO,IAAnB,CAAwB,UAACE,MAAD,EAAY;AACvC;AACA;AACA,uBAAKf,SAAL,GAAiB,OAAKA,SAAL,CAAeyE,MAAf,CAAsB,OAAKzE,SAAL,CAAemC,OAAf,CAAuB8B,YAAvB,CAAtB,EAA4D,CAA5D,CAAjB;AACA,uBAAKnE,UAAL,CAAgBqD,UAAhB,CAA2B,sBAA3B;AACA,uBAAOc,YAAP;AACH,aANM,CAAP;AAOH;;;;;;AAGLvE,oBAAoBgF,OAApB,GAA8B,CAAC,OAAD,EAAU,IAAV,EAAgB,QAAhB,EAA0B,YAA1B,EAAwC,eAAxC,CAA9B;;kBAEehF,mB","file":"studentAssetService.js","sourcesContent":["'use strict';\n\nclass StudentAssetService {\n    constructor($http, $q, Upload, $rootScope, ConfigService) {\n        this.$http = $http;\n        this.$q = $q;\n        this.Upload = Upload;\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n\n        this.allAssets = [];  // keep track of student's assets\n    }\n\n    getAssetById(assetId) {\n        for (var a = 0; a < this.allAssets.length; a++) {\n            var asset = this.allAssets[a];\n            if (asset.id === assetId) {\n                return asset;\n            }\n        }\n        return null;\n    };\n\n    retrieveAssets() {\n        var config = {};\n        config.method = 'GET';\n        config.url = this.ConfigService.getStudentAssetsURL();\n        config.params = {};\n        config.params.workgroupId = this.ConfigService.getWorkgroupId();\n        return this.$http(config).then((response) => {\n            // loop through the assets and make them into JSON object with more details\n            var result = [];\n            var assets = response.data;\n            var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n            for (var a = 0; a < assets.length; a++) {\n                var asset = assets[a];\n                if (!asset.isReferenced && asset.serverDeleteTime == null && asset.fileName !== '.DS_Store') {\n                    asset.url = studentUploadsBaseURL + asset.filePath;\n                    if (this.isImage(asset)) {\n                        asset.type = 'image';\n                        asset.iconURL = asset.url;\n                    } else if (this.isAudio(asset)) {\n                        asset.type = 'audio';\n                        asset.iconURL = 'wise5/vle/notebook/audio.png';\n                    } else {\n                        asset.type = 'file';\n                        asset.iconURL = 'wise5/vle/notebook/file.png';\n                    }\n                    result.push(asset);\n                }\n            }\n            this.allAssets = result;\n            return result;\n        });\n    };\n\n    getAssetContent(asset) {\n        var assetContentURL = asset.url;\n\n        // retrieve the csv file and parse it\n        var config = {};\n        config.method = 'GET';\n        config.url = assetContentURL;\n        return this.$http(config).then((response) => {\n            return response.data;\n        });\n    };\n\n    isImage(asset) {\n        var isImage = false;\n        var imageFileExtensions = ['png', 'jpg', 'jpeg', 'gif'];\n        if (asset != null) {\n            var assetURL = asset.url;\n            if (assetURL != null && assetURL.lastIndexOf('.') !== -1) {\n                var assetExtension = assetURL.substring(assetURL.lastIndexOf('.') + 1);\n                if (imageFileExtensions.indexOf(assetExtension.toLowerCase()) != -1) {\n                    isImage = true;\n                }\n            }\n        }\n        return isImage;\n    };\n\n    isAudio(asset) {\n        var isAudio = false;\n        var imageFileExtensions = ['wav', 'mp3', 'ogg', 'm4a', 'm4p', 'raw', 'aiff'];\n        if (asset != null) {\n            var assetURL = asset.url;\n            if (assetURL != null && assetURL.lastIndexOf('.') != -1) {\n                var assetExtension = assetURL.substring(assetURL.lastIndexOf('.') + 1);\n                if (imageFileExtensions.indexOf(assetExtension.toLowerCase()) != -1) {\n                    isAudio = true;\n                }\n            }\n        }\n        return isAudio;\n    };\n\n    uploadAsset(file) {\n        var studentAssetsURL = this.ConfigService.getStudentAssetsURL();\n        var deferred = this.$q.defer();\n\n        this.Upload.upload({\n            url: studentAssetsURL,\n            fields: {\n                'runId': this.ConfigService.getRunId(),\n                'workgroupId': this.ConfigService.getWorkgroupId(),\n                'periodId': this.ConfigService.getPeriodId(),\n                'clientSaveTime': Date.parse(new Date())\n            },\n            file: file\n        }).success((asset, status, headers, config) => {\n            if (asset === \"error\") {\n                alert(\"There was an error uploading.\");\n            } else {\n                var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n                asset.url = studentUploadsBaseURL + asset.filePath;\n                if (this.isImage(asset)) {\n                    asset.type = 'image';\n                    asset.iconURL = asset.url;\n                } else if (this.isAudio(asset)) {\n                    asset.type = 'audio';\n                    asset.iconURL = 'wise5/vle/notebook/audio.png';\n                } else {\n                    asset.type = 'file';\n                    asset.iconURL = 'wise5/vle/notebook/file.png';\n                }\n                this.allAssets.push(asset);\n                this.$rootScope.$broadcast('studentAssetsUpdated');\n                deferred.resolve(asset);\n            }\n        }).error((asset, status, headers, config) => {\n            alert(\"There was an error uploading. You might have reached your file upload limit or the file you tried to upload was too large. Please ask your teacher for help.\");\n        });\n\n        return deferred.promise;\n    };\n\n    uploadAssets(files) {\n        var studentAssetsURL = this.ConfigService.getStudentAssetsURL();\n        var promises = files.map((file) => {\n            return this.Upload.upload({\n                url: studentAssetsURL,\n                fields: {\n                    'runId': this.ConfigService.getRunId(),\n                    'workgroupId': this.ConfigService.getWorkgroupId(),\n                    'periodId': this.ConfigService.getPeriodId(),\n                    'clientSaveTime': Date.parse(new Date())\n                },\n                file: file\n            }).progress((evt) => {\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                //console.log('progress: ' + progressPercentage + '% ' + evt.config.file.name);\n            }).success((data, status, headers, config) => {\n                //console.log('file ' + config.file.name + 'uploaded. Response: ' + JSON.stringify(data));\n            });\n        });\n        return this.$q.all(promises);\n    };\n\n    // given asset, makes a copy of it so steps can use for reference. Returns newly-copied asset.\n    copyAssetForReference(studentAsset) {\n        var config = {};\n        config.method = 'POST';\n        config.url = this.ConfigService.getStudentAssetsURL() + '/copy';\n        config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n        var params = {};\n        params.studentAssetId = studentAsset.id;\n        params.workgroupId = this.ConfigService.getWorkgroupId();\n        params.periodId = this.ConfigService.getPeriodId();\n        params.clientSaveTime = Date.parse(new Date());\n\n        config.data = $.param(params);\n\n        return this.$http(config).then((result) => {\n            var copiedAsset = result.data;\n            if (copiedAsset != null) {\n                var studentUploadsBaseURL = this.ConfigService.getStudentUploadsBaseURL();\n                if (copiedAsset.isReferenced && copiedAsset.fileName !== '.DS_Store') {\n                    copiedAsset.url = studentUploadsBaseURL + copiedAsset.filePath;\n                    if (this.isImage(copiedAsset)) {\n                        copiedAsset.type = 'image';\n                        copiedAsset.iconURL = copiedAsset.url;\n                    } else if (this.isAudio(copiedAsset)) {\n                        copiedAsset.type = 'audio';\n                        copiedAsset.iconURL = 'wise5/vle/notebook/audio.png';\n                    } else {\n                        copiedAsset.type = 'file';\n                        copiedAsset.iconURL = 'wise5/vle/notebook/file.png';\n                    }\n                    //this.$rootScope.$broadcast('studentAssetsUpdated');\n                    return copiedAsset;\n                }\n            }\n            return null;\n        });\n    };\n\n    deleteAsset(studentAsset) {\n        var config = {};\n        config.method = 'POST';\n        config.url = this.ConfigService.getStudentAssetsURL() + '/remove';\n        config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n        var params = {};\n        params.studentAssetId = studentAsset.id;\n        params.workgroupId = this.ConfigService.getWorkgroupId();\n        params.periodId = this.ConfigService.getPeriodId();\n        params.clientDeleteTime = Date.parse(new Date());\n        config.data = $.param(params);\n\n        return this.$http(config).then((result) => {\n            //var deletedAsset = result.data;\n            // also remove from local copy of all assets\n            this.allAssets = this.allAssets.splice(this.allAssets.indexOf(studentAsset), 1);\n            this.$rootScope.$broadcast('studentAssetsUpdated');\n            return studentAsset;\n        });\n    };\n}\n\nStudentAssetService.$inject = ['$http', '$q', 'Upload', '$rootScope', 'ConfigService'];\n\nexport default StudentAssetService;\n"]}