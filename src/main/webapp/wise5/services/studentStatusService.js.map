{"version":3,"sources":["studentStatusService.es6"],"names":[],"mappings":"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","file":"studentStatusService.js","sourcesContent":["class StudentStatusService {\n    constructor($http, ConfigService, ProjectService) {\n        this.$http = $http;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.studentStatuses = null;\n\n        this.newNodeVisits = [];\n    }\n\n    retrieveStudentStatuses(config) {\n        var studentStatusURL = this.ConfigService.getStudentStatusURL();\n        var runId = this.ConfigService.getRunId();\n\n        var requestConfig = {\n            params: {\n                runId: runId\n            }\n        };\n\n        return this.$http.get(studentStatusURL, requestConfig).then(angular.bind(this, function(result) {\n            var studentStatuses = result.data;\n\n            this.studentStatuses = studentStatuses;\n\n            return studentStatuses;\n        }));\n    };\n\n    getStudentStatuses() {\n        return this.studentStatuses;\n    };\n\n    getCurrentNodeTitleForWorkgroupId(workgroupId) {\n        var nodeTitle = null;\n\n        var studentStatus = this.getStudentStatusForWorkgroupId(workgroupId);\n\n        if(studentStatus != null) {\n            var currentNodeId = studentStatus.currentNodeId;\n            nodeTitle = this.ProjectService.getNodeTitleByNodeId(currentNodeId);\n        }\n\n        return nodeTitle;\n    };\n\n    getNewNodeVisits() {\n        return this.newNodeVisits;\n    };\n\n    addNewNodeVisit(nodeVisit) {\n        this.newNodeVisits.push(nodeVisit);\n    };\n\n    getStudentStatusForWorkgroupId(workgroupId) {\n\n        var studentStatus = null;\n        var studentStatuses = this.getStudentStatuses();\n\n        for (var x = 0; x < studentStatuses.length; x++) {\n            var tempStudentStatus = studentStatuses[x];\n\n            if (tempStudentStatus != null) {\n                var tempWorkgroupId = tempStudentStatus.workgroupId;\n\n                if (workgroupId == tempWorkgroupId) {\n                    studentStatus = tempStudentStatus;\n                    break;\n                }\n            }\n        }\n\n        return studentStatus;\n    };\n\n    setStudentStatusForWorkgroupId(workgroupId, studentStatus) {\n\n        var studentStatuses = this.getStudentStatuses();\n\n        for (var x = 0; x < studentStatuses.length; x++) {\n            var tempStudentStatus = studentStatuses[x];\n\n            if (tempStudentStatus != null) {\n                var tempWorkgroupId = tempStudentStatus.workgroupId;\n\n                if (workgroupId === tempWorkgroupId) {\n                    studentStatuses.splice(x, 1, studentStatus);\n                    break;\n                }\n            }\n        }\n    };\n\n    getAvatarColorForWorkgroupId(workgroupId) {\n        var avatarColors = ['#E91E63', '#9C27B0', '#CDDC39', '#2196F3', '#FDD835', '#43A047', '#795548', '#EF6C00', '#C62828', '#607D8B'];\n        var modulo = workgroupId % 10;\n        return avatarColors[modulo];\n    };\n\n}\n\nStudentStatusService.$inject = ['$http', 'ConfigService', 'ProjectService'];\n\nexport default StudentStatusService;\n"]}