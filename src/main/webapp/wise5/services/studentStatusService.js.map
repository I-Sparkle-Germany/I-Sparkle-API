{"version":3,"sources":["studentStatusService.es6"],"names":[],"mappings":"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","file":"studentStatusService.js","sourcesContent":["class StudentStatusService {\n    constructor($http, ConfigService, ProjectService) {\n        this.$http = $http;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.studentStatuses = null;\n\n        this.newNodeVisits = [];\n    }\n\n    retrieveStudentStatuses(config) {\n        var studentStatusURL = this.ConfigService.getStudentStatusURL();\n        var runId = this.ConfigService.getRunId();\n\n        var requestConfig = {\n            params: {\n                runId: runId\n            }\n        };\n\n        return this.$http.get(studentStatusURL, requestConfig).then((result) => {\n            var studentStatuses = result.data;\n\n            this.studentStatuses = studentStatuses;\n\n            return studentStatuses;\n        });\n    };\n\n    getStudentStatuses() {\n        return this.studentStatuses;\n    };\n\n    getCurrentNodeTitleForWorkgroupId(workgroupId) {\n        var nodeTitle = null;\n\n        var studentStatus = this.getStudentStatusForWorkgroupId(workgroupId);\n\n        if(studentStatus != null) {\n            var currentNodeId = studentStatus.currentNodeId;\n            nodeTitle = this.ProjectService.getNodeTitleByNodeId(currentNodeId);\n        }\n\n        return nodeTitle;\n    };\n\n    getNewNodeVisits() {\n        return this.newNodeVisits;\n    };\n\n    addNewNodeVisit(nodeVisit) {\n        this.newNodeVisits.push(nodeVisit);\n    };\n\n    getStudentStatusForWorkgroupId(workgroupId) {\n\n        var studentStatus = null;\n        var studentStatuses = this.getStudentStatuses();\n\n        for (var x = 0; x < studentStatuses.length; x++) {\n            var tempStudentStatus = studentStatuses[x];\n\n            if (tempStudentStatus != null) {\n                var tempWorkgroupId = tempStudentStatus.workgroupId;\n\n                if (workgroupId == tempWorkgroupId) {\n                    studentStatus = tempStudentStatus;\n                    break;\n                }\n            }\n        }\n\n        return studentStatus;\n    };\n\n    setStudentStatusForWorkgroupId(workgroupId, studentStatus) {\n\n        var studentStatuses = this.getStudentStatuses();\n\n        for (var x = 0; x < studentStatuses.length; x++) {\n            var tempStudentStatus = studentStatuses[x];\n\n            if (tempStudentStatus != null) {\n                var tempWorkgroupId = tempStudentStatus.workgroupId;\n\n                if (workgroupId === tempWorkgroupId) {\n                    studentStatuses.splice(x, 1, studentStatus);\n                    break;\n                }\n            }\n        }\n    };\n\n    getAvatarColorForWorkgroupId(workgroupId) {\n        var avatarColors = ['#E91E63', '#9C27B0', '#CDDC39', '#2196F3', '#FDD835', '#43A047', '#795548', '#EF6C00', '#C62828', '#607D8B'];\n        var modulo = workgroupId % 10;\n        return avatarColors[modulo];\n    };\n\n}\n\nStudentStatusService.$inject = ['$http', 'ConfigService', 'ProjectService'];\n\nexport default StudentStatusService;\n"]}