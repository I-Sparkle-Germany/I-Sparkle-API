{"version":3,"sources":["studentWebSocketService.es6"],"names":["StudentWebSocketService","$rootScope","$stomp","ConfigService","StudentDataService","dataStream","isPreview","runId","getRunId","periodId","getPeriodId","workgroupId","getWorkgroupId","connect","getWebSocketURL","then","frame","subscribeToClassroomTopic","subscribeToWorkgroupTopic","e","console","log","subscribe","message","headers","res","type","$broadcast","data","content","studentWork","studentData","JSON","parse","notification","annotationData","AnnotationService","addOrUpdateAnnotation","annotation","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,uB;AACJ,mCACIC,UADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,kBAJJ,EAIwB;AAAA;;AACtB,SAAKH,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACD;;;;iCAEY;AAAA;;AACX,UAAI,CAAC,KAAKF,aAAL,CAAmBG,SAAnB,EAAL,EAAqC;AACnC,aAAKC,KAAL,GAAa,KAAKJ,aAAL,CAAmBK,QAAnB,EAAb;AACA,aAAKC,QAAL,GAAgB,KAAKN,aAAL,CAAmBO,WAAnB,EAAhB;AACA,aAAKC,WAAL,GAAmB,KAAKR,aAAL,CAAmBS,cAAnB,EAAnB;AACA,YAAI;AACF,eAAKV,MAAL,CAAYW,OAAZ,CAAoB,KAAKV,aAAL,CAAmBW,eAAnB,EAApB,EAA0DC,IAA1D,CAA+D,UAACC,KAAD,EAAW;AACxE,kBAAKC,yBAAL;AACA,kBAAKC,yBAAL;AACD,WAHD;AAID,SALD,CAKE,OAAMC,CAAN,EAAS;AACTC,kBAAQC,GAAR,CAAYF,CAAZ;AACD;AACF;AACF;;;gDAE2B;AAAA;;AAC1B,WAAKjB,MAAL,CAAYoB,SAAZ,uBAA0C,KAAKf,KAA/C,SAAwD,KAAKE,QAA7D,EAAyE,UAACc,OAAD,EAAUC,OAAV,EAAmBC,GAAnB,EAA2B;AAClG,YAAIF,QAAQG,IAAR,KAAiB,OAArB,EAA8B;AAC5B,iBAAKzB,UAAL,CAAgB0B,UAAhB,CAA2B,aAA3B,EAA0C,EAACC,MAAML,QAAQM,OAAf,EAA1C;AACD,SAFD,MAEO,IAAIN,QAAQG,IAAR,KAAiB,SAArB,EAAgC;AACrC,iBAAKzB,UAAL,CAAgB0B,UAAhB,CAA2B,eAA3B,EAA4C,EAACC,MAAML,QAAQM,OAAf,EAA5C;AACD,SAFM,MAEA,IAAIN,QAAQG,IAAR,KAAiB,aAArB,EAAoC;AACzC,cAAMI,cAAcP,QAAQM,OAA5B;AACAC,sBAAYC,WAAZ,GAA0BC,KAAKC,KAAL,CAAWH,YAAYC,WAAvB,CAA1B;AACA,iBAAK9B,UAAL,CAAgB0B,UAAhB,CAA2B,qBAA3B,EAAkDG,WAAlD;AACD;AACF,OAVD;AAWD;;;gDAE2B;AAAA;;AAC1B,WAAK5B,MAAL,CAAYoB,SAAZ,uBAA0C,KAAKX,WAA/C,EAA8D,UAACY,OAAD,EAAUC,OAAV,EAAmBC,GAAnB,EAA2B;AACvF,YAAIF,QAAQG,IAAR,KAAiB,cAArB,EAAqC;AACnC,cAAMQ,eAAeX,QAAQM,OAA7B;AACAK,uBAAaN,IAAb,GAAoBI,KAAKC,KAAL,CAAWC,aAAaN,IAAxB,CAApB;AACA,iBAAK3B,UAAL,CAAgB0B,UAAhB,CAA2B,yBAA3B,EAAsDO,YAAtD;AACD,SAJD,MAIO,IAAIX,QAAQG,IAAR,KAAiB,YAArB,EAAmC;AACxC,cAAMS,iBAAiBZ,QAAQM,OAA/B;AACAM,yBAAeP,IAAf,GAAsBI,KAAKC,KAAL,CAAWE,eAAeP,IAA1B,CAAtB;AACA,iBAAKxB,kBAAL,CAAwBgC,iBAAxB,CAA0CC,qBAA1C,CAAgEF,cAAhE;AACA,iBAAKlC,UAAL,CAAgB0B,UAAhB,CAA2B,uBAA3B,EAAoD,EAACW,YAAYH,cAAb,EAApD;AACD;AACF,OAXD;AAYD;;;;;;AAGHnC,wBAAwBuC,OAAxB,GAAkC,CAChC,YADgC,EAEhC,QAFgC,EAGhC,eAHgC,EAIhC,oBAJgC,CAAlC;;kBAOevC,uB","file":"studentWebSocketService.js","sourcesContent":["'use strict';\n\nclass StudentWebSocketService {\n  constructor(\n      $rootScope,\n      $stomp,\n      ConfigService,\n      StudentDataService) {\n    this.$rootScope = $rootScope;\n    this.$stomp = $stomp;\n    this.ConfigService = ConfigService;\n    this.StudentDataService = StudentDataService;\n    this.dataStream = null;\n  }\n\n  initialize() {\n    if (!this.ConfigService.isPreview()) {\n      this.runId = this.ConfigService.getRunId();\n      this.periodId = this.ConfigService.getPeriodId();\n      this.workgroupId = this.ConfigService.getWorkgroupId();\n      try {\n        this.$stomp.connect(this.ConfigService.getWebSocketURL()).then((frame) => {\n          this.subscribeToClassroomTopic();\n          this.subscribeToWorkgroupTopic();\n        });\n      } catch(e) {\n        console.log(e);\n      }\n    }\n  }\n\n  subscribeToClassroomTopic() {\n    this.$stomp.subscribe(`/topic/classroom/${this.runId}/${this.periodId}`, (message, headers, res) => {\n      if (message.type === 'pause') {\n        this.$rootScope.$broadcast('pauseScreen', {data: message.content});\n      } else if (message.type === 'unpause') {\n        this.$rootScope.$broadcast('unPauseScreen', {data: message.content});\n      } else if (message.type === 'studentWork') {\n        const studentWork = message.content;\n        studentWork.studentData = JSON.parse(studentWork.studentData);\n        this.$rootScope.$broadcast('studentWorkReceived', studentWork);\n      }\n    });\n  }\n\n  subscribeToWorkgroupTopic() {\n    this.$stomp.subscribe(`/topic/workgroup/${this.workgroupId}`, (message, headers, res) => {\n      if (message.type === 'notification') {\n        const notification = message.content;\n        notification.data = JSON.parse(notification.data);\n        this.$rootScope.$broadcast('newNotificationReceived', notification);\n      } else if (message.type === 'annotation') {\n        const annotationData = message.content;\n        annotationData.data = JSON.parse(annotationData.data);\n        this.StudentDataService.AnnotationService.addOrUpdateAnnotation(annotationData);\n        this.$rootScope.$broadcast('newAnnotationReceived', {annotation: annotationData});\n      }\n    });\n  }\n}\n\nStudentWebSocketService.$inject = [\n  '$rootScope',\n  '$stomp',\n  'ConfigService',\n  'StudentDataService'\n];\n\nexport default StudentWebSocketService;\n"]}