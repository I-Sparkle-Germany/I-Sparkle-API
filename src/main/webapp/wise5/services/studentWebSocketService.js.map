{"version":3,"sources":["studentWebSocketService.es6"],"names":["StudentWebSocketService","$rootScope","$stomp","ConfigService","StudentDataService","dataStream","isPreview","runId","getRunId","periodId","getPeriodId","workgroupId","getWorkgroupId","connect","getWebSocketURL","then","frame","console","log","greetingSubscription","subscribe","payload","headers","res","pauseSubscription","$broadcast","data","unPauseSubscription","studentWorkSubscription","studentWork","studentData","JSON","parse","notificationSubscription","notification","send","stringify","e","message","messageType","annotationData","AnnotationService","addOrUpdateAnnotation","annotation","notificationData","handleWebSocketMessageReceived","currentNodeId","getCurrentNodeId","messageJSON","messageParticipants","$inject"],"mappings":"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","file":"studentWebSocketService.js","sourcesContent":["'use strict';\n\nclass StudentWebSocketService {\n  constructor(\n      $rootScope,\n      $stomp,\n      ConfigService,\n      StudentDataService) {\n    this.$rootScope = $rootScope;\n    this.$stomp = $stomp;\n    this.ConfigService = ConfigService;\n    this.StudentDataService = StudentDataService;\n    this.dataStream = null;\n  }\n\n  initialize() {\n    if (!this.ConfigService.isPreview()) {\n      this.runId = this.ConfigService.getRunId();\n      this.periodId = this.ConfigService.getPeriodId();\n      this.workgroupId = this.ConfigService.getWorkgroupId();\n      try {\n        this.$stomp.connect(this.ConfigService.getWebSocketURL()).then((frame) => {\n          console.log(`connected! runId: ${this.runId}`);\n          const greetingSubscription = this.$stomp.subscribe(`/topic/greetings/${this.runId}`, (payload, headers, res) => {\n            console.log(`Greeting: ${payload}`);\n          }, {});\n\n          const pauseSubscription = this.$stomp.subscribe(`/topic/pause/${this.runId}/${this.periodId}`, (payload, headers, res) => {\n            console.log(`Pause: ${payload}`);\n            this.$rootScope.$broadcast('pauseScreen', {data: payload});\n          }, {});\n\n          const unPauseSubscription = this.$stomp.subscribe(`/topic/unpause/${this.runId}/${this.periodId}`, (payload, headers, res) => {\n            console.log(`UnPause: ${payload}`);\n            this.$rootScope.$broadcast('unPauseScreen', {data: payload});\n          }, {});\n\n          const studentWorkSubscription = this.$stomp.subscribe(`/topic/student-work/${this.runId}/${this.periodId}`, (studentWork, headers, res) => {\n            studentWork.studentData = JSON.parse(studentWork.studentData);\n            this.$rootScope.$broadcast('studentWorkReceived', studentWork);\n          }, {});\n\n          const notificationSubscription = this.$stomp.subscribe(`/topic/notification/${this.runId}/${this.periodId}/${this.workgroupId}`, (notification, headers, res) => {\n            this.$rootScope.$broadcast('newNotification', notification);\n          }, {});\n\n          this.$stomp.send(`/app/hello/${this.runId}`, JSON.stringify({'name': `workgroup ${this.workgroupId}`}), {});\n        });\n      } catch(e) {\n        console.log(e);\n      }\n    }\n  }\n\n  handleWebSocketMessageReceived(data) {\n    this.$rootScope.$broadcast('webSocketMessageReceived', {data: data});\n  }\n\n  handleMessage(message) {\n    const data = JSON.parse(message.data);\n    const messageType = data.messageType;\n    if (messageType === 'pauseScreen') {\n      this.$rootScope.$broadcast('pauseScreen', {data: data});\n    } else if (messageType === 'unPauseScreen') {\n      this.$rootScope.$broadcast('unPauseScreen', {data: data});\n    } else if (messageType === 'notification') {\n      this.$rootScope.$broadcast('newNotification', data.data);\n    } else if (messageType === 'annotationNotification') {\n      // a new annotation + notification combo object was sent over websocket\n\n      // save the new annotation locally\n      let annotationData = data.annotationData;\n      this.StudentDataService.AnnotationService.addOrUpdateAnnotation(annotationData);\n      this.$rootScope.$broadcast('newAnnotationReceived', {annotation: annotationData});\n\n      // fire the new notification\n      let notificationData = data.notificationData;\n      this.$rootScope.$broadcast('newNotification', notificationData);\n    }\n    this.handleWebSocketMessageReceived(data);\n  }\n\n  sendStudentToTeacherMessage(messageType, data) {\n    if (!this.ConfigService.isPreview()) {\n      const currentNodeId = this.StudentDataService.getCurrentNodeId();\n      const messageJSON = {};\n      messageJSON.messageType = messageType;\n      messageJSON.messageParticipants = 'studentToTeachers';\n      messageJSON.currentNodeId = currentNodeId;\n      messageJSON.data = data;\n      this.dataStream.send(messageJSON);\n    }\n  }\n}\n\nStudentWebSocketService.$inject = [\n  '$rootScope',\n  '$stomp',\n  'ConfigService',\n  'StudentDataService'\n];\n\nexport default StudentWebSocketService;\n"]}