{"version":3,"sources":["studentWebSocketService.es6"],"names":["StudentWebSocketService","$rootScope","$stomp","ConfigService","StudentDataService","dataStream","isPreview","runId","getRunId","periodId","getPeriodId","workgroupId","getWorkgroupId","connect","getWebSocketURL","then","frame","subscribeToClassroomTopic","subscribeToWorkgroupTopic","subscribeToTeacherTopic","e","console","log","subscribe","message","headers","res","type","$broadcast","data","content","studentWork","studentData","JSON","parse","annotationData","AnnotationService","addOrUpdateAnnotation","annotation","payload","messageType","currentNodeId","getCurrentNodeId","messageJSON","messageParticipants","send","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,uB;AACJ,mCACIC,UADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,kBAJJ,EAIwB;AAAA;;AACtB,SAAKH,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACD;;;;iCAEY;AAAA;;AACX,UAAI,CAAC,KAAKF,aAAL,CAAmBG,SAAnB,EAAL,EAAqC;AACnC,aAAKC,KAAL,GAAa,KAAKJ,aAAL,CAAmBK,QAAnB,EAAb;AACA,aAAKC,QAAL,GAAgB,KAAKN,aAAL,CAAmBO,WAAnB,EAAhB;AACA,aAAKC,WAAL,GAAmB,KAAKR,aAAL,CAAmBS,cAAnB,EAAnB;AACA,YAAI;AACF,eAAKV,MAAL,CAAYW,OAAZ,CAAoB,KAAKV,aAAL,CAAmBW,eAAnB,EAApB,EAA0DC,IAA1D,CAA+D,UAACC,KAAD,EAAW;AACxE,kBAAKC,yBAAL;AACA,kBAAKC,yBAAL;AACA,kBAAKC,uBAAL;AACD,WAJD;AAKD,SAND,CAME,OAAMC,CAAN,EAAS;AACTC,kBAAQC,GAAR,CAAYF,CAAZ;AACD;AACF;AACF;;;gDAE2B;AAAA;;AAC1B,WAAKlB,MAAL,CAAYqB,SAAZ,uBAA0C,KAAKhB,KAA/C,SAAwD,KAAKE,QAA7D,EAAyE,UAACe,OAAD,EAAUC,OAAV,EAAmBC,GAAnB,EAA2B;AAClG,YAAIF,QAAQG,IAAR,KAAiB,OAArB,EAA8B;AAC5B,iBAAK1B,UAAL,CAAgB2B,UAAhB,CAA2B,aAA3B,EAA0C,EAACC,MAAML,QAAQM,OAAf,EAA1C;AACD,SAFD,MAEO,IAAIN,QAAQG,IAAR,KAAiB,SAArB,EAAgC;AACrC,iBAAK1B,UAAL,CAAgB2B,UAAhB,CAA2B,eAA3B,EAA4C,EAACC,MAAML,QAAQM,OAAf,EAA5C;AACD,SAFM,MAEA,IAAIN,QAAQG,IAAR,KAAiB,aAArB,EAAoC;AACzC,cAAMI,cAAcP,QAAQM,OAA5B;AACAC,sBAAYC,WAAZ,GAA0BC,KAAKC,KAAL,CAAWH,YAAYC,WAAvB,CAA1B;AACA,iBAAK/B,UAAL,CAAgB2B,UAAhB,CAA2B,qBAA3B,EAAkDG,WAAlD;AACD;AACF,OAVD;AAWD;;;gDAE2B;AAAA;;AAC1B,WAAK7B,MAAL,CAAYqB,SAAZ,uBAA0C,KAAKZ,WAA/C,EAA8D,UAACa,OAAD,EAAUC,OAAV,EAAmBC,GAAnB,EAA2B;AACvF,YAAIF,QAAQG,IAAR,KAAiB,cAArB,EAAqC;AACnC,iBAAK1B,UAAL,CAAgB2B,UAAhB,CAA2B,iBAA3B,EAA8CJ,QAAQM,OAAtD;AACD,SAFD,MAEO,IAAIN,QAAQG,IAAR,KAAiB,YAArB,EAAmC;AACxC,cAAMQ,iBAAiBX,QAAQM,OAA/B;AACAK,yBAAeN,IAAf,GAAsBI,KAAKC,KAAL,CAAWC,eAAeN,IAA1B,CAAtB;AACA,iBAAKzB,kBAAL,CAAwBgC,iBAAxB,CAA0CC,qBAA1C,CAAgEF,cAAhE;AACA,iBAAKlC,UAAL,CAAgB2B,UAAhB,CAA2B,uBAA3B,EAAoD,EAACU,YAAYH,cAAb,EAApD;AACD;AACF,OATD;AAUD;;;8CAEyB;AACxB,WAAKjC,MAAL,CAAYqB,SAAZ,qBAAwC,KAAKhB,KAA7C,SAAsD,KAAKE,QAA3D,EAAuE,UAAC8B,OAAD,EAAUd,OAAV,EAAmBC,GAAnB,EAA2B,CACjG,CADD;AAED;;;gDAE2Bc,W,EAAaX,I,EAAM;AAC7C,UAAI,CAAC,KAAK1B,aAAL,CAAmBG,SAAnB,EAAL,EAAqC;AACnC,YAAMmC,gBAAgB,KAAKrC,kBAAL,CAAwBsC,gBAAxB,EAAtB;AACA,YAAMC,cAAc,EAApB;AACAA,oBAAYH,WAAZ,GAA0BA,WAA1B;AACAG,oBAAYC,mBAAZ,GAAkC,mBAAlC;AACAD,oBAAYF,aAAZ,GAA4BA,aAA5B;AACAE,oBAAYd,IAAZ,GAAmBA,IAAnB;AACA,aAAKxB,UAAL,CAAgBwC,IAAhB,CAAqBF,WAArB;AACD;AACF;;;;;;AAGH3C,wBAAwB8C,OAAxB,GAAkC,CAChC,YADgC,EAEhC,QAFgC,EAGhC,eAHgC,EAIhC,oBAJgC,CAAlC;;kBAOe9C,uB","file":"studentWebSocketService.js","sourcesContent":["'use strict';\n\nclass StudentWebSocketService {\n  constructor(\n      $rootScope,\n      $stomp,\n      ConfigService,\n      StudentDataService) {\n    this.$rootScope = $rootScope;\n    this.$stomp = $stomp;\n    this.ConfigService = ConfigService;\n    this.StudentDataService = StudentDataService;\n    this.dataStream = null;\n  }\n\n  initialize() {\n    if (!this.ConfigService.isPreview()) {\n      this.runId = this.ConfigService.getRunId();\n      this.periodId = this.ConfigService.getPeriodId();\n      this.workgroupId = this.ConfigService.getWorkgroupId();\n      try {\n        this.$stomp.connect(this.ConfigService.getWebSocketURL()).then((frame) => {\n          this.subscribeToClassroomTopic();\n          this.subscribeToWorkgroupTopic();\n          this.subscribeToTeacherTopic();\n        });\n      } catch(e) {\n        console.log(e);\n      }\n    }\n  }\n\n  subscribeToClassroomTopic() {\n    this.$stomp.subscribe(`/topic/classroom/${this.runId}/${this.periodId}`, (message, headers, res) => {\n      if (message.type === 'pause') {\n        this.$rootScope.$broadcast('pauseScreen', {data: message.content});\n      } else if (message.type === 'unpause') {\n        this.$rootScope.$broadcast('unPauseScreen', {data: message.content});\n      } else if (message.type === 'studentWork') {\n        const studentWork = message.content;\n        studentWork.studentData = JSON.parse(studentWork.studentData);\n        this.$rootScope.$broadcast('studentWorkReceived', studentWork);\n      }\n    });\n  }\n\n  subscribeToWorkgroupTopic() {\n    this.$stomp.subscribe(`/topic/workgroup/${this.workgroupId}`, (message, headers, res) => {\n      if (message.type === 'notification') {\n        this.$rootScope.$broadcast('newNotification', message.content);\n      } else if (message.type === 'annotation') {\n        const annotationData = message.content;\n        annotationData.data = JSON.parse(annotationData.data);\n        this.StudentDataService.AnnotationService.addOrUpdateAnnotation(annotationData);\n        this.$rootScope.$broadcast('newAnnotationReceived', {annotation: annotationData});\n      }\n    });\n  }\n\n  subscribeToTeacherTopic() {\n    this.$stomp.subscribe(`/topic/teacher/${this.runId}/${this.periodId}`, (payload, headers, res) => {\n    });\n  }\n\n  sendStudentToTeacherMessage(messageType, data) {\n    if (!this.ConfigService.isPreview()) {\n      const currentNodeId = this.StudentDataService.getCurrentNodeId();\n      const messageJSON = {};\n      messageJSON.messageType = messageType;\n      messageJSON.messageParticipants = 'studentToTeachers';\n      messageJSON.currentNodeId = currentNodeId;\n      messageJSON.data = data;\n      this.dataStream.send(messageJSON);\n    }\n  }\n}\n\nStudentWebSocketService.$inject = [\n  '$rootScope',\n  '$stomp',\n  'ConfigService',\n  'StudentDataService'\n];\n\nexport default StudentWebSocketService;\n"]}