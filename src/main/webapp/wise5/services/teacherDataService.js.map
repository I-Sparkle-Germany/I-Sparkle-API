{"version":3,"sources":["teacherDataService.es6"],"names":[],"mappings":"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","file":"teacherDataService.js","sourcesContent":["'use strict';\n\nclass TeacherDataService {\n    constructor($http,\n                $rootScope,\n                AnnotationService,\n                ConfigService) {\n        this.$http = $http;\n        this.$rootScope = $rootScope;\n        this.AnnotationService = AnnotationService;\n        this.ConfigService = ConfigService;\n\n        this.studentData = {};\n\n        this.currentPeriod = null;\n    }\n\n    /**\n     * Retrieves the export given the export Type\n     * @param exportType\n     */\n    getExport(exportType) {\n        var exportURL = this.ConfigService.getConfigParam('runDataExportURL');\n        var runId = this.ConfigService.getRunId();\n        exportURL += \"/\" + runId + \"/\" + exportType;\n\n        var params = {};\n        params.getStudentWork = true;\n        params.getEvents = false;\n        params.getAnnotations = true;\n\n        var httpParams = {};\n        httpParams.method = 'GET';\n        httpParams.url = exportURL;\n        httpParams.params = params;\n\n        return this.$http(httpParams).then(angular.bind(this, function(result) {\n            return result.data;\n        }));\n    };\n\n\n\n    /**\n     * Retrieve the student data for a node id\n     * @param nodeId the node id\n     * @returns the student data for the node id\n     */\n    retrieveStudentDataByNodeId(nodeId) {\n\n        var periodId = null;\n\n        if (this.currentPeriod != null && this.currentPeriod.periodName != 'All') {\n            periodId = this.currentPeriod.periodId;\n        }\n\n        var params = {};\n        params.runId = this.ConfigService.getRunId();\n        params.periodId = periodId;\n        params.nodeId = nodeId;\n        params.workgroupId = null;\n\n        return this.retrieveStudentData(params);\n    };\n\n    /**\n     * Retrieve the student data for the workgroup id\n     * @param workgroupId the workgroup id\n     * @returns the student data for the workgroup id\n     */\n    retrieveStudentDataByWorkgroupId(workgroupId) {\n\n        var params = {};\n        params.runId = this.ConfigService.getRunId();\n        params.periodId = null;\n        params.nodeId = null;\n        params.workgroupId = workgroupId;\n        params.toWorkgroupId = workgroupId;\n\n        return this.retrieveStudentData(params);\n    };\n\n    /**\n     * Retrieve the student data\n     * @param params the params that specify what student data we want\n     * @returns a promise\n     */\n    retrieveStudentData(params) {\n        var studentDataURL = this.ConfigService.getConfigParam('teacherDataURL');\n\n        params.getStudentWork = true;\n        params.getEvents = false;\n        params.getAnnotations = true;\n\n        var httpParams = {};\n        httpParams.method = 'GET';\n        httpParams.url = studentDataURL;\n        httpParams.params = params;\n\n        return this.$http(httpParams).then(angular.bind(this, function(result) {\n            var resultData = result.data;\n            if (resultData != null) {\n\n                this.studentData = {};\n\n                if (resultData.studentWorkList != null) {\n                    var componentStates = resultData.studentWorkList;\n\n                    // populate allComponentStates, componentStatesByWorkgroupId and componentStatesByNodeId arrays\n                    this.studentData.componentStates = componentStates;\n                    this.studentData.componentStatesByWorkgroupId = {};\n                    this.studentData.componentStatesByNodeId = {};\n                    this.studentData.componentStatesByComponentId = {};\n\n                    for (var i = 0; i < componentStates.length; i++) {\n                        var componentState = componentStates[i];\n\n                        var componentStateWorkgroupId = componentState.workgroupId;\n                        if (this.studentData.componentStatesByWorkgroupId[componentStateWorkgroupId] == null) {\n                            this.studentData.componentStatesByWorkgroupId[componentStateWorkgroupId] = new Array();\n                        }\n                        this.studentData.componentStatesByWorkgroupId[componentStateWorkgroupId].push(componentState);\n\n                        var componentStateNodeId = componentState.nodeId;\n                        if (this.studentData.componentStatesByNodeId[componentStateNodeId] == null) {\n                            this.studentData.componentStatesByNodeId[componentStateNodeId] = new Array();\n                        }\n                        this.studentData.componentStatesByNodeId[componentStateNodeId].push(componentState);\n\n                        var componentId = componentState.componentId;\n                        if (this.studentData.componentStatesByComponentId[componentId] == null) {\n                            this.studentData.componentStatesByComponentId[componentId] = new Array();\n                        }\n                        this.studentData.componentStatesByComponentId[componentId].push(componentState);\n                    }\n                }\n\n                if (resultData.events != null) {\n                    // populate allEvents, eventsByWorkgroupId, and eventsByNodeId arrays\n                    this.studentData.allEvents = resultData.events;\n                    this.studentData.eventsByWorkgroupId = {};\n                    this.studentData.eventsByNodeId = {};\n                    for (var i = 0; i < resultData.events.length; i++) {\n                        var event = resultData.events[i];\n                        var eventWorkgroupId = event.workgroupId;\n                        if (this.studentData.eventsByWorkgroupId[eventWorkgroupId] == null) {\n                            this.studentData.eventsByWorkgroupId[eventWorkgroupId] = new Array();\n                        }\n                        this.studentData.eventsByWorkgroupId[eventWorkgroupId].push(event);\n\n                        var eventNodeId = event.nodeId;\n                        if (this.studentData.eventsByNodeId[eventNodeId] == null) {\n                            this.studentData.eventsByNodeId[eventNodeId] = new Array();\n                        }\n                        this.studentData.eventsByNodeId[eventNodeId].push(event);\n                    }\n                }\n\n                if (resultData.annotations != null) {\n                    // populate annotations, annotationsByWorkgroupId, and annotationsByNodeId arrays\n                    this.studentData.annotations = resultData.annotations;\n                    this.studentData.annotationsToWorkgroupId = {};\n                    this.studentData.annotationsByNodeId = {};\n                    for (var i = 0; i < resultData.annotations.length; i++) {\n                        var annotation = resultData.annotations[i];\n                        var annotationWorkgroupId = annotation.toWorkgroupId;\n                        if (this.studentData.annotationsToWorkgroupId[annotationWorkgroupId] == null) {\n                            this.studentData.annotationsToWorkgroupId[annotationWorkgroupId] = new Array();\n                        }\n                        this.studentData.annotationsToWorkgroupId[annotationWorkgroupId].push(annotation);\n\n                        var annotationNodeId = annotation.nodeId;\n                        if (this.studentData.annotationsByNodeId[annotationNodeId] == null) {\n                            this.studentData.annotationsByNodeId[annotationNodeId] = new Array();\n                        }\n                        this.studentData.annotationsByNodeId[annotationNodeId].push(annotation);\n                    }\n                }\n\n                this.AnnotationService.setAnnotations(this.studentData.annotations);\n            }\n        }));\n    };\n\n    sortVLEStatesAlphabeticallyByUserName() {\n        var vleStates = this.vleStates;\n\n        if (vleStates != null) {\n            vleStates.sort(this.sortVLEStatesAlphabeticallyByUserNameHelper);\n        }\n\n        return vleStates;\n    };\n\n    sortVLEStatesAlphabeticallyByUserNameHelper(a, b) {\n        var aUserId = a.userId;\n        var bUserId = b.userId;\n        var result = 0;\n\n        if (aUserId < bUserId) {\n            result = -1;\n        } else if (aUserId > bUserId) {\n            result = 1;\n        }\n\n        return result;\n    };\n\n    getComponentStatesByWorkgroupId(workgroupId) {\n        var componentStatesByWorkgroupId = this.studentData.componentStatesByWorkgroupId[workgroupId];\n        if (componentStatesByWorkgroupId != null) {\n            return componentStatesByWorkgroupId;\n        } else {\n            return [];\n        }\n    };\n\n    getComponentStatesByNodeId(nodeId) {\n        var componentStatesByNodeId = this.studentData.componentStatesByNodeId[nodeId];\n        if (componentStatesByNodeId != null) {\n            return componentStatesByNodeId;\n        } else {\n            return [];\n        }\n    };\n\n    /**\n     * Get the component stats for a component id\n     * @param componentId the component id\n     * @returns an array containing component states for a component id\n     */\n    getComponentStatesByComponentId(componentId) {\n        var componentStates = [];\n\n        var componentStatesByComponentId = this.studentData.componentStatesByComponentId[componentId];\n\n        if (componentStatesByComponentId != null) {\n            componentStates = componentStatesByComponentId;\n        }\n\n        return componentStates;\n    };\n\n    getLatestComponentStateByWorkgroupIdNodeIdAndComponentId(workgroupId, nodeId, componentId) {\n        var latestComponentState = null;\n\n        var componentStates = this.getComponentStatesByWorkgroupIdAndNodeId(workgroupId, nodeId);\n\n        if (componentStates != null) {\n\n            // loop through all the component states from newest to oldest\n            for (var c = componentStates.length - 1; c >= 0; c--) {\n                var componentState = componentStates[c];\n\n                if (componentState != null) {\n                    var componentStateNodeId = componentState.nodeId;\n                    var componentStateComponentId = componentState.componentId;\n\n                    // compare the node id and component id\n                    if (nodeId == componentStateNodeId &&\n                        componentId == componentStateComponentId) {\n                        latestComponentState = componentState;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return latestComponentState;\n    };\n\n    getComponentStatesByWorkgroupIdAndNodeId(workgroupId, nodeId) {\n\n        var componentStatesByWorkgroupId = this.getComponentStatesByWorkgroupId(workgroupId);\n        var componentStatesByNodeId = this.getComponentStatesByNodeId(nodeId);\n\n        // find the intersect and return it\n        return componentStatesByWorkgroupId.filter(function(n) {\n            return componentStatesByNodeId.indexOf(n) != -1;\n        });\n    };\n\n    /**\n     * Get component states for a workgroup id and component id\n     * @param workgroupId the workgroup id\n     * @param componentId the component id\n     * @returns an array of component states\n     */\n    getComponentStatesByWorkgroupIdAndComponentId(workgroupId, componentId) {\n        var componentStatesByWorkgroupId = this.getComponentStatesByWorkgroupId(workgroupId);\n        var componentStatesByComponentId = this.getComponentStatesByComponentId(componentId);\n\n        // find the intersect and return it\n        return componentStatesByWorkgroupId.filter(function(n) {\n            return componentStatesByComponentId.indexOf(n) != -1;\n        });\n    }\n\n    getEventsByWorkgroupId(workgroupId) {\n        var eventsByWorkgroupId = this.studentData.eventsByWorkgroupId[workgroupId];\n        if (eventsByWorkgroupId != null) {\n            return eventsByWorkgroupId;\n        } else {\n            return [];\n        }\n    };\n\n    getEventsByNodeId(nodeId) {\n        var eventsByNodeId = this.studentData.eventsByNodeId[nodeId];\n        if (eventsByNodeId != null) {\n            return eventsByNodeId;\n        } else {\n            return [];\n        }\n    };\n\n    getEventsByWorkgroupIdAndNodeId(workgroupId, nodeId) {\n        var eventsByWorkgroupId = this.getEventsByWorkgroupId(workgroupId);\n        var eventsByNodeId = this.getEventsByNodeId(nodeId);\n\n        // find the intersect and return it\n        return eventsByWorkgroupId.filter(function(n) {\n            return eventsByNodeId.indexOf(n) != -1;\n        });\n    };\n\n    getAnnotationsToWorkgroupId(workgroupId) {\n        var annotationsToWorkgroupId = this.studentData.annotationsToWorkgroupId[workgroupId];\n        if (annotationsToWorkgroupId != null) {\n            return annotationsToWorkgroupId;\n        } else {\n            return [];\n        }\n    };\n\n    getAnnotationsByNodeId(nodeId) {\n        var annotationsByNodeId = this.studentData.annotationsByNodeId[nodeId];\n        if (annotationsByNodeId != null) {\n            return annotationsByNodeId;\n        } else {\n            return [];\n        }\n    };\n\n    getAnnotationsToWorkgroupIdAndNodeId(workgroupId, nodeId) {\n        var annotationsToWorkgroupId = this.getAnnotationsToWorkgroupId(workgroupId);\n        var annotationsByNodeId = this.getAnnotationsByNodeId(nodeId);\n\n        // find the intersect and return it\n        return annotationsToWorkgroupId.filter(function(n) {\n            return annotationsByNodeId.indexOf(n) != -1;\n        });\n    };\n\n    setCurrentPeriod(period) {\n        this.currentPeriod = period;\n    };\n\n    getCurrentPeriod() {\n        return this.currentPeriod;\n    };\n}\n\nTeacherDataService.$inject = ['$http',\n    '$rootScope',\n    'AnnotationService',\n    'ConfigService'];\n\nexport default TeacherDataService;"]}