{"version":3,"sources":["teacherWebSocketService.es6"],"names":["TeacherWebSocketService","$rootScope","$websocket","ConfigService","StudentStatusService","dataStream","runId","getRunId","periodId","getPeriodId","workgroupId","getWorkgroupId","webSocketURL","getWebSocketURL","onMessage","message","handleMessage","data","JSON","parse","messageType","handleStudentStatusReceived","handleStudentsOnlineReceived","handleStudentDisconnected","$broadcast","messageJSON","send","studentsOnlineMessage","studentsOnlineArray","studentsOnlineList","studentsOnline","studentStatus","setStudentStatusForWorkgroupId","$emit","studentDisconnectedMessage","messageParticipants","sendMessage","$inject"],"mappings":"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","file":"teacherWebSocketService.js","sourcesContent":["class TeacherWebSocketService {\n    constructor($rootScope, $websocket, ConfigService, StudentStatusService) {\n        this.$rootScope = $rootScope;\n        this.$websocket = $websocket;\n        this.ConfigService = ConfigService;\n        this.StudentStatusService = StudentStatusService;\n        this.dataStream = null;\n    }\n\n    initialize() {\n        var runId = this.ConfigService.getRunId();\n        var periodId = this.ConfigService.getPeriodId();\n        var workgroupId = this.ConfigService.getWorkgroupId();\n        var webSocketURL = this.ConfigService.getWebSocketURL();\n        webSocketURL += \"?runId=\" + runId + \"&periodId=\" + periodId + \"&workgroupId=\" + workgroupId;\n        this.dataStream = this.$websocket(webSocketURL);\n\n        this.dataStream.onMessage((message) => {\n            this.handleMessage(message);\n        });\n    };\n\n    handleMessage(message) {\n        var data = JSON.parse(message.data);\n        var messageType = data.messageType;\n\n        if (messageType === 'studentStatus') {\n            this.handleStudentStatusReceived(data);\n        } else if (messageType === 'studentsOnlineList') {\n            this.handleStudentsOnlineReceived(data);\n        } else if (messageType === 'studentConnected') {\n\n        } else if (messageType === 'studentDisconnected') {\n            this.handleStudentDisconnected(data);\n        } else if (messageType === 'notification' || messageType === 'CRaterResultNotification') {\n            this.$rootScope.$broadcast('newNotification', data.data);\n        }\n    };\n\n    sendMessage(messageJSON) {\n        // send the websocket message\n        this.dataStream.send(messageJSON);\n    }\n\n    handleStudentsOnlineReceived(studentsOnlineMessage) {\n        this.studentsOnlineArray = studentsOnlineMessage.studentsOnlineList;\n\n        this.$rootScope.$broadcast('studentsOnlineReceived', {studentsOnline: this.studentsOnlineArray});\n    };\n\n    getStudentsOnline() {\n        var studentsOnline = [];\n        if (this.studentsOnlineArray != null) {\n            studentsOnline = this.studentsOnlineArray;\n        }\n        return studentsOnline;\n    };\n\n    /**\n     * This function is called when the teacher receives a websocket message\n     * with messageType 'studentStatus'.\n     */\n    handleStudentStatusReceived(studentStatus) {\n        var workgroupId = studentStatus.workgroupId;\n\n        // update the student status for the workgroup\n        this.StudentStatusService.setStudentStatusForWorkgroupId(workgroupId, studentStatus);\n\n        // fire the student status received event\n        this.$rootScope.$emit('studentStatusReceived', {studentStatus: studentStatus});\n    };\n\n    /**\n     * Handle the student disconnected message\n     */\n    handleStudentDisconnected(studentDisconnectedMessage) {\n\n        // fire the student disconnected event\n        this.$rootScope.$broadcast('studentDisconnected', {data: studentDisconnectedMessage});\n    }\n\n    /**\n     * Pause the screens in the period\n     * @param periodId the period id. if null or -1 is passed in we will pause\n     * all the periods\n     */\n    pauseScreens(periodId) {\n\n        // create the websocket message\n        var messageJSON = {};\n\n        messageJSON.messageType = 'pauseScreen';\n\n        if(periodId == null || periodId == -1) {\n            //we are going to pause all the students in a run\n            messageJSON.messageParticipants = 'teacherToStudentsInRun';\n        } else if(periodId != null) {\n            //we are going to pause the students in a period\n            messageJSON.periodId = periodId;\n            messageJSON.messageParticipants = 'teacherToStudentsInPeriod';\n        }\n\n        // send the websocket message\n        this.sendMessage(messageJSON);\n    }\n\n    /**\n     * Unpause the screens in the period\n     * @param periodId the period id. if null or -1 is passed in we will unpause\n     * all the periods\n     */\n    unPauseScreens(periodId) {\n\n        // create the websocket message\n        var messageJSON = {};\n\n        messageJSON.messageType = 'unPauseScreen';\n\n        if(periodId == null || periodId == -1) {\n            //we are going to unpause all the students in a run\n            messageJSON.messageParticipants = 'teacherToStudentsInRun';\n        } else if(periodId != null) {\n            //we are going to unpause the students in a period\n            messageJSON.periodId = periodId;\n            messageJSON.messageParticipants = 'teacherToStudentsInPeriod';\n        }\n        \n        // send the websocket message\n        this.sendMessage(messageJSON);\n    }\n}\n\nTeacherWebSocketService.$inject = ['$rootScope', '$websocket', 'ConfigService', 'StudentStatusService'];\n\nexport default TeacherWebSocketService;\n"]}