{"version":3,"sources":["teacherWebSocketService.es6"],"names":["TeacherWebSocketService","$rootScope","$stomp","ConfigService","StudentStatusService","studentsOnlineArray","runId","getRunId","connect","getWebSocketURL","then","frame","subscribeToTeacherTopic","subscribeToTeacherWorkgroupTopic","e","console","log","subscribe","message","headers","res","type","studentWork","JSON","parse","content","$broadcast","status","setStudentStatus","$emit","studentStatus","achievement","studentAchievement","annotationData","annotation","getWorkgroupId","notification","studentsOnlineMessage","studentsOnlineList","studentsOnline","workgroupId","indexOf","studentDisconnectedMessage","data","periodId","send","$inject"],"mappings":"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","file":"teacherWebSocketService.js","sourcesContent":["class TeacherWebSocketService {\n  constructor(\n      $rootScope,\n      $stomp,\n      ConfigService,\n      StudentStatusService) {\n    this.$rootScope = $rootScope;\n    this.$stomp = $stomp;\n    this.ConfigService = ConfigService;\n    this.StudentStatusService = StudentStatusService;\n    this.studentsOnlineArray = [];\n  }\n\n  initialize() {\n    this.runId = this.ConfigService.getRunId();\n    try {\n      this.$stomp.connect(this.ConfigService.getWebSocketURL()).then((frame) => {\n        this.subscribeToTeacherTopic();\n        this.subscribeToTeacherWorkgroupTopic();\n      });\n    } catch(e) {\n      console.log(e);\n    }\n  }\n\n  subscribeToTeacherTopic() {\n    this.$stomp.subscribe(`/topic/teacher/${this.runId}`, (message, headers, res) => {\n      if (message.type === 'studentWork') {\n        const studentWork = JSON.parse(message.content);\n        this.$rootScope.$broadcast('newStudentWorkReceived', {studentWork: studentWork});\n      } else if (message.type === 'studentStatus') {\n        const status = JSON.parse(message.content);\n        this.StudentStatusService.setStudentStatus(status);\n        this.$rootScope.$emit('studentStatusReceived', {studentStatus: status});\n      } else if (message.type === 'newStudentAchievement') {\n        const achievement = JSON.parse(message.content);\n        this.$rootScope.$broadcast('newStudentAchievement', {studentAchievement: achievement});\n      } else if (message.type === 'annotation') {\n        const annotationData = JSON.parse(message.content);\n        this.$rootScope.$broadcast('newAnnotationReceived', {annotation: annotationData});\n      }\n    });\n  }\n\n  subscribeToTeacherWorkgroupTopic() {\n    this.$stomp.subscribe(`/topic/workgroup/${this.ConfigService.getWorkgroupId()}`, (message, headers, res) => {\n      if (message.type === 'notification') {\n        const notification = JSON.parse(message.content);\n        this.$rootScope.$broadcast('newNotificationReceived', notification);\n      }\n    });\n  }\n\n  handleStudentsOnlineReceived(studentsOnlineMessage) {\n    this.studentsOnlineArray = studentsOnlineMessage.studentsOnlineList;\n    this.$rootScope.$broadcast('studentsOnlineReceived', {studentsOnline: this.studentsOnlineArray});\n  }\n\n  getStudentsOnline() {\n    return this.studentsOnlineArray;\n  }\n\n  isStudentOnline(workgroupId) {\n    return this.studentsOnlineArray.indexOf(workgroupId) > -1;\n  }\n\n  handleStudentDisconnected(studentDisconnectedMessage) {\n    this.$rootScope.$broadcast('studentDisconnected', {data: studentDisconnectedMessage});\n  }\n\n  pauseScreens(periodId) {\n    this.$stomp.send(`/app/pause/${this.runId}/${periodId}`, {}, {});\n  }\n\n  unPauseScreens(periodId) {\n    this.$stomp.send(`/app/unpause/${this.runId}/${periodId}`, {}, {});\n  }\n}\n\nTeacherWebSocketService.$inject = [\n  '$rootScope',\n  '$stomp',\n  'ConfigService',\n  'StudentStatusService'\n];\n\nexport default TeacherWebSocketService;\n"]}