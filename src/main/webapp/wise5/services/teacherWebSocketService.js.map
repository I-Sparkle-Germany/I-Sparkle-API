{"version":3,"sources":["teacherWebSocketService.es6"],"names":["TeacherWebSocketService","$rootScope","ConfigService","StudentStatusService","studentsOnlineArray","runId","getRunId","$stomp","subscribe","message","headers","res","type","studentWork","JSON","parse","content","$broadcast","status","setStudentStatus","$emit","studentStatus","achievement","studentAchievement","annotationData","annotation","getWorkgroupId","notification","studentsOnlineMessage","studentsOnlineList","studentsOnline","workgroupId","indexOf","studentDisconnectedMessage","data","periodId","send","$inject"],"mappings":"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","sourcesContent":["class TeacherWebSocketService {\n  constructor(\n      $rootScope,\n      //$stomp,\n      ConfigService,\n      StudentStatusService) {\n    this.$rootScope = $rootScope;\n    //this.$stomp = $stomp;\n    this.ConfigService = ConfigService;\n    this.StudentStatusService = StudentStatusService;\n    this.studentsOnlineArray = [];\n  }\n\n  initialize() {\n    this.runId = this.ConfigService.getRunId();\n    /*\n    try {\n      this.$stomp.connect(this.ConfigService.getWebSocketURL()).then((frame) => {\n        this.subscribeToTeacherTopic();\n        this.subscribeToTeacherWorkgroupTopic();\n      });\n    } catch(e) {\n      console.log(e);\n    }\n    */\n  }\n\n  subscribeToTeacherTopic() {\n    this.$stomp.subscribe(`/topic/teacher/${this.runId}`, (message, headers, res) => {\n      if (message.type === 'studentWork') {\n        const studentWork = JSON.parse(message.content);\n        this.$rootScope.$broadcast('newStudentWorkReceived', {studentWork: studentWork});\n      } else if (message.type === 'studentStatus') {\n        const status = JSON.parse(message.content);\n        this.StudentStatusService.setStudentStatus(status);\n        this.$rootScope.$emit('studentStatusReceived', {studentStatus: status});\n      } else if (message.type === 'newStudentAchievement') {\n        const achievement = JSON.parse(message.content);\n        this.$rootScope.$broadcast('newStudentAchievement', {studentAchievement: achievement});\n      } else if (message.type === 'annotation') {\n        const annotationData = JSON.parse(message.content);\n        this.$rootScope.$broadcast('newAnnotationReceived', {annotation: annotationData});\n      }\n    });\n  }\n\n  subscribeToTeacherWorkgroupTopic() {\n    this.$stomp.subscribe(`/topic/workgroup/${this.ConfigService.getWorkgroupId()}`, (message, headers, res) => {\n      if (message.type === 'notification') {\n        const notification = JSON.parse(message.content);\n        this.$rootScope.$broadcast('newNotificationReceived', notification);\n      }\n    });\n  }\n\n  handleStudentsOnlineReceived(studentsOnlineMessage) {\n    this.studentsOnlineArray = studentsOnlineMessage.studentsOnlineList;\n    this.$rootScope.$broadcast('studentsOnlineReceived', {studentsOnline: this.studentsOnlineArray});\n  }\n\n  getStudentsOnline() {\n    return this.studentsOnlineArray;\n  }\n\n  isStudentOnline(workgroupId) {\n    return this.studentsOnlineArray.indexOf(workgroupId) > -1;\n  }\n\n  handleStudentDisconnected(studentDisconnectedMessage) {\n    this.$rootScope.$broadcast('studentDisconnected', {data: studentDisconnectedMessage});\n  }\n\n  pauseScreens(periodId) {\n    this.$stomp.send(`/app/pause/${this.runId}/${periodId}`, {}, {});\n  }\n\n  unPauseScreens(periodId) {\n    this.$stomp.send(`/app/unpause/${this.runId}/${periodId}`, {}, {});\n  }\n}\n\nTeacherWebSocketService.$inject = [\n  '$rootScope',\n  //'$stomp',\n  'ConfigService',\n  'StudentStatusService'\n];\n\nexport default TeacherWebSocketService;\n"],"file":"teacherWebSocketService.js"}