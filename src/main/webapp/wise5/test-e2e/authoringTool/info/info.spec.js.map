{"version":3,"sources":["info.spec.es6"],"names":["common","describe","projectId","browser","params","authoringProjectId","beforeAll","page","ignoreSynchronization","get","$","sendKeys","login","user","password","click","beforeEach","refresh","wait","projectTitleSpan","isPresent","it","expect","getText","toEqual","element","all","by","repeater","then","metadataField","titleInput","model","getAttribute","clear","clickProjectHomeButton"],"mappings":";;AAAA;;IAAYA,M;;AACZ;;;;;;;;AAEA;;;AAGAC,SAAS,+BAAT,EAA0C,YAAM;;AAE9C,MAAMC,YAAYC,QAAQC,MAAR,CAAeC,kBAAjC;;AAEAC,YAAU,YAAM;AACd,QAAMC,OAAO,wBAAb;AACA,QAAMH,SAASD,QAAQC,MAAvB;AACAD,YAAQK,qBAAR,GAAgC,IAAhC,CAHc,CAGwB;AACtCL,YAAQM,GAAR,CAAY,kCAAZ;AACAC,MAAE,WAAF,EAAeC,QAAf,CAAwBP,OAAOQ,KAAP,CAAaC,IAArC;AACAH,MAAE,WAAF,EAAeC,QAAf,CAAwBP,OAAOQ,KAAP,CAAaE,QAArC;AACAJ,MAAE,eAAF,EAAmBK,KAAnB;AACD,GARD;;AAUAC,aAAW,YAAM;AACf,QAAMT,OAAO,wBAAb;AACAJ,YAAQK,qBAAR,GAAgC,KAAhC,CAFe,CAEwB;AACvCL,YAAQM,GAAR,CAAY,gDAAgDP,SAAhD,GAA4D,OAAxE;AACAC,YAAQc,OAAR,GAJe,CAII;AACnBd,YAAQe,IAAR,CAAa,YAAW;AACtB,aAAOX,KAAKY,gBAAL,CAAsBC,SAAtB,EAAP;AACD,KAFD,EAEG,IAFH,EAES,sCAFT;AAGD,GARD;;AAUAC,KAAG,+CAAH,EAAoD,YAAM;AACxD,QAAMd,OAAO,wBAAb;AACAe,WAAOf,KAAKY,gBAAL,CAAsBI,OAAtB,EAAP,EAAwCC,OAAxC,CAAgD,oBAAhD;AACAC,YAAQC,GAAR,CAAYC,GAAGC,QAAH,CAAY,iEAAZ,CAAZ,EAA4FC,IAA5F,CAAiG,UAACC,aAAD,EAAmB;AAClH,UAAMC,aAAaD,cAAc,CAAd,EAAiBL,OAAjB,CAAyBE,GAAGK,KAAH,CAAS,mDAAT,CAAzB,CAAnB;AACAV,aAAOS,WAAWE,YAAX,CAAwB,OAAxB,CAAP,EAAyCT,OAAzC,CAAiD,oBAAjD,EAFkH,CAEzC;AACzEO,iBAAWG,KAAX,GAHkH,CAG7F;AACrBH,iBAAWpB,QAAX,CAAoB,4BAApB;AACD,KALD;AAMAJ,SAAK4B,sBAAL;AACAb,WAAOf,KAAKY,gBAAL,CAAsBI,OAAtB,EAAP,EAAwCC,OAAxC,CAAgD,4BAAhD;AACD,GAXD;AAaD,CArCD","file":"info.spec.js","sourcesContent":["import * as common from '../../common.js';\nimport InfoPage from './info.page.js';\n\n/**\n * E2E tests for Authoring Tool Info view\n */\ndescribe('WISE Authoring Tool Info View', () => {\n\n  const projectId = browser.params.authoringProjectId;\n\n  beforeAll(() => {\n    const page = new InfoPage();\n    const params = browser.params;\n    browser.ignoreSynchronization = true; // doesn't use Angular\n    browser.get('http://localhost:8080/wise/login');\n    $('#username').sendKeys(params.login.user);\n    $('#password').sendKeys(params.login.password);\n    $('#signInButton').click();\n  });\n\n  beforeEach(() => {\n    const page = new InfoPage();\n    browser.ignoreSynchronization = false; // uses Angular\n    browser.get('http://localhost:8080/wise/author#/project/' + projectId + '/info');\n    browser.refresh(); // needed for this issue https://github.com/angular/protractor/issues/2643\n    browser.wait(function() {\n      return page.projectTitleSpan.isPresent()\n    }, 5000, 'Authoring Tool didn\\'t load properly');\n  });\n\n  it('should allow user to change the project title', () => {\n    const page = new InfoPage();\n    expect(page.projectTitleSpan.getText()).toEqual('My Science Project');\n    element.all(by.repeater('metadataField in projectInfoController.metadataAuthoring.fields')).then((metadataField) => {\n      const titleInput = metadataField[0].element(by.model('projectInfoController.metadata[metadataField.key]'));\n      expect(titleInput.getAttribute('value')).toEqual('My Science Project');  // should show the title of the project\n      titleInput.clear();  // clear out what's there.\n      titleInput.sendKeys('My Awesome Science Project');\n    });\n    page.clickProjectHomeButton();\n    expect(page.projectTitleSpan.getText()).toEqual('My Awesome Science Project');\n  });\n\n});\n"]}