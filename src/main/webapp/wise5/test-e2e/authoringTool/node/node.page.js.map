{"version":3,"sources":["node.page.es6"],"names":["StepPage","projectTitleSpan","element","by","id","stepSelectMenu","previousNodeButton","nextNodeButton","backToProjectButton","addComponentButton","importComponentButton","moveComponentButton","copyComponentButton","deleteComponentButton","editStepRubricButton","stepAdvancedButton","stepUndoButton","stepPreviewButton","stepPreviewWithouConstraintsButton","stepTitleInput","model","title","clear","sendKeys","click","componentType","cssContainingText","position","all","css","get","componentNumber"],"mappings":";;;;;;;;;;IAAqBA,Q;AACnB,sBAAc;AAAA;;AAEZ;AACA,SAAKC,gBAAL,GAAwBC,QAAQC,GAAGC,EAAH,CAAM,kBAAN,CAAR,CAAxB;AACA,SAAKC,cAAL,GAAsBH,QAAQC,GAAGC,EAAH,CAAM,gBAAN,CAAR,CAAtB;AACA,SAAKE,kBAAL,GAA0BJ,QAAQC,GAAGC,EAAH,CAAM,oBAAN,CAAR,CAA1B;AACA,SAAKG,cAAL,GAAsBL,QAAQC,GAAGC,EAAH,CAAM,gBAAN,CAAR,CAAtB;;AAEA;AACA,SAAKI,mBAAL,GAA2BN,QAAQC,GAAGC,EAAH,CAAM,qBAAN,CAAR,CAA3B;AACA,SAAKK,kBAAL,GAA0BP,QAAQC,GAAGC,EAAH,CAAM,oBAAN,CAAR,CAA1B;AACA,SAAKM,qBAAL,GAA6BR,QAAQC,GAAGC,EAAH,CAAM,uBAAN,CAAR,CAA7B;AACA,SAAKO,mBAAL,GAA2BT,QAAQC,GAAGC,EAAH,CAAM,qBAAN,CAAR,CAA3B;AACA,SAAKQ,mBAAL,GAA2BV,QAAQC,GAAGC,EAAH,CAAM,qBAAN,CAAR,CAA3B;AACA,SAAKS,qBAAL,GAA6BX,QAAQC,GAAGC,EAAH,CAAM,uBAAN,CAAR,CAA7B;AACA,SAAKU,oBAAL,GAA4BZ,QAAQC,GAAGC,EAAH,CAAM,sBAAN,CAAR,CAA5B;AACA,SAAKW,kBAAL,GAA0Bb,QAAQC,GAAGC,EAAH,CAAM,oBAAN,CAAR,CAA1B;AACA,SAAKY,cAAL,GAAsBd,QAAQC,GAAGC,EAAH,CAAM,gBAAN,CAAR,CAAtB;AACA,SAAKa,iBAAL,GAAyBf,QAAQC,GAAGC,EAAH,CAAM,mBAAN,CAAR,CAAzB;AACA,SAAKc,kCAAL,GAA0ChB,QAAQC,GAAGC,EAAH,CAAM,oCAAN,CAAR,CAA1C;;AAEA;AACA,SAAKe,cAAL,GAAsBjB,QAAQC,GAAGiB,KAAH,CAAS,oCAAT,CAAR,CAAtB;AACD;;AAED;;;;;;;;iCAIaC,K,EAAO;AAClB,WAAKF,cAAL,CAAoBG,KAApB;AACA,WAAKH,cAAL,CAAoBI,QAApB,CAA6BF,KAA7B;AACD;;AAED;;;;;;;8CAI0B;AACxB,WAAKZ,kBAAL,CAAwBe,KAAxB;AACD;;AAED;;;;;;;uCAImBC,a,EAAe;AAChCvB,cAAQC,GAAGuB,iBAAH,CAAqB,cAArB,EAAqCD,aAArC,CAAR,EAA6DD,KAA7D;AACD;;AAED;;;;;;;;sCAKkBG,Q,EAAU;AAC1BzB,cAAQ0B,GAAR,CAAYzB,GAAG0B,GAAH,CAAO,sBAAP,CAAZ,EAA4CC,GAA5C,CAAgDH,QAAhD,EAA0DH,KAA1D;AACD;;AAED;;;;;;8CAG0B;AACxB,WAAKlB,kBAAL,CAAwBkB,KAAxB;AACD;;AAED;;;;;;0CAGsB;AACpB,WAAKjB,cAAL,CAAoBiB,KAApB;AACD;;AAED;;;;;;;;8CAK0BO,e,EAAiB;AACzC7B,cAAQ0B,GAAR,CAAYzB,GAAG0B,GAAH,CAAO,YAAP,CAAZ,EAAkCC,GAAlC,CAAsCC,kBAAkB,CAAxD,EAA2D7B,OAA3D,CAAmEC,GAAG0B,GAAH,CAAO,aAAP,CAAnE,EAA0FL,KAA1F;AACD;;AAED;;;;;;iDAG6B;AAC3B,WAAKX,qBAAL,CAA2BW,KAA3B;AACD;;;;;;kBAxFkBxB,Q","file":"node.page.js","sourcesContent":["export default class StepPage {\n  constructor() {\n\n    // common Authoring Tool elements\n    this.projectTitleSpan = element(by.id('projectTitleSpan'));\n    this.stepSelectMenu = element(by.id('stepSelectMenu'));\n    this.previousNodeButton = element(by.id('previousNodeButton'));\n    this.nextNodeButton = element(by.id('nextNodeButton'));\n\n    // step view top buttons\n    this.backToProjectButton = element(by.id('backToProjectButton'));\n    this.addComponentButton = element(by.id('addComponentButton'));\n    this.importComponentButton = element(by.id('importComponentButton'));\n    this.moveComponentButton = element(by.id('moveComponentButton'));\n    this.copyComponentButton = element(by.id('copyComponentButton'));\n    this.deleteComponentButton = element(by.id('deleteComponentButton'));\n    this.editStepRubricButton = element(by.id('editStepRubricButton'));\n    this.stepAdvancedButton = element(by.id('stepAdvancedButton'));\n    this.stepUndoButton = element(by.id('stepUndoButton'));\n    this.stepPreviewButton = element(by.id('stepPreviewButton'));\n    this.stepPreviewWithouConstraintsButton = element(by.id('stepPreviewWithouConstraintsButton'));\n\n    // step authoring elements\n    this.stepTitleInput = element(by.model('nodeAuthoringController.node.title'));\n  }\n\n  /**\n   * Enter text into the step title input.\n   * @param title the new step title\n   */\n  setStepTitle(title) {\n    this.stepTitleInput.clear();\n    this.stepTitleInput.sendKeys(title);\n  }\n\n  /**\n   * Click the add component button which will display the component types the\n   * author can choose to add.\n   */\n  clickAddComponentButton() {\n    this.addComponentButton.click();\n  }\n\n  /**\n   * Click on a component type for adding a new component.\n   * @param componentType The component type. Example 'Open Response'.\n   */\n  clickComponentType(componentType) {\n    element(by.cssContainingText('md-grid-tile', componentType)).click();\n  }\n\n  /**\n   * Click the insert button.\n   * @param position The position the component will be placed in. The range of\n   * allowable values are 0 and up.\n   */\n  clickInsertButton(position) {\n    element.all(by.css('.moveComponentButton')).get(position).click();\n  }\n\n  /**\n   * Click the previous step button.\n   */\n  clickPreviousNodeButton() {\n    this.previousNodeButton.click();\n  }\n\n  /**\n   * Click the next step button.\n   */\n  clickNextNodeButton() {\n    this.nextNodeButton.click();\n  }\n\n  /**\n   * Click the checkbox for a component.\n   * @param componentNumber The component number. The range of allowed values\n   * are 1 and up.\n   */\n  clickTheComponentCheckbox(componentNumber) {\n    element.all(by.css('.component')).get(componentNumber - 1).element(by.css('md-checkbox')).click();\n  }\n\n  /**\n   * Click the delete component button.\n   */\n  clickDeleteComponentButton() {\n    this.deleteComponentButton.click();\n  }\n}\n"]}