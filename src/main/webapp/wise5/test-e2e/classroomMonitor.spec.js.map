{"version":3,"sources":["classroomMonitor.spec.es6"],"names":["describe","hasClass","element","cls","getAttribute","then","classes","split","indexOf","waitForUrlToChangeTo","urlRegex","currentUrl","browser","getCurrentUrl","storeCurrentUrl","url","wait","compareCurrentUrl","test","it","ignoreSynchronization","get","expect","getTitle","toEqual","$","sendKeys","click","classroomMonitorLink","all","by","css","isPresent","toBeTruthy","getAllWindowHandles","handles","switchTo","window","refresh","waitForAngular","toMatch","cssContainingText","isDisplayed","xpath","notificationButton","notificationMenu","pauseScreensButton","pauseScreensMenu","accountButton","filterByWorkgroup","periodFilter","repeater","groupNavItems","activity1","className","getText","toBe","driver","close","signOutButton"],"mappings":"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","file":"classroomMonitor.spec.js","sourcesContent":["// E2E test for Classroom Monitor\ndescribe('WISE Classroom Monitor', () => {\n\n    function hasClass(element, cls) {\n        return element.getAttribute('class').then((classes) => {\n            return classes.split(' ').indexOf(cls) !== -1;\n        });\n    }\n\n    /**\n     * @name waitForUrlToChangeTo\n     * @description Wait until the URL changes to match a provided regex\n     * @param {RegExp} urlRegex wait until the URL changes to match this regex\n     * @returns {!webdriver.promise.Promise} Promise\n     */\n    function waitForUrlToChangeTo(urlRegex) {\n        let currentUrl;\n\n        return browser.getCurrentUrl().then(function storeCurrentUrl(url) {\n                currentUrl = url;\n            }\n        ).then(function waitForUrlToChangeTo() {\n                return browser.wait(function waitForUrlToChangeTo() {\n                    return browser.getCurrentUrl().then(function compareCurrentUrl(url) {\n                        return urlRegex.test(url);\n                    });\n                });\n            }\n        );\n    }\n\n    it('should open the classroom monitor tool even without any students', () => {\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        browser.get('http://localhost:8080/wise/login');\n        expect(browser.getTitle()).toEqual('Sign In');\n        $('#username').sendKeys('preview');\n        $('#password').sendKeys('wise');\n        $('#signInButton').click();\n\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/teacher');\n        expect(browser.getTitle()).toEqual('WISE Teacher Dashboard');\n        // Find and click on the classroom monitor link\n        let classroomMonitorLink = element.all(by.css(\".classroomMonitor\")).get(0);\n        expect(classroomMonitorLink.isPresent()).toBeTruthy();\n        classroomMonitorLink.click();\n\n        // Clicking on the classroom monitor link should open the classroom monitor in a new window\n        browser.getAllWindowHandles().then((handles) => {\n            browser.switchTo().window(handles[1]).then(() => {\n                browser.ignoreSynchronization = false;  // uses Angular\n                browser.refresh();  // needed for this issue https://github.com/angular/protractor/issues/2643\n                browser.waitForAngular();   // wait for Angular to load\n                expect(browser.getCurrentUrl()).toMatch('http://localhost:8080/wise/classroomMonitor/[0-9]+#/project/');\n                expect(browser.getTitle()).toEqual('WISE Classroom Monitor');\n                expect(element(by.cssContainingText('top-bar',\"My Awesome Science Project\")).isDisplayed()).toBeTruthy();  // check that the title of the run is displayed\n                expect(element(by.cssContainingText('md-toolbar',\"Grade By Step\")).isDisplayed()).toBeTruthy();  // check Grade by Step view is displayed\n\n                // check for elements on the page\n                expect(element(by.xpath('//a[@aria-label=\"Grade By Step\"]')).isPresent()).toBeTruthy();\n                expect(element(by.xpath('//a[@aria-label=\"Grade By Student\"]')).isPresent()).toBeTruthy();\n                expect(element(by.xpath('//a[@aria-label=\"Milestones\"]')).isPresent()).toBeTruthy();\n\n                // tests for notifications\n                let notificationButton = element(by.xpath('//button[@aria-label=\"Alerts\"]'));\n                let notificationMenu = element(by.cssContainingText('.md-open-menu-container','Alerts'));\n                expect(notificationMenu.getAttribute('aria-hidden')).toEqual(\"true\");  // Notification menu should be hidden\n\n                notificationButton.click();   // Open the Notification Menu by clicking on the notification button\n                expect(notificationMenu.getAttribute('aria-hidden')).toEqual(\"false\");  // Notification Menu should be displayed\n                // Clicking outside of the Notification Menu should dismiss the Notification Menu\n                element(by.xpath('//body')).click();\n                expect(notificationMenu.getAttribute('aria-hidden')).toEqual(\"true\");  // Notification menu should be hidden\n\n                // tests for pause screens\n                let pauseScreensButton = element(by.xpath('//button[@aria-label=\"Lock Student Screens\"]'));\n                let pauseScreensMenu = element(by.cssContainingText('.md-open-menu-container','Lock Student Screens'));\n                expect(pauseScreensMenu.getAttribute('aria-hidden')).toEqual(\"true\");  // Pause Screens menu should be hidden\n\n                pauseScreensButton.click();   // Open the Pause Screens Menu by clicking on the pause screens button\n                expect(pauseScreensMenu.getAttribute('aria-hidden')).toEqual(\"false\");  // Pause Screens Menu should be displayed\n                // Clicking outside of the Pause Screens Menu should dismiss the Pause Screens Menu\n                element(by.xpath('//body')).click();\n                expect(pauseScreensMenu.getAttribute('aria-hidden')).toEqual(\"true\");  // Pause Screens menu should be hidden\n\n                // tests for user accounts\n                let accountButton = element(by.xpath('//button[@aria-label=\"User Menu\"]'));\n                expect(accountButton.isPresent()).toBeTruthy();\n\n                let filterByWorkgroup = element(by.xpath('//workgroup-select'));\n                expect(filterByWorkgroup.isPresent()).toBeTruthy(); // make sure filter by workgroup input is present\n\n                let periodFilter = element(by.xpath('//period-select'));\n                expect(periodFilter.isPresent()).toBeTruthy(); // make sure filter by workgroup input is present\n\n                // test that the project map is displayed\n                element.all(by.repeater('id in nodeProgressController.rootNode.ids')).then((groupNavItems) => {\n                    let activity1 = groupNavItems[0];\n                    expect(activity1.element(by.className('md-title')).getText()).toEqual('1: Act One');\n\n                    // Activity 1 should not be expanded yet, so expand it\n                    activity1.click();\n                    expect(hasClass(activity1, 'expanded')).toBe(true);\n                });\n\n                // close the current window\n                browser.driver.close().then(() => {\n                    // switch to the main authoring window\n                    browser.switchTo().window(handles[0]);\n                });\n            });\n        });\n\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        expect(browser.getTitle()).toEqual('WISE Teacher Dashboard');\n        let signOutButton = $(\"#signOut\");\n        expect(signOutButton.isPresent()).toBeTruthy();\n        signOutButton.click();\n        expect(browser.getTitle()).toEqual('Web-based Inquiry Science Environment (WISE)');\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/');\n    });\n});"]}