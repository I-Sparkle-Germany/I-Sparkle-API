{"version":3,"sources":["common.es6"],"names":["hasClass","shouldBePresent","shouldBeAbsent","shouldBeHidden","shouldBeDisplayed","shouldBeDisabled","shouldBeEnabled","shouldBeSelected","shouldBeUnselected","urlShouldBe","element","cls","getAttribute","then","classes","split","indexOf","elements","expect","isPresent","toBeTruthy","toBeFalsy","toEqual","toBeNull","choices","choice","toBe","expectedURL","browser","getCurrentUrl"],"mappings":"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","file":"common.js","sourcesContent":["export function hasClass(element, cls) {\n  return element.getAttribute('class').then((classes) => {\n    return classes.split(' ').indexOf(cls) !== -1;\n  });\n}\n\nexport function shouldBePresent(elements) {\n  for (let element of elements) {\n    expect(element.isPresent()).toBeTruthy();\n  }\n}\n\nexport function shouldBeAbsent(elements) {\n  for (let element of elements) {\n    expect(element.isPresent()).toBeFalsy();\n  }\n}\n\nexport function shouldBeHidden(elements) {\n  for (let element of elements) {\n    expect(element.getAttribute('aria-hidden')).toEqual(\"true\")\n  }\n}\n\nexport function shouldBeDisplayed(elements) {\n  for (let element of elements) {\n    expect(element.getAttribute('aria-hidden')).toEqual(\"false\");\n  }\n}\n\nexport function shouldBeDisabled(elements) {\n  for (let element of elements) {\n    expect(element.getAttribute('disabled')).toBeTruthy();\n  }\n}\n\nexport function shouldBeEnabled(elements) {\n  for (let element of elements) {\n    expect(element.getAttribute('disabled')).toBeNull();\n  }\n}\n\nexport function shouldBeSelected(choices) {\n  for (let choice of choices) {\n    expect(choice.getAttribute('aria-checked')).toBe(\"true\");\n  }\n}\n\nexport function shouldBeUnselected(choices) {\n  for (let choice of choices) {\n    expect(choice.getAttribute('aria-checked')).toBe(\"false\");\n  }\n}\n\nexport function urlShouldBe(expectedURL) {\n  expect(browser.getCurrentUrl()).toEqual(expectedURL);\n}\n"]}