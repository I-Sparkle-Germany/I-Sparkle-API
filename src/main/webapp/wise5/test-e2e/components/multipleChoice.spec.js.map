{"version":3,"sources":["multipleChoice.spec.es6"],"names":["describe","hasClass","element","cls","getAttribute","then","classes","split","indexOf","saveButton","by","xpath","saveMessage","submitButton","submitMessage","radioGroup","model","spongeBobChoice","patrickChoice","squidwardChoice","it","browser","get","nodeDropDownMenu","wait","isPresent","expect","getTitle","toEqual","getText","toBe","nodeContent","cssContainingText","toBeTruthy","click","toContain","nextButton","leonardoChoice","donatelloChoice","michelangeloChoice","raphaelChoice","squirtleChoice","previousButton"],"mappings":"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","file":"multipleChoice.spec.js","sourcesContent":["// E2E test for Open Response component in preview mode\ndescribe('WISE5 Multiple Choice Component', () => {\n\n    let hasClass = (element, cls) => {\n        return element.getAttribute('class').then((classes) => {\n            return classes.split(' ').indexOf(cls) !== -1;\n        });\n    };\n\n    let saveButton = element(by.xpath('//button[@translate=\"save\"]'));\n    let saveMessage = element(by.xpath('//span[@ng-show=\"nodeController.saveMessage.text\"]'));\n    let submitButton = element(by.xpath('//button[@translate=\"SUBMIT\"]'));\n    let submitMessage = element(by.xpath('//span[@ng-show=\"multipleChoiceController.saveMessage.text\"]'));\n    let radioGroup = element(by.model('multipleChoiceController.studentChoices'));\n    let spongeBobChoice = element(by.xpath('//md-radio-button[@aria-label=\"Spongebob\"]'));\n    let patrickChoice = element(by.xpath('//md-radio-button[@aria-label=\"Patrick\"]'));\n    let squidwardChoice = element(by.xpath('//md-radio-button[@aria-label=\"Squidward\"]'));\n\n    it('should load the vle and go to node5', () => {\n        browser.get('http://localhost:8080/wise/project/demo#/vle/node5');\n        let nodeDropDownMenu = element(by.model(\"stepToolsCtrl.toNodeId\"));\n        browser.wait((nodeDropDownMenu).isPresent(), 5000);  // give it at most 5 seconds to load.\n        expect(browser.getTitle()).toEqual('WISE');\n        expect(nodeDropDownMenu.getText()).toBe('1.5: Multiple Choice Step Single Answer');\n\n        // check that the elements are on the page\n        let nodeContent = element(by.cssContainingText('.node-content','Who lives in a pineapple under the sea?'));\n        expect(nodeContent.isPresent()).toBeTruthy();\n        expect(radioGroup.isPresent()).toBeTruthy();\n        expect(spongeBobChoice.isPresent()).toBeTruthy();\n        expect(spongeBobChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(patrickChoice.isPresent()).toBeTruthy();\n        expect(patrickChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(squidwardChoice.isPresent()).toBeTruthy();\n        expect(squidwardChoice.getAttribute('aria-checked')).toBe(\"false\");\n\n        // save and submit buttons should be displayed but disabled\n        expect(saveButton.isPresent()).toBeTruthy();\n        expect(hasClass(saveButton, \"disabled\"));\n        expect(submitButton.isPresent()).toBeTruthy();\n        expect(hasClass(submitButton, \"disabled\"));\n        expect(saveMessage.getText()).toBe(\"\");  // there should be nothing in the save message\n    });\n\n    it('should allow students to choose a choice and save', () => {\n        spongeBobChoice.click();\n        expect(spongeBobChoice.getAttribute('aria-checked')).toBe(\"true\");\n        expect(patrickChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(squidwardChoice.getAttribute('aria-checked')).toBe(\"false\");\n\n        // save and submit buttons should now be enabled\n        expect(!hasClass(saveButton, \"disabled\"));\n        expect(!hasClass(submitButton, \"disabled\"));\n\n        // click on save button\n        saveButton.click();\n        expect(saveMessage.getText()).toContain(\"Saved\");  // save message should show the last saved time\n\n        // save buttons should be displayed but disabled, but the submit button should still be enabled.\n        expect(hasClass(saveButton, \"disabled\"));\n        expect(!hasClass(submitButton, \"disabled\"));\n\n        // choose another choice\n        patrickChoice.click();\n        expect(spongeBobChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(patrickChoice.getAttribute('aria-checked')).toBe(\"true\");\n        expect(squidwardChoice.getAttribute('aria-checked')).toBe(\"false\");\n\n        // save and submit buttons should now be enabled\n        expect(!hasClass(saveButton, \"disabled\"));\n        expect(!hasClass(submitButton, \"disabled\"));\n\n        // click on submit button\n        submitButton.click();\n        expect(submitMessage.getText()).toContain(\"Submitted\");  // save message should show the last submitted time\n\n        // save buttons and submit buttons should both be disabled.\n        expect(!hasClass(saveButton, \"disabled\"));\n        expect(!hasClass(submitButton, \"disabled\"));\n\n        // you should be able to choose another choice\n        squidwardChoice.click();\n        expect(spongeBobChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(patrickChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(squidwardChoice.getAttribute('aria-checked')).toBe(\"true\");\n    });\n\n    let nextButton = element(by.xpath('//button[@aria-label=\"Next Item\"]'));\n    let leonardoChoice = element(by.xpath('//md-checkbox[@aria-label=\"Leonardo\"]'));\n    let donatelloChoice = element(by.xpath('//md-checkbox[@aria-label=\"Donatello\"]'));\n    let michelangeloChoice = element(by.xpath('//md-checkbox[@aria-label=\"Michelangelo\"]'));\n    let raphaelChoice = element(by.xpath('//md-checkbox[@aria-label=\"Raphael\"]'));\n    let squirtleChoice = element(by.xpath('//md-checkbox[@aria-label=\"Squirtle\"]'));\n\n    it('should show multiple choice multiple answer component on node6', () => {\n        nextButton.click();\n        let nodeDropDownMenu = element(by.model(\"stepToolsCtrl.toNodeId\"));\n        browser.wait((nodeDropDownMenu).isPresent(), 5000);  // give it at most 5 seconds to load.\n        expect(browser.getTitle()).toEqual('WISE');\n        expect(nodeDropDownMenu.getText()).toBe('1.6: Multiple Choice Step Multiple Answer');\n\n        // check that the elements are on the page\n        let nodeContent = element(by.cssContainingText('.node-content','Which of these are Ninja Turtles?'));\n        expect(nodeContent.isPresent()).toBeTruthy();\n        expect(leonardoChoice.isPresent()).toBeTruthy();\n        expect(leonardoChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(donatelloChoice.isPresent()).toBeTruthy();\n        expect(donatelloChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(michelangeloChoice.isPresent()).toBeTruthy();\n        expect(michelangeloChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(raphaelChoice.isPresent()).toBeTruthy();\n        expect(raphaelChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(squirtleChoice.isPresent()).toBeTruthy();\n        expect(squirtleChoice.getAttribute('aria-checked')).toBe(\"false\");\n\n        // save and submit buttons should be displayed but disabled\n        expect(saveButton.isPresent()).toBeTruthy();\n        expect(hasClass(saveButton, \"disabled\"));\n        expect(submitButton.isPresent()).toBeTruthy();\n        expect(hasClass(submitButton, \"disabled\"));\n        expect(saveMessage.getText()).toBe(\"\");  // there should be nothing in the save message\n    });\n\n    it('should allow students to choose several choices and save', () => {\n        leonardoChoice.click();\n        expect(leonardoChoice.getAttribute('aria-checked')).toBe(\"true\");\n        expect(donatelloChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(michelangeloChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(raphaelChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(squirtleChoice.getAttribute('aria-checked')).toBe(\"false\");\n\n        // save and submit buttons should now be enabled\n        expect(!hasClass(saveButton, \"disabled\"));\n        expect(!hasClass(submitButton, \"disabled\"));\n\n        // click on save button\n        saveButton.click();\n        expect(saveMessage.getText()).toContain(\"Saved\");  // save message should show the last saved time\n\n        // save buttons should be displayed but disabled, but the submit button should still be enabled.\n        expect(hasClass(saveButton, \"disabled\"));\n        expect(!hasClass(submitButton, \"disabled\"));\n\n        // choose another choice\n        squirtleChoice.click();\n        expect(leonardoChoice.getAttribute('aria-checked')).toBe(\"true\");\n        expect(donatelloChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(michelangeloChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(raphaelChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(squirtleChoice.getAttribute('aria-checked')).toBe(\"true\");\n\n        // save and submit buttons should now be enabled\n        expect(!hasClass(saveButton, \"disabled\"));\n        expect(!hasClass(submitButton, \"disabled\"));\n\n        // click on submit button\n        submitButton.click();\n        expect(submitMessage.getText()).toContain(\"Submitted\");  // save message should show the last submitted time\n\n        // save buttons and submit buttons should both be disabled.\n        expect(!hasClass(saveButton, \"disabled\"));\n        expect(!hasClass(submitButton, \"disabled\"));\n\n        // you should be able to choose another choice\n        michelangeloChoice.click();\n        expect(leonardoChoice.getAttribute('aria-checked')).toBe(\"true\");\n        expect(donatelloChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(michelangeloChoice.getAttribute('aria-checked')).toBe(\"true\");\n        expect(raphaelChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(squirtleChoice.getAttribute('aria-checked')).toBe(\"true\");\n    });\n\n    let previousButton = element(by.xpath('//button[@aria-label=\"Previous Item\"]'));\n\n    it('should show previously-chosen multiple choice answer', () => {\n        // go back to the previous mc single choice step\n        previousButton.click();\n        let nodeDropDownMenu = element(by.model(\"stepToolsCtrl.toNodeId\"));\n        browser.wait((nodeDropDownMenu).isPresent(), 5000);  // give it at most 5 seconds to load.\n        expect(browser.getTitle()).toEqual('WISE');\n        expect(nodeDropDownMenu.getText()).toBe('1.5: Multiple Choice Step Single Answer');\n\n        // check that choices have persisted\n        expect(spongeBobChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(patrickChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(squidwardChoice.getAttribute('aria-checked')).toBe(\"true\");\n\n        // go back to the previous mc multiple choice step\n        nextButton.click();\n        browser.wait((nodeDropDownMenu).isPresent(), 5000);  // give it at most 5 seconds to load.\n        expect(browser.getTitle()).toEqual('WISE');\n        expect(nodeDropDownMenu.getText()).toBe('1.6: Multiple Choice Step Multiple Answer');\n\n        // check that choices have persisted\n        expect(leonardoChoice.getAttribute('aria-checked')).toBe(\"true\");\n        expect(donatelloChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(michelangeloChoice.getAttribute('aria-checked')).toBe(\"true\");\n        expect(raphaelChoice.getAttribute('aria-checked')).toBe(\"false\");\n        expect(squirtleChoice.getAttribute('aria-checked')).toBe(\"true\");\n    });\n});\n"]}