{"version":3,"sources":["notebook.spec.es6"],"names":["describe","hasClass","element","cls","getAttribute","then","classes","split","indexOf","notebookButton","by","tagName","notebookReport","notebookReportToolbar","css","notebookReportContainer","notebookLauncherButton","xpath","addNoteButton","insertNoteButton","fullScreenButton","collapseButton","it","browser","get","nodeDropDownMenu","model","wait","isPresent","expect","getTitle","toEqual","getText","toBe","isDisplayed","toBeTruthy","toBeFalsy","click","nyanCatImage","addNoteDialog","addNoteCancelButton","addNoteSaveButton"],"mappings":"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","file":"notebook.spec.js","sourcesContent":["// E2E test for working with the notebook in preview mode\ndescribe('WISE5 Notebook in Preview Mode', () => {\n\n    let hasClass = (element, cls) => {\n        return element.getAttribute('class').then((classes) => {\n            return classes.split(' ').indexOf(cls) !== -1;\n        });\n    };\n\n    let notebookButton = element(by.tagName('notebook'));\n    let notebookReport = element(by.tagName('notebook-report'));\n    let notebookReportToolbar = notebookReport.element(by.css('.notebook-report__toolbar'));\n    let notebookReportContainer = notebookReport.element(by.css('.notebook-report-container'));\n    let notebookLauncherButton = element(by.xpath('//button[@aria-label=\"Notebook\"]'));\n    let addNoteButton = element(by.xpath('//button[@aria-label=\"Add note\"]'));  // add note button in fab menu\n    let insertNoteButton = element(by.css('.notebook-item--report__add-note'));  // insert note button inside report dialog\n    let fullScreenButton = element(by.css('[ng-click=\"$ctrl.fullscreen()\"]'));\n    let collapseButton = element(by.css('[ng-click=\"$event.stopPropagation(); $ctrl.collapse()\"]'));\n\n    it('should load the vle and go to node 1 and show notebook buttons', () => {\n        browser.get('http://localhost:8080/wise/project/demo#/vle/node1');\n        let nodeDropDownMenu = element(by.model(\"stepToolsCtrl.toNodeId\"));\n        browser.wait((nodeDropDownMenu).isPresent(), 5000);  // give it at most 5 seconds to load.\n        expect(browser.getTitle()).toEqual('WISE');\n        expect(nodeDropDownMenu.getText()).toBe('1.1: HTML Step');\n        expect(notebookButton.isDisplayed()).toBeTruthy();\n        expect(notebookReport.isDisplayed()).toBeTruthy();\n\n        expect(notebookReportToolbar.isDisplayed()).toBeTruthy();\n        expect(notebookLauncherButton.isDisplayed()).toBeTruthy();\n        expect(addNoteButton.isDisplayed()).toBeFalsy();\n        expect(insertNoteButton.isDisplayed()).toBeFalsy();\n        expect(fullScreenButton.isDisplayed()).toBeTruthy();\n        expect(collapseButton.isDisplayed()).toBeTruthy();\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__collapsed')).toBeTruthy(); // notebook report should be collapsed at this point\n    });\n\n    it('should open the report in different modes', () => {\n        notebookReportToolbar.click(); // clicking on the notebook report should display the report\n        expect(notebookLauncherButton.isDisplayed()).toBeTruthy(); // notebook fab icon should still be displayed\n        expect(insertNoteButton.isDisplayed()).toBeTruthy();\n        expect(addNoteButton.isDisplayed()).toBeFalsy();\n        expect(fullScreenButton.isDisplayed()).toBeTruthy();\n        expect(collapseButton.isDisplayed()).toBeTruthy();\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__collapsed')).toBeFalsy(); // notebook report should be displayed at this point, in small view\n\n        collapseButton.click(); // clicking on collapse button should minimize the report\n        expect(notebookReportToolbar.isDisplayed()).toBeTruthy();\n        expect(notebookLauncherButton.isDisplayed()).toBeTruthy(); // notebook fab icon should still be displayed\n        expect(insertNoteButton.isDisplayed()).toBeFalsy();\n        expect(addNoteButton.isDisplayed()).toBeFalsy();\n        expect(fullScreenButton.isDisplayed()).toBeTruthy();\n        expect(collapseButton.isDisplayed()).toBeTruthy();\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__collapsed')).toBeTruthy(); // notebook report should be collapsed at this point\n\n        fullScreenButton.click();  // clicking on fullscreen button should display the report in full screen mode.\n        expect(notebookLauncherButton.isDisplayed()).toBeTruthy(); // notebook fab icon should still be displayed\n        expect(insertNoteButton.isDisplayed()).toBeTruthy();\n        expect(addNoteButton.isDisplayed()).toBeFalsy();\n        expect(fullScreenButton.isDisplayed()).toBeTruthy();\n        expect(collapseButton.isDisplayed()).toBeTruthy();\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__collapsed')).toBeFalsy(); // notebook report should be displayed at this point, in full view\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__full')).toBeTruthy(); // notebook report should be displayed at this point, in full view\n\n        collapseButton.click(); // clicking on collapse button should minimize the report\n        collapseButton.click();  // clicking on collapse button should display the report in full screen mode again\n        expect(notebookLauncherButton.isDisplayed()).toBeTruthy(); // notebook fab icon should still be displayed\n        expect(insertNoteButton.isDisplayed()).toBeTruthy();\n        expect(addNoteButton.isDisplayed()).toBeFalsy();\n        expect(fullScreenButton.isDisplayed()).toBeTruthy();\n        expect(collapseButton.isDisplayed()).toBeTruthy();\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__collapsed')).toBeFalsy(); // notebook report should be displayed at this point, in full view\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__full')).toBeTruthy(); // notebook report should be displayed at this point, in full view\n        collapseButton.click(); // clicking on collapse button should minimize the report\n    });\n\n    it('should snip image to notebook', () => {\n        let nyanCatImage = element(by.xpath('//img[@src=\"/wise/curriculum/demo/assets/nyan_cat.png\"]'));\n        expect(nyanCatImage.isDisplayed()).toBeTruthy();\n        nyanCatImage.click();  // click on the nyan cat image\n        let addNoteDialog = element(by.xpath('//md-dialog[@aria-label=\"Add note\"]'));  // dialog for adding a new note\n        expect(addNoteDialog.isDisplayed()).toBeTruthy();  // add note dialog should appear\n        let addNoteCancelButton = addNoteDialog.element(by.xpath('//md-dialog-actions/button[@aria-label=\"Cancel\"]'));\n        expect(addNoteCancelButton.isPresent()).toBeTruthy();\n\n        // clicking on the cancelAddNoteButton should dismiss the add note dialog\n        addNoteCancelButton.click();\n        expect(addNoteButton.isDisplayed()).toBeFalsy();\n        expect(addNoteDialog.isPresent()).toBeFalsy();\n\n        // add again, without text\n        nyanCatImage.click();  // click on the nyan cat image\n        expect(addNoteDialog.isDisplayed()).toBeTruthy();  // add note dialog should appear\n        let addNoteSaveButton = addNoteDialog.element(by.xpath('//md-dialog-actions/button[@aria-label=\"Save\"]'));\n        expect(addNoteSaveButton.isPresent()).toBeTruthy();\n        addNoteSaveButton.click();\n    });\n\n    /*\n    it('should open and close the notebook notes view', () => {\n        // Click on the notebook icon to open the notebook notes view\n        browser.actions().mouseMove(notebookLauncherButton).perform();\n\n        //notebookLauncherButton.click();\n        //browser.wait((addNoteButton).isPresent(), 1000);  // give it at most 1 seconds to load.\n        expect(addNoteButton.isDisplayed()).toBeTruthy();\n        browser.actions().mouseMove(addNoteButton).perform();\n\n        addNoteButton.click();  // click on the add note button\n        expect(addNoteDialog.isDisplayed()).toBeTruthy();\n\n        // check that UI elements are displayed\n        let cancelAddNoteButton = addNoteDialog.element(by.xpath('//md-dialog-actions/button[@aria-label=\"Cancel\"]'));\n        expect(cancelAddNoteButton.isPresent()).toBeTruthy();\n\n        // clicking on the cancelAddNoteButton should dismiss the add note dialog\n        cancelAddNoteButton.click();\n        expect(addNoteButton.isDisplayed()).toBeFalsy();\n        expect(addNoteDialog.isDisplayed()).toBeFalsy();\n    });\n    */\n\n    /*\n     TODO: update these tests to match the new UI design\n\n\n     it('should open and close the notebook report view', () => {\n        // Click on the report icon to open the notebook report view\n        reportButton.click();\n        // the url should change to /notebook\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/notebook/');\n        // check that UI elements are displayed\n        let closeNotebookButton = element(by.xpath('//md-toolbar/div/button[@aria-label=\"Close Notebook\"]'));\n        expect(closeNotebookButton.isPresent()).toBeTruthy();\n        let notebookTitle = $(\".toolbar-title\");\n        expect(notebookTitle.getText()).toBe(\"Report\");\n\n        // Clicking on the closeNotebookButton should dismiss the notebook and bring user back to original step\n        closeNotebookButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n    });\n\n    it('should open and close the add note view', () => {\n        // Click on the add note icon to open the add note dialog\n        addNoteButton.click();\n        // the url should stay the same\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n        // check that UI elements are displayed\n        expect(addNoteDialog.isPresent()).toBeTruthy();\n        expect(addNoteDialog.isDisplayed()).toBeTruthy();\n        let noteTextarea = element(by.xpath('//textarea[@placeholder=\"Note text...\"]'));\n        expect(noteTextarea.isPresent()).toBeTruthy();\n\n        let saveNoteDialogButton = element(by.xpath('//md-dialog-actions/button[@aria-label=\"Save\"]'));\n        expect(saveNoteDialogButton.isPresent()).toBeTruthy();\n        expect(saveNoteDialogButton.getAttribute(\"disabled\")).toBe(\"true\");  // the save button should be disabled because user hasn't typed anything.\n\n        let closeNoteDialogButton = element(by.xpath('//md-dialog-actions/button[@aria-label=\"Cancel\"]'));\n        expect(closeNoteDialogButton.isPresent()).toBeTruthy();\n\n        // Clicking on the closeNoteDialogButton should dismiss the add note dialog and bring user back to original step\n        closeNoteDialogButton.click();\n        expect(addNoteDialog.isPresent()).toBeFalsy();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n    });\n\n    it('should add text note', () => {\n        // Click on the add note icon to open the add note dialog\n        addNoteButton.click();\n        // the url should stay the same\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n        // check that UI elements are displayed\n        expect(addNoteDialog.isPresent()).toBeTruthy();\n        expect(addNoteDialog.isDisplayed()).toBeTruthy();\n        let noteTextarea = element(by.xpath('//textarea[@placeholder=\"Note text...\"]'));\n        expect(noteTextarea.isPresent()).toBeTruthy();\n\n        let saveNoteDialogButton = element(by.xpath('//md-dialog-actions/button[@aria-label=\"Save\"]'));\n        expect(saveNoteDialogButton.isPresent()).toBeTruthy();\n        expect(saveNoteDialogButton.getAttribute(\"disabled\")).toBe(\"true\");  // the save button should be disabled because user hasn't typed anything.\n\n        noteTextarea.clear();\n        noteTextarea.sendKeys('This is my text note!');\n        saveNoteDialogButton.click();\n\n        expect(addNoteDialog.isPresent()).toBeFalsy();  // clicking on the save button shoud hide the note.\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n\n        // Click on the notebook icon to open the notebook notes view\n        notebookButton.click();\n        // the url should change to /notebook\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/notebook/');\n\n        // Check to see that the new note shows up in the notes view\n        let newNoteItemDiv = element(by.xpath('//notebook-item/ng-include/md-card/md-card-content'));\n        expect(newNoteItemDiv.isPresent()).toBeTruthy();\n        expect(newNoteItemDiv.getText()).toBe('This is my text note!');\n        //let deleteNotebookItemButton = element(by.xpath('//md-card-actions/button[@aria-label=\"Delete notebook item\"]'));\n        //expect(deleteNotebookItemButton.isPresent()).toBeTruthy();\n        var notebookItemContentLocation = element(by.cssContainingText('.notebook-item__content__location','1.1'));\n        expect(notebookItemContentLocation.isPresent()).toBeTruthy();\n    });\n    */\n});"]}