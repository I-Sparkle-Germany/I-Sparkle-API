{"version":3,"sources":["notebook.spec.es6"],"names":["describe","hasClass","element","cls","getAttribute","then","classes","split","indexOf","notebookButton","by","tagName","notebookReport","notebookReportToolbar","css","notebookReportContainer","notebookLauncherButton","insertNoteButton","fullScreenButton","collapseButton","it","browser","get","nodeDropDownMenu","model","wait","isPresent","expect","getTitle","toEqual","getText","toBe","isDisplayed","toBeTruthy","toBeFalsy","click"],"mappings":"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","file":"notebook.spec.js","sourcesContent":["// E2E test for working with the notebook in preview mode\ndescribe('WISE5 Notebook in Preview Mode', () => {\n\n    var hasClass = (element, cls) => {\n        return element.getAttribute('class').then((classes) => {\n            return classes.split(' ').indexOf(cls) !== -1;\n        });\n    };\n\n    let notebookButton = element(by.tagName('notebook'));\n    let notebookReport = element(by.tagName('notebook-report'));\n    let notebookReportToolbar = notebookReport.element(by.css('.notebook-report__toolbar'));\n    let notebookReportContainer = notebookReport.element(by.css('.notebook-report-container'));\n    let notebookLauncherButton = element(by.tagName('notebook-launcher'));\n    let insertNoteButton = element(by.css('.notebook-item--report__add-note'));\n    let fullScreenButton = element(by.css('[ng-click=\"$ctrl.fullscreen()\"]'));\n    let collapseButton = element(by.css('[ng-click=\"$event.stopPropagation(); $ctrl.collapse()\"]'));\n\n    /*\n    let notebookButton = element(by.xpath('//md-toolbar/button[@aria-label=\"View Notes\"]'));\n    let reportButton = element(by.xpath('//md-toolbar/button[@aria-label=\"View Report\"]'));\n    let addNoteButton = element(by.xpath('//md-toolbar/button[@aria-label=\"Add Notebook item\"]'));\n    let addNoteDialog = element(by.xpath('//md-dialog[@aria-label=\"Add note\"]'));\n    */\n\n    it('should load the vle and go to node 1 and show notebook buttons', () => {\n        browser.get('http://localhost:8080/wise/project/demo#/vle/node1');\n        let nodeDropDownMenu = element(by.model(\"stepToolsCtrl.toNodeId\"));\n        browser.wait((nodeDropDownMenu).isPresent(), 5000);  // give it at most 5 seconds to load.\n        expect(browser.getTitle()).toEqual('WISE');\n        expect(nodeDropDownMenu.getText()).toBe('1.1: HTML Step');\n        expect(notebookButton.isDisplayed()).toBeTruthy();\n        expect(notebookReport.isDisplayed()).toBeTruthy();\n\n        expect(notebookReportToolbar.isDisplayed()).toBeTruthy();\n        expect(notebookLauncherButton.isDisplayed()).toBeTruthy();\n        expect(insertNoteButton.isDisplayed()).toBeFalsy();\n        expect(fullScreenButton.isDisplayed()).toBeTruthy();\n        expect(collapseButton.isDisplayed()).toBeTruthy();\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__collapsed')).toBeTruthy(); // notebook report should be collapsed at this point\n\n        notebookReportToolbar.click(); // clicking on the notebook report should display the report\n        expect(notebookLauncherButton.isDisplayed()).toBeTruthy(); // notebook fab icon should still be displayed\n        expect(insertNoteButton.isDisplayed()).toBeTruthy();\n        expect(fullScreenButton.isDisplayed()).toBeTruthy();\n        expect(collapseButton.isDisplayed()).toBeTruthy();\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__collapsed')).toBeFalsy(); // notebook report should be displayed at this point, in small view\n\n        collapseButton.click(); // clicking on collapse button should minimize the report\n        expect(notebookReportToolbar.isDisplayed()).toBeTruthy();\n        expect(notebookLauncherButton.isDisplayed()).toBeTruthy(); // notebook fab icon should still be displayed\n        expect(insertNoteButton.isDisplayed()).toBeFalsy();\n        expect(fullScreenButton.isDisplayed()).toBeTruthy();\n        expect(collapseButton.isDisplayed()).toBeTruthy();\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__collapsed')).toBeTruthy(); // notebook report should be collapsed at this point\n\n        fullScreenButton.click();  // clicking on fullscreen button should display the report in full screen mode.\n        expect(notebookLauncherButton.isDisplayed()).toBeTruthy(); // notebook fab icon should still be displayed\n        expect(insertNoteButton.isDisplayed()).toBeTruthy();\n        expect(fullScreenButton.isDisplayed()).toBeTruthy();\n        expect(collapseButton.isDisplayed()).toBeTruthy();\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__collapsed')).toBeFalsy(); // notebook report should be displayed at this point, in full view\n        expect(hasClass(notebookReportContainer, 'notebook-report-container__full')).toBeTruthy(); // notebook report should be displayed at this point, in full view\n    });\n\n    /*\n    TODO: update these tests to match the new UI design\n\n    it('should open and close the notebook notes view', () => {\n        // Click on the notebook icon to open the notebook notes view\n        notebookButton.click();\n        // the url should change to /notebook\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/notebook/');\n        // check that UI elements are displayed\n        let closeNotebookButton = element(by.xpath('//md-toolbar/div/button[@aria-label=\"Close Notebook\"]'));\n        expect(closeNotebookButton.isPresent()).toBeTruthy();\n        let notebookTitle = $(\".toolbar-title\");\n        expect(notebookTitle.getText()).toBe(\"Notes\");\n\n        // Clicking on the closeNotebookButton should dismiss the notebook and bring user back to original step\n        closeNotebookButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n    });\n\n    it('should open and close the notebook report view', () => {\n        // Click on the report icon to open the notebook report view\n        reportButton.click();\n        // the url should change to /notebook\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/notebook/');\n        // check that UI elements are displayed\n        let closeNotebookButton = element(by.xpath('//md-toolbar/div/button[@aria-label=\"Close Notebook\"]'));\n        expect(closeNotebookButton.isPresent()).toBeTruthy();\n        let notebookTitle = $(\".toolbar-title\");\n        expect(notebookTitle.getText()).toBe(\"Report\");\n\n        // Clicking on the closeNotebookButton should dismiss the notebook and bring user back to original step\n        closeNotebookButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n    });\n\n    it('should open and close the add note view', () => {\n        // Click on the add note icon to open the add note dialog\n        addNoteButton.click();\n        // the url should stay the same\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n        // check that UI elements are displayed\n        expect(addNoteDialog.isPresent()).toBeTruthy();\n        expect(addNoteDialog.isDisplayed()).toBeTruthy();\n        let noteTextarea = element(by.xpath('//textarea[@placeholder=\"Note text...\"]'));\n        expect(noteTextarea.isPresent()).toBeTruthy();\n\n        let saveNoteDialogButton = element(by.xpath('//md-dialog-actions/button[@aria-label=\"Save\"]'));\n        expect(saveNoteDialogButton.isPresent()).toBeTruthy();\n        expect(saveNoteDialogButton.getAttribute(\"disabled\")).toBe(\"true\");  // the save button should be disabled because user hasn't typed anything.\n\n        let closeNoteDialogButton = element(by.xpath('//md-dialog-actions/button[@aria-label=\"Cancel\"]'));\n        expect(closeNoteDialogButton.isPresent()).toBeTruthy();\n\n        // Clicking on the closeNoteDialogButton should dismiss the add note dialog and bring user back to original step\n        closeNoteDialogButton.click();\n        expect(addNoteDialog.isPresent()).toBeFalsy();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n    });\n\n    it('should add text note', () => {\n        // Click on the add note icon to open the add note dialog\n        addNoteButton.click();\n        // the url should stay the same\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n        // check that UI elements are displayed\n        expect(addNoteDialog.isPresent()).toBeTruthy();\n        expect(addNoteDialog.isDisplayed()).toBeTruthy();\n        let noteTextarea = element(by.xpath('//textarea[@placeholder=\"Note text...\"]'));\n        expect(noteTextarea.isPresent()).toBeTruthy();\n\n        let saveNoteDialogButton = element(by.xpath('//md-dialog-actions/button[@aria-label=\"Save\"]'));\n        expect(saveNoteDialogButton.isPresent()).toBeTruthy();\n        expect(saveNoteDialogButton.getAttribute(\"disabled\")).toBe(\"true\");  // the save button should be disabled because user hasn't typed anything.\n\n        noteTextarea.clear();\n        noteTextarea.sendKeys('This is my text note!');\n        saveNoteDialogButton.click();\n\n        expect(addNoteDialog.isPresent()).toBeFalsy();  // clicking on the save button shoud hide the note.\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n\n        // Click on the notebook icon to open the notebook notes view\n        notebookButton.click();\n        // the url should change to /notebook\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/notebook/');\n\n        // Check to see that the new note shows up in the notes view\n        let newNoteItemDiv = element(by.xpath('//notebook-item/ng-include/md-card/md-card-content'));\n        expect(newNoteItemDiv.isPresent()).toBeTruthy();\n        expect(newNoteItemDiv.getText()).toBe('This is my text note!');\n        //let deleteNotebookItemButton = element(by.xpath('//md-card-actions/button[@aria-label=\"Delete notebook item\"]'));\n        //expect(deleteNotebookItemButton.isPresent()).toBeTruthy();\n        var notebookItemContentLocation = element(by.cssContainingText('.notebook-item__content__location','1.1'));\n        expect(notebookItemContentLocation.isPresent()).toBeTruthy();\n    });\n    */\n});"]}