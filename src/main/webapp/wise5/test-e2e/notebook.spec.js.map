{"version":3,"sources":["notebook.spec.es6"],"names":[],"mappings":"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","file":"notebook.spec.js","sourcesContent":["// E2E test for working with the notebook in preview mode\ndescribe('WISE5 Notebook in Preview Mode', () => {\n\n    var hasClass = (element, cls) => {\n        return element.getAttribute('class').then((classes) => {\n            return classes.split(' ').indexOf(cls) !== -1;\n        });\n    };\n\n    // Returns true iff new note text area and buttons are displayed\n    var verifyAddNewNoteDisplayed = (isDisplayed) => {\n        if (isDisplayed) {\n            expect(addNoteButton.getAttribute(\"aria-hidden\")).toEqual('true');  // The +Note button should be hidden\n            expect(newNoteDiv.getAttribute(\"aria-hidden\")).toEqual('false');  // The new note div should be displayed\n            expect(newNoteTextArea.getAttribute('placeholder')).toEqual('Type your note here...');  // There should be a placeholder text in the textarea\n        } else {\n            expect(addNoteButton.getAttribute(\"aria-hidden\")).toEqual('false');  // The +Note button should be displayed\n            expect(newNoteDiv.getAttribute(\"aria-hidden\")).toEqual('true');  // The new note div should be hidden\n        }\n    };\n\n    it('should load the vle and go to node 1', () => {\n        browser.get('http://localhost:8080/wise/project/demo');\n        expect(browser.getTitle()).toEqual('WISE');\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/project/demo#/vle/node1');\n        expect(element(by.model(\"stepToolsCtrl.toNodeId\")).getText()).toBe('1.1: Introduction to Newton Scooters');\n    });\n\n    var notebookButton = element(by.id(\"notebookButton\"));\n    var notebookSideNav = element(by.xpath('//md-sidenav'));  // side navigation bar for the notebook\n    var addNoteButton = element(by.id(\"addNoteButton\"));\n    var newNoteDiv = element(by.id(\"newNote\"));\n    var newNoteTextArea = element(by.id(\"newNoteTextArea\"));\n    var saveNewNoteButton = element(by.id(\"saveNewNoteButton\"));\n    var cancelNewNoteButton = element(by.id(\"cancelNewNoteButton\"));\n\n    it('should open and close the notebook', () => {\n        // Click on the notebook icon to open the notebook\n        notebookButton.click();\n        expect(hasClass(notebookSideNav, 'md-closed')).toBe(false);  // side nav should appear on the page with the notebook\n        expect(notebookSideNav.element(by.tagName('h3')).getText()).toEqual(\"Notebook\");\n        verifyAddNewNoteDisplayed(false);\n\n        // The drop-down filters should have 'all', 'notes', 'bookmarks', and 'questions' options\n        element.all(by.repeater('filter in vleController.notebookFilters')).then((notebookFilterItems) => {\n            var filter0 = notebookFilterItems[0];\n            expect(filter0.getAttribute(\"value\")).toEqual('all');\n            var filter1 = notebookFilterItems[1];\n            expect(filter1.getAttribute(\"value\")).toEqual('notes');\n        });\n\n        // Hitting the escape key should dismiss the notebook\n        browser.actions().sendKeys(protractor.Key.ESCAPE).perform();\n        expect(hasClass(notebookSideNav, 'md-closed')).toBe(true);  // side nav should disappear\n    });\n\n    it('should allow user to add a new note in the notebook', () => {\n        // Click on the notebook icon to open the notebook again\n        notebookButton.click();\n        expect(hasClass(notebookSideNav, 'md-closed')).toBe(false);  // side nav should appear on the page with the notebook\n\n        addNoteButton.click();   // Open add note display\n        verifyAddNewNoteDisplayed(true);\n\n        // Save button should be disabled because user hasn't typed anything yet.\n        expect(saveNewNoteButton.getAttribute(\"disabled\")).not.toBeNull();\n\n        // Canceling should hide the add note view without saving\n        cancelNewNoteButton.click();\n        verifyAddNewNoteDisplayed(false);\n\n        // Add my first note\n        addNoteButton.click();\n        verifyAddNewNoteDisplayed(true);\n        newNoteTextArea.sendKeys('my note #1');\n        saveNewNoteButton.click();\n        verifyAddNewNoteDisplayed(false);\n\n        // Verify that the new note is displayed\n        element.all(by.repeater('notebookItem in notebookController.notebook.items')).then((notebookItems) => {\n            expect(notebookItems[0].getText()).toEqual('my note #1');\n        });\n\n        // Add my second note\n        addNoteButton.click();\n        verifyAddNewNoteDisplayed(true);\n        newNoteTextArea.sendKeys('my note #2');\n        saveNewNoteButton.click();\n        verifyAddNewNoteDisplayed(false);\n\n        // Verify that the first and second notes are displayed\n        element.all(by.repeater('notebookItem in notebookController.notebook.items')).then((notebookItems) => {\n            expect(notebookItems[0].getText()).toEqual('my note #1');\n            expect(notebookItems[1].getText()).toEqual('my note #2');\n        });\n\n        // Clicking outside of the notebook should dismiss the notebook\n        element(by.xpath('//body')).click();\n        expect(hasClass(notebookSideNav, 'md-closed')).toBe(true);  // side nav should disappear\n    })\n});"]}