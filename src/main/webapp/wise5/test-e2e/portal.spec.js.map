{"version":3,"sources":["portal.spec.es6"],"names":["describe","hasClass","element","cls","getAttribute","then","classes","split","indexOf","waitForUrlToChangeTo","urlRegex","currentUrl","browser","getCurrentUrl","storeCurrentUrl","url","wait","compareCurrentUrl","test","createAccountButton","$","forgotAccountLink","usernameInput","passwordInput","signInButton","contactUSLink","by","cssContainingText","it","ignoreSynchronization","get","expect","getTitle","toEqual","isPresent","toBeTruthy","click","returnToWISELink","sendKeys","createStudentAccountLink","createTeacherAccountLink","returnToHomepageLink","forgotStudentAccountLink","forgotTeacherAccountLink"],"mappings":";;AAAA;AACAA,SAAS,aAAT,EAAwB,YAAM;;AAE1B,aAASC,QAAT,CAAkBC,OAAlB,EAA2BC,GAA3B,EAAgC;AAC5B,eAAOD,QAAQE,YAAR,CAAqB,OAArB,EAA8BC,IAA9B,CAAmC,UAACC,OAAD,EAAa;AACnD,mBAAOA,QAAQC,KAAR,CAAc,GAAd,EAAmBC,OAAnB,CAA2BL,GAA3B,MAAoC,CAAC,CAA5C;AACH,SAFM,CAAP;AAGH;;AAED;;;;;;AAMA,aAASM,oBAAT,CAA8BC,QAA9B,EAAwC;AACpC,YAAIC,UAAJ;;AAEA,eAAOC,QAAQC,aAAR,GAAwBR,IAAxB,CAA6B,SAASS,eAAT,CAAyBC,GAAzB,EAA8B;AAC1DJ,yBAAaI,GAAb;AACH,SAFE,EAGLV,IAHK,CAGA,SAASI,oBAAT,GAAgC;AAC/B,mBAAOG,QAAQI,IAAR,CAAa,SAASP,oBAAT,GAAgC;AAChD,uBAAOG,QAAQC,aAAR,GAAwBR,IAAxB,CAA6B,SAASY,iBAAT,CAA2BF,GAA3B,EAAgC;AAChE,2BAAOL,SAASQ,IAAT,CAAcH,GAAd,CAAP;AACH,iBAFM,CAAP;AAGH,aAJM,CAAP;AAKH,SATE,CAAP;AAWH;;AAED,QAAII,sBAAsBC,EAAE,sBAAF,CAA1B;AACA,QAAIC,oBAAoBD,EAAE,gBAAF,CAAxB;AACA,QAAIE,gBAAgBF,EAAE,WAAF,CAApB;AACA,QAAIG,gBAAgBH,EAAE,WAAF,CAApB;AACA,QAAII,eAAeJ,EAAE,eAAF,CAAnB;AACA,QAAIK,gBAAgBvB,QAAQwB,GAAGC,iBAAH,CAAqB,GAArB,EAA0B,YAA1B,CAAR,CAApB;;AAEAC,OAAG,wDAAH,EAA6D,YAAM;AAC/DhB,gBAAQiB,qBAAR,GAAgC,IAAhC,CAD+D,CACxB;AACvCjB,gBAAQkB,GAAR,CAAY,6BAAZ;;AAEAC,eAAOnB,QAAQoB,QAAR,EAAP,EAA2BC,OAA3B,CAAmC,8CAAnC;AACAF,eAAOT,cAAcY,SAAd,EAAP,EAAkCC,UAAlC;AACAJ,eAAOR,cAAcW,SAAd,EAAP,EAAkCC,UAAlC;AACAJ,eAAOP,aAAaU,SAAb,EAAP,EAAiCC,UAAjC;AACAJ,eAAOZ,oBAAoBe,SAApB,EAAP,EAAwCC,UAAxC;AACAJ,eAAOV,kBAAkBa,SAAlB,EAAP,EAAsCC,UAAtC;AACAJ,eAAON,cAAcS,SAAd,EAAP,EAAkCC,UAAlC;AACH,KAXD;;AAaAP,OAAG,sDAAH,EAA2D,YAAM;AAC7DhB,gBAAQiB,qBAAR,GAAgC,IAAhC,CAD6D,CACtB;AACvCjB,gBAAQkB,GAAR,CAAY,6BAAZ;AACA;AACAN,qBAAaY,KAAb;AACAL,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,8CAAxC;AACAF,eAAOnB,QAAQoB,QAAR,EAAP,EAA2BC,OAA3B,CAAmC,SAAnC;AACAF,eAAOT,cAAcY,SAAd,EAAP,EAAkCC,UAAlC;AACAJ,eAAOR,cAAcW,SAAd,EAAP,EAAkCC,UAAlC;AACAJ,eAAOP,aAAaU,SAAb,EAAP,EAAiCC,UAAjC;AACAJ,eAAOX,EAAE,0DAAF,EAA8Dc,SAA9D,EAAP,EAAkFC,UAAlF;AACAJ,eAAOX,EAAE,wBAAF,EAA4Bc,SAA5B,EAAP,EAAgDC,UAAhD;AACA,YAAIE,mBAAmBjB,EAAE,0BAAF,CAAvB;AACAW,eAAOM,iBAAiBH,SAAjB,EAAP,EAAqCC,UAArC;;AAEA;AACAb,sBAAcgB,QAAd,CAAuB,SAAvB;AACAd,qBAAaY,KAAb;AACAL,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,8CAAxC;;AAEA;AACAV,sBAAce,QAAd,CAAuB,MAAvB;AACAd,qBAAaY,KAAb;AACAL,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,8CAAxC;;AAEA;AACAX,sBAAcgB,QAAd,CAAuB,SAAvB;AACAf,sBAAce,QAAd,CAAuB,cAAvB;AACAd,qBAAaY,KAAb;AACAL,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,8CAAxC;;AAEA;AACAI,yBAAiBD,KAAjB;AACAL,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,6BAAxC;AACH,KAlCD;;AAoCAL,OAAG,sEAAH,EAA2E,YAAM;AAC7EhB,gBAAQiB,qBAAR,GAAgC,IAAhC,CAD6E,CACtC;AACvCjB,gBAAQkB,GAAR,CAAY,6BAAZ;AACAX,4BAAoBiB,KAApB;AACAL,eAAOnB,QAAQoB,QAAR,EAAP,EAA2BC,OAA3B,CAAmC,qBAAnC;AACAF,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,iCAAxC;AACA,YAAIM,2BAA2BrC,QAAQwB,GAAGC,iBAAH,CAAqB,GAArB,EAAyB,iBAAzB,CAAR,CAA/B;AACA,YAAIa,2BAA2BtC,QAAQwB,GAAGC,iBAAH,CAAqB,GAArB,EAAyB,iBAAzB,CAAR,CAA/B;AACAI,eAAOQ,yBAAyBL,SAAzB,EAAP,EAA6CC,UAA7C;AACAJ,eAAOS,yBAAyBN,SAAzB,EAAP,EAA6CC,UAA7C;AACA,YAAIM,uBAAuBvC,QAAQwB,GAAGC,iBAAH,CAAqB,GAArB,EAAyB,qBAAzB,CAAR,CAA3B;AACAI,eAAOU,qBAAqBP,SAArB,EAAP,EAAyCC,UAAzC;;AAEA;AACAM,6BAAqBL,KAArB;AACAL,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,6BAAxC;AACH,KAhBD;;AAkBAL,OAAG,iCAAH,EAAsC,YAAM;AACxChB,gBAAQiB,qBAAR,GAAgC,IAAhC,CADwC,CACD;AACvCR,0BAAkBe,KAAlB;AACAL,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,iEAAxC;AACA,YAAIS,2BAA2BxC,QAAQwB,GAAGC,iBAAH,CAAqB,GAArB,EAAyB,iBAAzB,CAAR,CAA/B;AACA,YAAIgB,2BAA2BzC,QAAQwB,GAAGC,iBAAH,CAAqB,GAArB,EAAyB,iBAAzB,CAAR,CAA/B;AACA,YAAIc,uBAAuBvC,QAAQwB,GAAGC,iBAAH,CAAqB,GAArB,EAAyB,qBAAzB,CAAR,CAA3B;AACAI,eAAOW,yBAAyBR,SAAzB,EAAP,EAA6CC,UAA7C,GAPwC,CAOoB;AAC5DJ,eAAOY,yBAAyBT,SAAzB,EAAP,EAA6CC,UAA7C,GARwC,CAQoB;AAC5DJ,eAAOU,qBAAqBP,SAArB,EAAP,EAAyCC,UAAzC,GATwC,CASgB;;AAExD;AACAM,6BAAqBL,KAArB;AACAL,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,6BAAxC;AACH,KAdD;;AAgBAL,OAAG,kEAAH,EAAuE,YAAM;AACzEhB,gBAAQiB,qBAAR,GAAgC,IAAhC,CADyE,CAClC;AACvCjB,gBAAQkB,GAAR,CAAY,6BAAZ;AACAL,sBAAcW,KAAd;AACAL,eAAOnB,QAAQoB,QAAR,EAAP,EAA2BC,OAA3B,CAAmC,cAAnC;AACAF,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,qDAAxC;AACAF,eAAOX,EAAE,OAAF,EAAWc,SAAX,EAAP,EAA+BC,UAA/B;AACAJ,eAAOX,EAAE,QAAF,EAAYc,SAAZ,EAAP,EAAgCC,UAAhC;AACAJ,eAAOX,EAAE,YAAF,EAAgBc,SAAhB,EAAP,EAAoCC,UAApC;AACAJ,eAAOX,EAAE,UAAF,EAAcc,SAAd,EAAP,EAAkCC,UAAlC;AACAJ,eAAOX,EAAE,cAAF,EAAkBc,SAAlB,EAAP,EAAsCC,UAAtC;AACAJ,eAAOX,EAAE,oBAAF,EAAwBc,SAAxB,EAAP,EAA4CC,UAA5C;AACA,YAAIM,uBAAuBvC,QAAQwB,GAAGC,iBAAH,CAAqB,GAArB,EAAyB,qBAAzB,CAAR,CAA3B;AACAI,eAAOU,qBAAqBP,SAArB,EAAP,EAAyCC,UAAzC;;AAEA;AACAM,6BAAqBL,KAArB;AACAL,eAAOnB,QAAQC,aAAR,EAAP,EAAgCoB,OAAhC,CAAwC,6BAAxC;AACH,KAlBD;;AAoBA;AACA;AACA;AACA;;AAGH,CAlJD","file":"portal.spec.js","sourcesContent":["// E2E test for Portal\ndescribe('WISE Portal', () => {\n\n    function hasClass(element, cls) {\n        return element.getAttribute('class').then((classes) => {\n            return classes.split(' ').indexOf(cls) !== -1;\n        });\n    }\n\n    /**\n     * @name waitForUrlToChangeTo\n     * @description Wait until the URL changes to match a provided regex\n     * @param {RegExp} urlRegex wait until the URL changes to match this regex\n     * @returns {!webdriver.promise.Promise} Promise\n     */\n    function waitForUrlToChangeTo(urlRegex) {\n        var currentUrl;\n\n        return browser.getCurrentUrl().then(function storeCurrentUrl(url) {\n                currentUrl = url;\n            }\n        ).then(function waitForUrlToChangeTo() {\n                return browser.wait(function waitForUrlToChangeTo() {\n                    return browser.getCurrentUrl().then(function compareCurrentUrl(url) {\n                        return urlRegex.test(url);\n                    });\n                });\n            }\n        );\n    }\n\n    let createAccountButton = $('#createAccountButton');\n    let forgotAccountLink = $('#forgotLogin a');\n    let usernameInput = $('#username');\n    let passwordInput = $('#password');\n    let signInButton = $('#signInButton');\n    let contactUSLink = element(by.cssContainingText('a', 'Contact US'));\n\n    it('should show WISE logo and login inputs in the homepage', () => {\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        browser.get('http://localhost:8080/wise/');\n\n        expect(browser.getTitle()).toEqual('Web-based Inquiry Science Environment (WISE)');\n        expect(usernameInput.isPresent()).toBeTruthy();\n        expect(passwordInput.isPresent()).toBeTruthy();\n        expect(signInButton.isPresent()).toBeTruthy();\n        expect(createAccountButton.isPresent()).toBeTruthy();\n        expect(forgotAccountLink.isPresent()).toBeTruthy();\n        expect(contactUSLink.isPresent()).toBeTruthy();\n    });\n\n    it('should not allow invalid username/password to log in', () => {\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        browser.get('http://localhost:8080/wise/');\n        // try to log in with empty username/password\n        signInButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/login?failed=true');\n        expect(browser.getTitle()).toEqual('Sign In');\n        expect(usernameInput.isPresent()).toBeTruthy();\n        expect(passwordInput.isPresent()).toBeTruthy();\n        expect(signInButton.isPresent()).toBeTruthy();\n        expect($(\".forgotlink[href='forgotaccount/selectaccounttype.html']\").isPresent()).toBeTruthy();\n        expect($(\".joinlink[href='join']\").isPresent()).toBeTruthy();\n        let returnToWISELink = $(\".joinlink[href='/wise/']\");\n        expect(returnToWISELink.isPresent()).toBeTruthy();\n\n        // test empty username\n        usernameInput.sendKeys('preview');\n        signInButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/login?failed=true');\n\n        // test empty password\n        passwordInput.sendKeys('wise');\n        signInButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/login?failed=true');\n\n        // test invalid username/password combo\n        usernameInput.sendKeys('preview');\n        passwordInput.sendKeys('bad_password');\n        signInButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/login?failed=true');\n\n        // clicking on return to WISE link should take user back to homepage\n        returnToWISELink.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/');\n    });\n\n    it('should allow user to reach the create account page from the homepage', () => {\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        browser.get('http://localhost:8080/wise/');\n        createAccountButton.click();\n        expect(browser.getTitle()).toEqual('Create WISE Account');\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/join');\n        let createStudentAccountLink = element(by.cssContainingText('a','Student Account'));\n        let createTeacherAccountLink = element(by.cssContainingText('a','Teacher Account'));\n        expect(createStudentAccountLink.isPresent()).toBeTruthy();\n        expect(createTeacherAccountLink.isPresent()).toBeTruthy();\n        let returnToHomepageLink = element(by.cssContainingText('a','Return to Home Page'));\n        expect(returnToHomepageLink.isPresent()).toBeTruthy();\n\n        // clicking on return to homepage link should take user back to homepage\n        returnToHomepageLink.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/');\n    });\n\n    it('should show forgot account page', () => {\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        forgotAccountLink.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/forgotaccount/selectaccounttype.html');\n        let forgotStudentAccountLink = element(by.cssContainingText('a','Student Account'));\n        let forgotTeacherAccountLink = element(by.cssContainingText('a','Teacher Account'));\n        let returnToHomepageLink = element(by.cssContainingText('a','Return to Home Page'));\n        expect(forgotStudentAccountLink.isPresent()).toBeTruthy();  // should have button to retrieve student account\n        expect(forgotTeacherAccountLink.isPresent()).toBeTruthy();  // should have button to retrieve teacher account\n        expect(returnToHomepageLink.isPresent()).toBeTruthy();  // should have link back to home page\n\n        // clicking on return to homepage link should take user back to homepage\n        returnToHomepageLink.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/');\n    });\n\n    it('should allow user to reach the contact us page from the homepage', () => {\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        browser.get('http://localhost:8080/wise/');\n        contactUSLink.click();\n        expect(browser.getTitle()).toEqual('Contact WISE');\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/contact/contactwise.html');\n        expect($('#name').isPresent()).toBeTruthy();\n        expect($('#email').isPresent()).toBeTruthy();\n        expect($('#issuetype').isPresent()).toBeTruthy();\n        expect($('#summary').isPresent()).toBeTruthy();\n        expect($('#description').isPresent()).toBeTruthy();\n        expect($('#sendMessageButton').isPresent()).toBeTruthy();\n        let returnToHomepageLink = element(by.cssContainingText('a','Return to Home Page'));\n        expect(returnToHomepageLink.isPresent()).toBeTruthy();\n\n        // clicking on return to homepage link should take user back to homepage\n        returnToHomepageLink.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/');\n    });\n\n    // TODO: test create account student\n    // TODO: test create account teacher\n    // TODO: test forgot account student\n    // TODO: test forgot account teacher\n\n\n});"]}