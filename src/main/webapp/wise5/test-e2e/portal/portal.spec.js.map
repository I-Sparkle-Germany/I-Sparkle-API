{"version":3,"sources":["portal.spec.es6"],"names":["describe","hasClass","element","cls","getAttribute","then","classes","split","indexOf","createAccountButton","$","forgotAccountLink","usernameInput","passwordInput","signInButton","contactUSLink","by","cssContainingText","it","browser","ignoreSynchronization","get","expect","getTitle","toEqual","isPresent","toBeTruthy","click","getCurrentUrl","returnToWISELink","sendKeys","createStudentAccountLink","createTeacherAccountLink","returnToHomepageLink"],"mappings":"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","file":"portal.spec.js","sourcesContent":["// E2E test for Portal\ndescribe('WISE Portal', () => {\n\n    function hasClass(element, cls) {\n        return element.getAttribute('class').then((classes) => {\n            return classes.split(' ').indexOf(cls) !== -1;\n        });\n    }\n\n    let createAccountButton = $('#createAccountButton');\n    let forgotAccountLink = $('#forgotLogin a');\n    let usernameInput = $('#username');\n    let passwordInput = $('#password');\n    let signInButton = $('#signInButton');\n    let contactUSLink = element(by.cssContainingText('a', 'Contact US'));\n\n    it('should show WISE logo and login inputs in the homepage', () => {\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        browser.get('http://localhost:8080/wise/');\n\n        expect(browser.getTitle()).toEqual('Web-based Inquiry Science Environment (WISE)');\n        expect(usernameInput.isPresent()).toBeTruthy();\n        expect(passwordInput.isPresent()).toBeTruthy();\n        expect(signInButton.isPresent()).toBeTruthy();\n        expect(createAccountButton.isPresent()).toBeTruthy();\n        expect(forgotAccountLink.isPresent()).toBeTruthy();\n        expect(contactUSLink.isPresent()).toBeTruthy();\n    });\n\n    it('should not allow invalid username/password to log in', () => {\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        browser.get('http://localhost:8080/wise/');\n        // try to log in with empty username/password\n        signInButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/login?failed=true');\n        expect(browser.getTitle()).toEqual('Sign In');\n        expect(usernameInput.isPresent()).toBeTruthy();\n        expect(passwordInput.isPresent()).toBeTruthy();\n        expect(signInButton.isPresent()).toBeTruthy();\n        expect($(\".forgotlink[href='forgotaccount/selectaccounttype']\").isPresent()).toBeTruthy();\n        expect($(\".joinlink[href='join']\").isPresent()).toBeTruthy();\n        let returnToWISELink = $(\".joinlink[href='/wise/']\");\n        expect(returnToWISELink.isPresent()).toBeTruthy();\n\n        // test empty username\n        usernameInput.sendKeys('preview');\n        signInButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/login?failed=true');\n\n        // test empty password\n        passwordInput.sendKeys('wise');\n        signInButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/login?failed=true');\n\n        // test invalid username/password combo\n        usernameInput.sendKeys('preview');\n        passwordInput.sendKeys('bad_password');\n        signInButton.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/login?failed=true');\n\n        // clicking on return to WISE link should take user back to homepage\n        returnToWISELink.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/');\n    });\n\n    it('should allow user to reach the create account page from the homepage', () => {\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        browser.get('http://localhost:8080/wise/');\n        createAccountButton.click();\n        expect(browser.getTitle()).toEqual('Create WISE Account');\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/join');\n        let createStudentAccountLink = element(by.cssContainingText('a','Student Account'));\n        let createTeacherAccountLink = element(by.cssContainingText('a','Teacher Account'));\n        expect(createStudentAccountLink.isPresent()).toBeTruthy();\n        expect(createTeacherAccountLink.isPresent()).toBeTruthy();\n        let returnToHomepageLink = element(by.cssContainingText('a','Return to Home Page'));\n        expect(returnToHomepageLink.isPresent()).toBeTruthy();\n\n        // clicking on return to homepage link should take user back to homepage\n        returnToHomepageLink.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/');\n    });\n\n    it('should allow user to reach the contact us page from the homepage', () => {\n        browser.ignoreSynchronization = true;  // doesn't use Angular\n        browser.get('http://localhost:8080/wise/');\n        contactUSLink.click();\n        expect(browser.getTitle()).toEqual('Contact WISE');\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/contact/contactwise.html');\n        expect($('#name').isPresent()).toBeTruthy();\n        expect($('#email').isPresent()).toBeTruthy();\n        expect($('#issuetype').isPresent()).toBeTruthy();\n        expect($('#summary').isPresent()).toBeTruthy();\n        expect($('#description').isPresent()).toBeTruthy();\n        expect($('#sendMessageButton').isPresent()).toBeTruthy();\n        let returnToHomepageLink = element(by.cssContainingText('a','Return to Home Page'));\n        expect(returnToHomepageLink.isPresent()).toBeTruthy();\n\n        // clicking on return to homepage link should take user back to homepage\n        returnToHomepageLink.click();\n        expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/');\n    });\n\n    // TODO: test create account student\n    // TODO: test create account teacher\n\n});"]}