{"version":3,"sources":["animationAuthoringController.spec.es6"],"names":["mockUtilService","generateKey","length","describe","$controller","$rootScope","$scope","animationAuthoringController","component","beforeEach","angular","mock","module","mainModule","name","inject","_$controller_","_$rootScope_","$new","componentContent","JSON","parse","stringify","authoringComponentContent","UtilService","it","spyOn","authoringAddObject","expect","objects","toEqual","animationObject","authoringAddDataPointToObject","data","authoringAddDataSource","dataSource","not","toBeNull","window","and","returnValue","authoringDeleteDataSource","hasOwnProperty","toBeFalsy"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,kBAAkB;AACtBC,eAAa,qBAASC,MAAT,EAAiB;AAC5B,WAAO,YAAP;AACD;AAHqB,CAAxB;;AAMAC,SAAS,8BAAT,EAAyC,YAAM;;AAE7C,MAAIC,oBAAJ;AACA,MAAIC,mBAAJ;AACA,MAAIC,eAAJ;AACA,MAAIC,qCAAJ;AACA,MAAIC,kBAAJ;;AAEAC,aAAWC,kBAAQC,IAAR,CAAaC,MAAb,CAAoBC,eAAWC,IAA/B,CAAX;;AAEAL,aAAWM,OAAO,UAACC,aAAD,EAAgBC,YAAhB,EAAiC;AACjDb,kBAAcY,aAAd;AACAX,iBAAaY,YAAb;AACAT,gBAAY;AACV,YAAM,YADI;AAEV,cAAQ,WAFE;AAGV,gBAAU,EAHA;AAIV,wBAAkB,KAJR;AAKV,0BAAoB,KALV;AAMV,uBAAiB,GANP;AAOV,sBAAgB,EAPN;AAQV,wBAAkB,GARR;AASV,uBAAiB,EATP;AAUV,6BAAuB,CAVb;AAWV,6BAAuB,EAXb;AAYV,0BAAoB,QAZV;AAaV,iBAAW,EAbD;AAcV,iCAA2B;AAdjB,KAAZ;AAgBAF,aAASD,WAAWa,IAAX,EAAT;AACAZ,WAAOa,gBAAP,GAA0BC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAed,SAAf,CAAX,CAA1B;AACAF,WAAOiB,yBAAP,GAAmCH,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAed,SAAf,CAAX,CAAnC;;AAEAD,mCAA+BH,YAAY,8BAAZ,EAC3B,EAAEE,QAAQA,MAAV,EAAkBkB,aAAaxB,eAA/B,EAD2B,CAA/B;AAED,GAzBU,CAAX;;AA2BAyB,KAAG,gCAAH,EAAqC,YAAM;AACzCC,UAAMnB,4BAAN,EAAoC,+BAApC;AACAA,iCAA6BoB,kBAA7B;AACAC,WAAOrB,6BAA6BgB,yBAA7B,CAAuDM,OAAvD,CAA+D3B,MAAtE,EAA8E4B,OAA9E,CAAsF,CAAtF;AACD,GAJD;;AAMAL,KAAG,gDAAH,EAAqD,YAAM;AACzDC,UAAMnB,4BAAN,EAAoC,+BAApC;AACA,QAAMwB,kBAAkB,EAAxB;AACAxB,iCAA6ByB,6BAA7B,CAA2DD,eAA3D;AACAH,WAAOG,gBAAgBE,IAAhB,CAAqB/B,MAA5B,EAAoC4B,OAApC,CAA4C,CAA5C;AACD,GALD;;AAOAL,KAAG,mDAAH,EAAwD,YAAM;AAC5DC,UAAMnB,4BAAN,EAAoC,+BAApC;AACA,QAAMwB,kBAAkB,EAAxB;AACAxB,iCAA6B2B,sBAA7B,CAAoDH,eAApD;AACAH,WAAOG,gBAAgBI,UAAvB,EAAmCC,GAAnC,CAAuCC,QAAvC;AACD,GALD;;AAOAZ,KAAG,sDAAH,EAA2D,YAAM;AAC/DC,UAAMnB,4BAAN,EAAoC,+BAApC;AACAmB,UAAMY,MAAN,EAAc,SAAd,EAAyBC,GAAzB,CAA6BC,WAA7B,CAAyC,IAAzC;AACA,QAAMT,kBAAkB;AACtBI,kBAAY;AADU,KAAxB;AAGA5B,iCAA6BkC,yBAA7B,CAAuDV,eAAvD;AACAH,WAAOG,gBAAgBW,cAAhB,CAA+B,YAA/B,CAAP,EAAqDC,SAArD;AACD,GARD;AAUD,CAnED","file":"animationAuthoringController.spec.js","sourcesContent":["import angular from 'angular';\nimport mainModule from 'authoringTool/main';\nimport 'angular-mocks';\n\nconst mockUtilService = {\n  generateKey: function(length) {\n    return '1234567890';\n  }\n};\n\ndescribe('AnimationAuthoringController', () => {\n\n  let $controller;\n  let $rootScope;\n  let $scope;\n  let animationAuthoringController;\n  let component;\n\n  beforeEach(angular.mock.module(mainModule.name));\n\n  beforeEach(inject((_$controller_, _$rootScope_) => {\n    $controller = _$controller_;\n    $rootScope = _$rootScope_;\n    component = {\n      \"id\": \"3tyam4h4iy\",\n      \"type\": \"Animation\",\n      \"prompt\": \"\",\n      \"showSaveButton\": false,\n      \"showSubmitButton\": false,\n      \"widthInPixels\": 600,\n      \"widthInUnits\": 60,\n      \"heightInPixels\": 200,\n      \"heightInUnits\": 20,\n      \"dataXOriginInPixels\": 0,\n      \"dataYOriginInPixels\": 80,\n      \"coordinateSystem\": \"screen\",\n      \"objects\": [],\n      \"showAddToNotebookButton\": true\n    };\n    $scope = $rootScope.$new();\n    $scope.componentContent = JSON.parse(JSON.stringify(component));\n    $scope.authoringComponentContent = JSON.parse(JSON.stringify(component));\n\n    animationAuthoringController = $controller('AnimationAuthoringController',\n        { $scope: $scope, UtilService: mockUtilService });\n  }));\n\n  it('should add an animation object', () => {\n    spyOn(animationAuthoringController, 'authoringViewComponentChanged');\n    animationAuthoringController.authoringAddObject();\n    expect(animationAuthoringController.authoringComponentContent.objects.length).toEqual(1);\n  });\n\n  it('should add a data point to an animation object', () => {\n    spyOn(animationAuthoringController, 'authoringViewComponentChanged');\n    const animationObject = {};\n    animationAuthoringController.authoringAddDataPointToObject(animationObject);\n    expect(animationObject.data.length).toEqual(1);\n  });\n\n  it('should add a data source from an animation object', () => {\n    spyOn(animationAuthoringController, 'authoringViewComponentChanged');\n    const animationObject = {};\n    animationAuthoringController.authoringAddDataSource(animationObject);\n    expect(animationObject.dataSource).not.toBeNull();\n  });\n\n  it('should delete a data source from an animation object', () => {\n    spyOn(animationAuthoringController, 'authoringViewComponentChanged');\n    spyOn(window, 'confirm').and.returnValue(true);\n    const animationObject = {\n      dataSource: {}\n    };\n    animationAuthoringController.authoringDeleteDataSource(animationObject);\n    expect(animationObject.hasOwnProperty('dataSource')).toBeFalsy();\n  });\n\n});\n"]}