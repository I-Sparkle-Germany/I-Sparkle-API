{"version":3,"sources":["embeddedService.spec.es6"],"names":["describe","EmbeddedService","beforeEach","angular","mock","module","mainModule","name","inject","_EmbeddedService_","it","component","componentStates","isCompleted","expect","toEqual","studentData"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEAA,SAAS,iBAAT,EAA4B,YAAM;;AAEhC,MAAIC,wBAAJ;;AAEAC,aAAWC,kBAAQC,IAAR,CAAaC,MAAb,CAAoBC,eAAWC,IAA/B,CAAX;;AAEAL,aAAWM,OAAO,UAACC,iBAAD,EAAuB;AACvCR,sBAAkBQ,iBAAlB;AACD,GAFU,CAAX;;AAIAC,KAAG,gDAAH,EAAqD,YAAM;AACzD,QAAMC,YAAY,EAAlB;AACA,QAAMC,kBAAkB,EAAxB;AACA,QAAMC,cAAcZ,gBAAgBY,WAAhB,CAA4BF,SAA5B,EAAuCC,eAAvC,CAApB;AACAE,WAAOD,WAAP,EAAoBE,OAApB,CAA4B,KAA5B;AACD,GALD;;AAOAL,KAAG,4CAAH,EAAiD,YAAM;AACrD,QAAMC,YAAY,EAAlB;AACA,QAAMC,kBAAkB,CACtB;AACEI,mBAAa;AACXH,qBAAa;AADF;AADf,KADsB,CAAxB;AAOA,QAAMA,cAAcZ,gBAAgBY,WAAhB,CAA4BF,SAA5B,EAAuCC,eAAvC,CAApB;AACAE,WAAOD,WAAP,EAAoBE,OAApB,CAA4B,IAA5B;AACD,GAXD;AAaD,CA9BD","file":"embeddedService.spec.js","sourcesContent":["import angular from 'angular';\nimport mainModule from 'vle/main';\nimport 'angular-mocks';\n\ndescribe('EmbeddedService', () => {\n\n  let EmbeddedService;\n\n  beforeEach(angular.mock.module(mainModule.name));\n\n  beforeEach(inject((_EmbeddedService_) => {\n    EmbeddedService = _EmbeddedService_;\n  }));\n\n  it('should check that a component is not completed', () => {\n    const component = {};\n    const componentStates = [];\n    const isCompleted = EmbeddedService.isCompleted(component, componentStates);\n    expect(isCompleted).toEqual(false);\n  });\n\n  it('should check that a component is completed', () => {\n    const component = {};\n    const componentStates = [\n      {\n        studentData: {\n          isCompleted: true\n        }\n      }\n    ];\n    const isCompleted = EmbeddedService.isCompleted(component, componentStates);\n    expect(isCompleted).toEqual(true);\n  });\n\n});\n"]}