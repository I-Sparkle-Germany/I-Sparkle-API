{"version":3,"sources":["multipleChoiceController.spec.es6"],"names":["mockMultipleChoiceService","mockStudentDataService","saveComponentEvent","component","category","event","data","describe","$controller","$rootScope","$scope","multipleChoiceController","singleAnswerSingleCorrectAnswerComponent","singleAnswerMultipleCorrectAnswersComponent","multipleAnswerComponent","loadSingleAnswerSingleCorrectAnswerComponent","loadComponent","loadSingleAnswerMultipleCorrectAnswersComponent","loadMultipleAnswerComponent","$new","componentContent","JSON","parse","stringify","MultipleChoiceService","StudentDataService","nodeId","selectSingleAnswerChoice","choiceId","radioChoiceSelected","studentChoices","selectMultipleAnswerChoice","toggleSelection","push","checkAnswer","beforeEach","angular","mock","module","mainModule","name","inject","_$controller_","_$rootScope_","it","choice1","getChoiceById","choice2","choice3","expect","showFeedback","toBeTruthy","feedbackToShow","toEqual","toBeFalsy","isCorrect"],"mappings":"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","file":"multipleChoiceController.spec.js","sourcesContent":["import angular from 'angular';\nimport mainModule from 'vle/main';\nimport 'angular-mocks';\n\nconst mockMultipleChoiceService = {\n\n};\n\nconst mockStudentDataService = {\n  saveComponentEvent: function(component, category, event, data) {\n\n  }\n};\n\ndescribe('MultipleChoiceController', () => {\n\n  let $controller;\n  let $rootScope;\n  let $scope;\n  let multipleChoiceController;\n  let component;\n\n  const singleAnswerSingleCorrectAnswerComponent = {\n    \"id\": \"z87vj05pjh\",\n    \"type\": \"MultipleChoice\",\n    \"prompt\": \"\",\n    \"showSaveButton\": true,\n    \"showSubmitButton\": true,\n    \"choiceType\": \"radio\",\n    \"choices\": [\n      {\n        \"id\": \"y82sng5vqp\",\n        \"text\": \"A\",\n        \"feedback\": \"A Feedback\",\n        \"isCorrect\": false\n      },\n      {\n        \"id\": \"37krqrcvxs\",\n        \"text\": \"B\",\n        \"feedback\": \"B Feedback\",\n        \"isCorrect\": false\n      },\n      {\n        \"id\": \"gbttermlrq\",\n        \"text\": \"C\",\n        \"feedback\": \"C Feedback\",\n        \"isCorrect\": true\n      }\n    ],\n    \"showFeedback\": true,\n    \"showAddToNotebookButton\": true\n  };\n\n  const singleAnswerMultipleCorrectAnswersComponent = {\n    \"id\": \"z87vj05pjh\",\n    \"type\": \"MultipleChoice\",\n    \"prompt\": \"\",\n    \"showSaveButton\": true,\n    \"showSubmitButton\": true,\n    \"choiceType\": \"radio\",\n    \"choices\": [\n      {\n        \"id\": \"y82sng5vqp\",\n        \"text\": \"A\",\n        \"feedback\": \"A Feedback\",\n        \"isCorrect\": false\n      },\n      {\n        \"id\": \"37krqrcvxs\",\n        \"text\": \"B\",\n        \"feedback\": \"B Feedback\",\n        \"isCorrect\": true\n      },\n      {\n        \"id\": \"gbttermlrq\",\n        \"text\": \"C\",\n        \"feedback\": \"C Feedback\",\n        \"isCorrect\": true\n      }\n    ],\n    \"showFeedback\": true,\n    \"showAddToNotebookButton\": true\n  };\n\n  const multipleAnswerComponent = {\n    \"id\": \"z87vj05pjh\",\n    \"type\": \"MultipleChoice\",\n    \"prompt\": \"\",\n    \"showSaveButton\": true,\n    \"showSubmitButton\": true,\n    \"choiceType\": \"checkbox\",\n    \"choices\": [\n      {\n        \"id\": \"y82sng5vqp\",\n        \"text\": \"A\",\n        \"feedback\": \"A Feedback\",\n        \"isCorrect\": false\n      },\n      {\n        \"id\": \"37krqrcvxs\",\n        \"text\": \"B\",\n        \"feedback\": \"B Feedback\",\n        \"isCorrect\": true\n      },\n      {\n        \"id\": \"gbttermlrq\",\n        \"text\": \"C\",\n        \"feedback\": \"C Feedback\",\n        \"isCorrect\": true\n      }\n    ],\n    \"showFeedback\": true,\n    \"showAddToNotebookButton\": true\n  };\n\n  const loadSingleAnswerSingleCorrectAnswerComponent = () => {\n    component = singleAnswerSingleCorrectAnswerComponent;\n    loadComponent();\n  };\n\n  const loadSingleAnswerMultipleCorrectAnswersComponent = () => {\n    component = singleAnswerMultipleCorrectAnswersComponent;\n    loadComponent();\n  };\n\n  const loadMultipleAnswerComponent = () => {\n    component = multipleAnswerComponent;\n    loadComponent();\n  };\n\n  const loadComponent = () => {\n    $scope = $rootScope.$new();\n    $scope.componentContent = JSON.parse(JSON.stringify(component));\n    multipleChoiceController = $controller('MultipleChoiceController',\n        { $scope: $scope, MultipleChoiceService: mockMultipleChoiceService, StudentDataService: mockStudentDataService });\n    multipleChoiceController.nodeId = 'node1';\n  };\n\n  const selectSingleAnswerChoice = (choiceId) => {\n    multipleChoiceController.radioChoiceSelected(choiceId);\n    multipleChoiceController.studentChoices = choiceId;\n  };\n\n  const selectMultipleAnswerChoice = (choiceId) => {\n    multipleChoiceController.toggleSelection(choiceId);\n    multipleChoiceController.studentChoices.push(choiceId);\n  };\n\n  const checkAnswer = () => {\n    multipleChoiceController.checkAnswer();\n  };\n\n  beforeEach(angular.mock.module(mainModule.name));\n\n  beforeEach(inject((_$controller_, _$rootScope_) => {\n    $controller = _$controller_;\n    $rootScope = _$rootScope_;\n  }));\n\n  it('single answer component should show the feedback on the submitted choice', () => {\n    loadSingleAnswerSingleCorrectAnswerComponent();\n    selectSingleAnswerChoice('y82sng5vqp');\n    checkAnswer();\n    const choice1 = multipleChoiceController.getChoiceById('y82sng5vqp');\n    const choice2 = multipleChoiceController.getChoiceById('37krqrcvxs');\n    const choice3 = multipleChoiceController.getChoiceById('gbttermlrq');\n    expect(choice1.showFeedback).toBeTruthy();\n    expect(choice1.feedbackToShow).toEqual('A Feedback');\n    expect(choice2.showFeedback).toBeFalsy();\n    expect(choice2.feedbackToShow).toBeFalsy();\n    expect(choice3.showFeedback).toBeFalsy();\n    expect(choice3.feedbackToShow).toBeFalsy();\n  });\n\n  it('single answer single correct answer component should show incorrect when the incorrect answer is submitted', () => {\n    loadSingleAnswerSingleCorrectAnswerComponent();\n    selectSingleAnswerChoice('y82sng5vqp');\n    checkAnswer();\n    expect(multipleChoiceController.isCorrect).toBeFalsy();\n  });\n\n  it('single answer single correct answer component should show correct when the correct answer is submitted', () => {\n    loadSingleAnswerSingleCorrectAnswerComponent();\n    selectSingleAnswerChoice('gbttermlrq');\n    checkAnswer();\n    expect(multipleChoiceController.isCorrect).toBeTruthy();\n  });\n\n  it('single answer multiple correct answers component should show correct when one of the multiple correct answers is submitted', () => {\n    loadSingleAnswerMultipleCorrectAnswersComponent();\n    selectSingleAnswerChoice('37krqrcvxs');\n    checkAnswer();\n    expect(multipleChoiceController.isCorrect).toBeTruthy();\n    selectSingleAnswerChoice('gbttermlrq');\n    checkAnswer();\n    expect(multipleChoiceController.isCorrect).toBeTruthy();\n  });\n\n  it('multiple answer component should show the feedback on the submitted choices', () => {\n    loadMultipleAnswerComponent();\n    selectMultipleAnswerChoice('y82sng5vqp');\n    selectMultipleAnswerChoice('37krqrcvxs');\n    selectMultipleAnswerChoice('gbttermlrq');\n    checkAnswer();\n    const choice1 = multipleChoiceController.getChoiceById('y82sng5vqp');\n    const choice2 = multipleChoiceController.getChoiceById('37krqrcvxs');\n    const choice3 = multipleChoiceController.getChoiceById('gbttermlrq');\n    expect(choice1.showFeedback).toBeTruthy();\n    expect(choice1.feedbackToShow).toEqual('A Feedback');\n    expect(choice2.showFeedback).toBeTruthy();\n    expect(choice2.feedbackToShow).toEqual('B Feedback');\n    expect(choice3.showFeedback).toBeTruthy();\n    expect(choice3.feedbackToShow).toEqual('C Feedback');\n  });\n\n  it('multiple answer component should show incorrect when the incorrect answer is submitted', () => {\n    loadMultipleAnswerComponent();\n    selectMultipleAnswerChoice('y82sng5vqp');\n    checkAnswer();\n    expect(multipleChoiceController.isCorrect).toBeFalsy();\n  });\n\n  it('multiple answer component should show incorrect when not just the correct answers are submitted', () => {\n    loadMultipleAnswerComponent();\n    selectMultipleAnswerChoice('y82sng5vqp');\n    selectMultipleAnswerChoice('37krqrcvxs');\n    selectMultipleAnswerChoice('gbttermlrq');\n    checkAnswer();\n    expect(multipleChoiceController.isCorrect).toBeFalsy();\n  });\n\n  it('multiple answer component should show incorrect when not all the correct answers are submitted', () => {\n    loadMultipleAnswerComponent();\n    selectMultipleAnswerChoice('37krqrcvxs');\n    checkAnswer();\n    expect(multipleChoiceController.isCorrect).toBeFalsy();\n  });\n\n  it('multiple answer component should show correct when only the correct answers are submitted', () => {\n    loadMultipleAnswerComponent();\n    selectMultipleAnswerChoice('37krqrcvxs');\n    selectMultipleAnswerChoice('gbttermlrq');\n    checkAnswer();\n    expect(multipleChoiceController.isCorrect).toBeTruthy();\n  });\n\n});\n"]}