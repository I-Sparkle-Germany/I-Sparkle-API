{"version":3,"sources":["outsideURLController.spec.es6"],"names":["describe","$controller","$rootScope","$scope","outsideURLController","component","beforeEach","angular","mock","module","mainModule","name","inject","_$controller_","_$rootScope_","id","type","$new","componentContent","JSON","parse","stringify","nodeId","it","expect","height","toEqual","width","setWidthAndHeight","url","setURL","toString"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AAErC,MAAIC,WAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,oBAAJ;AACA,MAAIC,SAAJ;AAEAC,EAAAA,UAAU,CAACC,oBAAQC,IAAR,CAAaC,MAAb,CAAoBC,iBAAWC,IAA/B,CAAD,CAAV;AAEAL,EAAAA,UAAU,CAACM,MAAM,CAAC,UAACC,aAAD,EAAgBC,YAAhB,EAAiC;AACjDb,IAAAA,WAAW,GAAGY,aAAd;AACAX,IAAAA,UAAU,GAAGY,YAAb;AACAT,IAAAA,SAAS,GAAG;AACVU,MAAAA,EAAE,EAAE,YADM;AAEVC,MAAAA,IAAI,EAAE;AAFI,KAAZ;AAIAb,IAAAA,MAAM,GAAGD,UAAU,CAACe,IAAX,EAAT;AACAd,IAAAA,MAAM,CAACe,gBAAP,GAA0BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAehB,SAAf,CAAX,CAA1B;AACAD,IAAAA,oBAAoB,GAAGH,WAAW,CAAC,sBAAD,EAAyB;AAAEE,MAAAA,MAAM,EAAEA;AAAV,KAAzB,CAAlC;AACAC,IAAAA,oBAAoB,CAACkB,MAArB,GAA8B,OAA9B;AACD,GAXgB,CAAP,CAAV;AAaAC,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvCC,IAAAA,MAAM,CAACpB,oBAAoB,CAACqB,MAAtB,CAAN,CAAoCC,OAApC,CAA4C,OAA5C;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,iCAAD,EAAoC,YAAM;AAC1CC,IAAAA,MAAM,CAACpB,oBAAoB,CAACuB,KAAtB,CAAN,CAAmCD,OAAnC,CAA2C,MAA3C;AACAF,IAAAA,MAAM,CAACpB,oBAAoB,CAACqB,MAAtB,CAAN,CAAoCC,OAApC,CAA4C,OAA5C;AACAtB,IAAAA,oBAAoB,CAACwB,iBAArB,CAAuC,GAAvC,EAA4C,GAA5C;AACAJ,IAAAA,MAAM,CAACpB,oBAAoB,CAACuB,KAAtB,CAAN,CAAmCD,OAAnC,CAA2C,OAA3C;AACAF,IAAAA,MAAM,CAACpB,oBAAoB,CAACqB,MAAtB,CAAN,CAAoCC,OAApC,CAA4C,OAA5C;AACD,GANC,CAAF;AAQAH,EAAAA,EAAE,CAAC,oBAAD,EAAuB,YAAM;AAC7BC,IAAAA,MAAM,CAACpB,oBAAoB,CAACyB,GAAtB,CAAN,CAAiCH,OAAjC,CAAyC,GAAzC;AACA,QAAMG,GAAG,GAAG,0BAAZ;AACAzB,IAAAA,oBAAoB,CAAC0B,MAArB,CAA4BD,GAA5B;AACAL,IAAAA,MAAM,CAACpB,oBAAoB,CAACyB,GAArB,CAAyBE,QAAzB,EAAD,CAAN,CAA4CL,OAA5C,CAAoDG,GAApD;AACD,GALC,CAAF;AAMD,CAzCO,CAAR","sourcesContent":["import angular from 'angular';\nimport mainModule from 'vle/main';\nimport 'angular-mocks';\n\ndescribe('OutsideURLController', () => {\n\n  let $controller;\n  let $rootScope;\n  let $scope;\n  let outsideURLController;\n  let component;\n\n  beforeEach(angular.mock.module(mainModule.name));\n\n  beforeEach(inject((_$controller_, _$rootScope_) => {\n    $controller = _$controller_;\n    $rootScope = _$rootScope_;\n    component = {\n      id: 'gh48wru790',\n      type: 'OutsideURL'\n    };\n    $scope = $rootScope.$new();\n    $scope.componentContent = JSON.parse(JSON.stringify(component));\n    outsideURLController = $controller('OutsideURLController', { $scope: $scope });\n    outsideURLController.nodeId = 'node1';\n  }));\n\n  it('should have a default height', () => {\n    expect(outsideURLController.height).toEqual('600px');\n  });\n\n  it('should set the width and height', () => {\n    expect(outsideURLController.width).toEqual('none');\n    expect(outsideURLController.height).toEqual('600px');\n    outsideURLController.setWidthAndHeight(400, 300);\n    expect(outsideURLController.width).toEqual('400px');\n    expect(outsideURLController.height).toEqual('300px');\n  });\n\n  it('should set the url', () => {\n    expect(outsideURLController.url).toEqual(' ');\n    const url = 'https://www.berkeley.edu';\n    outsideURLController.setURL(url);\n    expect(outsideURLController.url.toString()).toEqual(url);\n  });\n});\n"],"file":"outsideURLController.spec.js"}