{"version":3,"sources":["summaryController.spec.es6"],"names":["multipleChoiceComponent","id","type","prompt","showSaveButton","showSubmitButton","choices","feedback","text","isCorrect","displayMultipleChoiceSummaryComponent","summaryNodeId","summaryComponentId","source","studentDataType","chartType","requirementToSeeSummary","highlightCorrectAnswer","openResponseComponent","mockStudentDataService","getComponentStatesByNodeIdAndComponentId","nodeId","componentId","componentStates","componentState","componentType","studentData","studentChoices","push","response","isSubmit","isCompleted","mockProjectService","getComponentByNodeIdAndComponentId","describe","$controller","$rootScope","$scope","summaryController","component","loadComponent","$new","componentContent","JSON","parse","stringify","ProjectService","StudentDataService","beforeEach","angular","mock","module","mainModule","name","inject","_$controller_","_$rootScope_","it","prompt1","getOtherPrompt","expect","toEqual","prompt2","isStudentHasWork","toBeFalsy","toBeTruthy","calculateIsShowDisplay","spyOn","ConfigService","and","returnValue","setPeriodIdIfNecessary","periodId"],"mappings":"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","sourcesContent":["import angular from 'angular';\nimport mainModule from 'vle/main';\nimport 'angular-mocks';\n\nconst multipleChoiceComponent = {\n  id: '87df23g4l7',\n  type: 'MultipleChoice',\n  prompt: 'What is your favorite color?',\n  showSaveButton: true,\n  showSubmitButton: true,\n  choices: [\n      {\n          feedback: '',\n          id: 'hpke1oyd25',\n          text: 'Red',\n          isCorrect: false\n      },\n      {\n          feedback: '',\n          id: 'e7qc47iktb',\n          text: 'Blue',\n          isCorrect: false\n      },\n      {\n          feedback: '',\n          id: 'ju4eh3e7jx',\n          text: 'Green',\n          isCorrect: true\n      }\n  ]\n};\n\nconst displayMultipleChoiceSummaryComponent = {\n  id: 'z87vj05pjh',\n  type: 'Summary',\n  prompt: '',\n  showSaveButton: true,\n  showSubmitButton: true,\n  summaryNodeId: 'node1',\n  summaryComponentId: '87df23g4l7',\n  source: 'period',\n  studentDataType: 'responses',\n  chartType: 'column',\n  requirementToSeeSummary: 'none',\n  highlightCorrectAnswer: false\n};\n\nconst openResponseComponent = {\n  id: '4j4en745m7',\n  type: 'OpenResponse',\n  prompt: 'Explain the best toppings on a pizza.',\n  showSaveButton: true,\n  showSubmitButton: true\n};\n\nconst mockStudentDataService = {\n  getComponentStatesByNodeIdAndComponentId(nodeId, componentId) {\n    const componentStates = [];\n    if (componentId === '87df23g4l7') {\n      const componentState = {\n        componentType: 'MultipleChoice',\n        studentData: {\n          studentChoices: [\n            { id: 'e7qc47iktb', text: 'Blue' }\n          ]\n        }\n      };\n      componentStates.push(componentState);\n    } else if (componentId === '4j4en745m7') {\n      const componentState = {\n        componentType: 'OpenResponse',\n        studentData: {\n          response: 'Add pepperoni.'\n        },\n        isSubmit: true\n      };\n      componentStates.push(componentState);\n    }\n    return componentStates;\n  },\n  isCompleted(nodeId, componentId) {\n    return componentId === '87df23g4l7' || componentId === '4j4en745m7';\n  }\n};\n\nconst mockProjectService = {\n  getComponentByNodeIdAndComponentId(nodeId, componentId) {\n    if (componentId === '87df23g4l7') {\n      return multipleChoiceComponent;\n    } else if (componentId === '4j4en745m7') {\n      return openResponseComponent;\n    }\n  }\n}\n\ndescribe('SummaryController', () => {\n\n  let $controller;\n  let $rootScope;\n  let $scope;\n  let summaryController;\n  let component;\n\n  const loadComponent = () => {\n    $scope = $rootScope.$new();\n    $scope.componentContent = JSON.parse(JSON.stringify(component));\n    summaryController = $controller('SummaryController',\n        {\n          $scope: $scope,\n          ProjectService: mockProjectService, \n          StudentDataService: mockStudentDataService\n        });\n    summaryController.nodeId = 'node1';\n  };\n\n  beforeEach(angular.mock.module(mainModule.name));\n\n  beforeEach(inject((_$controller_, _$rootScope_) => {\n    $controller = _$controller_;\n    $rootScope = _$rootScope_;\n    component = displayMultipleChoiceSummaryComponent;\n    loadComponent();\n  }));\n\n  it('should get the prompt from the other component', () => {\n    const prompt1 = summaryController.getOtherPrompt('node1', '87df23g4l7');\n    expect(prompt1).toEqual('What is your favorite color?');\n    const prompt2 = summaryController.getOtherPrompt('node1', '4j4en745m7');\n    expect(prompt2).toEqual('Explain the best toppings on a pizza.');\n  });\n\n  it('should check if the student has work', () => {\n    summaryController.summaryNodeId = 'node1';\n    summaryController.summaryComponentId = '1111111111';\n    expect(summaryController.isStudentHasWork()).toBeFalsy();\n    summaryController.summaryNodeId = 'node1';\n    summaryController.summaryComponentId = '87df23g4l7';\n    expect(summaryController.isStudentHasWork()).toBeTruthy();\n  });\n\n  it('should calculate if the display should be shown when the requirement is submit work', () => {\n    summaryController.summaryNodeId = 'node1';\n    summaryController.summaryComponentId = '87df23g4l7';\n    summaryController.componentContent.requirementToSeeSummary = 'submitWork';\n    expect(summaryController.calculateIsShowDisplay()).toBeFalsy();\n    summaryController.summaryNodeId = 'node1';\n    summaryController.summaryComponentId = '4j4en745m7';\n    summaryController.componentContent.requirementToSeeSummary = 'submitWork';\n    expect(summaryController.calculateIsShowDisplay()).toBeTruthy();\n  });\n\n  it('should calculate if the display should be shown when the requirement is save work', () => {\n    summaryController.summaryNodeId = 'node1';\n    summaryController.summaryComponentId = '1111111111';\n    summaryController.componentContent.requirementToSeeSummary = 'saveWork';\n    expect(summaryController.calculateIsShowDisplay()).toBeFalsy();\n    summaryController.summaryNodeId = 'node1';\n    summaryController.summaryComponentId = '4j4en745m7';\n    summaryController.componentContent.requirementToSeeSummary = 'saveWork';\n    expect(summaryController.calculateIsShowDisplay()).toBeTruthy();\n  });\n\n  it('should calculate if the display should be shown when the requirement is complete component', \n      () => {\n    summaryController.summaryNodeId = 'node1';\n    summaryController.summaryComponentId = '1111111111';\n    summaryController.componentContent.requirementToSeeSummary = 'completeComponent';\n    expect(summaryController.calculateIsShowDisplay()).toBeFalsy();\n    summaryController.summaryNodeId = 'node1';\n    summaryController.summaryComponentId = '4j4en745m7';\n    summaryController.componentContent.requirementToSeeSummary = 'completeComponent';\n    expect(summaryController.calculateIsShowDisplay()).toBeTruthy();\n    summaryController.componentContent.requirementToSeeSummary = 'saveWork';\n  });\n\n  it('should calculate if the display should be shown when the requirement is none', () => {\n    summaryController.summaryNodeId = 'node1';\n    summaryController.summaryComponentId = '1111111111';\n    summaryController.componentContent.requirementToSeeSummary = 'none';\n    expect(summaryController.calculateIsShowDisplay()).toBeTruthy();\n    summaryController.summaryNodeId = 'node1';\n    summaryController.summaryComponentId = '4j4en745m7';\n    summaryController.componentContent.requirementToSeeSummary = 'none';\n    expect(summaryController.calculateIsShowDisplay()).toBeTruthy();\n  });\n\n  it('should set the period id', () => {\n    spyOn(summaryController.ConfigService, 'isStudentRun').and.returnValue(true);\n    spyOn(summaryController.ConfigService, 'getPeriodId').and.returnValue(123456); \n    summaryController.componentContent.source = 'period';\n    summaryController.setPeriodIdIfNecessary();\n    expect(summaryController.periodId).toEqual(123456);\n    summaryController.componentContent.source = 'allPeriods';\n    summaryController.setPeriodIdIfNecessary();\n    expect(summaryController.periodId).toEqual(null);\n  });\n\n});\n"],"file":"summaryController.spec.js"}