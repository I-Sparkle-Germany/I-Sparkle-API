{"version":3,"sources":["vleController.spec.es6"],"names":[],"mappings":";;;;;;;;;;;;;;AAIA,SAAS,oBAAT,EAA+B,YAAY;AACvC,eAAW,kBAAQ,IAAR,CAAa,MAAb,CAAoB,eAAW,IAAX,CAA/B,EADuC;;AAGvC,QAAI,aAAJ,EAAmB,cAAnB,EAAmC,UAAnC,CAHuC;;AAKvC,eAAW,OAAO,UAAS,eAAT,EAA0B,gBAA1B,EAA4C,YAA5C,EAA0D;AACxE,wBAAgB,eAAhB,CADwE;AAExE,yBAAiB,gBAAjB,CAFwE;AAGxE,qBAAa,YAAb,CAHwE;KAA1D,CAAlB,EALuC;;AAWvC,aAAS,gBAAT,EAA2B,YAAY;;AAEnC,YAAI,iBAAiB,yCAAjB,CAF+B;;AAInC,mBAAW,YAAW;AAClB,kBAAM,aAAN,EAAqB,gBAArB,EAAuC,GAAvC,CAA2C,WAA3C,CAAuD,cAAvD,EADkB;SAAX,CAAX,CAJmC;;AAQnC,WAAG,0DAAH,EAA+D,YAAY;AACvE,gBAAI,gBAAgB,2BAAhB,CADmE;AAEvE,gBAAI,yCAAyC,gBAAgB,cAAhB,GAAiC,uBAAjC,CAF0B;AAGvE,gBAAI,uCAAuC,eAAe,iBAAf,CAAiC,aAAjC,CAAvC,CAHmE;AAIvE,mBAAO,cAAc,cAAd,CAAP,CAAqC,oBAArC,CAA0D,gBAA1D,EAJuE;AAKvE,mBAAO,oCAAP,EAA6C,OAA7C,CAAqD,sCAArD,EALuE;SAAZ,CAA/D,CARmC;;AAgBnC,WAAG,sDAAH,EAA2D,YAAY;AACnE,gBAAI,gBAAgB,6DAAhB,CAD+D;AAEnE,gBAAI,yCAAyC,yCAAyC,cAAzC,GAA0D,gCAA1D,CAFsB;AAGnE,gBAAI,uCAAuC,eAAe,iBAAf,CAAiC,aAAjC,CAAvC,CAH+D;AAInE,mBAAO,cAAc,cAAd,CAAP,CAAqC,oBAArC,CAA0D,gBAA1D,EAJmE;AAKnE,mBAAO,oCAAP,EAA6C,OAA7C,CAAqD,sCAArD,EALmE;SAAZ,CAA3D,CAhBmC;KAAZ,CAA3B,CAXuC;CAAZ,CAA/B","file":"vleController.spec.js","sourcesContent":["import angular from 'angular';\nimport mainModule from 'vle/main';\nimport 'angular-mocks';\n\ndescribe('Student VLE Module', function () {\n    beforeEach(angular.mock.module(mainModule.name));\n\n    var ConfigService, ProjectService, $rootScope;\n\n    beforeEach(inject(function(_ConfigService_, _ProjectService_, _$rootScope_) {\n        ConfigService = _ConfigService_;\n        ProjectService = _ProjectService_;\n        $rootScope = _$rootScope_;\n    }));\n\n    describe('ProjectService', function () {\n\n        var projectBaseURL = \"http://localhost:8080/curriculum/12345/\";\n        \n        beforeEach(function() {\n            spyOn(ConfigService, 'getConfigParam').and.returnValue(projectBaseURL);\n        });\n\n        it('should replace asset paths in non-html component content', function () {\n            let contentString = \"<img src=\\'hello.png\\' />\";\n            let contentStringReplacedAssetPathExpected = \"<img src=\\'\" + projectBaseURL + \"assets/hello.png\\' />\";\n            let contentStringReplacedAssetPathActual = ProjectService.replaceAssetPaths(contentString);\n            expect(ConfigService.getConfigParam).toHaveBeenCalledWith(\"projectBaseURL\");\n            expect(contentStringReplacedAssetPathActual).toEqual(contentStringReplacedAssetPathExpected);\n        });\n\n        it('should replace asset paths in html component content', function () {\n            let contentString = \"style=\\\\\\\"background-image: url(\\\\\\\"background.jpg\\\\\\\")\\\\\\\"\";\n            let contentStringReplacedAssetPathExpected = \"style=\\\\\\\"background-image: url(\\\\\\\"\" + projectBaseURL + \"assets/background.jpg\\\\\\\")\\\\\\\"\";\n            let contentStringReplacedAssetPathActual = ProjectService.replaceAssetPaths(contentString);\n            expect(ConfigService.getConfigParam).toHaveBeenCalledWith(\"projectBaseURL\");\n            expect(contentStringReplacedAssetPathActual).toEqual(contentStringReplacedAssetPathExpected);\n        });\n\n    });\n});"]}