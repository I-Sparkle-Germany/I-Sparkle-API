{"version":3,"sources":["teacherDataService.spec.es6"],"names":["describe","beforeEach","angular","mock","module","mainModule","name","ConfigService","ProjectService","TeacherDataService","$rootScope","$httpBackend","initializeIdToNode","idToNode","id","components","type","connectedComponents","componentId","nodeId","inject","_ConfigService_","_ProjectService_","_TeacherDataService_","_$rootScope_","_$httpBackend_","it","node1Components","getAllRelatedComponents","expect","length","toEqual","node2Components","node3Components","node2ConnectedComponents","getConnectedComponentsIfNecessary","node3ConnectedComponents","componentContent1","isConnectedComponentStudentDataRequired","componentContent2","studentData","componentStatesByComponentId","response","componentStates1","getComponentStatesByComponentIds","componentStates2","componentState1","workgroupId","componentState2","componentState3","componentStatesByWorkgroupId","getComponentStatesByWorkgroupIdAndComponentIds","componentStates3"],"mappings":"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","file":"teacherDataService.spec.js","sourcesContent":["import angular from 'angular';\nimport mainModule from 'classroomMonitor/main';\nimport 'angular-mocks';\n\ndescribe('TeacherDataService', () => {\n\n  beforeEach(angular.mock.module(mainModule.name));\n\n  let ConfigService, ProjectService, TeacherDataService, $rootScope, $httpBackend;\n  const initializeIdToNode = () => {\n    ProjectService.idToNode['node1'] = {\n      id: 'node1',\n      components: [\n        {\n          id: 'vg5uzarhir',\n          type: 'Discussion'\n        },\n        {\n          id: '4h834b2zbd',\n          type: 'OpenResponse'\n        }\n      ]\n    };\n    ProjectService.idToNode['node2'] = {\n      id: 'node2',\n      components: [\n        {\n          id: '1xph6u3mea',\n          type: 'Discussion',\n          connectedComponents: [\n            {\n              componentId: 'vg5uzarhir',\n              type: 'importWork',\n              nodeId: 'node1'\n            }\n          ]\n        }\n      ]\n    };\n    ProjectService.idToNode['node3'] = {\n      id: 'node3',\n      components: [\n        {\n          id: 'j2fsu892t3',\n          type: 'Graph',\n          connectedComponents: [\n            {\n              componentId: '4h834b2zbd',\n              type: 'importWork',\n              nodeId: 'node1'\n            }\n          ]\n        }\n      ]\n    };\n  };\n  beforeEach(inject(function(_ConfigService_, _ProjectService_, _TeacherDataService_, _$rootScope_,\n                             _$httpBackend_) {\n    ConfigService = _ConfigService_;\n    ProjectService = _ProjectService_;\n    TeacherDataService = _TeacherDataService_;\n    $rootScope = _$rootScope_;\n    $httpBackend = _$httpBackend_;\n  }));\n\n  it('should get all related components', () => {\n    initializeIdToNode();\n    const node1Components = TeacherDataService.getAllRelatedComponents('node1');\n    expect(node1Components.length).toEqual(2);\n    expect(node1Components[0].nodeId).toEqual('node1');\n    expect(node1Components[0].componentId).toEqual('vg5uzarhir');\n    expect(node1Components[1].nodeId).toEqual('node1');\n    expect(node1Components[1].componentId).toEqual('4h834b2zbd');\n    const node2Components = TeacherDataService.getAllRelatedComponents('node2');\n    expect(node2Components.length).toEqual(2);\n    expect(node2Components[0].nodeId).toEqual('node2');\n    expect(node2Components[0].componentId).toEqual('1xph6u3mea');\n    expect(node2Components[1].nodeId).toEqual('node1');\n    expect(node2Components[1].componentId).toEqual('vg5uzarhir');\n    const node3Components = TeacherDataService.getAllRelatedComponents('node3');\n    expect(node3Components.length).toEqual(1);\n    expect(node3Components[0].nodeId).toEqual('node3');\n    expect(node3Components[0].componentId).toEqual('j2fsu892t3');\n  });\n\n  it('should get connected components if necessary', () => {\n    initializeIdToNode();\n    const node2ConnectedComponents = TeacherDataService.getConnectedComponentsIfNecessary(\n        [{ nodeId: 'node2', componentId: '1xph6u3mea' }]);\n    expect(node2ConnectedComponents.length).toEqual(1);\n    expect(node2ConnectedComponents[0].nodeId).toEqual('node1');\n    expect(node2ConnectedComponents[0].componentId).toEqual('vg5uzarhir');\n    const node3ConnectedComponents = TeacherDataService.getConnectedComponentsIfNecessary(\n        [{ nodeId: 'node3', componentId: 'j2fsu892t3' }]);\n    expect(node3ConnectedComponents.length).toEqual(0);\n  });\n\n  it('should check if connected component student data is required', () => {\n    const componentContent1 = {\n      id: '1xph6u3mea',\n      type: 'Discussion',\n      connectedComponents: [\n        {\n          componentId: 'vg5uzarhir',\n          type: 'importWork',\n          nodeId: 'node1'\n        }\n      ]\n    };\n    expect(TeacherDataService.isConnectedComponentStudentDataRequired(componentContent1))\n        .toEqual(true);\n    const componentContent2 = {\n      id: 'j2fsu892t3',\n      type: 'Graph',\n      connectedComponents: [\n        {\n          componentId: '4h834b2zbd',\n          type: 'importWork',\n          nodeId: 'node1'\n        }\n      ]\n    };\n    expect(TeacherDataService.isConnectedComponentStudentDataRequired(componentContent2))\n        .toEqual(false);\n  });\n\n  it('should get component states by component ids', () => {\n    TeacherDataService.studentData.componentStatesByComponentId['vg5uzarhir'] = [{\n      id: 1,\n      nodeId: 'node1',\n      componentId: 'vg5uzarhir',\n      studentData: {\n        response: 'hello'\n      }\n    }];\n    TeacherDataService.studentData.componentStatesByComponentId['1xph6u3mea'] = [{\n      id: 1,\n      nodeId: 'node2',\n      componentId: '1xph6u3mea',\n      studentData: {\n        response: 'hello2'\n      }\n    }];\n    const componentStates1 =\n        TeacherDataService.getComponentStatesByComponentIds(['vg5uzarhir']);\n    expect(componentStates1.length).toEqual(1);\n    const componentStates2 =\n        TeacherDataService.getComponentStatesByComponentIds(['vg5uzarhir', '1xph6u3mea']);\n    expect(componentStates2.length).toEqual(2);\n  });\n\n  it('should get component states by workgroup id and component ids', () => {\n    const componentState1 = {\n      id: 1,\n      nodeId: 'node1',\n      componentId: 'vg5uzarhir',\n      workgroupId: 100,\n      studentData: {\n        response: 'hello'\n      }\n    };\n    const componentState2 = {\n      id: 2,\n      nodeId: 'node2',\n      componentId: '1xph6u3mea',\n      workgroupId: 200,\n      studentData: {\n        response: 'hello2'\n      }\n    };\n    const componentState3 = {\n      id: 3,\n      nodeId: 'node3',\n      componentId: 'q2fsu892t3',\n      workgroupId: 200,\n      studentData: {\n        response: 'hello3'\n      }\n    };\n    TeacherDataService.studentData.componentStatesByComponentId['vg5uzarhir'] = [componentState1];\n    TeacherDataService.studentData.componentStatesByComponentId['1xph6u3mea'] = [componentState2];\n    TeacherDataService.studentData.componentStatesByComponentId['q2fsu892t3'] = [componentState3];\n    TeacherDataService.studentData.componentStatesByWorkgroupId[100] = [componentState1];\n    TeacherDataService.studentData.componentStatesByWorkgroupId[200] =\n        [componentState2, componentState3];\n    const componentStates1 = TeacherDataService.getComponentStatesByWorkgroupIdAndComponentIds(\n        100, ['vg5uzarhir']);\n    expect(componentStates1.length).toEqual(1);\n    const componentStates2 = TeacherDataService.getComponentStatesByWorkgroupIdAndComponentIds(\n        200, ['vg5uzarhir', '1xph6u3mea']);\n    expect(componentStates2.length).toEqual(1);\n    const componentStates3 = TeacherDataService.getComponentStatesByWorkgroupIdAndComponentIds(\n        200, ['vg5uzarhir', '1xph6u3mea', 'q2fsu892t3']);\n    expect(componentStates3.length).toEqual(2);\n  });\n\n});\n"]}