{"version":3,"sources":["editNotebookItemController.es6"],"names":[],"mappings":"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","file":"editNotebookItemController.js","sourcesContent":["'use strict';\n\nclass EditNotebookItemController {\n\n    constructor($mdDialog,\n                $q,\n                $injector,\n                $rootScope,\n                $scope,\n                $translate,\n                ConfigService,\n                NotebookService,\n                ProjectService,\n                StudentAssetService,\n                StudentDataService,\n                UtilService) {\n        this.$mdDialog = $mdDialog;\n        this.$q = $q;\n        this.$injector = $injector;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.NotebookService = NotebookService;\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n        this.UtilService = UtilService;\n        this.mode = this.ConfigService.getMode();\n\n        if (this.itemId == null) {\n            let currentNodeId = this.StudentDataService.getCurrentNodeId();\n            let currentNodeTitle = this.ProjectService.getNodeTitleByNodeId(currentNodeId);\n\n            this.item = {\n                id: null, // null id means we're creating a new notebook item.\n                localNotebookItemId: this.UtilService.generateKey(10), // Id that is common across the same notebook item revisions.\n                type: \"note\", // the notebook item type, TODO: once questions are enabled, don't hard code\n                nodeId: currentNodeId, // Id of the node this note was created on\n                title: \"Note from \" + currentNodeTitle,  // Title of the node this note was created on\n                content: {\n                    text: \"\",\n                    attachments: []\n                }\n            };\n        } else {\n            this.item = angular.copy(this.NotebookService.getLatestNotebookItemByLocalNotebookItemId(this.itemId));\n            this.item.id = null; // set to null so we're creating a new notebook item. An edit to a notebook item results in a new entry in the db.\n        }\n\n        this.notebookConfig = this.NotebookService.getNotebookConfig();\n        let label = this.notebookConfig.itemTypes[this.item.type].label.singular;\n        this.title = (this.isEditMode ? (this.itemId ? 'Edit ' : 'Add ') : 'View ') + label;\n        this.saveEnabled = false;\n\n        if (this.file != null) {\n            // student is trying to add a file to this notebook item.\n            var files = [this.file];  // put the file into an array\n\n            this.attachStudentAssetToNote(files);\n        }\n\n        this.setShowUpload();\n    }\n\n    attachStudentAssetToNote(files) {\n        if (files != null) {\n            for (let f = 0; f < files.length; f++) {\n                let file = files[f];\n                // create a temporary attachment object\n                let attachment = {\n                    studentAssetId: null,\n                    iconURL: \"\",\n                    file: file  // add the file for uploading in the future\n                };\n                this.item.content.attachments.push(attachment);\n                // read image data as URL and set it in the temp attachment src attribute so students can preview the image\n                let reader = new FileReader();\n                reader.onload = (event) => {\n                    attachment.iconURL = event.target.result;\n                };\n                reader.readAsDataURL(file);\n                this.update();\n            }\n        }\n    }\n\n    getItemNodeId() {\n        if (this.item == null) {\n            return null;\n        } else {\n            return this.item.nodeId;\n        }\n    }\n\n    /**\n     * Returns this NotebookItem's position link\n     */\n    getItemNodeLink() {\n        if (this.item == null) {\n            return \"\";\n        } else {\n            return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\n        }\n    }\n\n    /**\n     * Returns this NotebookItem's position\n     */\n    getItemNodePosition() {\n        if (this.item == null) {\n            return \"\";\n        } else {\n            return this.ProjectService.getNodePositionById(this.item.nodeId);\n        }\n    }\n\n    getTemplateUrl() {\n        return this.ProjectService.getThemePath() + '/notebook/editNotebookItem.html';\n    }\n\n    removeAttachment(attachment) {\n        if (this.item.content.attachments.indexOf(attachment) != -1) {\n            this.item.content.attachments.splice(this.item.content.attachments.indexOf(attachment), 1);\n            this.update();\n        }\n    }\n\n    delete(ev) {\n        // TODO: add archiving/deleting notebook items\n    }\n\n    cancel() {\n        this.$mdDialog.hide();\n    }\n\n    save() {\n        // go through the notebook item's attachments and look for any attachments that need to be uploaded and made into StudentAsset.\n        let uploadAssetPromises = [];\n        this.item.content.clientSaveTime = Date.parse(new Date());  // set save timestamp\n        if (this.item.content.attachments != null) {\n            for (let i = 0; i < this.item.content.attachments.length; i++) {\n                let attachment = this.item.content.attachments[i];\n                if (attachment.studentAssetId == null && attachment.file != null) {\n                    // this attachment hasn't been uploaded yet, so we'll do that now.\n                    let file = attachment.file;\n\n                    var deferred = this.$q.defer();\n                    this.StudentAssetService.uploadAsset(file).then((studentAsset) => {\n                        this.StudentAssetService.copyAssetForReference(studentAsset).then((copiedAsset) => {\n                            if (copiedAsset != null) {\n                                var newAttachment = {\n                                    studentAssetId: copiedAsset.id,\n                                    iconURL: copiedAsset.iconURL\n                                };\n                                this.item.content.attachments[i] = newAttachment;\n                                deferred.resolve();\n                            }\n                        });\n                    });\n                    uploadAssetPromises.push(deferred.promise);\n                }\n            }\n        }\n\n        // make sure all the assets are created before saving the notebook item.\n        this.$q.all(uploadAssetPromises).then(() => {\n            this.NotebookService.saveNotebookItem(this.item.id, this.item.nodeId, this.item.localNotebookItemId, this.item.type, this.item.title, this.item.content)\n                .then(() => {\n                    this.$mdDialog.hide();\n                });\n        });\n    }\n\n    update() {\n        // notebook item has changed\n        // set whether save button should be enabled\n        let saveEnabled = false;\n        if (this.item.content.text || this.item.content.attachments.length) {\n            // note has text and/or attachments, so we can save\n            saveEnabled = true;\n        }\n        this.saveEnabled = saveEnabled;\n\n        this.setShowUpload();\n    }\n\n    setShowUpload() {\n        this.showUpload = this.mode !== 'preview' && (this.item.content.attachments && this.item.content.attachments.length < 1);\n    }\n}\n\nEditNotebookItemController.$inject = [\n    \"$mdDialog\",\n    \"$q\",\n    \"$injector\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$translate\",\n    \"ConfigService\",\n    \"NotebookService\",\n    \"ProjectService\",\n    \"StudentAssetService\",\n    \"StudentDataService\",\n    \"UtilService\"\n];\n\nexport default EditNotebookItemController;\n"]}