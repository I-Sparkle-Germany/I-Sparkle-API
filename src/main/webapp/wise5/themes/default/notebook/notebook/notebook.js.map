{"version":3,"sources":["notebook.es6"],"names":["NotebookController","$filter","$mdDialog","$scope","$rootScope","ConfigService","NotebookService","ProjectService","StudentAssetService","StudentDataService","$translate","themePath","getThemePath","itemId","item","config","enabled","workgroupId","getWorkgroupId","reportVisible","itemTypes","report","notesVisible","insertMode","insertContent","$on","event","args","notebook","angular","copy","ev","editNote","file","doDelete","deleteNote","logOutListener","$broadcast","getNotebookByWorkgroup","reportId","notes","studentAsset","alert","isEditMode","notebookItemTemplate","show","parent","element","document","body","targetEvent","templateUrl","controller","controllerAs","bindToController","locals","confirm","title","ariaLabel","ok","cancel","then","noteCopy","getLatestNotebookItemByLocalNotebookItemId","id","content","clientSaveTime","Date","parse","clientDeleteTime","saveNotebookItem","nodeId","localNotebookItemId","type","$event","notebookItem","selectedNotebookItem","componentController","attachNotebookItemToComponent","stopPropagation","notebookItems","items","notebookItemKey","last","push","value","closeNotes","addNewItem","$inject","Notebook","bindings","template"],"mappings":"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","file":"notebook.js","sourcesContent":["\"use strict\";\r\n\r\nimport EditNotebookItemController from '../editNotebookItemController';\r\n\r\nclass NotebookController {\r\n    constructor($filter,\r\n                $mdDialog,\r\n                $scope,\r\n                $rootScope,\r\n                ConfigService,\r\n                NotebookService,\r\n                ProjectService,\r\n                StudentAssetService,\r\n                StudentDataService) {\r\n        this.$filter = $filter;\r\n        this.$mdDialog = $mdDialog;\r\n        this.$scope = $scope;\r\n        this.$rootScope = $rootScope;\r\n        this.ConfigService = ConfigService;\r\n        this.NotebookService = NotebookService;\r\n        this.ProjectService = ProjectService;\r\n        this.StudentAssetService = StudentAssetService;\r\n        this.StudentDataService = StudentDataService;\r\n\r\n        this.$translate = this.$filter('translate');\r\n\r\n        this.themePath = this.ProjectService.getThemePath();\r\n        this.itemId = null;\r\n        this.item = null;\r\n        this.config = this.NotebookService.config;\r\n        \r\n        if (!this.config.enabled) {\r\n            return;\r\n        }\r\n\r\n        this.workgroupId = this.ConfigService.getWorkgroupId();\r\n        //this.reportVisible = false;\r\n        this.reportVisible = this.config.itemTypes.report.enabled;\r\n        this.notesVisible = false;\r\n        this.insertMode = false;\r\n        this.insertContent = null;\r\n\r\n        this.$scope.$on('notebookUpdated', (event, args) => {\r\n            this.notebook = angular.copy(args.notebook);\r\n        });\r\n\r\n        // show edit note dialog on 'editNote' event\r\n        this.$scope.$on('editNote', (event, args) => {\r\n            let itemId = args.itemId;\r\n            let ev = args.ev;\r\n            this.editNote(itemId, true, null, ev);\r\n        });\r\n\r\n        // show edit note dialog on 'addNewNote' event\r\n        this.$scope.$on('addNewNote', (event, args) => {\r\n            let ev = args.ev;\r\n            let file = args.file;\r\n            this.editNote(null, true, file, ev);\r\n        });\r\n\r\n        // show delete note confirm dialog on 'deleteNote' event\r\n        this.$scope.$on('deleteNote', (event, args) => {\r\n            let itemId = args.itemId;\r\n            let ev = args.ev;\r\n            let doDelete = true;\r\n            this.deleteNote(itemId, ev, doDelete);\r\n        });\r\n\r\n        // show delete note confirm dialog on 'reviveNote' event\r\n        this.$scope.$on('reviveNote', (event, args) => {\r\n            let itemId = args.itemId;\r\n            let ev = args.ev;\r\n            let doDelete = false;\r\n            this.deleteNote(itemId, ev, doDelete);\r\n        });\r\n\r\n        this.logOutListener = $scope.$on('logOut', (event, args) => {\r\n            this.logOutListener();\r\n            this.$rootScope.$broadcast('componentDoneUnloading');\r\n        });\r\n\r\n        // get the notebook for this workgroup\r\n        this.notebook = this.NotebookService.getNotebookByWorkgroup(this.workgroupId);\r\n        // assume only 1 report for now\r\n        this.reportId = this.config.itemTypes.report.notes[0].reportId;\r\n    }\r\n\r\n    deleteStudentAsset(studentAsset) {\r\n        alert(this.$translate('deleteStudentAssetFromNotebookNotImplementedYet'));\r\n        /*\r\n         StudentAssetService.deleteAsset(studentAsset).then(angular.bind(this, function(deletedStudentAsset) {\r\n         // remove studentAsset\r\n         this.studentAssets.splice(this.studentAssets.indexOf(deletedStudentAsset), 1);\r\n         this.calculateTotalUsage();\r\n         }));\r\n         */\r\n    }\r\n\r\n    editNote(itemId, isEditMode, file, ev) {\r\n        let notebookItemTemplate = this.themePath + '/notebook/editNotebookItem.html';\r\n\r\n        // Display a dialog where students can view/add/edit a notebook item\r\n        this.$mdDialog.show({\r\n            parent: angular.element(document.body),\r\n            targetEvent: ev,\r\n            templateUrl: notebookItemTemplate,\r\n            controller: EditNotebookItemController,\r\n            controllerAs: 'editNotebookItemController',\r\n            bindToController: true,\r\n            locals: {\r\n                itemId: itemId,\r\n                isEditMode: isEditMode,\r\n                file: file\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Delete the note specified by the itemId.\r\n     */\r\n    deleteNote(itemId, ev, doDelete = true) {\r\n        let confirm = null;\r\n\r\n        if (doDelete) {\r\n            confirm = this.$mdDialog.confirm()\r\n                .title(this.$translate('deleteNoteConfirmMessage'))\r\n                .ariaLabel('delete note confirmation')\r\n                .targetEvent(ev)\r\n                .ok(this.$translate('delete'))\r\n                .cancel(this.$translate('cancel'));\r\n        } else {\r\n            confirm = this.$mdDialog.confirm()\r\n                .title(this.$translate('reviveNoteConfirmMessage'))\r\n                .ariaLabel('revive note confirmation')\r\n                .targetEvent(ev)\r\n                .ok(this.$translate('revive'))\r\n                .cancel(this.$translate('cancel'));\r\n        }\r\n\r\n        this.$mdDialog.show(confirm).then(() => {\r\n            let noteCopy = angular.copy(this.NotebookService.getLatestNotebookItemByLocalNotebookItemId(itemId));\r\n            noteCopy.id = null; // set to null so we're creating a new notebook item. An edit to a notebook item results in a new entry in the db.\r\n            noteCopy.content.clientSaveTime = Date.parse(new Date());  // set save timestamp\r\n            let clientDeleteTime = null;  // if delete timestamp is null, then we are in effect un-deleting this note item\r\n            if (doDelete) {\r\n                clientDeleteTime = Date.parse(new Date());  // set delete timestamp\r\n            }\r\n            this.NotebookService.saveNotebookItem(noteCopy.id, noteCopy.nodeId, noteCopy.localNotebookItemId,\r\n                noteCopy.type, noteCopy.title, noteCopy.content, noteCopy.content.clientSaveTime, clientDeleteTime);\r\n        }, () => {\r\n            // they chose not to delete. Do nothing, the dialog will close.\r\n        });\r\n    }\r\n\r\n    notebookItemSelected($event, notebookItem) {\r\n        this.selectedNotebookItem = notebookItem;\r\n    }\r\n\r\n    attachNotebookItemToComponent($event, notebookItem) {\r\n        this.componentController.attachNotebookItemToComponent(notebookItem);\r\n        this.selectedNotebookItem = null;  // reset selected notebook item\r\n        // TODO: add some kind of unobtrusive confirmation to let student know that the notebook item has been added to current component\r\n        $event.stopPropagation();  // prevents parent notebook list item from getting the onclick event so this item won't be re-selected.\r\n    }\r\n\r\n    getNotes() {\r\n        let notes = [];\r\n        let notebookItems = this.notebook.items;\r\n        for (let notebookItemKey in notebookItems) {\r\n            let notebookItem = notebookItems[notebookItemKey];\r\n            if (notebookItem.last().type === 'note') {\r\n                notes.push(notebookItem);\r\n            }\r\n        }\r\n        return notes;\r\n    }\r\n\r\n    open(value, event) {\r\n        if (value === 'report') {\r\n            // toggle the report view\r\n            this.reportVisible = !this.reportVisible;\r\n        } else if (value === 'note') {\r\n            // toggle the notes view\r\n            if (this.notesVisible) {\r\n                this.closeNotes(event);\r\n            } else {\r\n                this.notesVisible = true;\r\n            }\r\n        } else if (value === 'new') {\r\n            // open the new note dialog\r\n            this.NotebookService.addNewItem(event);\r\n        }\r\n    }\r\n\r\n    closeNotes($event) {\r\n        this.notesVisible = false;\r\n        this.insertMode = false;\r\n    }\r\n\r\n    /*closeReport() {\r\n        this.reportVisible = false;\r\n    }*/\r\n\r\n    setInsertMode() {\r\n        this.insertMode = true;\r\n        this.notesVisible = true;\r\n    }\r\n\r\n    insert(value, $event) {\r\n        // user is inserting new content into the report\r\n        this.insertContent = angular.copy(this.NotebookService.getLatestNotebookItemByLocalNotebookItemId(value, this.workgroupId));\r\n    }\r\n}\r\n\r\nNotebookController.$inject = [\r\n    '$filter',\r\n    '$mdDialog',\r\n    '$scope',\r\n    '$rootScope',\r\n    'ConfigService',\r\n    'NotebookService',\r\n    'ProjectService',\r\n    'StudentAssetService',\r\n    'StudentDataService'\r\n];\r\n\r\nconst Notebook = {\r\n    bindings: {\r\n    },\r\n    template:\r\n        `<div ng-if=\"$ctrl.config.enabled\" ng-class=\"{'notes-visible': $ctrl.notesVisible}\">\r\n            <div class=\"notebook-overlay\"></div>\r\n            <notebook-launcher config=\"$ctrl.config\"\r\n                               note-count=\"$ctrl.notebook.items.length\"\r\n                               notes-visible=\"$ctrl.notesVisible\"\r\n                               on-open=\"$ctrl.open(value, event)\"></notebook-launcher>\r\n            <notebook-report ng-if=\"$ctrl.config.itemTypes.report.enabled\"\r\n                             visible=\"$ctrl.reportVisible\"\r\n                             insert-content=\"$ctrl.insertContent\"\r\n                             insert-mode=\"$ctrl.insertMode\"\r\n                             config=\"$ctrl.config\"\r\n                             reportId=\"$ctrl.reportId\"\r\n                             on-collapse=\"$ctrl.insertMode=false\"\r\n                             on-insert=\"$ctrl.setInsertMode()\"></notebook-container>\r\n        </div>\r\n        <notebook-notes ng-if=\"$ctrl.config.enabled\"\r\n                        notebook=\"$ctrl.notebook\"\r\n                        notes-visible=\"$ctrl.notesVisible\"\r\n                        config=\"$ctrl.config\"\r\n                        insert-mode=\"$ctrl.insertMode\"\r\n                        workgroup-id=\"$ctrl.workgroupId\"\r\n                        on-close=\"$ctrl.closeNotes()\"\r\n                        on-insert=\"$ctrl.insert(value, event)\"></notebook-notes>`,\r\n    controller: NotebookController\r\n};\r\n\r\nexport default Notebook;\r\n"]}