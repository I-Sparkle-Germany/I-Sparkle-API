{"version":3,"sources":["notebook.es6"],"names":["NotebookController","$filter","$mdDialog","$scope","$rootScope","ConfigService","NotebookService","ProjectService","StudentAssetService","StudentDataService","$translate","themePath","getThemePath","itemId","item","config","enabled","workgroupId","getWorkgroupId","reportVisible","itemTypes","report","notesVisible","insertMode","insertContent","requester","$on","event","args","notebook","angular","copy","open","setInsertMode","closeNotes","ev","studentWorkIds","noteText","isEditTextEnabled","isFileUploadEnabled","showEditNoteConfirmDialog","file","text","doDelete","showDeleteReviveNoteConfirmDialog","showCopyNoteConfirmDialog","showShareNoteConfirmationDialog","showUnshareNoteConfirmDialog","logOutListener","$broadcast","getNotebookByWorkgroup","publicNotebookItems","publicNotebookItemspublicNotebookItems","reportId","notes","studentAsset","alert","isEditMode","notebookItemTemplate","show","parent","element","document","body","targetEvent","templateUrl","controller","controllerAs","bindToController","locals","confirm","title","ariaLabel","ok","cancel","then","noteCopy","getLatestNotebookItemByLocalNotebookItemId","id","content","clientSaveTime","Date","parse","clientDeleteTime","saveNotebookItem","nodeId","localNotebookItemId","type","groups","copyNotebookItem","addNotebookItemToGroup","removeNotebookItemFromGroup","$event","notebookItem","selectedNotebookItem","componentController","attachNotebookItemToComponent","stopPropagation","notebookItems","items","notebookItemKey","last","push","value","retrievePublicNotebookItems","addNewItem","notebookItemId","getNotebookItemByNotebookItemId","getPublicNotebookItemById","$inject","Notebook","bindings","template"],"mappings":"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","file":"notebook.js","sourcesContent":["\"use strict\";\n\nimport EditNotebookItemController from '../editNotebookItemController';\n\nclass NotebookController {\n  constructor($filter,\n              $mdDialog,\n              $scope,\n              $rootScope,\n              ConfigService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService) {\n    this.$filter = $filter;\n    this.$mdDialog = $mdDialog;\n    this.$scope = $scope;\n    this.$rootScope = $rootScope;\n    this.ConfigService = ConfigService;\n    this.NotebookService = NotebookService;\n    this.ProjectService = ProjectService;\n    this.StudentAssetService = StudentAssetService;\n    this.StudentDataService = StudentDataService;\n    this.$translate = this.$filter('translate');\n    this.themePath = this.ProjectService.getThemePath();\n    this.itemId = null;\n    this.item = null;\n    this.config = this.NotebookService.config;\n\n    if (!this.config.enabled) {\n      return;\n    }\n\n    this.workgroupId = this.ConfigService.getWorkgroupId();\n    this.reportVisible = this.config.itemTypes.report.enabled;\n    this.notesVisible = false;\n    this.insertMode = false;\n    this.insertContent = null;\n    this.requester = null;\n\n    this.$scope.$on('notebookUpdated', (event, args) => {\n      this.notebook = angular.copy(args.notebook);\n    });\n\n    this.$scope.$on('openNotebook', (event, args) => {\n      this.open('note', event);\n      this.setInsertMode(args.insertMode, args.requester);\n    });\n\n    this.$scope.$on('closeNotebook', (event, args) => {\n      this.closeNotes(event);\n    });\n\n    this.$scope.$on('editNote', (event, args) => {\n      const itemId = args.itemId;\n      const ev = args.ev;\n      const studentWorkIds = null;\n      const noteText = null;\n      const isEditTextEnabled = true;\n      const isFileUploadEnabled = true;\n      this.showEditNoteConfirmDialog(itemId, true, null, noteText, isEditTextEnabled, isFileUploadEnabled, studentWorkIds, ev);\n    });\n\n    this.$scope.$on('addNewNote', (event, args) => {\n      const ev = args.ev;\n      const file = args.file;\n      const studentWorkIds = args.studentWorkIds;\n      const noteText = args.text;\n      const isEditTextEnabled = args.isEditTextEnabled;\n      const isFileUploadEnabled = args.isFileUploadEnabled;\n      this.showEditNoteConfirmDialog(null, true, file, noteText, isEditTextEnabled, isFileUploadEnabled, studentWorkIds, ev);\n    });\n\n    this.$scope.$on('deleteNote', (event, args) => {\n      const itemId = args.itemId;\n      const ev = args.ev;\n      const doDelete = true;\n      this.showDeleteReviveNoteConfirmDialog(itemId, ev, doDelete);\n    });\n\n    this.$scope.$on('reviveNote', (event, args) => {\n      const itemId = args.itemId;\n      const ev = args.ev;\n      const doDelete = false;\n      this.showDeleteReviveNoteConfirmDialog(itemId, ev, doDelete);\n    });\n\n    this.$scope.$on('copyNote', (event, args) => {\n      const itemId = args.itemId;\n      const ev = args.ev;\n      this.showCopyNoteConfirmDialog(itemId, ev);\n    });\n\n    this.$scope.$on('shareNote', (event, args) => {\n      const itemId = args.itemId;\n      const ev = args.ev;\n      this.showShareNoteConfirmationDialog(itemId, ev);\n    });\n\n    this.$scope.$on('unshareNote', (event, args) => {\n      const itemId = args.itemId;\n      const ev = args.ev;\n      this.showUnshareNoteConfirmDialog(itemId, ev);\n    });\n\n    this.logOutListener = $scope.$on('logOut', (event, args) => {\n      this.logOutListener();\n      this.$rootScope.$broadcast('componentDoneUnloading');\n    });\n\n    this.notebook = this.NotebookService.getNotebookByWorkgroup(this.workgroupId);\n    this.publicNotebookItems = this.NotebookService.publicNotebookItemspublicNotebookItems;\n\n    // assume only 1 report for now\n    this.reportId = this.config.itemTypes.report.notes[0].reportId;\n  }\n\n  deleteStudentAsset(studentAsset) {\n    alert(this.$translate('deleteStudentAssetFromNotebookNotImplementedYet'));\n  }\n\n  showEditNoteConfirmDialog(itemId, isEditMode, file, text, isEditTextEnabled, isFileUploadEnabled, studentWorkIds, ev) {\n    const notebookItemTemplate = this.themePath + '/notebook/editNotebookItem.html';\n    this.$mdDialog.show({\n      parent: angular.element(document.body),\n      targetEvent: ev,\n      templateUrl: notebookItemTemplate,\n      controller: EditNotebookItemController,\n      controllerAs: 'editNotebookItemController',\n      bindToController: true,\n      locals: {\n        itemId: itemId,\n        isEditMode: isEditMode,\n        file: file,\n        text: text,\n        studentWorkIds: studentWorkIds,\n        isEditTextEnabled: isEditTextEnabled,\n        isFileUploadEnabled: isFileUploadEnabled\n      }\n    });\n  }\n\n  showDeleteReviveNoteConfirmDialog(itemId, ev, doDelete = true) {\n    let confirm = null;\n    if (doDelete) {\n      confirm = this.$mdDialog.confirm()\n          .title(this.$translate('deleteNoteConfirmMessage'))\n          .ariaLabel('delete note confirmation')\n          .targetEvent(ev)\n          .ok(this.$translate('delete'))\n          .cancel(this.$translate('cancel'));\n    } else {\n      confirm = this.$mdDialog.confirm()\n          .title(this.$translate('reviveNoteConfirmMessage'))\n          .ariaLabel('revive note confirmation')\n          .targetEvent(ev)\n          .ok(this.$translate('revive'))\n          .cancel(this.$translate('cancel'));\n    }\n\n    this.$mdDialog.show(confirm).then(() => {\n      const noteCopy = angular.copy(this.NotebookService.getLatestNotebookItemByLocalNotebookItemId(itemId));\n      noteCopy.id = null; // set to null so we're creating a new notebook item. An edit to a notebook item results in a new entry in the db.\n      noteCopy.content.clientSaveTime = Date.parse(new Date());\n      let clientDeleteTime = null;  // if delete timestamp is null, then we are in effect un-deleting this note item\n      if (doDelete) {\n        clientDeleteTime = Date.parse(new Date());\n      }\n      this.NotebookService.saveNotebookItem(noteCopy.id, noteCopy.nodeId, noteCopy.localNotebookItemId,\n          noteCopy.type, noteCopy.title, noteCopy.content, noteCopy.groups, noteCopy.content.clientSaveTime, clientDeleteTime);\n    }, () => {\n      // they chose not to delete. Do nothing, the dialog will close.\n    });\n  }\n\n  showCopyNoteConfirmDialog(itemId, ev) {\n    const confirm = this.$mdDialog.confirm()\n        .title('copyNoteConfirmMessage')\n        .ariaLabel('copy note confirmation')\n        .ok(this.$translate('copy'))\n        .cancel(this.$translate('cancel'));\n    this.$mdDialog.show(confirm).then(() => {\n      this.NotebookService.copyNotebookItem(itemId);\n    });\n  }\n\n  showShareNoteConfirmationDialog(itemId, ev) {\n    const confirm = this.$mdDialog.confirm()\n        .title('shareNoteConfirmMessage')\n        .ariaLabel('share note confirmation')\n        .ok(this.$translate('share'))\n        .cancel(this.$translate('cancel'));\n    this.$mdDialog.show(confirm).then(() => {\n      this.NotebookService.addNotebookItemToGroup(itemId, 'public');\n    });\n  }\n\n  showUnshareNoteConfirmDialog(itemId, ev) {\n    const confirm = this.$mdDialog.confirm()\n        .title('unshareNoteConfirmMessage')\n        .ariaLabel('unshare note confirmation')\n        .ok(this.$translate('unshare'))\n        .cancel(this.$translate('cancel'));\n    this.$mdDialog.show(confirm).then(() => {\n      this.NotebookService.removeNotebookItemFromGroup(itemId, 'public');\n    });\n  }\n\n  notebookItemSelected($event, notebookItem) {\n    this.selectedNotebookItem = notebookItem;\n  }\n\n  attachNotebookItemToComponent($event, notebookItem) {\n    this.componentController.attachNotebookItemToComponent(notebookItem);\n    this.selectedNotebookItem = null;  // reset selected notebook item\n    // TODO: add some kind of unobtrusive confirmation to let student know that the notebook item has been added to current component\n    $event.stopPropagation();  // prevents parent notebook list item from getting the onclick event so this item won't be re-selected.\n  }\n\n  getNotes() {\n    let notes = [];\n    let notebookItems = this.notebook.items;\n    for (let notebookItemKey in notebookItems) {\n      let notebookItem = notebookItems[notebookItemKey];\n      if (notebookItem.last().type === 'note') {\n        notes.push(notebookItem);\n      }\n    }\n    return notes;\n  }\n\n  open(value, event) {\n    if (value === 'report') {\n      this.reportVisible = !this.reportVisible;\n    } else if (value === 'note') {\n      if (this.notesVisible) {\n        this.closeNotes(event);\n      } else {\n        this.NotebookService.retrievePublicNotebookItems(\"public\").then(() => {\n          this.notesVisible = true;\n        });\n      }\n    } else if (value === 'new') {\n      this.NotebookService.addNewItem(event);\n    }\n  }\n\n  closeNotes($event) {\n    this.notesVisible = false;\n    this.insertMode = false;\n  }\n\n  setInsertMode(value, requester) {\n    this.insertMode = value;\n    if (value) {\n      this.NotebookService.retrievePublicNotebookItems(\"public\").then(() => {\n        this.notesVisible = true;\n      });\n    }\n    this.requester = requester;\n  }\n\n  insert(notebookItemId, $event) {\n    let notebookItem = this.NotebookService.getNotebookItemByNotebookItemId(notebookItemId, this.workgroupId);\n    if (notebookItem == null) {\n      notebookItem = this.NotebookService.getPublicNotebookItemById(notebookItemId);\n    }\n    if (this.requester == 'report') {\n      this.insertContent = angular.copy(notebookItem);\n    } else {\n      this.$rootScope.$broadcast('notebookItemChosen', { requester: this.requester, notebookItem: notebookItem });\n    }\n  }\n}\n\nNotebookController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$scope',\n  '$rootScope',\n  'ConfigService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService'\n];\n\nconst Notebook = {\n  bindings: {\n  },\n  template:\n    `<div ng-if=\"$ctrl.config.enabled\" ng-class=\"{'notes-visible': $ctrl.notesVisible}\">\n      <div class=\"notebook-overlay\"></div>\n      <notebook-launcher config=\"$ctrl.config\"\n                 note-count=\"$ctrl.notebook.items.length\"\n                 notes-visible=\"$ctrl.notesVisible\"\n                 on-open=\"$ctrl.open(value, event)\"></notebook-launcher>\n      <notebook-report ng-if=\"$ctrl.config.itemTypes.report.enabled\"\n               insert-content=\"$ctrl.insertContent\"\n               insert-mode=\"$ctrl.insertMode\"\n               config=\"$ctrl.config\"\n               reportId=\"$ctrl.reportId\"\n               visible=\"$ctrl.reportVisible\"\n               workgroup-id=\"$ctrl.workgroupId\"\n               on-collapse=\"$ctrl.insertMode=false\"\n               on-set-insert-mode=\"$ctrl.setInsertMode(value, requester)\"></notebook-report>\n    </div>\n    <notebook-notes ng-if=\"$ctrl.config.enabled\"\n            notebook=\"$ctrl.notebook\"\n            notes-visible=\"$ctrl.notesVisible\"\n            config=\"$ctrl.config\"\n            insert-mode=\"$ctrl.insertMode\"\n            workgroup-id=\"$ctrl.workgroupId\"\n            on-close=\"$ctrl.closeNotes()\"\n            on-insert=\"$ctrl.insert(value, event)\"\n            on-set-insert-mode=\"$ctrl.setInsertMode(value, requester)\"></notebook-notes>`,\n  controller: NotebookController\n};\n\nexport default Notebook;\n"]}