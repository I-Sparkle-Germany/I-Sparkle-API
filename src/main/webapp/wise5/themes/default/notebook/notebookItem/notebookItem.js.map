{"version":3,"sources":["notebookItem.es6"],"names":["NotebookItemController","$injector","$mdDialog","$rootScope","$scope","$filter","ConfigService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","$translate","item","note","type","label","config","itemTypes","group","color","$on","event","args","notebook","items","itemId","last","groups","includes","nodeId","getNodePositionAndTitleByNodeId","getNodePositionById","getThemePath","ev","stopPropagation","confirm","title","ariaLabel","targetEvent","ok","cancel","show","then","deleteNote","reviveNote","onSelect","$ev","isSpaceExists","isMyNotebookItem","serverDeleteTime","isChooseMode","isItemInGroup","workgroupId","getWorkgroupId","$inject","NotebookItem","bindings","componentController","template","controller"],"mappings":"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","file":"notebookItem.js","sourcesContent":["'use strict';\n\nclass NotebookItemController {\n  constructor($injector,\n              $mdDialog,\n              $rootScope,\n              $scope,\n              $filter,\n              ConfigService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    this.$injector = $injector;\n    this.$mdDialog = $mdDialog;\n    this.$rootScope = $rootScope;\n    this.$scope = $scope;\n    this.$filter = $filter;\n    this.ConfigService = ConfigService;\n    this.NotebookService = NotebookService;\n    this.ProjectService = ProjectService;\n    this.StudentAssetService = StudentAssetService;\n    this.StudentDataService = StudentDataService;\n    this.UtilService = UtilService;\n    this.$translate = this.$filter('translate');\n    this.item = this.note;\n    this.type = this.item ? this.item.type : null;\n    this.label = this.config.itemTypes[this.type].label;\n    if (this.group === 'public') {\n      this.color = 'orange';\n    } else {\n      this.color = this.label.color;\n    }\n\n    this.$rootScope.$on('notebookUpdated', (event, args) => {\n      const notebook = args.notebook;\n      if (notebook.items[this.itemId]) {\n        this.item = notebook.items[this.itemId].last();\n      }\n    });\n  }\n\n  isItemInGroup(group) {\n    return this.item.groups != null && this.item.groups.includes(group);\n  }\n\n  getItemNodeId() {\n    if (this.item == null) {\n      return null;\n    } else {\n      return this.item.nodeId;\n    }\n  }\n\n  getItemNodeLink() {\n    if (this.item == null) {\n      return '';\n    } else {\n      return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\n    }\n  }\n\n  getItemNodePosition() {\n    if (this.item == null) {\n      return '';\n    } else {\n      return this.ProjectService.getNodePositionById(this.item.nodeId);\n    }\n  }\n\n  getTemplateUrl() {\n    return this.ProjectService.getThemePath() + '/notebook/notebookItem.html';\n  }\n\n  doDelete(ev) {\n    ev.stopPropagation();\n    const confirm = this.$mdDialog.confirm()\n      .title(this.$translate('deleteNoteConfirmMessage'))\n      .ariaLabel('delete note confirmation')\n      .targetEvent(ev)\n      .ok(this.$translate('delete'))\n      .cancel(this.$translate('cancel'));\n    this.$mdDialog.show(confirm).then(() => {\n      this.NotebookService.deleteNote(this.item);\n    }, () => {\n      // they chose not to delete. Do nothing, the dialog will close.\n    });\n  }\n\n  doRevive(ev) {\n    ev.stopPropagation();\n    const confirm = this.$mdDialog.confirm()\n      .title(this.$translate('reviveNoteConfirmMessage'))\n      .ariaLabel('revive note confirmation')\n      .targetEvent(ev)\n      .ok(this.$translate('revive'))\n      .cancel(this.$translate('cancel'));\n    this.$mdDialog.show(confirm).then(() => {\n      this.NotebookService.reviveNote(this.item);\n    }, () => {\n      // they chose not to delete. Do nothing, the dialog will close.\n    });\n  }\n\n  doSelect(ev) {\n    if (this.onSelect) {\n      this.onSelect({$ev: ev, note: this.item});\n    }\n  }\n\n  canShareNotebookItem() {\n    return this.ProjectService.isSpaceExists('public') &&\n        this.isMyNotebookItem() &&\n        this.item.serverDeleteTime == null &&\n        !this.isChooseMode &&\n        !this.isItemInGroup('public');\n  }\n\n  canUnshareNotebookItem() {\n    return this.ProjectService.isSpaceExists('public') &&\n        this.isMyNotebookItem() &&\n        this.item.serverDeleteTime == null &&\n        !this.isChooseMode &&\n        this.isItemInGroup('public');\n  }\n\n  canDeleteNotebookItem() {\n    return this.isMyNotebookItem() &&\n        this.item.serverDeleteTime == null &&\n        !this.isChooseMode;\n  }\n\n  canReviveNotebookItem() {\n    return this.item.serverDeleteTime != null && !this.isChooseMode;\n  }\n\n  isMyNotebookItem() {\n    return this.item.workgroupId === this.ConfigService.getWorkgroupId();\n  }\n}\n\nNotebookItemController.$inject = [\n  '$injector',\n  '$mdDialog',\n  '$rootScope',\n  '$scope',\n  '$filter',\n  'ConfigService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nconst NotebookItem = {\n  bindings: {\n    itemId: '<',\n    group: '@',\n    note: '<',\n    isChooseMode: '<',\n    config: '<',\n    componentController: '<',\n    workgroupId: '<',\n    onSelect: '&'\n  },\n  template:\n    `<md-card class=\"notebook-item\"\n                  ng-mouseenter=\"focus=true;\"\n                  ng-mouseleave=\"focus=false;\"\n                  ng-class=\"{'md-whiteframe-5dp': focus}\"\n                  ng-click=\"$ctrl.doSelect($event)\">\n            <md-card-content aria-label=\"View\"\n                             class=\"notebook-item__content notebook-item__edit\"\n                             ng-class=\"{'notebook-item__content--text-only': !$ctrl.item.content.attachments.length}\"\n                             md-ink-ripple\n                             flex\n                             layout=\"column\"\n                             layout-align=\"center center\">\n                <div ng-repeat=\"attachment in $ctrl.item.content.attachments\"\n                     ng-if=\"$first\"\n                     class=\"notebook-item__content__attachment\"\n                     style=\"background: url('{{attachment.iconURL}}')\"></div>\n                <div ng-if=\"$ctrl.item.content.text\"\n                     class=\"notebook-item__content__text notebook-item__edit md-body-1\"\n                     style=\"color: {{$ctrl.label.color}}\">\n                    {{$ctrl.item.content.text}}\n                </div>\n            </md-card-content>\n            <md-card-actions class=\"notebook-item__actions\"\n                             layout=\"row\"\n                             layout-align=\"start center\"\n                             style=\"background-color: {{$ctrl.color}}\">\n                <span class=\"notebook-item__content__location\"><md-icon> place </md-icon><span class=\"md-body-1\">{{$ctrl.getItemNodePosition()}}</span></span>\n                <span flex></span>\n                <md-button class=\"md-icon-button\"\n                           ng-if=\"$ctrl.canDeleteNotebookItem()\"\n                           aria-label=\"Delete notebook item\"\n                           ng-click=\"$ctrl.doDelete($event)\">\n                    <md-icon> delete </md-icon>\n                    <md-tooltip md-direction=\"top\">{{ 'DELETE' | translate }}</md-tooltip>\n                </md-button>\n                <md-button class=\"md-icon-button\"\n                           ng-if=\"$ctrl.canReviveNotebookItem()\"\n                           aria-label=\"Revive notebook item\"\n                           ng-click=\"$ctrl.doRevive($event)\">\n                    <md-icon> undo </md-icon>\n                    <md-tooltip md-direction=\"top\">{{ 'reviveNote' | translate }}</md-tooltip>\n                </md-button>\n            </md-card-actions>\n        </md-card>`,\n  controller: NotebookItemController\n};\n\nexport default NotebookItem;\n"]}