{"version":3,"sources":["notebookItem.es6"],"names":["NotebookItemController","$injector","$rootScope","$scope","$filter","ConfigService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","$translate","group","item","getPublicNotebookItem","itemId","workgroupId","getLatestNotebookItemByLocalNotebookItemId","type","label","config","itemTypes","color","$on","event","args","notebook","items","last","groups","includes","nodeId","getNodePositionAndTitleByNodeId","getNodePositionById","getThemePath","ev","onDelete","stopPropagation","$ev","$itemId","localNotebookItemId","onRevive","onSelect","$broadcast","id","isMyNotebookItem","isChooseMode","serverDeleteTime","isItemInGroup","getWorkgroupId","$inject","NotebookItem","bindings","componentController","template","controller"],"mappings":"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","file":"notebookItem.js","sourcesContent":["\"use strict\";\n\nclass NotebookItemController {\n    constructor($injector,\n                $rootScope,\n                $scope,\n                $filter,\n                ConfigService,\n                NotebookService,\n                ProjectService,\n                StudentAssetService,\n                StudentDataService,\n                UtilService) {\n        this.$injector = $injector;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$filter = $filter;\n        this.ConfigService = ConfigService;\n        this.NotebookService = NotebookService;\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n        this.UtilService = UtilService;\n\n        this.$translate = this.$filter('translate');\n        //this.mode = this.ConfigService.getMode();\n\n        if (this.group != null) {\n          this.item = this.NotebookService.getPublicNotebookItem(this.group, this.itemId, this.workgroupId);\n        } else {\n          this.item = this.NotebookService.getLatestNotebookItemByLocalNotebookItemId(this.itemId, this.workgroupId);\n          //this.item.id = null; // set to null so we're creating a new notebook item. An edit to a notebook item results in a new entry in the db.\n        }\n\n        // set the type in the controller\n        this.type = this.item ? this.item.type : null;\n\n        this.label = this.config.itemTypes[this.type].label;\n        if (this.group == 'public') {\n          this.color = 'orange';\n        } else {\n          this.color = this.label.color;\n        }\n\n        this.$rootScope.$on('notebookUpdated', (event, args) => {\n            let notebook = args.notebook;\n            if (notebook.items[this.itemId]) {\n                this.item = notebook.items[this.itemId].last();\n            }\n        });\n    }\n\n    isItemInGroup(group) {\n      return this.item.groups != null && this.item.groups.includes(group);\n    }\n\n    getItemNodeId() {\n        if (this.item == null) {\n            return null;\n        } else {\n            return this.item.nodeId;\n        }\n    }\n\n    /**\n     * Returns this NotebookItem's position link\n     */\n    getItemNodeLink() {\n        if (this.item == null) {\n            return \"\";\n        } else {\n            return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\n        }\n    }\n\n    /**\n     * Returns this NotebookItem's position\n     */\n    getItemNodePosition() {\n        if (this.item == null) {\n            return \"\";\n        } else {\n            return this.ProjectService.getNodePositionById(this.item.nodeId);\n        }\n    }\n\n    getTemplateUrl() {\n        return this.ProjectService.getThemePath() + '/notebook/notebookItem.html';\n    }\n\n    doDelete(ev) {\n        if (this.onDelete) {\n            ev.stopPropagation();  // don't follow-through on the doSelect callback after this\n            this.onDelete({$ev: ev, $itemId: this.item.localNotebookItemId});\n        }\n    }\n\n    doRevive(ev) {\n        if (this.onRevive) {\n            ev.stopPropagation();  // don't follow-through on the doRevive callback after this\n            this.onRevive({$ev: ev, $itemId: this.item.localNotebookItemId});\n        }\n    }\n\n    doSelect(ev) {\n        if (this.onSelect) {\n            this.onSelect({$ev: ev, $itemId: this.item.localNotebookItemId});\n        }\n    }\n\n    doCopy(ev) {\n      ev.stopPropagation();\n      this.$rootScope.$broadcast('copyNote', {itemId: this.item.id, ev: ev});\n    }\n\n    doShare(ev) {\n      ev.stopPropagation();  // don't follow-through on the doShare callback after this\n      this.$rootScope.$broadcast('shareNote', {itemId: this.item.id, ev: ev});\n    }\n\n    doUnshare(ev) {\n      ev.stopPropagation();  // don't follow-through on the doUnshare callback after this\n      this.$rootScope.$broadcast('unshareNote', {itemId: this.item.id, ev: ev});\n    }\n\n    canCopyNotebookItem() {\n      return !this.isMyNotebookItem() &&\n          !this.isChooseMode;\n    }\n\n    canShareNotebookItem() {\n      return this.isMyNotebookItem() &&\n          this.item.serverDeleteTime == null &&\n          !this.isChooseMode &&\n          !this.isItemInGroup('public');\n    }\n\n    canUnshareNotebookItem() {\n      return this.isMyNotebookItem() &&\n          this.item.serverDeleteTime == null &&\n          !this.isChooseMode &&\n          this.isItemInGroup('public');\n    }\n\n    canDeleteNotebookItem() {\n      return this.isMyNotebookItem() &&\n          this.item.serverDeleteTime == null &&\n          !this.isChooseMode;\n    }\n\n    canReviveNotebookItem() {\n      return this.item.serverDeleteTime != null &&\n          !this.isChooseMode;\n    }\n\n    isMyNotebookItem() {\n      return this.item.workgroupId === this.ConfigService.getWorkgroupId();\n    }\n}\n\nNotebookItemController.$inject = [\n    \"$injector\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$filter\",\n    \"ConfigService\",\n    \"NotebookService\",\n    \"ProjectService\",\n    \"StudentAssetService\",\n    \"StudentDataService\",\n    \"UtilService\"\n];\n\nconst NotebookItem = {\n    bindings: {\n        itemId: '<',\n        group: '@',\n        isChooseMode: '<',\n        config: '<',\n        componentController: '<',\n        workgroupId: '<',\n        onDelete: '&',\n        onRevive: '&',\n        onSelect: '&'\n    },\n    template:\n        `<md-card class=\"notebook-item\"\n                  ng-mouseenter=\"focus=true;\"\n                  ng-mouseleave=\"focus=false;\"\n                  ng-class=\"{'md-whiteframe-5dp': focus}\"\n                  ng-click=\"$ctrl.doSelect($event)\">\n            <md-card-content aria-label=\"View\"\n                             class=\"notebook-item__content notebook-item__edit\"\n                             ng-class=\"{'notebook-item__content--text-only': !$ctrl.item.content.attachments.length}\"\n                             md-ink-ripple\n                             flex\n                             layout=\"column\"\n                             layout-align=\"center center\">\n                <div ng-repeat=\"attachment in $ctrl.item.content.attachments\"\n                     ng-if=\"$first\"\n                     class=\"notebook-item__content__attachment\"\n                     style=\"background: url('{{attachment.iconURL}}')\"></div>\n                <div ng-if=\"$ctrl.item.content.text\"\n                     class=\"notebook-item__content__text notebook-item__edit md-body-1\"\n                     style=\"color: {{$ctrl.label.color}}\">\n                    {{$ctrl.item.content.text}}\n                </div>\n            </md-card-content>\n            <md-card-actions class=\"notebook-item__actions\"\n                             layout=\"row\"\n                             layout-align=\"start center\"\n                             style=\"background-color: {{$ctrl.color}}\">\n                <span class=\"notebook-item__content__location\"><md-icon> place </md-icon><span class=\"md-body-1\">{{$ctrl.getItemNodePosition()}}</span></span>\n                <span flex></span>\n                <md-button class=\"md-icon-button\"\n                           ng-if=\"$ctrl.canShareNotebookItem()\"\n                           aria-label=\"Share notebook item\"\n                           ng-click=\"$ctrl.doShare($event)\">\n                    <md-icon> cloud_upload </md-icon>\n                    <md-tooltip md-direction=\"top\">{{ 'SHARE' | translate }}</md-tooltip>\n                </md-button>\n                <md-button class=\"md-icon-button\"\n                           ng-if=\"$ctrl.canUnshareNotebookItem()\"\n                           aria-label=\"Unshare notebook item\"\n                           ng-click=\"$ctrl.doUnshare($event)\">\n                    <md-icon> cloud_off </md-icon>\n                    <md-tooltip md-direction=\"top\">{{ 'UNSHARE' | translate }}</md-tooltip>\n                </md-button>\n                <md-button class=\"md-icon-button\"\n                           ng-if=\"$ctrl.canCopyNotebookItem()\"\n                           aria-label=\"Copy notebook item\"\n                           ng-click=\"$ctrl.doCopy($event)\">\n                    <md-icon> cloud_download </md-icon>\n                    <md-tooltip md-direction=\"top\">{{ 'COPY' | translate }}</md-tooltip>\n                </md-button>\n                <md-button class=\"md-icon-button\"\n                           ng-if=\"$ctrl.canDeleteNotebookItem()\"\n                           aria-label=\"Delete notebook item\"\n                           ng-click=\"$ctrl.doDelete($event)\">\n                    <md-icon> delete </md-icon>\n                    <md-tooltip md-direction=\"top\">{{ 'DELETE' | translate }}</md-tooltip>\n                </md-button>\n                <md-button class=\"md-icon-button\"\n                           ng-if=\"$ctrl.canReviveNotebookItem()\"\n                           aria-label=\"Revive notebook item\"\n                           ng-click=\"$ctrl.doRevive($event)\">\n                    <md-icon> undo </md-icon>\n                    <md-tooltip md-direction=\"top\">{{ 'reviveNote' | translate }}</md-tooltip>\n                </md-button>\n            </md-card-actions>\n        </md-card>`,\n    controller: NotebookItemController\n};\n\nexport default NotebookItem;\n"]}