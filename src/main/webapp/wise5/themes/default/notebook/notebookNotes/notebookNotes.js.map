{"version":3,"sources":["notebookNotes.es6"],"names":["NotebookNotesController","$filter","$rootScope","$scope","NotebookService","$translate","groups","selectedTabIndex","$watch","current","old","console","log","publicNotebookItems","personalGroup","title","name","isEditAllowed","items","Object","entries","notebook","personalItemKey","personalItemValue","last","type","push","$onInit","color","config","itemTypes","note","label","$onChanges","changes","angular","copy","currentValue","hasNotes","keys","length","$on","event","args","publicGroupFound","group","publicGroup","insertMode","link","$ev","$itemId","doDelete","$broadcast","itemId","ev","onInsert","value","editItem","alert","$event","onClose","onSetInsertMode","$inject","NotebookNotes","bindings","notesVisible","workgroupId","template","controller"],"mappings":"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","file":"notebookNotes.js","sourcesContent":["\"use strict\";\n\nclass NotebookNotesController {\n    constructor($filter,\n                $rootScope,\n                $scope,\n                NotebookService) {\n\n        this.$translate = $filter('translate');\n        this.$rootScope = $rootScope;\n        this.NotebookService = NotebookService;\n        this.groups = [];\n        this.selectedTabIndex = 0;\n        this.$scope = $scope;\n\n        this.$scope.$watch(() => {\n            return this.selectedTabIndex;\n        }, function(current, old) {\n            console.log('old:' + old);\n            console.log('current:' + current);\n        });\n        this.publicNotebookItems = this.NotebookService.publicNotebookItems;\n\n        const personalGroup = {\n            title: \"Personal\",\n            name: \"private\",\n            isEditAllowed: true,\n            items: []\n        }\n\n        for (const [personalItemKey, personalItemValue] of Object.entries(this.notebook.items)) {\n            if (personalItemValue.last().type === 'note') {\n                personalGroup.items.push(personalItemValue.last());\n            }\n        };\n\n        this.groups.push(personalGroup);\n\n        this.$onInit = () => {\n            this.color = this.config.itemTypes.note.label.color;\n        }\n\n        this.$onChanges = (changes) => {\n            if (changes.notebook) {\n                this.notebook = angular.copy(changes.notebook.currentValue);\n                this.hasNotes = Object.keys(this.notebook.items).length ? true : false;\n            }\n        }\n\n        this.$rootScope.$on('publicNotebookItemsRetrieved', (event, args) => {\n            let publicGroupFound = false;\n            for (let group of this.groups) {\n                if (group.name == \"public\") {\n                    group.items = this.publicNotebookItems[\"public\"];\n                    publicGroupFound = true;\n                }\n            }\n            if (!publicGroupFound) {\n                const publicGroup = {\n                    title: \"Public\",\n                    name: \"public\",\n                    isEditAllowed: false,\n                    items: this.publicNotebookItems[\"public\"]\n                };\n                this.groups.push(publicGroup);\n            }\n            this.selectedTabIndex = 0;\n        });\n\n    }\n\n    getTitle() {\n        let title = '';\n        if (this.insertMode) {\n            title = this.$translate('selectItemToInsert');\n        } else {\n            title = this.config.itemTypes.note.label.link;\n        }\n        return title;\n    }\n\n    deleteItem($ev, $itemId, doDelete = true) {\n        this.$rootScope.$broadcast('deleteNote', {itemId: $itemId, ev: $ev});\n    }\n\n    reviveItem(ev, itemId) {\n        this.$rootScope.$broadcast('reviveNote', {itemId: $itemId, ev: $ev});\n    }\n\n    editItem($ev, $itemId) {\n        //this.NotebookService.editItem(ev, itemId);\n        this.$rootScope.$broadcast('editNote', {itemId: $itemId, ev: $ev});\n    }\n\n    select($ev, $itemId) {\n        if (this.insertMode) {\n            this.onInsert({value: $itemId, event: $ev});\n        } else {\n            this.editItem($ev, $itemId);\n        }\n    }\n\n    edit(itemId) {\n        alert(\"Edit the item: \" + itemId);\n    }\n\n    close($event) {\n        this.onClose($event);\n    }\n\n    cancelInsertMode($event) {\n        this.onSetInsertMode({value: false});\n    }\n}\n\nNotebookNotesController.$inject = [\n    '$filter',\n    '$rootScope',\n    '$scope',\n    'NotebookService'\n];\n\nconst NotebookNotes = {\n    bindings: {\n        config: '<',\n        insertMode: '<',\n        notebook: '<',\n        publicNotebookItems: '<',\n        notesVisible: '<',\n        workgroupId: '<',\n        onClose: '&',\n        onInsert: '&',\n        onSetInsertMode: '&'\n    },\n    template:\n        `<md-sidenav md-component-id=\"notes\"\n                     md-is-open=\"$ctrl.notesVisible\"\n                     md-whiteframe=\"4\"\n                     md-disable-backdrop\n                     layout=\"column\"\n                     class=\"md-sidenav-right notebook-sidebar\">\n            <md-toolbar>\n                <div class=\"md-toolbar-tools\"\n                     ng-class=\"{'insert-mode': $ctrl.insertMode}\"\n                     style=\"background-color: {{$ctrl.color}};\">\n                    {{$ctrl.getTitle()}}\n                    <!--<md-button ng-if=\"$ctrl.insertMode\"\n                               ng-click=\"$ctrl.cancelInsertMode($event)\"\n                               md-theme=\"default\"\n                               class=\"md-accent button--small\"\n                               aria-label=\"{{ 'Cancel' | translate }}\">\n                        {{ 'Cancel' | translate }}\n                    </md-button>-->\n                    <span flex></span>\n                    <md-button ng-click=\"$ctrl.close($event)\"\n                               class=\"md-icon-button\"\n                               aria-label=\"{{ 'Close' | translate }}\">\n                        <md-icon>close</md-icon>\n                    </md-button>\n                </div>\n            </md-toolbar>\n            <md-content>\n            <md-tabs md-selected=\"$ctrl.selectedTabIndex\" md-dynamic-height md-border-bottom md-autoselect md-swipe-content>\n              <md-tab ng-repeat=\"group in $ctrl.groups\"\n                      ng-disabled=\"group.disabled\"\n                      label=\"{{group.title}}\">\n                <div class=\"demo-tab tab{{$index%4}}\" style=\"padding: 25px; text-align: center;\">\n                    <div class=\"notebook-items\" ng-class=\"{'notebook-items--insert': $ctrl.insertMode}\" layout=\"row\" layout-wrap>\n                    <div class=\"md-padding\" ng-if=\"!$ctrl.hasNotes\" translate=\"noNotes\" translate-value-term=\"{{$ctrl.config.itemTypes.note.label.plural}}\"></div>\n                    <notebook-item ng-repeat=\"note in group.items\"\n                                 config=\"$ctrl.config\"\n                                 group=\"{{group.name}}\"\n                                 item-id=\"note.localNotebookItemId\"\n                                 is-edit-allowed=\"group.isEditAllowed\"\n                                 is-choose-mode=\"$ctrl.insertMode\"\n                                 workgroup-id=\"note.workgroupId\"\n                                 on-select=\"$ctrl.select($ev, $itemId)\"\n                                 on-delete=\"$ctrl.deleteItem($ev, $itemId)\"\n                                 style=\"display: flex;\"\n                                 flex=\"100\"\n                                 flex-gt-xs=\"50\">\n                    </notebook-item>\n                    <!--\n                    <notebook-item ng-repeat=\"(localNotebookItemId, notes) in $ctrl.notebook.items\"\n                                 ng-if=\"notes.last().type === 'note'\"\n                                 config=\"$ctrl.config\"\n                                 item-id=\"localNotebookItemId\"\n                                 is-edit-allowed=\"!$ctrl.insertMode\"\n                                 is-choose-mode=\"$ctrl.insertMode\"\n                                 workgroup-id=\"$ctrl.workgroupId\"\n                                 on-select=\"$ctrl.select($ev, $itemId)\"\n                                 on-delete=\"$ctrl.deleteItem($ev, $itemId)\"\n                                 style=\"display: flex;\"\n                                 flex=\"100\"\n                                 flex-gt-xs=\"50\">\n                    </notebook-item>\n                    <notebook-item ng-repeat=\"note in $ctrl.publicNotebookItems.public\"\n                                 config=\"$ctrl.config\"\n                                 group=\"public\"\n                                 item-id=\"note.localNotebookItemId\"\n                                 is-edit-allowed=\"false\"\n                                 is-choose-mode=\"$ctrl.insertMode\"\n                                 workgroup-id=\"note.workgroupId\"\n                                 on-select=\"$ctrl.select($ev, $itemId)\"\n                                 on-delete=\"$ctrl.deleteItem($ev, $itemId)\"\n                                 style=\"display: flex;\"\n                                 flex=\"100\"\n                                 flex-gt-xs=\"50\">\n                    </notebook-item>\n                    -->\n\n                    <!-- TODO: show deleted items somewhere\n                        <notebook-item ng-repeat=\"(localNotebookItemId, notes) in $ctrl.notebook.deletedItems\"\n                                       ng-if=\"notes.last().type === 'note'\"\n                                       config=\"$ctrl.config\"\n                                       item-id=\"localNotebookItemId\"\n                                       is-edit-allowed=\"!$ctrl.insertMode\"\n                                       is-choose-mode=\"$ctrl.insertMode\"\n                                       workgroup-id=\"$ctrl.workgroupId\"\n                                       on-select=\"$ctrl.select($ev, $itemId)\"\n                                       on-revive=\"$ctrl.deleteItem($ev, $itemId)\"\n                                       style=\"display: flex;\"\n                                       flex=\"100\"\n                                       flex-gt-xs=\"50\">\n                        </notebook-item>\n                    -->\n                </div> <!-- TODO: add questions when supported -->\n                </div>\n              </md-tab>\n            </md-tabs>\n\n            </md-content>\n        </md-sidenav>`,\n    controller: NotebookNotesController\n};\n\nexport default NotebookNotes;\n"]}