{"version":3,"sources":["notebookNotes.es6"],"names":["NotebookNotesController","$filter","$rootScope","$scope","NotebookService","$translate","groups","selectedTabIndex","publicNotebookItems","personalGroup","title","name","isEditAllowed","items","Object","entries","notebook","personalItemKey","personalItemValue","last","type","push","$onInit","color","config","itemTypes","note","label","$onChanges","changes","angular","copy","currentValue","hasNotes","keys","length","$on","event","args","publicGroupFound","group","publicGroup","insertMode","link","$ev","$itemId","doDelete","$broadcast","itemId","ev","onInsert","value","editItem","alert","$event","onClose","onSetInsertMode","$inject","NotebookNotes","bindings","notesVisible","workgroupId","template","controller"],"mappings":"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","file":"notebookNotes.js","sourcesContent":["\"use strict\";\n\nclass NotebookNotesController {\n  constructor($filter,\n              $rootScope,\n              $scope,\n              NotebookService) {\n    this.$translate = $filter('translate');\n    this.$rootScope = $rootScope;\n    this.NotebookService = NotebookService;\n    this.groups = [];\n    this.selectedTabIndex = 0;\n    this.$scope = $scope;\n    this.publicNotebookItems = this.NotebookService.publicNotebookItems;\n\n    const personalGroup = {\n      title: \"Personal\",\n      name: \"private\",\n      isEditAllowed: true,\n      items: []\n    }\n\n    for (const [personalItemKey, personalItemValue] of Object.entries(this.notebook.items)) {\n      if (personalItemValue.last().type === 'note') {\n        personalGroup.items.push(personalItemValue.last());\n      }\n    };\n\n    this.groups.push(personalGroup);\n\n    this.$onInit = () => {\n      this.color = this.config.itemTypes.note.label.color;\n    }\n\n    this.$onChanges = (changes) => {\n      if (changes.notebook) {\n        this.notebook = angular.copy(changes.notebook.currentValue);\n        this.hasNotes = Object.keys(this.notebook.items).length ? true : false;\n      }\n    }\n\n    this.$rootScope.$on('publicNotebookItemsRetrieved', (event, args) => {\n      let publicGroupFound = false;\n      for (let group of this.groups) {\n        if (group.name == \"public\") {\n          group.items = this.publicNotebookItems[\"public\"];\n          publicGroupFound = true;\n        }\n      }\n      if (!publicGroupFound) {\n        const publicGroup = {\n          title: \"Public\",\n          name: \"public\",\n          isEditAllowed: false,\n          items: this.publicNotebookItems[\"public\"]\n        };\n        this.groups.push(publicGroup);\n      }\n      this.selectedTabIndex = 0;\n    });\n  }\n\n  getTitle() {\n    let title = '';\n    if (this.insertMode) {\n      title = this.$translate('selectItemToInsert');\n    } else {\n      title = this.config.itemTypes.note.label.link;\n    }\n    return title;\n  }\n\n  deleteItem($ev, $itemId, doDelete = true) {\n    this.$rootScope.$broadcast('deleteNote', {itemId: $itemId, ev: $ev});\n  }\n\n  reviveItem(ev, itemId) {\n    this.$rootScope.$broadcast('reviveNote', {itemId: $itemId, ev: $ev});\n  }\n\n  editItem($ev, $itemId) {\n    this.$rootScope.$broadcast('editNote', {itemId: $itemId, ev: $ev});\n  }\n\n  select($ev, $itemId) {\n    if (this.insertMode) {\n      this.onInsert({value: $itemId, event: $ev});\n    } else {\n      this.editItem($ev, $itemId);\n    }\n  }\n\n  edit(itemId) {\n    alert(\"Edit the item: \" + itemId);\n  }\n\n  close($event) {\n    this.onClose($event);\n  }\n\n  cancelInsertMode($event) {\n    this.onSetInsertMode({value: false});\n  }\n}\n\nNotebookNotesController.$inject = [\n  '$filter',\n  '$rootScope',\n  '$scope',\n  'NotebookService'\n];\n\nconst NotebookNotes = {\n  bindings: {\n    config: '<',\n    insertMode: '<',\n    notebook: '<',\n    publicNotebookItems: '<',\n    notesVisible: '<',\n    workgroupId: '<',\n    onClose: '&',\n    onInsert: '&',\n    onSetInsertMode: '&'\n  },\n  template:\n    `<md-sidenav md-component-id=\"notes\"\n        md-is-open=\"$ctrl.notesVisible\"\n        md-whiteframe=\"4\"\n        md-disable-backdrop\n        layout=\"column\"\n        class=\"md-sidenav-right notebook-sidebar\">\n      <md-toolbar>\n          <div class=\"md-toolbar-tools\"\n               ng-class=\"{'insert-mode': $ctrl.insertMode}\"\n               style=\"background-color: {{$ctrl.color}};\">\n              {{$ctrl.getTitle()}}\n              <span flex></span>\n              <md-button ng-click=\"$ctrl.close($event)\"\n                  class=\"md-icon-button\"\n                  aria-label=\"{{ 'Close' | translate }}\">\n                <md-icon>close</md-icon>\n              </md-button>\n          </div>\n      </md-toolbar>\n      <md-content>\n      <md-tabs md-selected=\"$ctrl.selectedTabIndex\" md-dynamic-height md-border-bottom md-autoselect md-swipe-content>\n        <md-tab ng-repeat=\"group in $ctrl.groups\"\n            ng-disabled=\"group.disabled\"\n            label=\"{{group.title}}\">\n          <div class=\"demo-tab tab{{$index%4}}\" style=\"padding: 25px; text-align: center;\">\n              <div class=\"notebook-items\" ng-class=\"{'notebook-items--insert': $ctrl.insertMode}\" layout=\"row\" layout-wrap>\n                <div class=\"md-padding\" ng-if=\"!$ctrl.hasNotes\" translate=\"noNotes\" translate-value-term=\"{{$ctrl.config.itemTypes.note.label.plural}}\"></div>\n                <notebook-item ng-repeat=\"note in group.items\"\n                    config=\"$ctrl.config\"\n                    group=\"{{group.name}}\"\n                    item-id=\"note.localNotebookItemId\"\n                    is-edit-allowed=\"group.isEditAllowed\"\n                    is-choose-mode=\"$ctrl.insertMode\"\n                    workgroup-id=\"note.workgroupId\"\n                    on-select=\"$ctrl.select($ev, $itemId)\"\n                    on-delete=\"$ctrl.deleteItem($ev, $itemId)\"\n                    style=\"display: flex;\"\n                    flex=\"100\"\n                    flex-gt-xs=\"50\">\n                </notebook-item>\n            </div>\n          </div>\n        </md-tab>\n      </md-tabs>\n      </md-content>\n    </md-sidenav>`,\n  controller: NotebookNotesController\n};\n\nexport default NotebookNotes;\n"]}