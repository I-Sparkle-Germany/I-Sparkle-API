{"version":3,"sources":["notebookReport.es6"],"names":["NotebookReportController","$filter","$mdSidenav","$scope","$timeout","AnnotationService","ConfigService","NotebookService","ProjectService","$translate","full","collapsed","dirty","autoSaveIntervalMS","saveMessage","text","time","reportId","config","itemTypes","report","notes","reportItem","getLatestNotebookReportItemByReportId","workgroupId","serverSaveTime","clientSaveTime","convertToClientTimestamp","setSavedMessage","getTemplateReportItemByReportId","maxScore","getMaxScoreByReportId","mode","id","reportItemContent","injectAssetPaths","content","latestAnnotations","getLatestNotebookItemAnnotations","startAutoSaveInterval","summernoteOptions","toolbar","popover","image","disableDragAndDrop","toolbarContainer","callbacks","onBlur","$","summernote","isNoteEnabled","initializeInsertNoteButton","$onChanges","changes","insertContent","isFirstChange","currentValue","item","angular","copy","reportElement","$item","groups","length","attr","hasAttachments","attachments","css","attachment","$img","iconURL","addClass","append","$caption","$on","event","args","annotation","localNotebookItemId","hasNewAnnotation","collapse","$notebookReportContent","animate","scrollTop","prop","onCollapse","$event","onSetInsertMode","value","requester","removeAbsoluteAssetPaths","stopAutoSaveInterval","autoSaveIntervalId","setInterval","saveNotebookReportItem","clearInterval","Date","parse","saveNotebookItem","nodeId","type","title","then","result","setSaveText","message","note","enabled","splice","customButton","buttonText","label","singular","tooltip","buttonClass","action","addNotebookItemContent","$inject","NotebookReport","bindings","insertMode","visible","template","controller"],"mappings":"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","file":"notebookReport.js","sourcesContent":["'use strict';\n\nclass NotebookReportController {\n  constructor($filter,\n              $mdSidenav,\n              $scope,\n              $timeout,\n              AnnotationService,\n              ConfigService,\n              NotebookService,\n              ProjectService) {\n    this.$filter = $filter;\n    this.$mdSidenav = $mdSidenav;\n    this.$scope = $scope;\n    this.$timeout = $timeout;\n    this.AnnotationService = AnnotationService;\n    this.ConfigService = ConfigService;\n    this.NotebookService = NotebookService;\n    this.ProjectService = ProjectService;\n    this.$translate = this.$filter('translate');\n    this.full = false;\n    this.collapsed = true;\n    this.dirty = false;\n    this.autoSaveIntervalMS = 30000;\n    this.saveMessage = {\n      text: '',\n      time: ''\n    };\n\n    this.reportId = this.config.itemTypes.report.notes[0].reportId;\n    this.reportItem = this.NotebookService.getLatestNotebookReportItemByReportId(this.reportId, this.workgroupId);\n    if (this.reportItem) {\n      const serverSaveTime = this.reportItem.serverSaveTime;\n      const clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\n      this.setSavedMessage(clientSaveTime);\n    } else {\n      // student doesn't have work for this report yet, so get the default template.\n      this.reportItem = this.NotebookService.getTemplateReportItemByReportId(this.reportId);\n      if (this.reportItem == null) {\n        // don't allow student to work on the report\n        return;\n      }\n    }\n    this.maxScore = this.NotebookService.getMaxScoreByReportId(this.reportId);\n\n    if (this.mode !== 'classroomMonitor') {\n      this.reportItem.id = null; // set the id to null so it can be inserted as initial version, as opposed to updated. this is true for both new and just-loaded reports.\n    }\n    this.reportItemContent = this.ProjectService.injectAssetPaths(this.reportItem.content.content);\n    this.latestAnnotations = this.AnnotationService.getLatestNotebookItemAnnotations(this.workgroupId, this.reportId);\n    this.startAutoSaveInterval();\n\n    this.summernoteOptions = {\n      toolbar: [\n        ['edit', ['undo', 'redo']],\n        ['style', ['bold', 'italic', 'underline']],\n        ['para', ['ul', 'ol', 'paragraph']],\n        ['print', ['print']]\n      ],\n      popover: {\n        image: [\n          ['imagesize', ['imageSize100', 'imageSize50', 'imageSize25']],\n          ['remove', ['removeMedia']]\n        ]\n      },\n      disableDragAndDrop: true,\n      toolbarContainer: '#' + this.reportId + '-toolbar',\n      callbacks: {\n        onBlur: function () {\n          $(this).summernote('saveRange');\n        }\n      }\n    };\n\n    if (this.isNoteEnabled()) {\n      this.initializeInsertNoteButton();\n    }\n\n    this.$onChanges = (changes) => {\n      if (changes.insertContent && !changes.insertContent.isFirstChange() && changes.insertContent.currentValue) {\n        const item = angular.copy(changes.insertContent.currentValue);\n        const reportElement = $('#' + this.reportId);\n        reportElement.summernote('focus');\n        reportElement.summernote('restoreRange');\n        const $item = $(`<p notebook-item-id=\"${item.id}\" workgroup-id=\"${item.workgroupId}\">`);\n        if (item.groups != null && item.groups.length > 0) {\n          $item.attr('group', item.groups);\n        }\n        const hasAttachments = item.content.attachments && item.content.attachments.length > 0;\n        if (item.content.attachments) {\n          if (hasAttachments) {\n            $item.css('text-align', 'center');\n          }\n          for (let attachment of item.content.attachments) {\n            const $img = $(`<img src=\"${attachment.iconURL}\" alt=\"notebook image\" style=\"width: 75%; max-width: 100%; height: auto; border: 1px solid #aaaaaa; padding: 8px; margin-bottom: 4px;\" />`);\n            $img.addClass('notebook-item--report__note-img');\n            $item.append($img);\n          }\n        }\n        if (item.content.text) {\n          if (hasAttachments) {\n            // treat text content as a caption: center it and make it bold\n            const $caption = $(`<div><b>${item.content.text}</b></div>`).css({'text-align': 'center'});\n            $item.append($caption);\n            reportElement.summernote('insertNode', $item[0]);\n          } else {\n            reportElement.summernote('insertText', item.content.text);\n          }\n        } else {\n          reportElement.summernote('insertNode', $item[0]);\n        }\n      }\n    };\n\n    /**\n     * Captures the annotation received event, checks whether the given\n     * annotation id matches this report id, updates UI accordingly\n     */\n    this.$scope.$on('notebookItemAnnotationReceived', (event, args) => {\n      const annotation = args.annotation;\n      if (annotation.localNotebookItemId === this.reportId) {\n        this.hasNewAnnotation = true;\n        this.latestAnnotations =\n            this.AnnotationService.getLatestNotebookItemAnnotations(this.workgroupId, this.reportId);\n      }\n    });\n\n    /**\n     * Captures the show report annotations event, opens report (if collapsed)\n     * and scrolls to the report annotations display\n     */\n    this.$scope.$on('showReportAnnotations', (args) => {\n      if (this.collapsed) {\n        this.collapse();\n      }\n\n      // scroll to report annotations (bottom)\n      const $notebookReportContent = $('.notebook-report__content');\n      $timeout(() => {\n        $notebookReportContent.animate({\n          scrollTop: $notebookReportContent.prop('scrollHeight')\n        }, 500);\n      }, 500);\n    });\n  }\n\n  collapse() {\n    this.collapsed = !this.collapsed;\n    if (this.collapsed) {\n      this.onCollapse();\n    }\n  }\n\n  fullscreen() {\n    if (this.collapsed) {\n      this.full = true;\n      this.collapsed = false;\n    } else {\n      this.full = !this.full;\n    }\n  }\n\n  addNotebookItemContent($event) {\n    this.onSetInsertMode({value: true, requester: 'report'});\n  }\n\n  changed(value) {\n    this.dirty = true;\n    this.reportItem.content.content = this.ConfigService.removeAbsoluteAssetPaths(value);\n  }\n\n  startAutoSaveInterval() {\n    this.stopAutoSaveInterval();\n    this.autoSaveIntervalId = setInterval(() => {\n      if (this.dirty) {\n        this.saveNotebookReportItem();\n      }\n    }, this.autoSaveIntervalMS);\n  }\n\n  stopAutoSaveInterval() {\n    clearInterval(this.autoSaveIntervalId);\n  }\n\n  saveNotebookReportItem() {\n    this.reportItem.content.clientSaveTime = Date.parse(new Date());  // set save timestamp\n    this.NotebookService.saveNotebookItem(this.reportItem.id, this.reportItem.nodeId, this.reportItem.localNotebookItemId,\n      this.reportItem.type, this.reportItem.title, this.reportItem.content, this.reportItem.groups, this.reportItem.content.clientSaveTime)\n      .then((result) => {\n        if (result) {\n          this.dirty = false;\n          this.hasNewAnnotation = false;\n          this.reportItem.id = result.id; // set the reportNotebookItemId to the newly-incremented id so that future saves during this visit will be an update instead of an insert.\n          this.setSavedMessage(this.ConfigService.convertToClientTimestamp(result.serverSaveTime));\n        }\n      });\n  }\n\n  setSavedMessage(time) {\n    this.setSaveText(this.$translate('SAVED'), time);\n  }\n\n  setSaveText(message, time) {\n    this.saveMessage.text = message;\n    this.saveMessage.time = time;\n  }\n\n  isNoteEnabled() {\n    return this.config.itemTypes.note.enabled;\n  }\n\n  initializeInsertNoteButton() {\n    this.summernoteOptions.toolbar.splice(this.summernoteOptions.toolbar.length - 1, 0,\n        ['customButton', ['customButton']]);\n    this.summernoteOptions.customButton = {\n      // TODO: i18n\n      buttonText: 'Insert ' + this.config.itemTypes.note.label.singular + ' +',\n      tooltip: 'Insert from ' + this.config.label,\n      buttonClass: 'accent-1 notebook-item--report__add-note',\n      action: ($event) => {\n        this.addNotebookItemContent($event);\n      }\n    };\n  }\n}\n\nNotebookReportController.$inject = [\n  '$filter',\n  '$mdSidenav',\n  '$scope',\n  '$timeout',\n  'AnnotationService',\n  'ConfigService',\n  'NotebookService',\n  'ProjectService'\n];\n\nconst NotebookReport = {\n  bindings: {\n    config: '<',\n    insertContent: '<',\n    insertMode: '<',\n    reportId: '<',\n    visible: '<',\n    workgroupId: '<',\n    onCollapse: '&',\n    onSetInsertMode: '&',\n    mode: '@'\n  },\n  template:\n    `<div ng-if=\"$ctrl.mode !== 'classroomMonitor' && ($ctrl.visible && $ctrl.full && !$ctrl.collapsed) || $ctrl.insertMode\" class=\"notebook-report-backdrop\"></div>\n        <div ng-if=\"$ctrl.visible\" class=\"notebook-report-container\"\n              ng-class=\"{'notebook-report-container__collapsed': $ctrl.collapsed, 'notebook-report-container__full': $ctrl.full && !$ctrl.collapsed}\">\n            <md-card class=\"notebook-report md-whiteframe-3dp l-constrained\">\n                <md-toolbar ng-click=\"$ctrl.collapsed ? $ctrl.collapse() : return\" class=\"md-toolbar--wise md-toolbar--wise--sm notebook-report__toolbar\">\n                    <md-toolbar-tools class=\"md-toolbar-tools\">\n                        <md-icon>assignment</md-icon>&nbsp;\n                        <span ng-if=\"$ctrl.collapsed\" class=\"overflow--ellipsis notebook-report__toolbar__title\">{{$ctrl.reportItem.content.title}}</span>\n                        <span flex></span>\n                        <md-button aria-label=\"{{'toggleFullScreen' | translate}}\" title=\"{{'toggleFullScreen' | translate}}\" class=\"md-icon-button notebook-tools--full\"\n                                   ng-click=\"$ctrl.fullscreen()\">\n                            <md-icon ng-if=\"!$ctrl.full || $ctrl.collapsed\"> fullscreen </md-icon>\n                            <md-icon ng-if=\"$ctrl.full && !$ctrl.collapsed\"> fullscreen_exit </md-icon>\n                        </md-button>\n                        <md-button aria-label=\"{{'collapse' | translate}}\" title=\"{{'collapse' | translate}}\" class=\"md-icon-button\"\n                                   ng-if=\"!$ctrl.collapsed\" ng-click=\"$event.stopPropagation(); $ctrl.collapse()\">\n                            <md-icon> arrow_drop_down </md-icon>\n                        </md-button>\n                        <md-button aria-label=\"{{'restore' | translate}}\" title=\"{{'restore' | translate}}\" class=\"md-icon-button\"\n                                   ng-if=\"$ctrl.collapsed\" ng-click=\"$event.stopPropagation(); $ctrl.collapse()\">\n                            <md-icon> arrow_drop_up </md-icon>\n                        </md-button>\n                    </md-toolbar-tools>\n                    <div class=\"notebook-report__content__header md-whiteframe-1dp\" layout=\"row\" layout-align=\"start center\">\n                        <span style=\"color: {{$ctrl.config.itemTypes.report.label.color}};\">{{$ctrl.reportItem.content.title}}</span>\n                        <span flex></span>\n                        <md-icon aria-label=\"{{$ctrl.reportItem.content.title}} info\" style=\"color: {{$ctrl.config.itemTypes.report.label.color}};\">\n                            info\n                            <md-tooltip md-direction=\"left\">{{$ctrl.reportItem.content.prompt}}</md-tooltip>\n                        </md-icon>\n                    </div>\n                </md-toolbar>\n                <md-content class=\"notebook-report__content\" flex>\n                    <summernote id=\"{{$ctrl.reportId}}\"\n                                class=\"notebook-item--report__content\"\n                                ng-model=\"$ctrl.reportItemContent\"\n                                ng-change=\"$ctrl.changed($ctrl.reportItemContent)\"\n                                config=\"$ctrl.summernoteOptions\"></summernote>\n                    <notebook-report-annotations annotations=\"$ctrl.latestAnnotations\"\n                                                 has-new=\"$ctrl.hasNewAnnotation\"\n                                                 max-score=\"$ctrl.maxScore\"></notebook-report-annotations>\n                </md-content>\n                <md-card-actions class=\"notebook-report__actions\">\n                    <div id=\"{{$ctrl.reportId}}-toolbar\"></div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <md-button class=\"md-primary md-raised button--small\"\n                                   aria-label=\"{{ 'save' | translate }}\"\n                                   ng-disabled=\"!$ctrl.dirty\"\n                                   ng-click=\"$ctrl.saveNotebookReportItem()\">{{ 'save' | translate }}</md-button>\n                        <span ng-show=\"$ctrl.saveMessage.text\"\n                              class=\"component__actions__info md-caption\">\n                              {{$ctrl.saveMessage.text}} <span class=\"component__actions__more\"><md-tooltip md-direction=\"top\">{{ $ctrl.saveMessage.time | amDateFormat:'ddd, MMM D YYYY, h:mm a' }}</md-tooltip><span am-time-ago=\"$ctrl.saveMessage.time\"></span></span>\n                        </span>\n                    </div>\n                </md-card-actions>\n            </md-card>\n        </div>\n        <div ng-if=\"$ctrl.mode === 'classroomMonitor'\">\n            <compile data=\"$ctrl.reportItemContent\"></compile>\n            <notebook-item-grading\n                notebook-item=\"$ctrl.reportItem\">\n            </notebook-item-grading>\n\n        </div>`,\n  controller: NotebookReportController\n};\n\nexport default NotebookReport;\n"]}