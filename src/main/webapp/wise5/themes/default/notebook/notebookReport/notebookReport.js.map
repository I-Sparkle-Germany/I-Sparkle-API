{"version":3,"sources":["notebookReport.es6"],"names":["NotebookReportController","$filter","$mdSidenav","ConfigService","NotebookService","ProjectService","$translate","full","collapsed","dirty","autoSaveInterval","saveMessage","text","time","reportId","config","itemTypes","report","notes","reportItem","getLatestNotebookReportItemByReportId","workgroupId","serverSaveTime","clientSaveTime","convertToClientTimestamp","setSaveMessage","getTemplateReportItemByReportId","id","reportItemContent","injectAssetPaths","content","startAutoSaveInterval","summernoteOptions","toolbar","popover","image","customButton","buttonText","note","label","singular","tooltip","buttonClass","action","$event","addNotebookItemContent","disableDragAndDrop","toolbarContainer","callbacks","onBlur","$","summernote","$onChanges","changes","insertContent","isFirstChange","currentValue","item","angular","copy","reportElement","$item","hasAttachments","attachments","length","css","a","notebookItemAttachment","iconURL","$img","addClass","append","$caption","onCollapse","onInsert","value","removeAbsoluteAssetPaths","stopAutoSaveInterval","autoSaveIntervalId","setInterval","saveNotebookReportItem","clearInterval","Date","parse","saveNotebookItem","nodeId","localNotebookItemId","type","title","then","result","message","$inject","NotebookReport","bindings","insertMode","visible","template","controller"],"mappings":"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","file":"notebookReport.js","sourcesContent":["\"use strict\";\r\n\r\nclass NotebookReportController {\r\n    constructor($filter,\r\n                $mdSidenav,\r\n                ConfigService,\r\n                NotebookService,\r\n                ProjectService) {\r\n        this.$filter = $filter;\r\n        this.$mdSidenav = $mdSidenav;\r\n        this.ConfigService = ConfigService;\r\n        this.NotebookService = NotebookService;\r\n        this.ProjectService = ProjectService;\r\n        \r\n        this.$translate = this.$filter('translate');\r\n        \r\n        this.full = false;\r\n        this.collapsed = true;\r\n\r\n        this.dirty = false;\r\n        this.autoSaveInterval = 30000;  // the auto save interval in milliseconds\r\n\r\n        this.saveMessage = {\r\n            text: '',\r\n            time: ''\r\n        };\r\n        \r\n        // assume only one report for now\r\n        this.reportId = this.config.itemTypes.report.notes[0].reportId;\r\n        this.reportItem = this.NotebookService.getLatestNotebookReportItemByReportId(this.reportId, this.workgroupId);\r\n        if (this.reportItem) {\r\n            let serverSaveTime = this.reportItem.serverSaveTime;\r\n            let clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\r\n            this.setSaveMessage(this.$translate('saved'), clientSaveTime);\r\n        } else {\r\n            // Student doesn't have work for this report yet, so we'll use the template.\r\n            this.reportItem = this.NotebookService.getTemplateReportItemByReportId(this.reportId);\r\n            if (this.reportItem == null) {\r\n                // if there is no template, don't allow student to work on the report.\r\n                return;\r\n            }\r\n        }\r\n        // set the id to null so it can be inserted as initial version, as opposed to updated. this is true for both new and just-loaded reports.\r\n        this.reportItem.id = null;\r\n        // replace relative asset paths with absolute asset paths\r\n        this.reportItemContent = this.ProjectService.injectAssetPaths(this.reportItem.content.content);\r\n        // start auto-saving\r\n        this.startAutoSaveInterval();\r\n        \r\n        // summernote editor options\r\n        this.summernoteOptions = {\r\n            toolbar: [\r\n                ['edit', ['undo', 'redo']],\r\n                ['style', ['bold', 'italic', 'underline'/*, 'superscript', 'subscript', 'strikethrough', 'clear'*/]],\r\n                //['style', ['style']],\r\n                //['fontface', ['fontname']],\r\n                //['textsize', ['fontsize']],\r\n                //['fontclr', ['color']],\r\n                ['para', ['ul', 'ol', 'paragraph'/*, 'lineheight'*/]],\r\n                //['height', ['height']],\r\n                //['table', ['table']],\r\n                //['insert', ['link','picture','video','hr']],\r\n                //['view', ['fullscreen', 'codeview']],\r\n                //['help', ['help']]\r\n                ['customButton', ['customButton']]\r\n                //['print', ['print']]\r\n            ],\r\n            popover: {\r\n                image: [\r\n                    ['imagesize', ['imageSize100', 'imageSize50', 'imageSize25']],\r\n                    //['float', ['floatLeft', 'floatRight', 'floatNone']],\r\n                    ['remove', ['removeMedia']]\r\n                ]\r\n            },\r\n            customButton: {\r\n                // TODO: i18n\r\n                buttonText: 'Insert ' + this.config.itemTypes.note.label.singular + ' +',\r\n                tooltip: 'Insert from ' + this.config.label,\r\n                buttonClass: 'accent-1 notebook-item--report__add-note',\r\n                action: ($event) => {\r\n                    this.addNotebookItemContent($event);\r\n                }\r\n            },\r\n            disableDragAndDrop: true,\r\n            toolbarContainer: '#' + this.reportId + '-toolbar',\r\n            callbacks: {\r\n                onBlur: function () {\r\n                    $(this).summernote('saveRange');\r\n                }\r\n            }\r\n        };\r\n        \r\n        this.$onChanges = (changes) => {\r\n            if (changes.insertContent && !changes.insertContent.isFirstChange() && changes.insertContent.currentValue) {\r\n                // a notebook item is being inserted into the report\r\n                let item = angular.copy(changes.insertContent.currentValue);\r\n                \r\n                // prepare summernote editor instance\r\n                let reportElement = $('#' + this.reportId);\r\n                reportElement.summernote('focus');\r\n                reportElement.summernote('restoreRange');\r\n                \r\n                // create a jQuery DOM element to insert into the Summernote report editor\r\n                let $item = $('<p>');\r\n                let hasAttachments = false;\r\n                \r\n                if (item.content) {\r\n                    if (item.content.attachments) {\r\n                        if (item.content.attachments.length) {\r\n                            hasAttachments = true;\r\n                            // item includes attachments, so center align element\r\n                            $item.css('text-align', 'center');\r\n                        }\r\n                        for (let a = 0; a < item.content.attachments.length; a++) {\r\n                            // add each attachment to the element\r\n                            let notebookItemAttachment = item.content.attachments[a];\r\n                            let iconURL = notebookItemAttachment.iconURL;\r\n                            let $img = $('<img src=\"' + iconURL + '\" alt=\"notebook image\" style=\"width: 75%; max-width: 100%; height: auto; border: 1px solid #aaaaaa; padding: 8px; margin-bottom: 4px;\" />');\r\n                            $img.addClass('notebook-item--report__note-img');\r\n                            $item.append($img);\r\n                        }\r\n                    }\r\n                    if (item.content.text) {\r\n                        // item contains text, so add to element\r\n                        if (hasAttachments) {\r\n                            // item has attachments, so treat text content as a caption: center it and make it bold\r\n                            let $caption = $('<div><b>' + item.content.text + '</b></div>').css({'text-align': 'center'});\r\n                            $item.append($caption);\r\n                            reportElement.summernote('insertNode', $item[0]);\r\n                        } else {\r\n                            // note only contains text, so insert plain text\r\n                            reportElement.summernote('insertText', item.content.text);\r\n                        }\r\n                    } else {\r\n                        reportElement.summernote('insertNode', $item[0]);\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n    \r\n    collapse() {\r\n        this.collapsed = !this.collapsed;\r\n        \r\n        if (this.collapsed) {\r\n            this.onCollapse();\r\n        }\r\n    }\r\n    \r\n    fullscreen() {\r\n        if (this.collapsed) {\r\n            this.full = true;\r\n            this.collapsed = false;\r\n        } else {\r\n            this.full = !this.full;\r\n        }\r\n    }\r\n    \r\n    addNotebookItemContent($event) {\r\n        this.onInsert($event);\r\n    }\r\n    \r\n    changed(value) {\r\n        // report content had changed\r\n        this.dirty = true;\r\n        \r\n        /*\r\n         * remove the absolute asset paths\r\n         * e.g.\r\n         * <img src='https://wise.berkeley.edu/curriculum/3/assets/sun.png'/>\r\n         * will be changed to\r\n         * <img src='sun.png'/>\r\n         */\r\n        this.reportItem.content.content = this.ConfigService.removeAbsoluteAssetPaths(value);\r\n    }\n    \n    /**\n     * Start the auto save interval for this report\n     */\n    startAutoSaveInterval() {\n        this.stopAutoSaveInterval();  // stop any existing interval\n        this.autoSaveIntervalId = setInterval(() => {\n            // check if the student work is dirty\n            if (this.dirty) {\n                // the student work is dirty so we will save.\n                // obtain the component states from the children and save them to the server\n                this.saveNotebookReportItem();\n            }\n        }, this.autoSaveInterval);\n    }\n    \n    /**\n     * Stop the auto save interval for this report\n     */\n    stopAutoSaveInterval() {\n        clearInterval(this.autoSaveIntervalId);\n    }\n    \n    /**\n     * Save the notebook report item to server\n     */\n    saveNotebookReportItem() {\n        // save new report notebook item\n        this.reportItem.content.clientSaveTime = Date.parse(new Date());  // set save timestamp\n        this.NotebookService.saveNotebookItem(this.reportItem.id, this.reportItem.nodeId, this.reportItem.localNotebookItemId,\n            this.reportItem.type, this.reportItem.title, this.reportItem.content, this.reportItem.content.clientSaveTime)\n            .then((result) => {\n                if (result) {\n                    this.dirty = false;\n                    this.reportItem.id = result.id; // set the reportNotebookItemId to the newly-incremented id so that future saves during this visit will be an update instead of an insert.\n                    let serverSaveTime = result.serverSaveTime;\n                    let clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\n\n                    // set save message\n                    this.setSaveMessage(this.$translate('saved'), clientSaveTime);\n                }\n            });\n    }\n    \n    /**\n     * Set the message next to the save button\n     * @param message the message to display\n     * @param time the time to display\n     */\n    setSaveMessage(message, time) {\n        this.saveMessage.text = message;\n        this.saveMessage.time = time;\n    }\n}\r\n\r\nNotebookReportController.$inject = [\r\n    '$filter',\r\n    '$mdSidenav',\r\n    'ConfigService',\r\n    'NotebookService',\r\n    'ProjectService'\r\n];\r\n\r\nconst NotebookReport = {\r\n    bindings: {\r\n        config: '<',\r\n        insertContent: '<',\r\n        insertMode: '<',\r\n        reportId: '<',\r\n        visible: '<',\r\n        onInsert: '&',\r\n        onCollapse: '&'\r\n        //onClose: '&'\r\n    },\r\n    template:\r\n        `<div ng-if=\"($ctrl.visible && $ctrl.full && !$ctrl.collapsed) || $ctrl.insertMode\" class=\"notebook-report-backdrop\"></div>\r\n        <div ng-if=\"$ctrl.visible\" class=\"notebook-report-container\"\r\n              ng-class=\"{'notebook-report-container__collapsed': $ctrl.collapsed, 'notebook-report-container__full': $ctrl.full && !$ctrl.collapsed}\">\r\n            <md-card class=\"notebook-report md-whiteframe-3dp l-constrained-md\">\r\n                <md-toolbar ng-click=\"$ctrl.collapsed ? $ctrl.collapse() : return\" class=\"md-toolbar--wise md-toolbar--wise--sm notebook-report__toolbar\">\r\n                    <md-toolbar-tools class=\"md-toolbar-tools\">\r\n                        <md-icon>assignment</md-icon>&nbsp;\r\n                        <span ng-if=\"$ctrl.collapsed\" class=\"overflow--ellipsis notebook-report__toolbar__title\">{{$ctrl.reportItem.content.title}}</span>\r\n                        <span flex></span>\r\n                        <md-button aria-label=\"{{'toggleFullScreen' | translate}}\" title=\"{{'toggleFullScreen' | translate}}\" class=\"md-icon-button notebook-tools--full\"\r\n                                   ng-if=\"!$ctrl.full || $ctrl.collapsed\" ng-click=\"$ctrl.fullscreen()\">\r\n                            <md-icon> zoom_out_map </md-icon>\r\n                        </md-button>\n                        <md-button aria-label=\"{{'toggleFullScreen' | translate}}\" title=\"{{'toggleFullScreen' | translate}}\" class=\"md-icon-button notebook-tools--full\"\r\n                                   ng-if=\"$ctrl.full && !$ctrl.collapsed\" ng-click=\"$ctrl.fullscreen()\">\r\n                            <md-icon> fullscreen_exit </md-icon>\r\n                        </md-button>\r\n                        <md-button aria-label=\"{{'collapse' | translate}}\" title=\"{{'collapse' | translate}}\" class=\"md-icon-button\"\r\n                                   ng-if=\"!$ctrl.collapsed\" ng-click=\"$event.stopPropagation(); $ctrl.collapse()\">\r\n                            <md-icon> arrow_drop_down </md-icon>\r\n                        </md-button>\r\n                        <md-button aria-label=\"{{'restore' | translate}}\" title=\"{{'restore' | translate}}\" class=\"md-icon-button\"\r\n                                   ng-if=\"$ctrl.collapsed\" ng-click=\"$event.stopPropagation(); $ctrl.collapse()\">\r\n                            <md-icon> arrow_drop_up </md-icon>\r\n                        </md-button>\r\n                        <!--<md-button aria-label=\"{{'close' | translate}}\" class=\"md-icon-button\"\r\n                                   ng-click=\"$ctrl.onClose()\">\r\n                            <md-icon> close </md-icon>\r\n                        </md-button>-->\r\n                    </md-toolbar-tools>\r\n                </md-toolbar>\r\n                <md-content class=\"notebook-report__content\" flex ui-scrollpoint ui-scrollpoint-action=\"$ctrl.setEditorPosition\">\r\n                    <div class=\"notebook-report__content__header\" layout=\"row\" layout-align=\"start center\">\r\n                        <span style=\"color: {{$ctrl.config.itemTypes.report.label.color}};\">{{$ctrl.reportItem.content.title}}</span>\r\n                        <span flex></span>\r\n                        <md-icon aria-label=\"{{$ctrl.reportItem.content.title}} info\" style=\"color: {{$ctrl.config.itemTypes.report.label.color}};\">\r\n                            info\r\n                            <md-tooltip md-direction=\"left\">{{$ctrl.reportItem.content.prompt}}</md-tooltip>\r\n                        </md-icon>\r\n                    </div>\r\n                    <summernote id=\"{{$ctrl.reportId}}\"\r\n                                class=\"notebook-item--report__content\"\r\n                                ng-model=\"$ctrl.reportItemContent\"\r\n                                ng-change=\"$ctrl.changed($ctrl.reportItemContent)\"\r\n                                config=\"$ctrl.summernoteOptions\"></summernote>\r\n                </md-content>\r\n                <md-card-actions class=\"notebook-report__actions\">\n                    <div id=\"{{$ctrl.reportId}}-toolbar\"></div>\n                    <div layout=\"row\" layout-align=\"start center\">\r\n                        <md-button class=\"md-primary md-raised button--small\"\r\n                                   aria-label=\"{{ 'save' | translate }}\"\r\n                                   ng-disabled=\"!$ctrl.dirty\"\r\n                                   ng-click=\"$ctrl.saveNotebookReportItem()\">{{ 'save' | translate }}</md-button>\r\n                        <span ng-show=\"$ctrl.saveMessage.text\"\r\n                              class=\"component__actions__info md-caption\">\r\n                              {{$ctrl.saveMessage.text}} <span class=\"component__actions__more\"><md-tooltip md-direction=\"top\">{{ $ctrl.saveMessage.time | amDateFormat:'ddd, MMM D YYYY, h:mm a' }}</md-tooltip><span am-time-ago=\"$ctrl.saveMessage.time\"></span></span>\r\n                        </span>\r\n                    </div>\n                </md-card-actions>\r\n            </md-card>\r\n        </div>`,\r\n    controller: NotebookReportController\r\n};\r\n\r\nexport default NotebookReport;\r\n"]}