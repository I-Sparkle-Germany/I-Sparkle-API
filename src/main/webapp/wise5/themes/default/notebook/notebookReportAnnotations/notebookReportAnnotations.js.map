{"version":3,"sources":["notebookReportAnnotations.es6"],"names":["NotebookReportAnnotationsController","$scope","$filter","ConfigService","ProjectService","StudentDataService","$translate","maxScoreDisplay","parseInt","maxScore","latestAnnotationTime","isNew","label","icon","showScore","showComment","$onChanges","changes","annotations","angular","copy","currentValue","processAnnotations","latest","comment","score","commentSaveTime","serverSaveTime","scoreSaveTime","getLatestAnnotation","time","convertToClientTimestamp","type","nodeId","componentId","displayAnnotation","setLabelAndIcon","getLatestAnnotationTime","show","$inject","NotebookReportAnnotations","bindings","hasNew","template","controller"],"mappings":"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","file":"notebookReportAnnotations.js","sourcesContent":["'use strict';\n\nclass NotebookReportAnnotationsController {\n  constructor($scope,\n              $filter,\n              ConfigService,\n              ProjectService,\n              StudentDataService) {\n\n    this.$scope = $scope;\n    this.$filter = $filter;\n    this.ConfigService = ConfigService;\n    this.ProjectService = ProjectService;\n    this.StudentDataService = StudentDataService;\n    this.$translate = this.$filter('translate');\n    this.maxScoreDisplay = (parseInt(this.maxScore) > 0) ? '/' + this.maxScore : '';\n    this.latestAnnotationTime = null;\n    this.isNew = false;\n    this.label = '';\n    this.icon = 'person';\n    this.showScore = true;\n    this.showComment = true;\n\n    this.$onChanges = (changes) => {\n      if (changes.annotations) {\n        this.annotations = angular.copy(changes.annotations.currentValue);\n        this.processAnnotations();\n      }\n    }\n  }\n\n  /**\n   * Get the most recent annotation (from the current score and comment annotations)\n   * @return Object (latest annotation)\n   */\n  getLatestAnnotation() {\n    let latest = null;\n    if (this.annotations.comment || this.annotations.score) {\n      let commentSaveTime = this.annotations.comment ? this.annotations.comment.serverSaveTime : 0;\n      let scoreSaveTime = this.annotations.score ? this.annotations.score.serverSaveTime : 0;\n      if (commentSaveTime >= scoreSaveTime) {\n        latest = this.annotations.comment;\n      } else if (scoreSaveTime > commentSaveTime) {\n        latest = this.annotations.score;\n      }\n    }\n    return latest;\n  };\n\n  /**\n   * Calculate the save time of the latest annotation\n   * @return Number (latest annotation post time)\n   */\n  getLatestAnnotationTime() {\n    let latest = this.getLatestAnnotation();\n    let time = null;\n    if (latest) {\n      let serverSaveTime = latest.serverSaveTime;\n      time = this.ConfigService.convertToClientTimestamp(serverSaveTime)\n    }\n    return time;\n  };\n\n  /**\n   * Set the label based on whether this is an automated or teacher annotation\n   **/\n  setLabelAndIcon() {\n    let latest = this.getLatestAnnotation();\n    if (latest) {\n      if (latest.type === 'autoComment' || latest.type === 'autoScore') {\n        this.label = this.$translate('automatedFeedbackLabel');\n        this.icon = 'keyboard';\n      } else {\n        this.label = this.$translate('teacherFeedbackLabel');\n        this.icon = \"person\";\n      }\n    }\n  };\n\n  processAnnotations() {\n    if (this.annotations.comment || this.annotations.score) {\n      this.nodeId = this.annotations.comment ? this.annotations.comment.nodeId : this.annotations.score.nodeId;\n      this.componentId = this.annotations.comment ? this.annotations.comment.componentId : this.annotations.score.nodeId;\n\n      if (!this.ProjectService.displayAnnotation(this.annotations.score)) {\n        this.showScore = false;\n      }\n\n      if (!this.ProjectService.displayAnnotation(this.annotations.comment)) {\n        this.showComment = false;\n      }\n\n      this.setLabelAndIcon();\n      this.latestAnnotationTime = this.getLatestAnnotationTime();\n      this.show = (this.showScore && this.annotations.score) || (this.showComment && this.annotations.comment);\n    }\n  };\n}\n\nNotebookReportAnnotationsController.$inject = [\n  '$scope',\n  '$filter',\n  'ConfigService',\n  'ProjectService',\n  'StudentDataService'\n];\n\nconst NotebookReportAnnotations = {\n  bindings: {\n    annotations: '<',\n    hasNew: '<',\n    maxScore: '<'\n  },\n  template:\n    `<div class=\"md-padding gray-lightest-bg annotations-container--student--report\" ng-if=\"$ctrl.show\">\n            <md-card class=\"annotations annotations--report\">\n                <md-card-title class=\"annotations__header\">\n                    <div class=\"annotations__avatar avatar--icon avatar--square md-36 avatar md-whiteframe-1dp\">\n                        <md-icon class=\"annotations__icon md-36\">{{$ctrl.icon}}</md-icon>\n                    </div>\n                    <div class=\"annotations__title\" layout=\"row\" flex>\n                        <span>{{$ctrl.label}}</span>\n                        <span flex></span>\n                        <span ng-if=\"$ctrl.hasNew\" class=\"badge annotations__status animate-fade\" translate=\"new\"></span>\n                    </div>\n                </md-card-title>\n                <md-card-content class=\"annotations__body md-body-1\">\n                    <div ng-if=\"$ctrl.showComment && $ctrl.annotations.comment.data.value\"><compile data=\"$ctrl.annotations.comment.data.value\"></compile></div>\n                    <hr ng-if=\"$ctrl.annotations.comment\" />\n                    <div layout=\"row\" laoyut-align=\"start center\">\n                        <span ng-if=\"$ctrl.showScore && $ctrl.annotations.score\"\n                              class=\"annotations__score\"\n                              translate=\"SCORE_LABEL_AND_VALUE\"\n                              translate-value-score=\"{{$ctrl.annotations.score.data.value}}{{$ctrl.maxScoreDisplay}}\"></span>\n                        <span flex></span>\n                        <span>\n                            <span class=\"annotations__info\" am-time-ago=\"$ctrl.latestAnnotationTime\"></span>\n                            <md-tooltip md-direction=\"top\">{{ $ctrl.latestAnnotationTime | amDateFormat:'ddd, MMM D YYYY, h:mm a' }}</md-tooltip>\n                        </span>\n                    </div>\n                </md-card-content>\n            </md-card>\n        </div>`,\n  controller: NotebookReportAnnotationsController\n};\n\nexport default NotebookReportAnnotations;\n"]}