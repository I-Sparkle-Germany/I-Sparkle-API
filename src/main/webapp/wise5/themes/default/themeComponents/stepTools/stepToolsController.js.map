{"version":3,"sources":["stepToolsController.es6"],"names":["StepToolsCtrl","$scope","NodeService","ProjectService","StudentDataService","$mdSidenav","nodeStatuses","idToOrder","updateModel","$watch","toNodeId","newId","oldId","endCurrentNodeAndSetCurrentNodeByNodeId","$on","event","args","arge","toggle","nodeId","getCurrentNodeId","isGroupNode","nodeStatus","prevId","getPrevNodeId","nextId","getNextNodeId","then","showPosition","getNodePositionById","getNodeTitleByNodeId","getThemePath","goToPrevNode","goToNextNode","closeNode","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,a;AACF,2BAAYC,MAAZ,EACYC,WADZ,EAEYC,cAFZ,EAGYC,kBAHZ,EAIYC,UAJZ,EAIwB;AAAA;;AAAA;;AAEpB,aAAKJ,MAAL,GAAcA,MAAd;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;AACA;;AAEA,aAAKE,YAAL,GAAoB,KAAKF,kBAAL,CAAwBE,YAA5C;;AAEA;AACA,aAAKC,SAAL,GAAiB,KAAKJ,cAAL,CAAoBI,SAArC;;AAEA,aAAKC,WAAL;;AAEA,aAAKP,MAAL,CAAYQ,MAAZ,CACI,YAAM;AAAE,mBAAO,MAAKC,QAAZ;AAAuB,SADnC,EAEI,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACd,gBAAID,UAAUC,KAAd,EAAqB;AACjB;AACA,sBAAKR,kBAAL,CAAwBS,uCAAxB,CAAgEF,KAAhE;AACH;AACJ,SAPL;;AAUA,aAAKV,MAAL,CAAYa,GAAZ,CAAgB,oBAAhB,EAAsC,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACnD,kBAAKR,WAAL;AACH,SAFD;;AAIA,aAAKP,MAAL,CAAYa,GAAZ,CAAgB,qBAAhB,EAAuC,UAACC,KAAD,EAAQE,IAAR,EAAiB;AACpD,kBAAKT,WAAL;AACH,SAFD;AAGH;;;;wCAEe;AACZ,iBAAKH,UAAL,CAAgB,SAAhB,EACGa,MADH;AAEH;;;sCAEa;AAAA;;AACV,gBAAIC,SAAS,KAAKf,kBAAL,CAAwBgB,gBAAxB,EAAb;AACA,gBAAI,CAAC,KAAKjB,cAAL,CAAoBkB,WAApB,CAAgCF,MAAhC,CAAL,EAA8C;AAC1C,qBAAKA,MAAL,GAAcA,MAAd;AACA,qBAAKG,UAAL,GAAkB,KAAKhB,YAAL,CAAkB,KAAKa,MAAvB,CAAlB;;AAEA,qBAAKI,MAAL,GAAc,KAAKrB,WAAL,CAAiBsB,aAAjB,EAAd;AACA,qBAAKC,MAAL,GAAc,IAAd;AACA,qBAAKvB,WAAL,CAAiBwB,aAAjB,GAAiCC,IAAjC,CAAsC,UAACR,MAAD,EAAY;AAC9C,2BAAKM,MAAL,GAAcN,MAAd;AACH,iBAFD;;AAIA;AACA,qBAAKT,QAAL,GAAgB,KAAKS,MAArB;AACH;AACJ;;;0CAEiB;AACd,mBAAO,CAAC,KAAKS,YAAL,GAAoB,KAAKC,mBAAL,CAAyB,KAAKV,MAA9B,IAAwC,IAA5D,GAAmE,EAApE,IAA0E,KAAKW,oBAAL,CAA0B,KAAKX,MAA/B,CAAjF;AACH;;;yCAEe;AACZ,mBAAO,KAAKhB,cAAL,CAAoB4B,YAApB,KAAqC,2CAA5C;AACH;;;6CAEoBZ,M,EAAQ;AACzB,mBAAO,KAAKhB,cAAL,CAAoB2B,oBAApB,CAAyCX,MAAzC,CAAP;AACH;;;4CAEmBA,M,EAAQ;AACxB,mBAAO,KAAKhB,cAAL,CAAoB0B,mBAApB,CAAwCV,MAAxC,CAAP;AACH;;;oCAEWA,M,EAAQ;AAChB,mBAAO,KAAKhB,cAAL,CAAoBkB,WAApB,CAAgCF,MAAhC,CAAP;AACH;;;uCAEc;AACX,iBAAKjB,WAAL,CAAiB8B,YAAjB;AACH;;;uCAEc;AACX,iBAAK9B,WAAL,CAAiB+B,YAAjB;AACH;;;oCAEW;AACR,iBAAK/B,WAAL,CAAiBgC,SAAjB;AACH;;;;;;AAGLlC,cAAcmC,OAAd,GAAwB,CACpB,QADoB,EAEpB,aAFoB,EAGpB,gBAHoB,EAIpB,oBAJoB,EAKpB,YALoB,CAAxB;;kBAQenC,a","file":"stepToolsController.js","sourcesContent":["\"use strict\";\n\nclass StepToolsCtrl {\n    constructor($scope,\n                NodeService,\n                ProjectService,\n                StudentDataService,\n                $mdSidenav) {\n\n        this.$scope = $scope;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n        //this.$mdSidenav = $mdSidenav;\n\n        this.nodeStatuses = this.StudentDataService.nodeStatuses;\n\n        // service objects and utility functions\n        this.idToOrder = this.ProjectService.idToOrder;\n\n        this.updateModel();\n\n        this.$scope.$watch(\n            () => { return this.toNodeId; },\n            (newId, oldId) => {\n                if (newId !== oldId) {\n                    // selected node id has changed, so open new node\n                    this.StudentDataService.endCurrentNodeAndSetCurrentNodeByNodeId(newId);\n                }\n            }\n        );\n\n        this.$scope.$on('currentNodeChanged', (event, args) => {\n            this.updateModel();\n        });\n\n        this.$scope.$on('nodeStatusesChanged', (event, arge) => {\n            this.updateModel();\n        })\n    }\n\n    toggleStepNav() {\n        this.$mdSidenav('stepNav')\n          .toggle();\n    }\n\n    updateModel() {\n        var nodeId = this.StudentDataService.getCurrentNodeId();\n        if (!this.ProjectService.isGroupNode(nodeId)) {\n            this.nodeId = nodeId;\n            this.nodeStatus = this.nodeStatuses[this.nodeId];\n\n            this.prevId = this.NodeService.getPrevNodeId();\n            this.nextId = null;\n            this.NodeService.getNextNodeId().then((nodeId) => {\n                this.nextId = nodeId;\n            });\n\n            // model variable for selected node id\n            this.toNodeId = this.nodeId;\n        }\n    };\n\n    getSelectedText() {\n        return (this.showPosition ? this.getNodePositionById(this.nodeId) + ': ' : '') + this.getNodeTitleByNodeId(this.nodeId);\n    };\n\n    getTemplateUrl(){\n        return this.ProjectService.getThemePath() + '/themeComponents/stepTools/stepTools.html';\n    };\n\n    getNodeTitleByNodeId(nodeId) {\n        return this.ProjectService.getNodeTitleByNodeId(nodeId);\n    };\n\n    getNodePositionById(nodeId) {\n        return this.ProjectService.getNodePositionById(nodeId);\n    };\n\n    isGroupNode(nodeId) {\n        return this.ProjectService.isGroupNode(nodeId);\n    };\n\n    goToPrevNode() {\n        this.NodeService.goToPrevNode();\n    };\n\n    goToNextNode() {\n        this.NodeService.goToNextNode();\n    };\n\n    closeNode() {\n        this.NodeService.closeNode();\n    };\n}\n\nStepToolsCtrl.$inject = [\n    '$scope',\n    'NodeService',\n    'ProjectService',\n    'StudentDataService',\n    '$mdSidenav'\n];\n\nexport default StepToolsCtrl;\n"]}