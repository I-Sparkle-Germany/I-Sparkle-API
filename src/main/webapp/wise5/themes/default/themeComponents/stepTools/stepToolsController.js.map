{"version":3,"sources":["stepToolsController.es6"],"names":["StepToolsCtrl","$scope","NodeService","ProjectService","StudentDataService","$mdSidenav","is_rtl","$","attr","icons","prev","next","nodeStatuses","idToOrder","updateModel","$on","event","args","arge","endCurrentNodeAndSetCurrentNodeByNodeId","toNodeId","nodeId","getCurrentNodeId","isGroupNode","nodeStatus","prevId","getPrevNodeId","nextId","getNextNodeId","then","showPosition","getNodePositionById","getNodeTitleByNodeId","getThemePath","goToPrevNode","goToNextNode","closeNode","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,a;AACF,2BAAYC,MAAZ,EACYC,WADZ,EAEYC,cAFZ,EAGYC,kBAHZ,EAIYC,UAJZ,EAIwB;AAAA;;AAAA;;AAEpB,aAAKJ,MAAL,GAAcA,MAAd;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;AACA,aAAKE,MAAL,GAAeC,EAAE,MAAF,EAAUC,IAAV,CAAe,KAAf,KAAyB,KAAxC;AACA,aAAKC,KAAL,GAAa,EAAEC,MAAM,cAAR,EAAwBC,MAAM,eAA9B,EAAb;AACA,YAAI,KAAKL,MAAT,EAAiB;AACf,iBAAKG,KAAL,GAAa,EAAEC,MAAM,eAAR,EAAyBC,MAAM,cAA/B,EAAb;AACD;AACD;;AAEA,aAAKC,YAAL,GAAoB,KAAKR,kBAAL,CAAwBQ,YAA5C;;AAEA;AACA,aAAKC,SAAL,GAAiB,KAAKV,cAAL,CAAoBU,SAArC;;AAEA,aAAKC,WAAL;;AAEA,aAAKb,MAAL,CAAYc,GAAZ,CAAgB,oBAAhB,EAAsC,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACnD,kBAAKH,WAAL;AACH,SAFD;;AAIA,aAAKb,MAAL,CAAYc,GAAZ,CAAgB,qBAAhB,EAAuC,UAACC,KAAD,EAAQE,IAAR,EAAiB;AACpD,kBAAKJ,WAAL;AACH,SAFD;AAGH;;AAED;;;;;;0CAIkB;AACd;AACA,iBAAKV,kBAAL,CAAwBe,uCAAxB,CAAgE,KAAKC,QAArE;AACH;;;sCAEa;AAAA;;AACV,gBAAIC,SAAS,KAAKjB,kBAAL,CAAwBkB,gBAAxB,EAAb;AACA,gBAAI,CAAC,KAAKnB,cAAL,CAAoBoB,WAApB,CAAgCF,MAAhC,CAAL,EAA8C;AAC1C,qBAAKA,MAAL,GAAcA,MAAd;AACA,qBAAKG,UAAL,GAAkB,KAAKZ,YAAL,CAAkB,KAAKS,MAAvB,CAAlB;;AAEA,qBAAKI,MAAL,GAAc,KAAKvB,WAAL,CAAiBwB,aAAjB,EAAd;AACA,qBAAKC,MAAL,GAAc,IAAd;AACA,qBAAKzB,WAAL,CAAiB0B,aAAjB,GAAiCC,IAAjC,CAAsC,UAACR,MAAD,EAAY;AAC9C,2BAAKM,MAAL,GAAcN,MAAd;AACH,iBAFD;;AAIA;AACA,qBAAKD,QAAL,GAAgB,KAAKC,MAArB;AACH;AACJ;;;0CAEiB;AACd,mBAAO,CAAC,KAAKS,YAAL,GAAoB,KAAKC,mBAAL,CAAyB,KAAKV,MAA9B,IAAwC,IAA5D,GAAmE,EAApE,IAA0E,KAAKW,oBAAL,CAA0B,KAAKX,MAA/B,CAAjF;AACH;;;yCAEe;AACZ,mBAAO,KAAKlB,cAAL,CAAoB8B,YAApB,KAAqC,2CAA5C;AACH;;;6CAEoBZ,M,EAAQ;AACzB,mBAAO,KAAKlB,cAAL,CAAoB6B,oBAApB,CAAyCX,MAAzC,CAAP;AACH;;;4CAEmBA,M,EAAQ;AACxB,mBAAO,KAAKlB,cAAL,CAAoB4B,mBAApB,CAAwCV,MAAxC,CAAP;AACH;;;oCAEWA,M,EAAQ;AAChB,mBAAO,KAAKlB,cAAL,CAAoBoB,WAApB,CAAgCF,MAAhC,CAAP;AACH;;;uCAEc;AACX,iBAAKnB,WAAL,CAAiBgC,YAAjB;AACH;;;uCAEc;AACX,iBAAKhC,WAAL,CAAiBiC,YAAjB;AACH;;;oCAEW;AACR,iBAAKjC,WAAL,CAAiBkC,SAAjB;AACH;;;;;;AAGLpC,cAAcqC,OAAd,GAAwB,CACpB,QADoB,EAEpB,aAFoB,EAGpB,gBAHoB,EAIpB,oBAJoB,EAKpB,YALoB,CAAxB;;kBAQerC,a","file":"stepToolsController.js","sourcesContent":["\"use strict\";\n\nclass StepToolsCtrl {\n    constructor($scope,\n                NodeService,\n                ProjectService,\n                StudentDataService,\n                $mdSidenav) {\n\n        this.$scope = $scope;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n        this.is_rtl = ($('html').attr('dir') == 'rtl');\n        this.icons = { prev: 'chevron_left', next: 'chevron_right' };\n        if (this.is_rtl) {\n          this.icons = { prev: 'chevron_right', next: 'chevron_left' };\n        }\n        //this.$mdSidenav = $mdSidenav;\n\n        this.nodeStatuses = this.StudentDataService.nodeStatuses;\n\n        // service objects and utility functions\n        this.idToOrder = this.ProjectService.idToOrder;\n\n        this.updateModel();\n\n        this.$scope.$on('currentNodeChanged', (event, args) => {\n            this.updateModel();\n        });\n\n        this.$scope.$on('nodeStatusesChanged', (event, arge) => {\n            this.updateModel();\n        })\n    }\n\n    /*toggleStepNav() {\n        this.$mdSidenav('stepNav').toggle();\n    }*/\n\n    toNodeIdChanged() {\n        // selected node id has changed, so open new node\n        this.StudentDataService.endCurrentNodeAndSetCurrentNodeByNodeId(this.toNodeId);\n    }\n\n    updateModel() {\n        var nodeId = this.StudentDataService.getCurrentNodeId();\n        if (!this.ProjectService.isGroupNode(nodeId)) {\n            this.nodeId = nodeId;\n            this.nodeStatus = this.nodeStatuses[this.nodeId];\n\n            this.prevId = this.NodeService.getPrevNodeId();\n            this.nextId = null;\n            this.NodeService.getNextNodeId().then((nodeId) => {\n                this.nextId = nodeId;\n            });\n\n            // model variable for selected node id\n            this.toNodeId = this.nodeId;\n        }\n    }\n\n    getSelectedText() {\n        return (this.showPosition ? this.getNodePositionById(this.nodeId) + ': ' : '') + this.getNodeTitleByNodeId(this.nodeId);\n    }\n\n    getTemplateUrl(){\n        return this.ProjectService.getThemePath() + '/themeComponents/stepTools/stepTools.html';\n    }\n\n    getNodeTitleByNodeId(nodeId) {\n        return this.ProjectService.getNodeTitleByNodeId(nodeId);\n    }\n\n    getNodePositionById(nodeId) {\n        return this.ProjectService.getNodePositionById(nodeId);\n    }\n\n    isGroupNode(nodeId) {\n        return this.ProjectService.isGroupNode(nodeId);\n    }\n\n    goToPrevNode() {\n        this.NodeService.goToPrevNode();\n    }\n\n    goToNextNode() {\n        this.NodeService.goToNextNode();\n    }\n\n    closeNode() {\n        this.NodeService.closeNode();\n    }\n}\n\nStepToolsCtrl.$inject = [\n    '$scope',\n    'NodeService',\n    'ProjectService',\n    'StudentDataService',\n    '$mdSidenav'\n];\n\nexport default StepToolsCtrl;\n"]}