{"version":3,"sources":["themeController.es6"],"names":["ThemeController","$scope","$state","$filter","ConfigService","ProjectService","StudentDataService","StudentStatusService","NotebookService","SessionService","$mdDialog","$mdMedia","$mdToast","$mdComponentRegistry","$translate","layoutView","numberProject","themePath","getThemePath","themeSettings","getThemeSettings","hideTotalScores","nodeStatuses","idToOrder","rootNode","rootNodeStatus","id","workgroupId","getWorkgroupId","workgroupUsernames","getUsernamesByWorkgroupId","notebookOpen","notebookConfig","getNotebookConfig","notebookFilter","currentNode","getCurrentNode","planningMode","enabled","type","itemTypes","prop","hasOwnProperty","connectionLostDisplay","build","template","hideDelay","connectionLostShown","setLayoutState","$on","event","args","message","nodeId","node","getNodeById","constraints","getConstraintsForNode","orderConstraints","length","nodeTitle","getNodePositionAndTitleByNodeId","c","constraint","evaluateConstraint","getConstraintMessage","show","alert","parent","angular","element","document","body","title","htmlContent","ariaLabel","ok","targetEvent","ev","confirm","textContent","cancel","then","renewSession","undefined","forceLogOut","handleServerDisconnect","handleServerReconnect","revisions","componentController","allowRevert","$event","revisionsTemplateUrl","templateUrl","locals","items","reverse","controller","RevisionsController","close","hide","revertWork","componentState","setStudentWork","studentDataChanged","$inject","studentAssetDialogTemplateUrl","studentAssetTemplateUrl","StudentAssetDialogController","closeDialog","notification","notificationDismissDialogTemplateUrl","dismissCodePrompt","DismissCodeDialogController","NotificationService","input","dismissCode","hasDismissCode","data","nodePositionAndTitle","checkDismissCode","dismissNotification","componentId","componentType","category","eventData","saveVLEEvent","errorMessage","visitNode","goToNodeId","endCurrentNodeAndSetCurrentNodeByNodeId","state","layoutState","isApplicationNode","isGroupNode","go","notebookNavOpen","getAvatarColorForWorkgroupId","mouseMoved"],"mappings":"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","file":"themeController.js","sourcesContent":["'use strict';\n\nclass ThemeController {\n  constructor($scope,\n              $state,\n              $filter,\n              ConfigService,\n              ProjectService,\n              StudentDataService,\n              StudentStatusService,\n              NotebookService,\n              SessionService,\n              $mdDialog,\n              $mdMedia,\n              $mdToast,\n              $mdComponentRegistry) {\n    this.$scope = $scope;\n    this.$state = $state;\n    this.$filter = $filter;\n    this.ConfigService = ConfigService;\n    this.ProjectService = ProjectService;\n    this.StudentDataService = StudentDataService;\n    this.NotebookService = NotebookService;\n    this.SessionService = SessionService;\n    this.StudentStatusService = StudentStatusService;\n    this.$mdDialog = $mdDialog;\n    this.$mdMedia = $mdMedia;\n    this.$mdToast = $mdToast;\n    this.$mdComponentRegistry = $mdComponentRegistry;\n    this.$translate = this.$filter('translate');\n\n    // TODO: set these variables dynamically from theme settings\n    this.layoutView = 'list'; // 'list' or 'card'\n    this.numberProject = true;\n\n    this.themePath = this.ProjectService.getThemePath();\n    this.themeSettings = this.ProjectService.getThemeSettings();\n    this.hideTotalScores = this.themeSettings.hideTotalScores;\n\n    this.nodeStatuses = this.StudentDataService.nodeStatuses;\n    this.idToOrder = this.ProjectService.idToOrder;\n\n    this.rootNode = this.ProjectService.rootNode;\n    this.rootNodeStatus = this.nodeStatuses[this.rootNode.id];\n\n    this.workgroupId = this.ConfigService.getWorkgroupId();\n    this.workgroupUsernames = this.ConfigService.getUsernamesByWorkgroupId(this.workgroupId);\n\n    this.notebookOpen = false;\n    this.notebookConfig = this.NotebookService.getNotebookConfig();\n    this.notebookFilter = '';\n    this.currentNode = this.StudentDataService.getCurrentNode();\n    this.planningMode = false;\n\n    // set current notebook type filter to first enabled type\n    if (this.notebookConfig.enabled) {\n      for (var type in this.notebookConfig.itemTypes) {\n        let prop = this.notebookConfig.itemTypes[type];\n        if (this.notebookConfig.itemTypes.hasOwnProperty(type) && prop.enabled) {\n          this.notebookFilter = type;\n          break;\n        }\n      }\n    }\n\n    // build server disconnect display\n    this.connectionLostDisplay = $mdToast.build({\n      template: \"<md-toast>\\\n                      <span>{{ 'ERROR_CHECK_YOUR_INTERNET_CONNECTION' | translate }}</span>\\\n                      </md-toast>\",\n      hideDelay: 0\n    });\n    this.connectionLostShown = false;\n\n    this.setLayoutState();\n\n    // update layout state when current node changes\n    this.$scope.$on('currentNodeChanged', (event, args) => {\n      this.currentNode = this.StudentDataService.getCurrentNode();\n      this.setLayoutState();\n    });\n\n    // alert user when a locked node has been clicked\n    this.$scope.$on('nodeClickLocked', (event, args) => {\n      var message = this.$translate('sorryYouCannotViewThisItemYet');\n      let nodeId = args.nodeId;\n      var node = this.ProjectService.getNodeById(nodeId);\n      if (node != null) {\n        // get the constraints that affect this node\n        var constraints = this.ProjectService.getConstraintsForNode(node);\n        this.ProjectService.orderConstraints(constraints);\n\n        if (constraints != null && constraints.length > 0) {\n          // get the node title the student is trying to go to\n          let nodeTitle = this.ProjectService.getNodePositionAndTitleByNodeId(nodeId);\n          message = this.$translate('toVisitNodeTitleYouNeedTo', { nodeTitle: nodeTitle });\n        }\n\n        // loop through all the constraints that affect this node\n        for (var c = 0; c < constraints.length; c++) {\n          var constraint = constraints[c];\n\n          // check if the constraint has been satisfied\n          if (constraint != null && !this.StudentDataService.evaluateConstraint(node, constraint)) {\n            // the constraint has not been satisfied and is still active\n\n            if (message != '') {\n              // separate multiple constraints with line breaks\n              message += '<br/>';\n            }\n\n            // get the message that describes how to disable the constraint\n            message += this.ProjectService.getConstraintMessage(nodeId, constraint);\n          }\n        }\n      }\n\n      this.$mdDialog.show(\n        this.$mdDialog.alert()\n          .parent(angular.element(document.body))\n          .title(this.$translate('itemLocked'))\n          .htmlContent(message)\n          .ariaLabel(this.$translate('itemLocked'))\n          .ok(this.$translate('ok'))\n          .targetEvent(event)\n      );\n    });\n\n    // alert user when inactive for a long time\n    this.$scope.$on('showSessionWarning', (ev) => {\n      let alert = this.$mdDialog.confirm()\n        .parent(angular.element(document.body))\n        .title(this.$translate('sessionTimeout'))\n        .textContent(this.$translate('autoLogoutMessage'))\n        .ariaLabel(this.$translate('sessionTimeout'))\n        .targetEvent(ev)\n        .ok(this.$translate('yes'))\n        .cancel(this.$translate('no'));\n\n      this.$mdDialog.show(alert).then(() => {\n        this.SessionService.renewSession();\n        alert = undefined;\n      }, () => {\n        this.SessionService.forceLogOut();\n      });\n    });\n\n    // alert user when inactive for a long time\n    this.$scope.$on('showRequestLogout', (ev) => {\n      let alert = this.$mdDialog.confirm()\n        .parent(angular.element(document.body))\n        .title(this.$translate('serverUpdate'))\n        .textContent(this.$translate('serverUpdateRequestLogoutMessage'))\n        .ariaLabel(this.$translate('serverUpdate'))\n        .targetEvent(ev)\n        .ok(this.$translate('ok'));\n\n      this.$mdDialog.show(alert).then(() => {\n        // do nothing\n      }, () => {\n        // do nothing\n      });\n    });\n\n    // alert user when server loses connection\n    this.$scope.$on('serverDisconnected', () => {\n      this.handleServerDisconnect();\n    });\n\n    // remove alert when server regains connection\n    this.$scope.$on('serverConnected', () => {\n      this.handleServerReconnect();\n    });\n\n    // show list of revisions in a dialog when user clicks the show revisions link for a component\n    this.$scope.$on('showRevisions', (event, args) => {\n      let revisions = args.revisions;\n      let componentController = args.componentController;\n      let allowRevert = args.allowRevert;\n      let $event = args.$event;\n      let revisionsTemplateUrl = this.themePath + '/templates/componentRevisions.html';\n\n      this.$mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        templateUrl: revisionsTemplateUrl,\n        locals: {\n          items: revisions.reverse(),\n          componentController: componentController,\n          allowRevert: allowRevert\n        },\n        controller: RevisionsController\n      });\n      function RevisionsController($scope, $mdDialog, items, componentController, allowRevert) {\n        $scope.items = items;\n        $scope.componentController = componentController;\n        $scope.allowRevert = allowRevert;\n        $scope.close = () => {\n          $mdDialog.hide();\n        };\n        $scope.revertWork = (componentState) => {\n          $scope.componentController.setStudentWork(componentState);\n          $scope.componentController.studentDataChanged();\n          $mdDialog.hide();\n        };\n      }\n      RevisionsController.$inject = [\"$scope\", \"$mdDialog\", \"items\", \"componentController\", \"allowRevert\"];\n    });\n\n    this.$scope.$on('showStudentAssets', (event, args) => {\n      let componentController = args.componentController;\n      let $event = args.$event;\n      let studentAssetDialogTemplateUrl = this.themePath + '/templates/studentAssetDialog.html';\n      let studentAssetTemplateUrl = this.themePath + '/studentAsset/studentAsset.html';\n\n      this.$mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        templateUrl: studentAssetDialogTemplateUrl,\n        locals: {\n          studentAssetTemplateUrl: studentAssetTemplateUrl,\n          componentController: componentController\n        },\n        controller: StudentAssetDialogController\n      });\n      function StudentAssetDialogController($scope, $mdDialog, componentController) {\n        $scope.studentAssetTemplateUrl = studentAssetTemplateUrl;\n        $scope.componentController = componentController;\n        $scope.closeDialog = function () {\n          $mdDialog.hide();\n        }\n      }\n      StudentAssetDialogController.$inject = [\"$scope\", \"$mdDialog\", \"componentController\"];\n    });\n\n    // a group node has turned on or off planning mode\n    this.$scope.$on('togglePlanningMode', (event, args) => {\n      this.planningMode = args.planningMode;\n    });\n\n    // handle request for notification dismiss codes\n    this.$scope.$on('viewCurrentAmbientNotification', (event, args) => {\n      let notification = args.notification;\n      let ev = args.event;\n      let notificationDismissDialogTemplateUrl = this.themePath + '/templates/notificationDismissDialog.html';\n\n      let dismissCodePrompt = {\n        parent: angular.element(document.body),\n        targetEvent: ev,\n        templateUrl: notificationDismissDialogTemplateUrl,\n        locals: {\n          notification: notification\n        },\n        controller: DismissCodeDialogController\n      };\n      DismissCodeDialogController.$inject = ['$scope', '$mdDialog', '$filter', 'NotificationService', 'ProjectService', 'StudentDataService', 'notification'];\n\n      function DismissCodeDialogController($scope, $mdDialog, $filter, NotificationService, ProjectService, StudentDataService, notification) {\n\n        $scope.$translate = $filter('translate');\n\n        $scope.input = {\n          dismissCode: \"\"\n        };\n        $scope.message = \"\";\n        $scope.notification = notification;\n        $scope.hasDismissCode = false;\n        if (notification.data) {\n          if (notification.data.dismissCode) {\n            $scope.hasDismissCode = true;\n          }\n        }\n        $scope.nodePositionAndTitle = ProjectService.getNodePositionAndTitleByNodeId(notification.nodeId);\n\n        $scope.checkDismissCode = function() {\n          if (!$scope.hasDismissCode || ($scope.input.dismissCode == notification.data.dismissCode)) {\n            NotificationService.dismissNotification(notification);\n            $mdDialog.hide();\n            // log currentAmbientNotificationDimissed event\n            var nodeId = null;\n            var componentId = null;\n            var componentType = null;\n            var category = \"Notification\";\n            var event = \"currentAmbientNotificationDimissedWithCode\";\n            var eventData = {};\n            StudentDataService.saveVLEEvent(nodeId, componentId, componentType, category, event, eventData);\n          } else {\n            $scope.errorMessage = $scope.$translate('dismissNotificationInvalidDismissCode');\n          }\n        };\n        $scope.visitNode = function() {\n          if (!$scope.hasDismissCode) {\n            // only dismiss notifications that don't require a dismiss code, but still allow them to move to the node\n            NotificationService.dismissNotification(null, $scope.notification);\n          }\n\n          let goToNodeId = $scope.notification.nodeId;\n          if (goToNodeId != null) {\n            StudentDataService.endCurrentNodeAndSetCurrentNodeByNodeId(goToNodeId);\n          }\n        };\n\n        $scope.closeDialog = function() {\n          $mdDialog.hide();\n\n          // log currentAmbientNotificationWindowClosed event\n          var nodeId = null;\n          var componentId = null;\n          var componentType = null;\n          var category = \"Notification\";\n          var event = \"currentAmbientNotificationWindowClosed\";\n          var eventData = {};\n          StudentDataService.saveVLEEvent(nodeId, componentId, componentType, category, event, eventData);\n        }\n      }\n\n      this.$mdDialog.show(dismissCodePrompt);\n\n      // log currentAmbientNotificationWindowOpened event\n      var nodeId = null;\n      var componentId = null;\n      var componentType = null;\n      var category = \"Notification\";\n      var event = \"currentAmbientNotificationWindowOpened\";\n      var eventData = {};\n      this.StudentDataService.saveVLEEvent(nodeId, componentId, componentType, category, event, eventData);\n    });\n  }\n\n  /**\n   * Set the layout state of the vle\n   * @param state string specifying state (e.g. 'notebook'; optional)\n   */\n  setLayoutState(state) {\n    let layoutState = 'nav'; // default layout state\n    if (state) {\n      layoutState = state;\n    } else {\n      // no state was sent, so set based on current node\n      if (this.currentNode) {\n        var id = this.currentNode.id;\n        if (this.ProjectService.isApplicationNode(id)) {\n          // currently viewing step, so show step view\n          layoutState = 'node';\n        } else if (this.ProjectService.isGroupNode(id)) {\n          // currently viewing group node, so show navigation view\n          layoutState = 'nav';\n        }\n      }\n    }\n\n    if (layoutState === 'notebook') {\n      this.$state.go('root.notebook', {nodeId: this.currentNode.id});\n    } else {\n      this.notebookNavOpen = false;\n      this.$state.go('root.vle', {nodeId: this.currentNode.id});\n    }\n\n    this.layoutState = layoutState;\n  }\n\n  handleServerDisconnect() {\n    if (!this.connectionLostShown) {\n      this.$mdToast.show(this.connectionLostDisplay);\n      this.connectionLostShown = true;\n    }\n  }\n\n  handleServerReconnect() {\n    this.$mdToast.hide(this.connectionLostDisplay);\n    this.connectionLostShown = false;\n  }\n\n  getAvatarColorForWorkgroupId(workgroupId) {\n    return this.ConfigService.getAvatarColorForWorkgroupId(workgroupId);\n  }\n\n  mouseMoved() {\n    /*\n     * notify the Session Service that the user has moved the mouse\n     * so we can refresh the session\n     */\n    this.SessionService.mouseMoved();\n  }\n}\n\nThemeController.$inject = [\n  '$scope',\n  '$state',\n  '$filter',\n  'ConfigService',\n  'ProjectService',\n  'StudentDataService',\n  'StudentStatusService',\n  'NotebookService',\n  'SessionService',\n  '$mdDialog',\n  '$mdMedia',\n  '$mdToast',\n  '$mdComponentRegistry'\n];\n\nexport default ThemeController;\n"]}