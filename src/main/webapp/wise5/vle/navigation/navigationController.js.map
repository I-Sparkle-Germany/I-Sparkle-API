{"version":3,"sources":["navigationController.es6"],"names":["NavigationController","$rootScope","$filter","ConfigService","ProjectService","StudentDataService","rootNode","$on","event","toState","toParams","fromState","fromParams","toNodeId","nodeId","fromNodeId","endCurrentNodeAndSetCurrentNodeByNodeId","name","isApplicationNode","document","getElementById","scrollTop","bind","$inject"],"mappings":";;;;;;;;IAAMA,oB,GACJ,8BACIC,UADJ,EAEIC,OAFJ,EAGIC,aAHJ,EAIIC,cAJJ,EAKIC,kBALJ,EAKwB;AAAA;;AACtB,OAAKJ,UAAL,GAAkBA,UAAlB;AACA,OAAKC,OAAL,GAAeA,OAAf;AACA,OAAKC,aAAL,GAAqBA,aAArB;AACA,OAAKC,cAAL,GAAsBA,cAAtB;AACA,OAAKC,kBAAL,GAA0BA,kBAA1B;AACA,OAAKC,QAAL,GAAgB,KAAKF,cAAL,CAAoBE,QAApC;;AAEA,OAAKL,UAAL,CAAgBM,GAAhB,CAAoB,qBAApB,EACI,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,UAA/C,EAA2D;AAC7D,QAAMC,WAAWH,SAASI,MAA1B;AACA,QAAMC,aAAaH,WAAWE,MAA9B;AACA,QAAID,YAAYE,UAAZ,IAA0BF,aAAaE,UAA3C,EAAuD;AACrD,WAAKV,kBAAL,CAAwBW,uCAAxB,CAAgEH,QAAhE;AACD;;AAED,QAAIJ,QAAQQ,IAAR,KAAiB,UAArB,EAAiC;AAC/B,UAAMH,SAASJ,SAASI,MAAxB;AACA,UAAI,KAAKV,cAAL,CAAoBc,iBAApB,CAAsCJ,MAAtC,CAAJ,EAAmD;AACjD;AACAK,iBAASC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA+C,CAA/C;AACD;AACF;AACF,GAdG,CAcFC,IAdE,CAcG,IAdH,CADJ;AAgBD,C;;AAGHtB,qBAAqBuB,OAArB,GAA+B,CAC7B,YAD6B,EAE7B,SAF6B,EAG7B,eAH6B,EAI7B,gBAJ6B,EAK7B,oBAL6B,CAA/B;;kBAQevB,oB","file":"navigationController.js","sourcesContent":["class NavigationController {\n  constructor(\n      $rootScope,\n      $filter,\n      ConfigService,\n      ProjectService,\n      StudentDataService) {\n    this.$rootScope = $rootScope;\n    this.$filter = $filter;\n    this.ConfigService = ConfigService;\n    this.ProjectService = ProjectService;\n    this.StudentDataService = StudentDataService;\n    this.rootNode = this.ProjectService.rootNode;\n\n    this.$rootScope.$on('$stateChangeSuccess',\n        function (event, toState, toParams, fromState, fromParams) {\n      const toNodeId = toParams.nodeId;\n      const fromNodeId = fromParams.nodeId;\n      if (toNodeId && fromNodeId && toNodeId !== fromNodeId) {\n        this.StudentDataService.endCurrentNodeAndSetCurrentNodeByNodeId(toNodeId);\n      }\n\n      if (toState.name === 'root.vle') {\n        const nodeId = toParams.nodeId;\n        if (this.ProjectService.isApplicationNode(nodeId)) {\n          // scroll to top when viewing a new step\n          document.getElementById('content').scrollTop = 0;\n        }\n      }\n    }.bind(this));\n  }\n}\n\nNavigationController.$inject = [\n  '$rootScope',\n  '$filter',\n  'ConfigService',\n  'ProjectService',\n  'StudentDataService'\n];\n\nexport default NavigationController;\n"]}