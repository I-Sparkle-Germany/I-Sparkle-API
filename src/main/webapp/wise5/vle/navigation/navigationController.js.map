{"version":3,"sources":["navigationController.es6"],"names":[],"mappings":";;;;;;;;;;IAAM,oB;AACF,kCAAY,UAAZ,EACY,aADZ,EAEY,cAFZ,EAGY,kBAHZ,EAGgC;AAAA;;AAE5B,aAAK,UAAL,GAAkB,UAAlB;AACA,aAAK,aAAL,GAAqB,aAArB;AACA,aAAK,cAAL,GAAsB,cAAtB;AACA,aAAK,kBAAL,GAA0B,kBAA1B;;AAEA,aAAK,QAAL,GAAgB,KAAK,cAAL,CAAoB,QAApC;;AAEA,aAAK,UAAL,CAAgB,GAAhB,CAAoB,qBAApB,EAA2C,UAAU,KAAV,EAAiB,OAAjB,EAA0B,QAA1B,EAAoC,SAApC,EAA+C,UAA/C,EAA2D;AAClG,gBAAI,WAAW,SAAS,MAAxB;AACA,gBAAI,aAAa,WAAW,MAA5B;AACA,gBAAI,YAAY,UAAZ,IAA0B,aAAa,UAA3C,EAAuD;AACnD,qBAAK,kBAAL,CAAwB,uCAAxB,CAAgE,QAAhE;AACH;;AAED,gBAAI,QAAQ,IAAR,KAAiB,UAArB,EAAiC;AAC7B,oBAAI,SAAS,SAAS,MAAtB;AACA,oBAAI,KAAK,cAAL,CAAoB,iBAApB,CAAsC,MAAtC,CAAJ,EAAmD;AAC/C;AACA,6BAAS,cAAT,CAAwB,SAAxB,EAAmC,SAAnC,GAA+C,CAA/C;AACH;AACJ;AACJ,SAd0C,CAczC,IAdyC,CAcpC,IAdoC,CAA3C;AAeH;;AAED;;;;;;;gDAGwB;AACpB,gBAAI,aAAa,KAAK,aAAL,CAAmB,aAAnB,EAAjB;AACA,gBAAI,cAAc,IAAlB,EAAwB;AACpB,oBAAI,YAAY,KAAK,kBAAL,CAAwB,SAAxB,EAAhB;AACA,qBAAK,MAAL,CAAY,UAAZ;AACA;AACA,oBAAI,UAAU,KAAK,IAAL,CAAU,mBAAV,EAA+B;AACzC,8BAAU;AAD+B,iBAA/B,EAEX,UAAC,OAAD,EAAa;AACZ,4BAAQ,SAAR,CAAkB,UAAC,UAAD,EAAgB;AAC9B,8BAAM,UAAN;AACH,qBAFD;AAGH,iBANa,CAAd;;AAQA;AACA,wBAAQ,IAAR,CAAa,YAAM;AACf,0BAAM,mBAAmB,QAAQ,YAAjC;AACH,iBAFD;AAGH;AACJ;;;;;;AAGL,qBAAqB,OAArB,GAA+B,CAC3B,YAD2B,EAE3B,eAF2B,EAG3B,gBAH2B,EAI3B,oBAJ2B,CAA/B;;kBAOe,oB","file":"navigationController.js","sourcesContent":["class NavigationController {\n    constructor($rootScope,\n                ConfigService,\n                ProjectService,\n                StudentDataService) {\n\n        this.$rootScope = $rootScope;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n\n        this.rootNode = this.ProjectService.rootNode;\n\n        this.$rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {\n            var toNodeId = toParams.nodeId;\n            var fromNodeId = fromParams.nodeId;\n            if (toNodeId && fromNodeId && toNodeId !== fromNodeId) {\n                this.StudentDataService.endCurrentNodeAndSetCurrentNodeByNodeId(toNodeId);\n            }\n\n            if (toState.name === 'root.vle') {\n                let nodeId = toParams.nodeId;\n                if (this.ProjectService.isApplicationNode(nodeId)) {\n                    // scroll to top when viewing a new step\n                    document.getElementById('content').scrollTop = 0;\n                }\n            }\n        }.bind(this));\n    }\n\n    /**\n     * Invokes OpenCPU to calculate and display student statistics\n     */\n    showStudentStatistics() {\n        let openCPUURL = this.ConfigService.getOpenCPUURL();\n        if (openCPUURL != null) {\n            let allEvents = this.StudentDataService.getEvents();\n            ocpu.seturl(openCPUURL);\n            //perform the request\n            var request = ocpu.call(\"getTotalTimeSpent\", {\n                \"events\": allEvents\n            }, (session) => {\n                session.getStdout((echoedData) => {\n                    alert(echoedData);\n                });\n            });\n\n            //if R returns an error, alert the error message\n            request.fail(() => {\n                alert(\"Server error: \" + request.responseText);\n            });\n        }\n    }\n}\n\nNavigationController.$inject = [\n    '$rootScope',\n    'ConfigService',\n    'ProjectService',\n    'StudentDataService'\n];\n\nexport default NavigationController;\n"]}