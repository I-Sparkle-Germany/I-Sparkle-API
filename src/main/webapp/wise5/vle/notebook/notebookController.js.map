{"version":3,"sources":["notebookController.es6"],"names":["NotebookController","$injector","$rootScope","$scope","$translate","ConfigService","NotebookService","ProjectService","StudentAssetService","StudentDataService","mode","getMode","notebook","itemId","item","notebookConfig","config","$on","event","args","logOutListener","$broadcast","templateUrl","studentAsset","alert","ev","$event","notebookItem","selectedNotebookItem","componentController","attachNotebookItemToComponent","stopPropagation","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,kB;AAEF,gCAAYC,SAAZ,EACYC,UADZ,EAEYC,MAFZ,EAGYC,UAHZ,EAIYC,aAJZ,EAKYC,eALZ,EAMYC,cANZ,EAOYC,mBAPZ,EAQYC,kBARZ,EAQgC;AAAA;;AAAA;;AAC5B,aAAKR,SAAL,GAAiBA,SAAjB;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKK,IAAL,GAAY,KAAKL,aAAL,CAAmBM,OAAnB,EAAZ;AACA,aAAKL,eAAL,GAAuBA,eAAvB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACA,aAAKC,mBAAL,GAA2BA,mBAA3B;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;;AAEA,aAAKG,QAAL,GAAgB,IAAhB;AACA,aAAKC,MAAL,GAAc,IAAd;AACA,aAAKC,IAAL,GAAY,IAAZ;AACA,aAAKC,cAAL,GAAsB,KAAKT,eAAL,CAAqBU,MAA3C;;AAEAb,eAAOc,GAAP,CAAW,iBAAX,EAA8B,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAC3C,kBAAKP,QAAL,GAAgBO,KAAKP,QAArB;AACH,SAFD;;AAIA,aAAKQ,cAAL,GAAsBjB,OAAOc,GAAP,CAAW,QAAX,EAAqB,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACxD,kBAAKC,cAAL;AACA,kBAAKlB,UAAL,CAAgBmB,UAAhB,CAA2B,wBAA3B;AACH,SAHqB,CAAtB;;AAKA;AACA,aAAKT,QAAL,GAAgB,KAAKN,eAAL,CAAqBM,QAArC;AACH;;;;yCAEgB;AACb,mBAAO,KAAKU,WAAZ;AACH;;;2CAEkBC,Y,EAAc;AAC7BC,kBAAM,yDAAN;AACA;;;;;;;AAOH;;;mCAEUC,E,EAAIZ,M,EAAQ;AACnB,iBAAKX,UAAL,CAAgBmB,UAAhB,CAA2B,YAA3B,EAAyC,EAACR,QAAQA,MAAT,EAAiBY,IAAIA,EAArB,EAAzC;AACH;;;iCAEQA,E,EAAIZ,M,EAAQ;AACjB;AACA,iBAAKX,UAAL,CAAgBmB,UAAhB,CAA2B,UAA3B,EAAuC,EAACR,QAAQA,MAAT,EAAiBY,IAAIA,EAArB,EAAvC;AACH;;;6CAEoBC,M,EAAQC,Y,EAAc;AACvC,iBAAKC,oBAAL,GAA4BD,YAA5B;AACH;;;sDAE6BD,M,EAAQC,Y,EAAc;AAChD,iBAAKE,mBAAL,CAAyBC,6BAAzB,CAAuDH,YAAvD;AACA,iBAAKC,oBAAL,GAA4B,IAA5B,CAFgD,CAEb;AACnC;AACAF,mBAAOK,eAAP,GAJgD,CAIrB;AAC9B;;;;;;AAGL/B,mBAAmBgC,OAAnB,GAA6B,CACzB,WADyB,EAEzB,YAFyB,EAGzB,QAHyB,EAIzB,YAJyB,EAKzB,eALyB,EAMzB,iBANyB,EAOzB,gBAPyB,EAQzB,qBARyB,EASzB,oBATyB,CAA7B;;kBAYehC,kB","file":"notebookController.js","sourcesContent":["'use strict';\n\nclass NotebookController {\n\n    constructor($injector,\n                $rootScope,\n                $scope,\n                $translate,\n                ConfigService,\n                NotebookService,\n                ProjectService,\n                StudentAssetService,\n                StudentDataService) {\n        this.$injector = $injector;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.mode = this.ConfigService.getMode();\n        this.NotebookService = NotebookService;\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n\n        this.notebook = null;\n        this.itemId = null;\n        this.item = null;\n        this.notebookConfig = this.NotebookService.config;\n\n        $scope.$on('notebookUpdated', (event, args) => {\n            this.notebook = args.notebook;\n        });\n\n        this.logOutListener = $scope.$on('logOut', (event, args) => {\n            this.logOutListener();\n            this.$rootScope.$broadcast('componentDoneUnloading');\n        });\n\n        // by this time, the notebook and student assets have been retrieved.\n        this.notebook = this.NotebookService.notebook;\n    }\n\n    getTemplateUrl() {\n        return this.templateUrl;\n    }\n\n    deleteStudentAsset(studentAsset) {\n        alert('delete student asset from note book not implemented yet');\n        /*\n         StudentAssetService.deleteAsset(studentAsset).then(angular.bind(this, function(deletedStudentAsset) {\n         // remove studentAsset\n         this.studentAssets.splice(this.studentAssets.indexOf(deletedStudentAsset), 1);\n         this.calculateTotalUsage();\n         }));\n         */\n    }\n\n    deleteItem(ev, itemId) {\n        this.$rootScope.$broadcast('deleteNote', {itemId: itemId, ev: ev});\n    }\n\n    editItem(ev, itemId) {\n        //this.NotebookService.editItem(ev, itemId);\n        this.$rootScope.$broadcast('editNote', {itemId: itemId, ev: ev});\n    }\n\n    notebookItemSelected($event, notebookItem) {\n        this.selectedNotebookItem = notebookItem;\n    }\n\n    attachNotebookItemToComponent($event, notebookItem) {\n        this.componentController.attachNotebookItemToComponent(notebookItem);\n        this.selectedNotebookItem = null;  // reset selected notebook item\n        // TODO: add some kind of unobtrusive confirmation to let student know that the notebook item has been added to current component\n        $event.stopPropagation();  // prevents parent notebook list item from getting the onclick event so this item won't be re-selected.\n    }\n}\n\nNotebookController.$inject = [\n    \"$injector\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$translate\",\n    \"ConfigService\",\n    \"NotebookService\",\n    \"ProjectService\",\n    \"StudentAssetService\",\n    \"StudentDataService\"\n];\n\nexport default NotebookController;\n"]}