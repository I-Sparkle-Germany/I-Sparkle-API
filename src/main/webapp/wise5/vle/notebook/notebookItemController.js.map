{"version":3,"sources":["notebookItemController.es6"],"names":[],"mappings":"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","file":"notebookItemController.js","sourcesContent":["'use strict';\n\nclass NotebookItemController {\n\n    constructor($injector,\n                $rootScope,\n                $scope,\n                $translate,\n                ConfigService,\n                NotebookService,\n                ProjectService,\n                StudentAssetService,\n                StudentDataService,\n                UtilService) {\n        this.$injector = $injector;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.NotebookService = NotebookService;\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n        this.UtilService = UtilService;\n        this.mode = this.ConfigService.getMode();\n\n        if (this.itemId == null) {\n            let currentNodeId = this.StudentDataService.getCurrentNodeId();\n            let currentNodeTitle = this.ProjectService.getNodeTitleByNodeId(currentNodeId);\n\n            this.item = {\n                id: null,       // null id means we're creating a new notebook item.\n                localNotebookItemId: this.UtilService.generateKey(10),   // this is the id that is common across the same notebook item revisions.\n                type: \"note\",\n                nodeId: currentNodeId, // Id of the node this note was created on\n                title: \"Note on \" + currentNodeTitle,  // Title of the node this note was created on\n                content: {\n                    text: \"\",\n                    attachments: []\n                }\n            };\n        } else {\n            this.item = this.NotebookService.getLatestNotebookItemByLocalNotebookItemId(this.itemId);\n            this.item.id = null; // set to null so we're creating a new notebook item. An edit to a notebook item results in a new entry in the db.\n        }\n    }\n\n    getItemNodeId() {\n        if (this.item == null) {\n            return null;\n        } else {\n            return this.item.nodeId;\n        }\n    }\n\n    /**\n     * Returns this NotebookItem's position and title.\n     */\n    getItemNodePositionAndTitle() {\n        if (this.item == null) {\n            return \"\";\n        } else {\n            return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\n        }\n    }\n\n    getTemplateUrl() {\n        return this.templateUrl;\n    }\n\n    editNotebookItem() {\n        // the actual closing of the dialog will be performed by the vleController.\n        this.$rootScope.$broadcast('openNoteDialog', {notebookItem: this.item});\n    }\n\n    saveNotebookItem() {\n        // add new notebook item\n        this.item.content.clientSaveTime = Date.parse(new Date());  // set save timestamp\n        this.NotebookService.saveNotebookItem(this.item.id, this.item.nodeId, this.item.localNotebookItemId, this.item.type, this.item.title, this.item.content)\n            .then(() => {\n                this.closeNoteDialog();\n            });\n    }\n\n    closeNoteDialog() {\n        // the actual closing of the dialog will be performed by the vleController.\n        this.$rootScope.$broadcast('closeNoteDialog');\n    }\n\n    attachStudentAssetToNote(files) {\n        if (files != null) {\n            for (var f = 0; f < files.length; f++) {\n                var file = files[f];\n                this.StudentAssetService.uploadAsset(file).then((studentAsset) => {\n                    this.StudentAssetService.copyAssetForReference(studentAsset).then((copiedAsset) => {\n                        if (copiedAsset != null) {\n                            var attachment = {\n                                studentAssetId: copiedAsset.id,\n                                iconURL: copiedAsset.iconURL\n                            };\n\n                            this.item.content.attachments.push(attachment);\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    removeAttachment(attachment) {\n        if (this.item.content.attachments.indexOf(attachment) != -1) {\n            this.item.content.attachments.splice(this.item.content.attachments.indexOf(attachment), 1);\n        }\n    }\n}\n\nNotebookItemController.$inject = [\n    \"$injector\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$translate\",\n    \"ConfigService\",\n    \"NotebookService\",\n    \"ProjectService\",\n    \"StudentAssetService\",\n    \"StudentDataService\",\n    \"UtilService\"\n];\n\nexport default NotebookItemController;"]}