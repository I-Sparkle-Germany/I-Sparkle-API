{"version":3,"sources":["notebookItemController.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;IAEM;AAEF,aAFE,sBAEF,CAAY,SAAZ,EACY,UADZ,EAEY,MAFZ,EAGY,UAHZ,EAIY,aAJZ,EAKY,eALZ,EAMY,cANZ,EAOY,mBAPZ,EAQY,kBARZ,EASY,WATZ,EASyB;;;8BAXvB,wBAWuB;;AACrB,aAAK,SAAL,GAAiB,SAAjB,CADqB;AAErB,aAAK,UAAL,GAAkB,UAAlB,CAFqB;AAGrB,aAAK,MAAL,GAAc,MAAd,CAHqB;AAIrB,aAAK,UAAL,GAAkB,UAAlB,CAJqB;AAKrB,aAAK,aAAL,GAAqB,aAArB,CALqB;AAMrB,aAAK,eAAL,GAAuB,eAAvB,CANqB;AAOrB,aAAK,cAAL,GAAsB,cAAtB,CAPqB;AAQrB,aAAK,mBAAL,GAA2B,mBAA3B,CARqB;AASrB,aAAK,kBAAL,GAA0B,kBAA1B,CATqB;AAUrB,aAAK,WAAL,GAAmB,WAAnB,CAVqB;AAWrB,aAAK,IAAL,GAAY,KAAK,aAAL,CAAmB,OAAnB,EAAZ,CAXqB;;AAarB,aAAK,IAAL,GAAY,KAAK,eAAL,CAAqB,0CAArB,CAAgE,KAAK,MAAL,CAA5E,CAbqB;AAcrB,aAAK,IAAL,CAAU,EAAV,GAAe,IAAf;;;AAdqB,YAiBrB,CAAK,IAAL,GAAY,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,IAAV,GAAiB,IAA7B,CAjBS;;AAmBrB,aAAK,cAAL,GAAsB,KAAK,eAAL,CAAqB,iBAArB,EAAtB,CAnBqB;AAoBrB,aAAK,KAAL,GAAa,KAAK,cAAL,CAAoB,SAApB,CAA8B,KAAK,IAAL,CAA9B,CAAyC,KAAzC,CApBQ;;AAsBrB,aAAK,UAAL,CAAgB,GAAhB,CAAoB,iBAApB,EAAuC,UAAC,KAAD,EAAQ,IAAR,EAAiB;AACpD,gBAAI,WAAW,KAAK,QAAL,CADqC;AAEpD,kBAAK,IAAL,GAAY,SAAS,KAAT,CAAe,MAAK,MAAL,CAAf,CAA4B,IAA5B,EAAZ,CAFoD;SAAjB,CAAvC,CAtBqB;KATzB;;iBAFE;;wCAuCc;AACZ,gBAAI,KAAK,IAAL,IAAa,IAAb,EAAmB;AACnB,uBAAO,IAAP,CADmB;aAAvB,MAEO;AACH,uBAAO,KAAK,IAAL,CAAU,MAAV,CADJ;aAFP;;;;;;;;;0CAUc;AACd,gBAAI,KAAK,IAAL,IAAa,IAAb,EAAmB;AACnB,uBAAO,EAAP,CADmB;aAAvB,MAEO;AACH,uBAAO,KAAK,cAAL,CAAoB,+BAApB,CAAoD,KAAK,IAAL,CAAU,MAAV,CAA3D,CADG;aAFP;;;;;;;;;8CAUkB;AAClB,gBAAI,KAAK,IAAL,IAAa,IAAb,EAAmB;AACnB,uBAAO,EAAP,CADmB;aAAvB,MAEO;AACH,uBAAO,KAAK,cAAL,CAAoB,mBAApB,CAAwC,KAAK,IAAL,CAAU,MAAV,CAA/C,CADG;aAFP;;;;yCAOa;AACb,mBAAO,KAAK,cAAL,CAAoB,YAApB,KAAqC,6BAArC,CADM;;;;iCAIR,IAAI;AACT,gBAAI,KAAK,QAAL,EAAe;AACf,qBAAK,QAAL,CAAc,EAAC,KAAK,EAAL,EAAS,SAAS,KAAK,IAAL,CAAU,mBAAV,EAAjC,EADe;aAAnB;;;;gCAKG,IAAI;;;;;WA/ET;;;AAoFN,uBAAuB,OAAvB,GAAiC,CAC7B,WAD6B,EAE7B,YAF6B,EAG7B,QAH6B,EAI7B,YAJ6B,EAK7B,eAL6B,EAM7B,iBAN6B,EAO7B,gBAP6B,EAQ7B,qBAR6B,EAS7B,oBAT6B,EAU7B,aAV6B,CAAjC;;kBAae","file":"notebookItemController.js","sourcesContent":["'use strict';\n\nclass NotebookItemController {\n\n    constructor($injector,\n                $rootScope,\n                $scope,\n                $translate,\n                ConfigService,\n                NotebookService,\n                ProjectService,\n                StudentAssetService,\n                StudentDataService,\n                UtilService) {\n        this.$injector = $injector;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.NotebookService = NotebookService;\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n        this.UtilService = UtilService;\n        this.mode = this.ConfigService.getMode();\n\n        this.item = this.NotebookService.getLatestNotebookItemByLocalNotebookItemId(this.itemId);\n        this.item.id = null; // set to null so we're creating a new notebook item. An edit to a notebook item results in a new entry in the db.\n\n        // set the type in the controller\n        this.type = this.item ? this.item.type : null;\n\n        this.notebookConfig = this.NotebookService.getNotebookConfig();\n        this.label = this.notebookConfig.itemTypes[this.type].label;\n\n        this.$rootScope.$on('notebookUpdated', (event, args) => {\n            let notebook = args.notebook;\n            this.item = notebook.items[this.itemId].last();\n        });\n    }\n\n    getItemNodeId() {\n        if (this.item == null) {\n            return null;\n        } else {\n            return this.item.nodeId;\n        }\n    }\n\n    /**\n     * Returns this NotebookItem's position link\n     */\n    getItemNodeLink() {\n        if (this.item == null) {\n            return \"\";\n        } else {\n            return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\n        }\n    }\n\n    /**\n     * Returns this NotebookItem's position\n     */\n    getItemNodePosition() {\n        if (this.item == null) {\n            return \"\";\n        } else {\n            return this.ProjectService.getNodePositionById(this.item.nodeId);\n        }\n    }\n\n    getTemplateUrl() {\n        return this.ProjectService.getThemePath() + '/notebook/notebookItem.html';\n    }\n\n    doSelect(ev) {\n        if (this.onSelect) {\n            this.onSelect({$ev: ev, $itemId: this.item.localNotebookItemId});\n        }\n    }\n\n    delete(ev) {\n        // TODO: add archiving/deleting notebook items\n    }\n}\n\nNotebookItemController.$inject = [\n    \"$injector\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$translate\",\n    \"ConfigService\",\n    \"NotebookService\",\n    \"ProjectService\",\n    \"StudentAssetService\",\n    \"StudentDataService\",\n    \"UtilService\"\n];\n\nexport default NotebookItemController;\n"]}