{"version":3,"sources":["notebookItemReportController.es6"],"names":[],"mappings":"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","file":"notebookItemReportController.js","sourcesContent":["'use strict';\n\nclass NotebookItemReportController {\n\n    constructor($injector,\n                $mdDialog,\n                $rootScope,\n                $scope,\n                $translate,\n                ConfigService,\n                NotebookService,\n                ProjectService,\n                StudentAssetService,\n                StudentDataService) {\n        this.$injector = $injector;\n        this.$mdDialog = $mdDialog;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.NotebookService = NotebookService;\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n        this.mode = this.ConfigService.getMode();\n        this.reportItem = this.NotebookService.getLatestNotebookReportItemByReportId(this.reportId);\n        if (this.reportItem == null) {\n            // Student doesn't have work for this report yet, so we'll use the template.\n            this.reportItem = this.NotebookService.getTemplateReportItemByReportId(this.reportId);\n            if (this.reportItem == null) {\n                // if there is no template, don't allow student to work on the report.\n                return;\n            } else {\n                this.reportItem.id = null;  // set the id to null so it can be inserted as initial version, as opposed to updated.\n            }\n        }\n    }\n\n    getItemNodeId() {\n        if (this.item == null) {\n            return null;\n        } else {\n            return this.item.nodeId;\n        }\n    }\n\n    /**\n     * Returns this NotebookItem's position and title.\n     */\n    getItemNodePositionAndTitle() {\n        if (this.item == null) {\n            return \"\";\n        } else {\n            return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\n        }\n    }\n\n    getTemplateUrl() {\n        return this.templateUrl;\n    }\n\n    addTextContent(section) {\n        let newReportContent = {\n            \"type\": \"text\",\n            \"value\": \"Write your thoughts here...\"\n        };\n        section.content.push(newReportContent);\n    }\n\n    editSectionContentText(sectionContent) {\n\n    }\n\n    addNotebookItemContent($event, section) {\n        let notebookItems = this.NotebookService.notebook.items;\n        let templateUrl = this.themePath + '/notebook/notebookItemChooser.html';\n\n        this.$mdDialog.show({\n            parent: angular.element(document.body),\n            targetEvent: $event,\n            templateUrl: templateUrl,\n            locals: {\n                notebookItems: notebookItems,\n                section: section,\n                themePath: this.themePath\n            },\n            controller: NotebookItemChooserController,\n            controllerAs: 'notebookItemChooserController',\n            bindToController: true\n        });\n        function NotebookItemChooserController($scope, $mdDialog, notebookItems, section, themePath) {\n            $scope.notebookItems = notebookItems;\n            $scope.section = section;\n            $scope.themePath = themePath;\n            $scope.close = () => {\n                $mdDialog.hide();\n            };\n            $scope.chooseNotebookItem = (notebookItem) => {\n                let newReportContent = {\n                    type: \"notebookItem\",\n                    notebookItemId: notebookItem.localNotebookItemId\n                };\n                section.content.push(newReportContent);\n                $mdDialog.hide();\n            };\n        }\n        NotebookItemChooserController.$inject = [\"$scope\", \"$mdDialog\", \"notebookItems\", \"section\", \"themePath\"];\n    }\n\n    saveNotebookReportItem() {\n        // save new report notebook item\n        this.reportItem.content.clientSaveTime = Date.parse(new Date());  // set save timestamp\n        this.NotebookService.saveNotebookItem(this.reportItem.id, this.reportItem.nodeId, this.reportItem.localNotebookItemId, this.reportItem.type, this.reportItem.title, this.reportItem.content)\n            .then(() => {\n                this.$translate(['ok']).then((translations) => {\n                    this.$mdDialog.show(\n                        this.$mdDialog.alert()\n                            .parent(angular.element(document.body))\n                            .title(\"Report Saved\")\n                            .htmlContent(\"Report was saved successfully.\")\n                            .ariaLabel(\"Report was saved successfully.\")\n                            .ok(translations.ok)\n                            .targetEvent(event)\n                    );\n                })\n            });\n    }\n}\n\nNotebookItemReportController.$inject = [\n    \"$injector\",\n    '$mdDialog',\n    \"$rootScope\",\n    \"$scope\",\n    \"$translate\",\n    \"ConfigService\",\n    \"NotebookService\",\n    \"ProjectService\",\n    \"StudentAssetService\",\n    \"StudentDataService\"\n];\n\nexport default NotebookItemReportController;"]}