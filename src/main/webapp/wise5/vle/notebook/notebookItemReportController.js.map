{"version":3,"sources":["notebookItemReportController.es6"],"names":[],"mappings":"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","file":"notebookItemReportController.js","sourcesContent":["'use strict';\n\nclass NotebookItemReportController {\n\n    constructor($injector,\n        $mdBottomSheet,\n        $rootScope,\n        $scope,\n        $translate,\n        ConfigService,\n        NotebookService,\n        ProjectService,\n        StudentAssetService,\n        StudentDataService) {\n            this.$injector = $injector;\n            this.$mdBottomSheet = $mdBottomSheet;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$translate = $translate;\n            this.ConfigService = ConfigService;\n            this.NotebookService = NotebookService;\n            this.ProjectService = ProjectService;\n            this.StudentAssetService = StudentAssetService;\n            this.StudentDataService = StudentDataService;\n            this.mode = this.ConfigService.getMode();\n\n            this.dirty = false;\n\n            this.autoSaveInterval = 60000;  // the auto save interval in milliseconds\n\n            this.saveMessage = {\n                text: '',\n                time: ''\n            };\n\n            this.reportItem = this.NotebookService.getLatestNotebookReportItemByReportId(this.reportId);\n            if (this.reportItem) {\n                let serverSaveTime = this.reportItem.serverSaveTime;\n                let clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\n                this.setSaveMessage('Last saved', clientSaveTime);\n            } else {\n                // Student doesn't have work for this report yet, so we'll use the template.\n                this.reportItem = this.NotebookService.getTemplateReportItemByReportId(this.reportId);\n                if (this.reportItem == null) {\n                    // if there is no template, don't allow student to work on the report.\n                    return;\n                } else {\n                }\n            }\n            this.reportItem.id = null;  // set the id to null so it can be inserted as initial version, as opposed to updated. this is true for both new and just-loaded reports.\n\n            this.notebookConfig = this.NotebookService.getNotebookConfig();\n            this.label = this.notebookConfig.itemTypes.report.label;\n\n            // summernote editor options\n            this.summernoteOptions = {\n                toolbar: [\n                    ['edit',['undo','redo']],\n                    ['style', ['bold', 'italic', 'underline'/*, 'superscript', 'subscript', 'strikethrough', 'clear'*/]],\n                    //['style', ['style']],\n                    //['fontface', ['fontname']],\n                    //['textsize', ['fontsize']],\n                    //['fontclr', ['color']],\n                    ['para', ['ul', 'ol', 'paragraph'/*, 'lineheight'*/]],\n                    //['height', ['height']],\n                    //['table', ['table']],\n                    //['insert', ['link','picture','video','hr']],\n                    //['view', ['fullscreen', 'codeview']],\n                    //['help', ['help']]\n                    ['customButton', ['customButton']]\n                    //['print', ['print']]\n                ],\n                popover: {\n                    image: [\n                        ['imagesize', ['imageSize100', 'imageSize50', 'imageSize25']],\n                        //['float', ['floatLeft', 'floatRight', 'floatNone']],\n                        ['remove', ['removeMedia']]\n                    ]\n                },\n                customButton: {\n                    buttonText: 'Add ' + this.notebookConfig.label + ' Item +',\n                    tooltip: 'Insert from ' + this.notebookConfig.label,\n                    buttonClass: 'accent-1 notebook-item--report__add-note',\n                    action: ($event) => {\n                        this.addNotebookItemContent($event);\n                    }\n                },\n                disableDragAndDrop: true,\n                toolbarContainer: '#' + this.reportId + '-toolbar',\n                callbacks: {\n                    onBlur: function() {\n                        $(this).summernote('saveRange');\n                    }\n                }\n            }\n\n            this.$scope.$watch(() => {\n                return this.reportItem.content.content;\n            }, (newValue, oldValue) => {\n                if (newValue !== oldValue) {\n                    this.dirty = true;\n                }\n            });\n\n            // start the auto save interval\n            this.startAutoSaveInterval();\n        }\n\n        getItemNodeId() {\n            if (this.item == null) {\n                return null;\n            } else {\n                return this.item.nodeId;\n            }\n        }\n\n        /**\n        * Returns this NotebookItem's position and title.\n        */\n        getItemNodePositionAndTitle() {\n            if (this.item == null) {\n                return \"\";\n            } else {\n                return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\n            }\n        }\n\n        getTemplateUrl() {\n            return this.templateUrl;\n        }\n\n        addNotebookItemContent(ev) {\n            let notebookItems = this.NotebookService.notebook.items;\n            let templateUrl = this.themePath + '/notebook/notebookItemChooser.html';\n            let reportTextareaCursorPosition = angular.element('textarea.report').prop(\"selectionStart\"); // insert the notebook item at the cursor position later\n            let $reportElement = $('#' + this.reportId);\n\n            this.$mdBottomSheet.show({\n                parent: angular.element(document.body),\n                templateUrl: templateUrl,\n                locals: {\n                    notebookItems: notebookItems,\n                    reportItem: this.reportItem,\n                    reportTextareaCursorPosition: reportTextareaCursorPosition,\n                    themePath: this.themePath,\n                    notebookConfig: this.notebookConfig\n                },\n                controller: 'GridBottomSheetCtrl',\n                controller: NotebookItemChooserController,\n                controllerAs: 'notebookItemChooserController',\n                bindToController: true\n            });\n\n            function NotebookItemChooserController($rootScope, $mdBottomSheet, $scope, notebookItems, reportItem, reportTextareaCursorPosition, themePath) {\n                $scope.notebookItems = notebookItems;\n                $scope.reportItem = reportItem;\n                $scope.reportTextareaCursorPosition = reportTextareaCursorPosition;\n                $scope.themePath = themePath;\n                $scope.chooseNotebookItem = (notebookItem) => {\n                    //let notebookItemHTML = '<notebook-item item-id=\"\\'' + notebookItem.localNotebookItemId + '\\'\" is-edit-allowed=\"true\"></notebook-item>';\n                    let $item = $('<div></div>').css('text-align', 'center');\n                    if (notebookItem.content && notebookItem.content.attachments) {\n                        for (let a = 0; a < notebookItem.content.attachments.length; a++) {\n                            let notebookItemAttachment = notebookItem.content.attachments[a];\n                            let $img = $('<img src=\"' + notebookItemAttachment.iconURL + '\" alt=\"notebook image\" style=\"width: 75%; max-width: 100%; height: auto; border: 1px solid #aaaaaa; padding: 8px; margin-bottom: 4px;\" />');\n                            $img.addClass('notebook-item--report__note-img');\n                            //$reportElement.find('.note-editable').trigger('focus');\n                            $item.append($img);\n                        }\n                    }\n                    if (notebookItem.content && notebookItem.content.text) {\n                        let $caption = $('<div><b>' + notebookItem.content.text + '</b></div>').css({'text-align': 'center'});\n                        $item.append($caption);\n                    }\n                    //theEditor.content.insertHtmlAtCursor(notebookItemHTML);\n                    //$rootScope.$broadcast(\"notebookItemChosen\", {\"notebookItemHTML\": notebookItemHTML});\n                    //$scope.reportItem.content.content = $scope.reportItem.content.content.substring(0, reportTextareaCursorPosition) + notebookItemHTML + $scope.reportItem.content.content.substring(reportTextareaCursorPosition);\n                    $reportElement.summernote('focus');\n                    $reportElement.summernote('restoreRange');\n                    $reportElement.summernote('insertNode', $item[0]);\n\n                    // hide chooser\n                    $mdBottomSheet.hide();\n                };\n            }\n            NotebookItemChooserController.$inject = [\"$rootScope\", \"$mdBottomSheet\", \"$scope\", \"notebookItems\", \"reportItem\", \"reportTextareaCursorPosition\", \"themePath\"];\n        }\n\n        /**\n        * Start the auto save interval for this report\n        */\n        startAutoSaveInterval() {\n            this.stopAutoSaveInterval();  // stop any existing interval\n            this.autoSaveIntervalId = setInterval(() => {\n                // check if the student work is dirty\n                if (this.dirty) {\n                    // the student work is dirty so we will save\n\n                    /*\n                    * obtain the component states from the children and save them\n                    * to the server\n                    */\n                    this.saveNotebookReportItem();\n                }\n            }, this.autoSaveInterval);\n        };\n\n        /**\n        * Stop the auto save interval for this report\n        */\n        stopAutoSaveInterval() {\n            clearInterval(this.autoSaveIntervalId);\n        };\n\n        /**\n        * Save the notebook report item to server\n        */\n        saveNotebookReportItem() {\n            // save new report notebook item\n            this.reportItem.content.clientSaveTime = Date.parse(new Date());  // set save timestamp\n            this.NotebookService.saveNotebookItem(this.reportItem.id, this.reportItem.nodeId, this.reportItem.localNotebookItemId, this.reportItem.type, this.reportItem.title, this.reportItem.content)\n            .then((result) => {\n                if(result) {\n                    //this.$translate(['ok']).then((translations) => {\n                    this.dirty = false;\n                    this.reportItem.id = result.id; // set the reportNotebookItemId to the newly-incremented id so that future saves during this visit will be an update instead of an insert.\n                    let serverSaveTime = result.serverSaveTime;\n                    let clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\n\n                    // set save message\n                    this.setSaveMessage('Saved', clientSaveTime);\n                    //})\n                }\n            });\n        }\n\n        /**\n         * Account for potential vertical scrollbar on Notebook content and set\n         * fixed rich text toolbar location accordingly\n         */\n        setEditorPosition(distance, elem, edge) {\n            let scrollBarWidth = document.body.clientWidth - angular.element(document.querySelector('#notebook')).outerWidth(true);\n            elem.find('.notebook-item--report__toolbar').css('right', scrollBarWidth);\n        }\n\n        /**\n        * Set the message next to the save button\n        * @param message the message to display\n        * @param time the time to display\n        */\n        setSaveMessage(message, time) {\n            this.saveMessage.text = message;\n            this.saveMessage.time = time;\n        }\n    }\n\n    NotebookItemReportController.$inject = [\n        \"$injector\",\n        '$mdBottomSheet',\n        \"$rootScope\",\n        \"$scope\",\n        \"$translate\",\n        \"ConfigService\",\n        \"NotebookService\",\n        \"ProjectService\",\n        \"StudentAssetService\",\n        \"StudentDataService\"\n    ];\n\n    export default NotebookItemReportController;\n"]}