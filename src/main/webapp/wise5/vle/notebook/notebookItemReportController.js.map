{"version":3,"sources":["notebookItemReportController.es6"],"names":[],"mappings":"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","file":"notebookItemReportController.js","sourcesContent":["'use strict';\n\nclass NotebookItemReportController {\n\n    constructor($injector,\n        $mdBottomSheet,\n        $rootScope,\n        $scope,\n        $translate,\n        ConfigService,\n        NotebookService,\n        ProjectService,\n        StudentAssetService,\n        StudentDataService) {\n            this.$injector = $injector;\n            this.$mdBottomSheet = $mdBottomSheet;\n            this.$rootScope = $rootScope;\n            this.$scope = $scope;\n            this.$translate = $translate;\n            this.ConfigService = ConfigService;\n            this.NotebookService = NotebookService;\n            this.ProjectService = ProjectService;\n            this.StudentAssetService = StudentAssetService;\n            this.StudentDataService = StudentDataService;\n            this.mode = this.ConfigService.getMode();\n\n            this.dirty = false;\n\n            this.autoSaveInterval = 60000;  // the auto save interval in milliseconds\n\n            this.saveMessage = {\n                text: '',\n                time: ''\n            };\n\n            this.reportItem = this.NotebookService.getLatestNotebookReportItemByReportId(this.reportId);\n            if (this.reportItem) {\n                let serverSaveTime = this.reportItem.serverSaveTime;\n                let clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\n                this.setSaveMessage('Last saved', clientSaveTime);\n            } else {\n                // Student doesn't have work for this report yet, so we'll use the template.\n                this.reportItem = this.NotebookService.getTemplateReportItemByReportId(this.reportId);\n                if (this.reportItem == null) {\n                    // if there is no template, don't allow student to work on the report.\n                    return;\n                } else {\n                }\n            }\n            this.reportItem.id = null;  // set the id to null so it can be inserted as initial version, as opposed to updated. this is true for both new and just-loaded reports.\n\n            this.notebookConfig = this.NotebookService.getNotebookConfig();\n            this.label = this.notebookConfig.itemTypes.report.label;\n\n            // summernote editor options\n            this.summernoteOptions = {\n                toolbar: [\n                    ['edit',['undo','redo']],\n                    ['style', ['bold', 'italic', 'underline'/*, 'superscript', 'subscript', 'strikethrough', 'clear'*/]],\n                    //['style', ['style']],\n                    //['fontface', ['fontname']],\n                    //['textsize', ['fontsize']],\n                    //['fontclr', ['color']],\n                    ['para', ['ul', 'ol', 'paragraph'/*, 'lineheight'*/]],\n                    //['height', ['height']],\n                    //['table', ['table']],\n                    //['insert', ['link','picture','video','hr']],\n                    //['view', ['fullscreen', 'codeview']],\n                    //['help', ['help']]\n                    ['customButton', ['customButton']]\n                    //['print', ['print']]\n                ],\n                popover: {\n                    image: [\n                        ['imagesize', ['imageSize100', 'imageSize50', 'imageSize25']],\n                        //['float', ['floatLeft', 'floatRight', 'floatNone']],\n                        ['remove', ['removeMedia']]\n                    ]\n                },\n                customButton: {\n                    buttonText: 'Add ' + this.notebookConfig.label + ' Item +',\n                    tooltip: 'Insert from ' + this.notebookConfig.label,\n                    buttonClass: 'accent-1 notebook-item--report__add-note',\n                    action: ($event) => {\n                        this.addNotebookItemContent($event);\n                    }\n                },\n                disableDragAndDrop: true,\n                toolbarContainer: '#' + this.reportId + '-toolbar',\n                callbacks: {\n                    onBlur: function() {\n                        $(this).summernote('saveRange');\n                    }\n                }\n            }\n\n            this.$scope.$watch(() => {\n                return this.reportItem.content.content;\n            }, (newValue, oldValue) => {\n                if (newValue !== oldValue) {\n                    this.dirty = true;\n                }\n            });\n\n            // start the auto save interval\n            this.startAutoSaveInterval();\n        }\n\n        getItemNodeId() {\n            if (this.item == null) {\n                return null;\n            } else {\n                return this.item.nodeId;\n            }\n        }\n\n        /**\n        * Returns this NotebookItem's position and title.\n        */\n        getItemNodePositionAndTitle() {\n            if (this.item == null) {\n                return \"\";\n            } else {\n                return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\n            }\n        }\n\n        getTemplateUrl() {\n            return this.templateUrl;\n        }\n\n        addNotebookItemContent(ev) {\n            let notebookItems = this.NotebookService.notebook.items;\n            let templateUrl = this.themePath + '/notebook/notebookItemChooser.html';\n            let reportTextareaCursorPosition = angular.element('textarea.report').prop(\"selectionStart\"); // insert the notebook item at the cursor position later\n            let $reportElement = $('#' + this.reportId);\n\n            this.$mdBottomSheet.show({\n                parent: angular.element(document.body),\n                templateUrl: templateUrl,\n                locals: {\n                    notebookItems: notebookItems,\n                    reportItem: this.reportItem,\n                    reportTextareaCursorPosition: reportTextareaCursorPosition,\n                    themePath: this.themePath,\n                    notebookConfig: this.notebookConfig\n                },\n                controller: 'GridBottomSheetCtrl',\n                controller: NotebookItemChooserController,\n                controllerAs: 'notebookItemChooserController',\n                bindToController: true\n            });\n\n            function NotebookItemChooserController($rootScope, $mdBottomSheet, $scope, notebookItems, reportItem, reportTextareaCursorPosition, themePath) {\n                $scope.notebookItems = notebookItems;\n                $scope.reportItem = reportItem;\n                $scope.reportTextareaCursorPosition = reportTextareaCursorPosition;\n                $scope.themePath = themePath;\n                $scope.chooseNotebookItem = (notebookItem) => {\n                    //let notebookItemHTML = '<notebook-item item-id=\"\\'' + notebookItem.localNotebookItemId + '\\'\" is-edit-allowed=\"true\"></notebook-item>';\n                    let $item = $('<div></div>').css('text-align', 'center');\n                    if (notebookItem.content && notebookItem.content.attachments) {\n                        for (let a = 0; a < notebookItem.content.attachments.length; a++) {\n                            let notebookItemAttachment = notebookItem.content.attachments[a];\n                            let $img = $('<img src=\"' + notebookItemAttachment.iconURL + '\" alt=\"notebook image\" style=\"width: 75%; max-width: 100%; height: auto; border: 1px solid #aaaaaa; padding: 8px; margin-bottom: 4px;\" />');\n                            $img.addClass('notebook-item--report__note-img');\n                            //$reportElement.find('.note-editable').trigger('focus');\n                            $item.append($img);\n                        }\n                    }\n                    if (notebookItem.content && notebookItem.content.text) {\n                        let $caption = $('<div><b>' + notebookItem.content.text + '</b></div>').css({'text-align': 'center'});\n                        $item.append($caption);\n                    }\n                    //theEditor.content.insertHtmlAtCursor(notebookItemHTML);\n                    //$rootScope.$broadcast(\"notebookItemChosen\", {\"notebookItemHTML\": notebookItemHTML});\n                    //$scope.reportItem.content.content = $scope.reportItem.content.content.substring(0, reportTextareaCursorPosition) + notebookItemHTML + $scope.reportItem.content.content.substring(reportTextareaCursorPosition);\n                    $reportElement.summernote('focus');\n                    $reportElement.summernote('restoreRange');\n                    $reportElement.summernote('insertNode', $item[0]);\n\n                    // hide chooser\n                    $mdBottomSheet.hide();\n                };\n            }\n            NotebookItemChooserController.$inject = [\"$rootScope\", \"$mdBottomSheet\", \"$scope\", \"notebookItems\", \"reportItem\", \"reportTextareaCursorPosition\", \"themePath\"];\n        }\n\n        /**\n        * Start the auto save interval for this report\n        */\n        startAutoSaveInterval() {\n            this.stopAutoSaveInterval();  // stop any existing interval\n            this.autoSaveIntervalId = setInterval(() => {\n                // check if the student work is dirty\n                if (this.dirty) {\n                    // the student work is dirty so we will save\n\n                    /*\n                    * obtain the component states from the children and save them\n                    * to the server\n                    */\n                    this.saveNotebookReportItem();\n                }\n            }, this.autoSaveInterval);\n        };\n\n        /**\n        * Stop the auto save interval for this report\n        */\n        stopAutoSaveInterval() {\n            clearInterval(this.autoSaveIntervalId);\n        };\n\n        /**\n        * Save the notebook report item to server\n        */\n        saveNotebookReportItem() {\n            // save new report notebook item\n            this.reportItem.content.clientSaveTime = Date.parse(new Date());  // set save timestamp\n            this.NotebookService.saveNotebookItem(this.reportItem.id, this.reportItem.nodeId, this.reportItem.localNotebookItemId, this.reportItem.type, this.reportItem.title, this.reportItem.content)\n            .then((result) => {\n                if(result) {\n                    //this.$translate(['ok']).then((translations) => {\n                    this.dirty = false;\n                    this.reportItem.id = result.id; // set the reportNotebookItemId to the newly-incremented id so that future saves during this visit will be an update instead of an insert.\n                    let serverSaveTime = result.serverSaveTime;\n                    let clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\n\n                    // set save message\n                    this.setSaveMessage('Saved', clientSaveTime);\n                    //})\n                }\n            });\n        }\n\n        /**\n         * Account for potential vertical scrollbar on Notebook content and set\n         * fixed rich text toolbar location accordingly\n         */\n        setEditorPosition(distance, elem, edge) {\n            let scrollBarWidth = document.body.clientWidth - angular.element(document.querySelector('#notebook')).outerWidth(true);\n            elem.find('.notebook-item--report__toolbar').css('right', scrollBarWidth);\n        }\n\n        /**\n        * Set the message next to the save button\n        * @param message the message to display\n        * @param time the time to display\n        */\n        setSaveMessage(message, time) {\n            this.saveMessage.text = message;\n            this.saveMessage.time = time;\n        }\n    }\n\n    NotebookItemReportController.$inject = [\n        \"$injector\",\n        '$mdBottomSheet',\n        \"$rootScope\",\n        \"$scope\",\n        \"$translate\",\n        \"ConfigService\",\n        \"NotebookService\",\n        \"ProjectService\",\n        \"StudentAssetService\",\n        \"StudentDataService\"\n    ];\n\n    export default NotebookItemReportController;\n"]}