{"version":3,"sources":["notebookItemReportController.es6"],"names":[],"mappings":"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","file":"notebookItemReportController.js","sourcesContent":["'use strict';\n\nclass NotebookItemReportController {\n\n    constructor($injector,\n                $mdDialog,\n                $rootScope,\n                $scope,\n                $translate,\n                ConfigService,\n                NotebookService,\n                ProjectService,\n                StudentAssetService,\n                StudentDataService) {\n        this.$injector = $injector;\n        this.$mdDialog = $mdDialog;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.NotebookService = NotebookService;\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n        this.StudentDataService = StudentDataService;\n        this.mode = this.ConfigService.getMode();\n\n        this.dirty = false;\n\n        this.saveMessage = {\n            text: '',\n            time: ''\n        };\n\n        this.reportItem = this.NotebookService.getLatestNotebookReportItemByReportId(this.reportId);\n        if (this.reportItem) {\n            let serverSaveTime = this.reportItem.serverSaveTime;\n            let clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\n            this.setSaveMessage('Last saved', clientSaveTime);\n        } else {\n            // Student doesn't have work for this report yet, so we'll use the template.\n            this.reportItem = this.NotebookService.getTemplateReportItemByReportId(this.reportId);\n            if (this.reportItem == null) {\n                // if there is no template, don't allow student to work on the report.\n                return;\n            } else {\n                this.reportItem.id = null;  // set the id to null so it can be inserted as initial version, as opposed to updated.\n            }\n        }\n\n        this.notebookConfig = this.NotebookService.getNotebookConfig();\n        this.label = this.notebookConfig.itemTypes.report.label;\n\n        this.$scope.$watch(() => {\n            return this.reportItem.content.content;\n        }, (newValue, oldValue) => {\n            if (newValue !== oldValue) {\n                this.dirty = true;\n            }\n        });\n    }\n\n    getItemNodeId() {\n        if (this.item == null) {\n            return null;\n        } else {\n            return this.item.nodeId;\n        }\n    }\n\n    /**\n     * Returns this NotebookItem's position and title.\n     */\n    getItemNodePositionAndTitle() {\n        if (this.item == null) {\n            return \"\";\n        } else {\n            return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\n        }\n    }\n\n    getTemplateUrl() {\n        return this.templateUrl;\n    }\n\n    addNotebookItemContent($event) {\n        let notebookItems = this.NotebookService.notebook.items;\n        let templateUrl = this.themePath + '/notebook/notebookItemChooser.html';\n        let reportTextareaCursorPosition = angular.element('textarea.report').prop(\"selectionStart\"); // insert the notebook item at the cursor position later\n\n        this.$mdDialog.show({\n            parent: angular.element(document.body),\n            targetEvent: $event,\n            templateUrl: templateUrl,\n            locals: {\n                notebookItems: notebookItems,\n                reportItem: this.reportItem,\n                reportTextareaCursorPosition: reportTextareaCursorPosition,\n                themePath: this.themePath\n            },\n            controller: NotebookItemChooserController,\n            controllerAs: 'notebookItemChooserController',\n            bindToController: true\n        });\n        function NotebookItemChooserController($scope, $mdDialog, notebookItems, reportItem, reportTextareaCursorPosition, themePath) {\n            $scope.notebookItems = notebookItems;\n            $scope.reportItem = reportItem;\n            $scope.reportTextareaCursorPosition = reportTextareaCursorPosition;\n            $scope.themePath = themePath;\n            $scope.close = () => {\n                $mdDialog.hide();\n            };\n            $scope.chooseNotebookItem = (notebookItem) => {\n                let notebookItemHTML = '<notebook-item item-id=\"\\'' + notebookItem.localNotebookItemId + '\\'\" is-edit-allowed=\"true\"></notebook-item>';\n                $scope.reportItem.content.content = $scope.reportItem.content.content.substring(0, reportTextareaCursorPosition) + notebookItemHTML + $scope.reportItem.content.content.substring(reportTextareaCursorPosition);\n                $mdDialog.hide();\n            };\n        }\n        NotebookItemChooserController.$inject = [\"$scope\", \"$mdDialog\", \"notebookItems\", \"reportItem\", \"reportTextareaCursorPosition\", \"themePath\"];\n    }\n\n    saveNotebookReportItem() {\n        // save new report notebook item\n        this.reportItem.content.clientSaveTime = Date.parse(new Date());  // set save timestamp\n        this.NotebookService.saveNotebookItem(this.reportItem.id, this.reportItem.nodeId, this.reportItem.localNotebookItemId, this.reportItem.type, this.reportItem.title, this.reportItem.content)\n            .then((result) => {\n                if(result) {\n                    //this.$translate(['ok']).then((translations) => {\n                    this.dirty = false;\n                    let serverSaveTime = result.serverSaveTime;\n                    let clientSaveTime = this.ConfigService.convertToClientTimestamp(serverSaveTime);\n                    this.setSaveMessage('Saved', clientSaveTime);\n                    //})\n                }\n            });\n    }\n\n    /**\n     * Set the message next to the save button\n     * @param message the message to display\n     * @param time the time to display\n     */\n    setSaveMessage(message, time) {\n        this.saveMessage.text = message;\n        this.saveMessage.time = time;\n    }\n}\n\nNotebookItemReportController.$inject = [\n    \"$injector\",\n    '$mdDialog',\n    \"$rootScope\",\n    \"$scope\",\n    \"$translate\",\n    \"ConfigService\",\n    \"NotebookService\",\n    \"ProjectService\",\n    \"StudentAssetService\",\n    \"StudentDataService\"\n];\n\nexport default NotebookItemReportController;\n"]}