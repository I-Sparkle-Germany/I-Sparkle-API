{"version":3,"sources":["studentAssetController.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;IAEM;AACF,aADE,sBACF,CAAY,SAAZ,EACY,UADZ,EAEY,MAFZ,EAGY,aAHZ,EAIY,cAJZ,EAKY,mBALZ,EAKiC;;;8BAN/B,wBAM+B;;AAE7B,aAAK,SAAL,GAAiB,SAAjB,CAF6B;AAG7B,aAAK,UAAL,GAAkB,UAAlB,CAH6B;AAI7B,aAAK,MAAL,GAAc,MAAd,CAJ6B;AAK7B,aAAK,aAAL,GAAqB,aAArB,CAL6B;AAM7B,aAAK,IAAL,GAAY,KAAK,aAAL,CAAmB,OAAnB,EAAZ,CAN6B;AAO7B,aAAK,cAAL,GAAsB,cAAtB,CAP6B;AAQ7B,aAAK,mBAAL,GAA2B,mBAA3B,CAR6B;;AAU7B,aAAK,aAAL,GAAqB,KAAK,mBAAL,CAAyB,SAAzB,CAVQ;;AAY7B,aAAK,MAAL,GAAc,IAAd,CAZ6B;AAa7B,aAAK,IAAL,GAAY,IAAZ,CAb6B;;AAe7B,aAAK,cAAL,GAAsB,OAAO,GAAP,CAAW,QAAX,EAAqB,UAAC,KAAD,EAAQ,IAAR,EAAiB;AACxD,kBAAK,cAAL,GADwD;AAExD,kBAAK,UAAL,CAAgB,UAAhB,CAA2B,wBAA3B,EAFwD;SAAjB,CAA3C;;;AAf6B,YAqBzB,CAAC,KAAK,aAAL,CAAmB,SAAnB,EAAD,EAAiC;AACjC,iBAAK,qBAAL,GADiC;SAArC;KA1BJ;;iBADE;;yCAgCe;AACb,mBAAO,KAAK,WAAL,CADM;;;;gDAIO;;;;AAEpB,iBAAK,mBAAL,CAAyB,cAAzB,GAA0C,IAA1C,CAA+C,UAAC,aAAD,EAAmB;AAC9D,uBAAK,aAAL,GAAqB,aAArB,CAD8D;aAAnB,CAA/C,CAFoB;;;;4CAOJ,OAAO;;;AACvB,gBAAI,SAAS,IAAT,EAAe;AACf,qBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,MAAM,MAAN,EAAc,GAAlC,EAAuC;AACnC,wBAAI,OAAO,MAAM,CAAN,CAAP,CAD+B;AAEnC,yBAAK,mBAAL,CAAyB,WAAzB,CAAqC,IAArC,EAA2C,IAA3C,CAAgD,UAAC,YAAD,EAAkB;AAC9D,4BAAI,OAAK,mBAAL,IAA4B,IAA5B,EAAkC;;;AAGlC,mCAAK,mBAAL,CAAyB,kBAAzB,CAA4C,YAA5C,EAHkC;yBAAtC;AAKA,+BAAK,aAAL,GAAqB,OAAK,mBAAL,CAAyB,SAAzB,CANyC;qBAAlB,CAAhD,CAFmC;iBAAvC;aADJ;;;;2CAee,cAAc;AAC7B,kBAAM,0CAAN;;;;;;;;AAD6B;;;sDAWH,QAAQ,cAAc;AAChD,gBAAI,KAAK,mBAAL,IAA4B,IAA5B,EAAkC;;;AAGlC,qBAAK,mBAAL,CAAyB,kBAAzB,CAA4C,YAA5C;;AAHkC,sBAKlC,CAAO,eAAP;AALkC,aAAtC;;;;WAvEF;;;AAiFN,uBAAuB,OAAvB,GAAiC,CAC7B,WAD6B,EAE7B,YAF6B,EAG7B,QAH6B,EAI7B,eAJ6B,EAK7B,gBAL6B,EAM7B,qBAN6B,CAAjC;;kBASe","file":"studentAssetController.js","sourcesContent":["'use strict';\n\nclass StudentAssetController {\n    constructor($injector,\n                $rootScope,\n                $scope,\n                ConfigService,\n                ProjectService,\n                StudentAssetService) {\n\n        this.$injector = $injector;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.ConfigService = ConfigService;\n        this.mode = this.ConfigService.getMode();\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n\n        this.studentAssets = this.StudentAssetService.allAssets;\n\n        this.itemId = null;\n        this.item = null;\n\n        this.logOutListener = $scope.$on('logOut', (event, args) => {\n            this.logOutListener();\n            this.$rootScope.$broadcast('componentDoneUnloading');\n        });\n\n        // retrieve assets when notebook is opened\n        if (!this.ConfigService.isPreview()) {\n            this.retrieveStudentAssets();\n        }\n    }\n\n    getTemplateUrl() {\n        return this.templateUrl;\n    };\n\n    retrieveStudentAssets() {\n        // fetch all assets\n        this.StudentAssetService.retrieveAssets().then((studentAssets) => {\n            this.studentAssets = studentAssets;\n        });\n    };\n\n    uploadStudentAssets(files) {\n        if (files != null) {\n            for (var f = 0; f < files.length; f++) {\n                var file = files[f];\n                this.StudentAssetService.uploadAsset(file).then((studentAsset) => {\n                    if (this.componentController != null) {\n                        // If the student asset dialog is a part of a component (e.g. attaching image to OR or Discussion)\n                        // Also attach the file(s) to the componentstate's attachments\n                        this.componentController.attachStudentAsset(studentAsset);\n                    }\n                    this.studentAssets = this.StudentAssetService.allAssets;\n                });\n            }\n        }\n    };\n\n    deleteStudentAsset(studentAsset) {\n        alert('delete student asset not implemented yet');\n        /*\n         StudentAssetService.deleteAsset(studentAsset).then(angular.bind(this, function(deletedStudentAsset) {\n         // remove studentAsset\n         this.studentAssets.splice(this.studentAssets.indexOf(deletedStudentAsset), 1);\n         this.calculateTotalUsage();\n         }));\n         */\n    };\n\n    attachStudentAssetToComponent($event, studentAsset) {\n        if (this.componentController != null) {\n            // If the student asset dialog is a part of a component (e.g. attaching image to OR or Discussion)\n            // Also attach the file(s) to the componentstate's attachments\n            this.componentController.attachStudentAsset(studentAsset);\n            // TODO: add some kind of unobtrusive confirmation to let student know that the student asset has been added to current component\n            $event.stopPropagation();  // prevents parent student asset list item from getting the onclick event so this item won't be re-selected.\n        }\n    };\n}\n\nStudentAssetController.$inject = [\n    \"$injector\",\n    \"$rootScope\",\n    \"$scope\",\n    \"ConfigService\",\n    \"ProjectService\",\n    \"StudentAssetService\",\n];\n\nexport default StudentAssetController;"]}