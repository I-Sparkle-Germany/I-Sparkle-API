{"version":3,"sources":["studentAssetController.es6"],"names":["StudentAssetController","$injector","$rootScope","$scope","ConfigService","ProjectService","StudentAssetService","mode","getMode","studentAssets","allAssets","itemId","item","logOutListener","$on","event","args","$broadcast","isPreview","retrieveStudentAssets","templateUrl","retrieveAssets","then","files","f","length","file","uploadAsset","studentAsset","componentController","attachStudentAsset","alert","$event","stopPropagation","$inject"],"mappings":"AAAA;;;;;;;;;;IAEMA,sB;AACF,oCAAYC,SAAZ,EACYC,UADZ,EAEYC,MAFZ,EAGYC,aAHZ,EAIYC,cAJZ,EAKYC,mBALZ,EAKiC;AAAA;;AAAA;;AAE7B,aAAKL,SAAL,GAAiBA,SAAjB;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKG,IAAL,GAAY,KAAKH,aAAL,CAAmBI,OAAnB,EAAZ;AACA,aAAKH,cAAL,GAAsBA,cAAtB;AACA,aAAKC,mBAAL,GAA2BA,mBAA3B;;AAEA,aAAKG,aAAL,GAAqB,KAAKH,mBAAL,CAAyBI,SAA9C;;AAEA,aAAKC,MAAL,GAAc,IAAd;AACA,aAAKC,IAAL,GAAY,IAAZ;;AAEA,aAAKC,cAAL,GAAsBV,OAAOW,GAAP,CAAW,QAAX,EAAqB,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACxD,kBAAKH,cAAL;AACA,kBAAKX,UAAL,CAAgBe,UAAhB,CAA2B,wBAA3B;AACH,SAHqB,CAAtB;;AAKA;AACA,YAAI,CAAC,KAAKb,aAAL,CAAmBc,SAAnB,EAAL,EAAqC;AACjC,iBAAKC,qBAAL;AACH;AACJ;;;;yCAEgB;AACb,mBAAO,KAAKC,WAAZ;AACH;;;gDAEuB;AAAA;;AACpB;AACA,iBAAKd,mBAAL,CAAyBe,cAAzB,GAA0CC,IAA1C,CAA+C,UAACb,aAAD,EAAmB;AAC9D,uBAAKA,aAAL,GAAqBA,aAArB;AACH,aAFD;AAGH;;;4CAEmBc,K,EAAO;AAAA;;AACvB,gBAAIA,SAAS,IAAb,EAAmB;AACf,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,MAAME,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC,wBAAIE,OAAOH,MAAMC,CAAN,CAAX;AACA,yBAAKlB,mBAAL,CAAyBqB,WAAzB,CAAqCD,IAArC,EAA2CJ,IAA3C,CAAgD,UAACM,YAAD,EAAkB;AAC9D,4BAAI,OAAKC,mBAAL,IAA4B,IAAhC,EAAsC;AAClC;AACA;AACA,mCAAKA,mBAAL,CAAyBC,kBAAzB,CAA4CF,YAA5C;AACH;AACD,+BAAKnB,aAAL,GAAqB,OAAKH,mBAAL,CAAyBI,SAA9C;AACH,qBAPD;AAQH;AACJ;AACJ;;;2CAEkBkB,Y,EAAc;AAC7BG,kBAAM,0CAAN;AACA;;;;;;;AAOH;;;sDAE6BC,M,EAAQJ,Y,EAAc;AAChD,gBAAI,KAAKC,mBAAL,IAA4B,IAAhC,EAAsC;AAClC;AACA;AACA,qBAAKA,mBAAL,CAAyBC,kBAAzB,CAA4CF,YAA5C;AACA;AACAI,uBAAOC,eAAP,GALkC,CAKP;AAC9B;AACJ;;;;;;AAGLjC,uBAAuBkC,OAAvB,GAAiC,CAC7B,WAD6B,EAE7B,YAF6B,EAG7B,QAH6B,EAI7B,eAJ6B,EAK7B,gBAL6B,EAM7B,qBAN6B,CAAjC;;kBASelC,sB","file":"studentAssetController.js","sourcesContent":["'use strict';\n\nclass StudentAssetController {\n    constructor($injector,\n                $rootScope,\n                $scope,\n                ConfigService,\n                ProjectService,\n                StudentAssetService) {\n\n        this.$injector = $injector;\n        this.$rootScope = $rootScope;\n        this.$scope = $scope;\n        this.ConfigService = ConfigService;\n        this.mode = this.ConfigService.getMode();\n        this.ProjectService = ProjectService;\n        this.StudentAssetService = StudentAssetService;\n\n        this.studentAssets = this.StudentAssetService.allAssets;\n\n        this.itemId = null;\n        this.item = null;\n\n        this.logOutListener = $scope.$on('logOut', (event, args) => {\n            this.logOutListener();\n            this.$rootScope.$broadcast('componentDoneUnloading');\n        });\n\n        // retrieve assets when notebook is opened\n        if (!this.ConfigService.isPreview()) {\n            this.retrieveStudentAssets();\n        }\n    }\n\n    getTemplateUrl() {\n        return this.templateUrl;\n    };\n\n    retrieveStudentAssets() {\n        // fetch all assets\n        this.StudentAssetService.retrieveAssets().then((studentAssets) => {\n            this.studentAssets = studentAssets;\n        });\n    };\n\n    uploadStudentAssets(files) {\n        if (files != null) {\n            for (var f = 0; f < files.length; f++) {\n                var file = files[f];\n                this.StudentAssetService.uploadAsset(file).then((studentAsset) => {\n                    if (this.componentController != null) {\n                        // If the student asset dialog is a part of a component (e.g. attaching image to OR or Discussion)\n                        // Also attach the file(s) to the componentstate's attachments\n                        this.componentController.attachStudentAsset(studentAsset);\n                    }\n                    this.studentAssets = this.StudentAssetService.allAssets;\n                });\n            }\n        }\n    };\n\n    deleteStudentAsset(studentAsset) {\n        alert('delete student asset not implemented yet');\n        /*\n         StudentAssetService.deleteAsset(studentAsset).then(angular.bind(this, function(deletedStudentAsset) {\n         // remove studentAsset\n         this.studentAssets.splice(this.studentAssets.indexOf(deletedStudentAsset), 1);\n         this.calculateTotalUsage();\n         }));\n         */\n    };\n\n    attachStudentAssetToComponent($event, studentAsset) {\n        if (this.componentController != null) {\n            // If the student asset dialog is a part of a component (e.g. attaching image to OR or Discussion)\n            // Also attach the file(s) to the componentstate's attachments\n            this.componentController.attachStudentAsset(studentAsset);\n            // TODO: add some kind of unobtrusive confirmation to let student know that the student asset has been added to current component\n            $event.stopPropagation();  // prevents parent student asset list item from getting the onclick event so this item won't be re-selected.\n        }\n    };\n}\n\nStudentAssetController.$inject = [\n    \"$injector\",\n    \"$rootScope\",\n    \"$scope\",\n    \"ConfigService\",\n    \"ProjectService\",\n    \"StudentAssetService\"\n];\n\nexport default StudentAssetController;"]}