{"version":3,"sources":["themeController.es6"],"names":[],"mappings":"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","file":"themeController.js","sourcesContent":["'use strict';\n\nclass ThemeController {\n    constructor($scope,\n                ConfigService,\n                ProjectService,\n                StudentDataService,\n                NotebookService,\n                SessionService,\n                $mdDialog,\n                $mdToast,\n                $mdComponentRegistry) {\n\n        this.$scope = $scope;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n        this.NotebookService = NotebookService;\n        this.SessionService = SessionService;\n        this.$mdDialog = $mdDialog;\n        this.$mdToast = $mdToast;\n        this.$mdComponentRegistry = $mdComponentRegistry;\n\n        // TODO: set these variables dynamically from theme settings\n        this.layoutView = 'list'; // 'list' or 'card'\n        this.numberProject = true;\n\n        this.themePath = this.ProjectService.getThemePath();\n\n        this.nodeStatuses = this.StudentDataService.nodeStatuses;\n\n        this.rootNode = this.ProjectService.rootNode;\n        this.rootNodeStatus = this.nodeStatuses[this.rootNode.id];\n\n        this.workgroupId = this.ConfigService.getWorkgroupId();\n        this.workgroupUserNames = this.isPreview ? ['Preview User'] : this.ConfigService.getUserNamesByWorkgroupId(this.workgroupId);\n\n        // build project status pop-up\n        var statusTemplateUrl = this.themePath + '/templates/projectStatus.html';\n        var scope = this;\n        this.statusDisplay = this.$mdToast.build({\n            locals: {\n                projectStatus: scope.rootNodeStatus,\n                userNames: scope.workgroupUserNames\n            },\n            controller: 'ProjectStatusController',\n            bindToController: true,\n            templateUrl: statusTemplateUrl,\n            hideDelay: 0\n        });\n\n        this.projectStatusOpen = false;\n        this.showProjectStatus = function($event) {\n            if (this.projectStatusOpen) {\n                this.$mdToast.hide(this.statusDisplay);\n                this.projectStatusOpen = false;\n            } else {\n                this.$mdToast.show(this.statusDisplay);\n                this.projectStatusOpen = true;\n            }\n        };\n\n        // alert user when a locked node has been clicked\n        this.$scope.$on('nodeClickLocked', angular.bind(this, function (event, args) {\n            var nodeId = args.nodeId;\n\n            // TODO: customize alert with constraint details, correct node term\n            this.$mdDialog.show(\n                this.$mdDialog.alert()\n                    .parent(angular.element(document.body))\n                    .title('Item Locked')\n                    .content('Sorry, you cannot view this item yet.')\n                    .ariaLabel('Item Locked')\n                    .clickOutsideToClose(true)\n                    .ok('OK')\n                    .targetEvent(event)\n            );\n        }));\n\n        // alert user when inactive for a long time\n        this.$scope.$on('showSessionWarning', angular.bind(this, function() {\n            var confirm = this.$mdDialog.confirm()\n                .parent(angular.element(document.body))\n                .title('Session Timeout')\n                .content('You have been inactive for a long time. Do you want to stay logged in?')\n                .ariaLabel('Session Timeout')\n                .ok('YES')\n                .cancel('No');\n            this.$mdDialog.show(confirm).then(function() {\n                this.SessionService.renewSession();\n            }, function() {\n                this.SessionService.forceLogOut();\n            });\n        }));\n\n        // alert user when attempt to add component state to notebook that already exists in notebook\n        this.$scope.$on('notebookAddDuplicateAttempt', angular.bind(this, function (event, args) {\n            this.$mdDialog.show(\n                this.$mdDialog.alert()\n                    .parent(angular.element(document.body))\n                    .title('Item already exists in Notebook')\n                    .content('You can add another version of the item by making changes and then adding it again.')\n                    .ariaLabel('Notebook Duplicate')\n                    .clickOutsideToClose(true)\n                    .ok('OK')\n                    .targetEvent(event)\n            );\n        }));\n\n        // show list of revisions in a dialog when user clicks the show revisions link for a component\n        this.$scope.$on('showRevisions', angular.bind(this, function (event, args) {\n            var revisions = args.revisions;\n            var componentController = args.componentController;\n            var allowRevert = args.allowRevert;\n            var $event = args.$event;\n            var revisionsTemplateUrl = scope.themePath + '/templates/componentRevisions.html';\n\n            this.$mdDialog.show({\n                parent: angular.element(document.body),\n                targetEvent: $event,\n                templateUrl: revisionsTemplateUrl,\n                locals: {\n                    items: revisions.reverse(),\n                    componentController: componentController,\n                    allowRevert: allowRevert\n                },\n                controller: RevisionsController\n            });\n            function RevisionsController($scope, $mdDialog, items, componentController, allowRevert) {\n                $scope.items = items;\n                $scope.componentController = componentController;\n                $scope.allowRevert = allowRevert;\n                $scope.close = function() {\n                    $mdDialog.hide();\n                };\n                $scope.revertWork = function(componentState) {\n                    $scope.componentController.setStudentWork(componentState);\n                    $scope.componentController.studentDataChanged();\n                    $mdDialog.hide();\n                };\n            }\n            RevisionsController.$inject = [\"$scope\", \"$mdDialog\", \"items\", \"componentController\", \"allowRevert\"];\n        }));\n\n        this.$scope.$on('showNotebook', angular.bind(this, function (event, args) {\n            var notebookFilters = args.notebookFilters;\n            var componentController = args.componentController;\n            var $event = args.$event;\n            var notebookDialogTemplateUrl = scope.themePath + '/templates/notebookDialog.html';\n            var notebookTemplateUrl = scope.themePath + '/notebook/notebook.html';\n\n            this.$mdDialog.show({\n                parent: angular.element(document.body),\n                targetEvent: $event,\n                templateUrl: notebookDialogTemplateUrl,\n                locals: {\n                    notebookFilters: notebookFilters,\n                    notebookTemplateUrl: notebookTemplateUrl,\n                    componentController: componentController\n                },\n                controller: NotebookDialogController\n            });\n            function NotebookDialogController($scope, $mdDialog, componentController) {\n                $scope.notebookFilters = notebookFilters;\n                $scope.notebookFilter = notebookFilters[0].name;\n                $scope.notebookTemplateUrl = notebookTemplateUrl;\n                $scope.componentController = componentController;\n                $scope.closeDialog = function () {\n                    $mdDialog.hide();\n                }\n            }\n            NotebookDialogController.$inject = [\"$scope\", \"$mdDialog\", \"componentController\"];\n        }));\n\n        // capture notebook open/close events\n        this.$mdComponentRegistry.when('notebook').then(function(it){\n            this.$scope.$watch(function() {\n                return it.isOpen();\n            }, (isOpenNewValue, isOpenOldValue) => {\n                if (isOpenNewValue !== isOpenOldValue) {\n                    var currentNode = this.StudentDataService.getCurrentNode();\n                    this.NotebookService.saveNotebookToggleEvent(isOpenNewValue, currentNode);\n                }\n            });\n        }.bind(this));\n    }\n}\n\n\nThemeController.$inject = [\n    '$scope',\n    'ConfigService',\n    'ProjectService',\n    'StudentDataService',\n    'NotebookService',\n    'SessionService',\n    '$mdDialog',\n    '$mdToast',\n    '$mdComponentRegistry'\n];\n\n/*\nangular.module('vle').controller('NavItemController', new NavItemController($scope, $element, ProjectService, StudentDataService));\nangular.module('vle').controller('StepToolsCtrl', new StepToolsCtrl());\nangular.module('vle').controller('NodeStatusIconCtrl', new NodeStatusIconCtrl());\nangular.module('vle').controller('ProjectStatusController', new ProjectStatusController());\nangular.module('vle').controller('ThemeController', new ThemeController());\n*/\n\n//angular.module('vle').controller('NavItemController', NavItemController);\n//angular.module('vle').controller('StepToolsCtrl', StepToolsCtrl);\n//angular.module('vle').controller('NodeStatusIconCtrl', NodeStatusIconCtrl);\n//angular.module('vle').controller('ProjectStatusController', ProjectStatusController);\n//angular.module('vle').controller('ThemeController', ThemeController);\n\n//angular.module('vle').controller('ThemeController', ThemeController);\n\nexport default ThemeController;"]}