{"version":3,"sources":["themeController.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;IAEM;AACF,aADE,eACF,CAAY,MAAZ,EACY,UADZ,EAEY,aAFZ,EAGY,cAHZ,EAIY,kBAJZ,EAKY,oBALZ,EAMY,eANZ,EAOY,cAPZ,EAQY,SARZ,EASY,QATZ,EAUY,QAVZ,EAWY,oBAXZ,EAWkC;;;8BAZhC,iBAYgC;;AAE9B,aAAK,MAAL,GAAc,MAAd,CAF8B;AAG9B,aAAK,UAAL,GAAkB,UAAlB,CAH8B;AAI9B,aAAK,aAAL,GAAqB,aAArB,CAJ8B;AAK9B,aAAK,cAAL,GAAsB,cAAtB,CAL8B;AAM9B,aAAK,kBAAL,GAA0B,kBAA1B,CAN8B;AAO9B,aAAK,eAAL,GAAuB,eAAvB,CAP8B;AAQ9B,aAAK,cAAL,GAAsB,cAAtB,CAR8B;AAS9B,aAAK,oBAAL,GAA4B,oBAA5B,CAT8B;AAU9B,aAAK,SAAL,GAAiB,SAAjB,CAV8B;AAW9B,aAAK,QAAL,GAAgB,QAAhB,CAX8B;AAY9B,aAAK,QAAL,GAAgB,QAAhB,CAZ8B;AAa9B,aAAK,oBAAL,GAA4B,oBAA5B;;;AAb8B,YAgB9B,CAAK,UAAL,GAAkB,MAAlB;AAhB8B,YAiB9B,CAAK,aAAL,GAAqB,IAArB,CAjB8B;;AAmB9B,aAAK,SAAL,GAAiB,KAAK,cAAL,CAAoB,YAApB,EAAjB,CAnB8B;AAoB9B,aAAK,aAAL,GAAqB,KAAK,cAAL,CAAoB,gBAApB,EAArB,CApB8B;AAqB9B,aAAK,eAAL,GAAuB,KAAK,aAAL,CAAmB,eAAnB,CArBO;;AAuB9B,aAAK,YAAL,GAAoB,KAAK,kBAAL,CAAwB,YAAxB,CAvBU;AAwB9B,aAAK,SAAL,GAAiB,KAAK,cAAL,CAAoB,SAApB,CAxBa;;AA0B9B,aAAK,QAAL,GAAgB,KAAK,cAAL,CAAoB,QAApB,CA1Bc;AA2B9B,aAAK,cAAL,GAAsB,KAAK,YAAL,CAAkB,KAAK,QAAL,CAAc,EAAd,CAAxC,CA3B8B;;AA6B9B,aAAK,WAAL,GAAmB,KAAK,aAAL,CAAmB,cAAnB,EAAnB,CA7B8B;AA8B9B,aAAK,kBAAL,GAA0B,KAAK,aAAL,CAAmB,yBAAnB,CAA6C,KAAK,WAAL,CAAvE,CA9B8B;;AAgC9B,aAAK,YAAL,GAAoB,KAApB,CAhC8B;AAiC9B,aAAK,cAAL,GAAsB,KAAK,eAAL,CAAqB,iBAArB,EAAtB,CAjC8B;AAkC9B,aAAK,cAAL,GAAsB,EAAtB,CAlC8B;;AAoC9B,aAAK,WAAL,GAAmB,KAAK,kBAAL,CAAwB,cAAxB,EAAnB;;;AApC8B,YAuC1B,KAAK,cAAL,CAAoB,OAApB,EAA6B;AAC7B,iBAAK,IAAI,IAAJ,IAAY,KAAK,cAAL,CAAoB,SAApB,EAA+B;AAC5C,oBAAI,OAAO,KAAK,cAAL,CAAoB,SAApB,CAA8B,IAA9B,CAAP,CADwC;AAE5C,oBAAI,KAAK,cAAL,CAAoB,SAApB,CAA8B,cAA9B,CAA6C,IAA7C,KAAsD,KAAK,OAAL,EAAc;AACpE,yBAAK,cAAL,GAAsB,IAAtB,CADoE;AAEpE,0BAFoE;iBAAxE;aAFJ;SADJ;;;AAvC8B,YAkD9B,CAAK,qBAAL,GAA6B,SAAS,KAAT,CAAe;AACxC,sBAAU;;kCAAV;AAGA,uBAAW,CAAX;SAJyB,CAA7B,CAlD8B;AAwD9B,aAAK,mBAAL,GAA2B,KAA3B,CAxD8B;;AA0D9B,aAAK,cAAL;;;AA1D8B,YA6D9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,oBAAhB,EAAsC,UAAC,KAAD,EAAQ,IAAR,EAAiB;AACnD,kBAAK,WAAL,GAAmB,MAAK,kBAAL,CAAwB,cAAxB,EAAnB,CADmD;AAEnD,kBAAK,cAAL,GAFmD;SAAjB,CAAtC;;;AA7D8B,YAmE9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,iBAAhB,EAAmC,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAChD,gBAAI,UAAU,uCAAV,CAD4C;AAEhD,gBAAI,SAAS,KAAK,MAAL,CAFmC;;AAIhD,gBAAI,OAAO,MAAK,cAAL,CAAoB,WAApB,CAAgC,MAAhC,CAAP,CAJ4C;;AAMhD,gBAAI,QAAQ,IAAR,EAAc;;;AAGd,oBAAI,cAAc,MAAK,cAAL,CAAoB,qBAApB,CAA0C,IAA1C,CAAd,CAHU;;AAKd,oBAAI,eAAe,IAAf,IAAuB,YAAY,MAAZ,GAAqB,CAArB,EAAwB;AAC/C,8BAAU,EAAV,CAD+C;iBAAnD;;;AALc,qBAUT,IAAI,IAAI,CAAJ,EAAO,IAAI,YAAY,MAAZ,EAAoB,GAAxC,EAA6C;AACzC,wBAAI,aAAa,YAAY,CAAZ,CAAb;;;AADqC,wBAIrC,cAAc,IAAd,IAAsB,CAAC,MAAK,kBAAL,CAAwB,kBAAxB,CAA2C,IAA3C,EAAiD,UAAjD,CAAD,EAA+D;;;AAGrF,4BAAI,WAAW,EAAX,EAAe;;AAEf,uCAAW,YAAX,CAFe;yBAAnB;;;AAHqF,+BASrF,IAAW,MAAK,cAAL,CAAoB,oBAApB,CAAyC,MAAzC,EAAiD,UAAjD,CAAX,CATqF;qBAAzF;iBAJJ;aAVJ;;AA4BA,kBAAK,UAAL,CAAgB,CAAC,YAAD,EAAe,IAAf,CAAhB,EAAsC,IAAtC,CAA2C,UAAC,YAAD,EAAkB;AACzD,sBAAK,SAAL,CAAe,IAAf,CACI,MAAK,SAAL,CAAe,KAAf,GACK,MADL,CACY,QAAQ,OAAR,CAAgB,SAAS,IAAT,CAD5B,EAEK,KAFL,CAEW,aAAa,UAAb,CAFX,CAGK,WAHL,CAGiB,OAHjB,EAIK,SAJL,CAIe,aAAa,UAAb,CAJf,CAKK,EALL,CAKQ,aAAa,EAAb,CALR,CAMK,WANL,CAMiB,KANjB,CADJ,EADyD;aAAlB,CAA3C,CAlCgD;SAAjB,CAAnC;;;AAnE8B,YAmH9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,oBAAhB,EAAsC,UAAC,EAAD,EAAQ;AAC1C,kBAAK,UAAL,CAAgB,CAAC,gBAAD,EAAmB,mBAAnB,EAAwC,KAAxC,EAA+C,IAA/C,CAAhB,EAAsE,IAAtE,CAA2E,UAAC,YAAD,EAAkB;;AAEzF,oBAAI,QAAQ,MAAK,SAAL,CAAe,OAAf,GACP,MADO,CACA,QAAQ,OAAR,CAAgB,SAAS,IAAT,CADhB,EAEP,KAFO,CAED,aAAa,cAAb,CAFC,CAGP,WAHO,CAGK,aAAa,iBAAb,CAHL,CAIP,SAJO,CAIG,aAAa,cAAb,CAJH,CAKP,WALO,CAKK,EALL,EAMP,EANO,CAMJ,aAAa,GAAb,CANI,CAOP,MAPO,CAOA,aAAa,EAAb,CAPR,CAFqF;;AAWzF,sBAAK,SAAL,CAAe,IAAf,CAAoB,KAApB,EAA2B,IAA3B,CAAgC,YAAM;AAClC,0BAAK,cAAL,CAAoB,YAApB,GADkC;AAElC,4BAAQ,SAAR,CAFkC;iBAAN,EAG7B,YAAM;AACL,0BAAK,cAAL,CAAoB,WAApB,GADK;iBAAN,CAHH,CAXyF;aAAlB,CAA3E,CAD0C;SAAR,CAAtC;;;AAnH8B,YA0I9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,oBAAhB,EAAsC,YAAM;AACxC,kBAAK,sBAAL,GADwC;SAAN,CAAtC;;;AA1I8B,YA+I9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,iBAAhB,EAAmC,YAAM;AACrC,kBAAK,qBAAL,GADqC;SAAN,CAAnC;;;AA/I8B,YAoJ9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,eAAhB,EAAiC,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAC9C,gBAAI,YAAY,KAAK,SAAL,CAD8B;AAE9C,gBAAI,sBAAsB,KAAK,mBAAL,CAFoB;AAG9C,gBAAI,cAAc,KAAK,WAAL,CAH4B;AAI9C,gBAAI,SAAS,KAAK,MAAL,CAJiC;AAK9C,gBAAI,uBAAuB,MAAK,SAAL,GAAiB,oCAAjB,CALmB;;AAO9C,kBAAK,SAAL,CAAe,IAAf,CAAoB;AAChB,wBAAQ,QAAQ,OAAR,CAAgB,SAAS,IAAT,CAAxB;AACA,6BAAa,MAAb;AACA,6BAAa,oBAAb;AACA,wBAAQ;AACJ,2BAAO,UAAU,OAAV,EAAP;AACA,yCAAqB,mBAArB;AACA,iCAAa,WAAb;iBAHJ;AAKA,4BAAY,mBAAZ;aATJ,EAP8C;AAkB9C,qBAAS,mBAAT,CAA6B,MAA7B,EAAqC,SAArC,EAAgD,KAAhD,EAAuD,mBAAvD,EAA4E,WAA5E,EAAyF;AACrF,uBAAO,KAAP,GAAe,KAAf,CADqF;AAErF,uBAAO,mBAAP,GAA6B,mBAA7B,CAFqF;AAGrF,uBAAO,WAAP,GAAqB,WAArB,CAHqF;AAIrF,uBAAO,KAAP,GAAe,YAAM;AACjB,8BAAU,IAAV,GADiB;iBAAN,CAJsE;AAOrF,uBAAO,UAAP,GAAoB,UAAC,cAAD,EAAoB;AACpC,2BAAO,mBAAP,CAA2B,cAA3B,CAA0C,cAA1C,EADoC;AAEpC,2BAAO,mBAAP,CAA2B,kBAA3B,GAFoC;AAGpC,8BAAU,IAAV,GAHoC;iBAApB,CAPiE;aAAzF;AAaA,gCAAoB,OAApB,GAA8B,CAAC,QAAD,EAAW,WAAX,EAAwB,OAAxB,EAAiC,qBAAjC,EAAwD,aAAxD,CAA9B,CA/B8C;SAAjB,CAAjC,CApJ8B;;AAsL9B,aAAK,MAAL,CAAY,GAAZ,CAAgB,mBAAhB,EAAqC,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAClD,gBAAI,sBAAsB,KAAK,mBAAL,CADwB;AAElD,gBAAI,SAAS,KAAK,MAAL,CAFqC;AAGlD,gBAAI,gCAAgC,MAAK,SAAL,GAAiB,oCAAjB,CAHc;AAIlD,gBAAI,0BAA0B,MAAK,SAAL,GAAiB,iCAAjB,CAJoB;;AAMlD,kBAAK,SAAL,CAAe,IAAf,CAAoB;AAChB,wBAAQ,QAAQ,OAAR,CAAgB,SAAS,IAAT,CAAxB;AACA,6BAAa,MAAb;AACA,6BAAa,6BAAb;AACA,wBAAQ;AACJ,6CAAyB,uBAAzB;AACA,yCAAqB,mBAArB;iBAFJ;AAIA,4BAAY,4BAAZ;aARJ,EANkD;AAgBlD,qBAAS,4BAAT,CAAsC,MAAtC,EAA8C,SAA9C,EAAyD,mBAAzD,EAA8E;AAC1E,uBAAO,uBAAP,GAAiC,uBAAjC,CAD0E;AAE1E,uBAAO,mBAAP,GAA6B,mBAA7B,CAF0E;AAG1E,uBAAO,WAAP,GAAqB,YAAY;AAC7B,8BAAU,IAAV,GAD6B;iBAAZ,CAHqD;aAA9E;AAOA,yCAA6B,OAA7B,GAAuC,CAAC,QAAD,EAAW,WAAX,EAAwB,qBAAxB,CAAvC,CAvBkD;SAAjB,CAArC;;;AAtL8B,YAiN9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,gBAAhB,EAAkC,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAC/C,gBAAI,KAAK,KAAK,EAAL,CADsC;AAE/C,gBAAI,OAAO,KAAK,IAAL,CAFoC;AAG/C,kBAAK,cAAL,CAAoB,EAApB,EAAwB,IAAxB,EAH+C;SAAjB,CAAlC;;;AAjN8B,YAwN9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,mBAAhB,EAAqC,YAAM;AACvC,kBAAK,iBAAL,GADuC;SAAN,CAArC;;;AAxN8B,YA6N9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,mBAAhB,EAAqC,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAClD,gBAAI,SAAS,KAAK,MAAL,CADqC;AAElD,kBAAK,cAAL,GAAsB,MAAtB,CAFkD;SAAjB,CAArC;;;AA7N8B,YAmO9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,UAAhB,EAA4B,UAAC,KAAD,EAAQ,IAAR,EAAiB;AACzC,gBAAI,SAAS,KAAK,MAAL,CAD4B;AAEzC,gBAAI,KAAK,KAAK,EAAL,CAFgC;AAGzC,kBAAK,QAAL,CAAc,MAAd,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,EAAlC,EAHyC;SAAjB,CAA5B;;;AAnO8B,YA0O9B,CAAK,MAAL,CAAY,GAAZ,CAAgB,YAAhB,EAA8B,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAC3C,gBAAI,KAAK,KAAK,EAAL,CADkC;AAE3C,gBAAI,OAAO,KAAK,IAAL,CAFgC;AAG3C,kBAAK,QAAL,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,EAAhC,EAH2C;SAAjB,CAA9B;;;AA1O8B,YAiP9B,CAAK,oBAAL,CAA0B,IAA1B,CAA+B,UAA/B,EAA2C,IAA3C,CAAgD,cAAM;AAClD,kBAAK,MAAL,CAAY,MAAZ,CAAmB,YAAM;AACrB,uBAAO,GAAG,MAAH,EAAP,CADqB;aAAN,EAEhB,UAAC,cAAD,EAAiB,cAAjB,EAAoC;AACnC,oBAAI,mBAAmB,cAAnB,EAAmC;AACnC,wBAAI,cAAc,MAAK,kBAAL,CAAwB,cAAxB,EAAd,CAD+B;AAEnC,0BAAK,eAAL,CAAqB,uBAArB,CAA6C,cAA7C,EAA6D,WAA7D,EAFmC;iBAAvC;aADD,CAFH,CADkD;SAAN,CAAhD,CAjP8B;KAXlC;;;;;;;;iBADE;;uCA6Qa,OAAO;AAClB,gBAAI,cAAc,KAAd;AADc,gBAEd,KAAJ,EAAW;AACP,8BAAc,KAAd,CADO;aAAX,MAEO;;AAEH,oBAAI,KAAK,WAAL,EAAkB;AAClB,wBAAI,KAAK,KAAK,WAAL,CAAiB,EAAjB,CADS;AAElB,wBAAI,KAAK,cAAL,CAAoB,iBAApB,CAAsC,EAAtC,CAAJ,EAA+C;;AAE3C,sCAAc,MAAd,CAF2C;qBAA/C,MAGO,IAAI,KAAK,cAAL,CAAoB,WAApB,CAAgC,EAAhC,CAAJ,EAAyC;;AAE5C,sCAAc,KAAd,CAF4C;qBAAzC;iBALX;aAJJ;;AAgBA,gBAAI,gBAAgB,UAAhB,EAA4B;AAC5B,qBAAK,eAAL,GAAuB,KAAvB,CAD4B;aAAhC;;AAIA,iBAAK,WAAL,GAAmB,WAAnB,CAtBkB;;;;;;;iDA0BG;AACrB,gBAAI,CAAC,KAAK,mBAAL,EAA0B;AAC7B,qBAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,qBAAL,CAAnB,CAD6B;AAE7B,qBAAK,mBAAL,GAA2B,IAA3B,CAF6B;aAA/B;;;;;;;gDAOoB;AACpB,iBAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,qBAAL,CAAnB,CADoB;AAEpB,iBAAK,mBAAL,GAA2B,KAA3B,CAFoB;;;;qDAKK,aAAa;AACtC,mBAAO,KAAK,oBAAL,CAA0B,4BAA1B,CAAuD,WAAvD,CAAP,CADsC;;;;;;;;;uCAO3B,IAAI,MAAM;;AAErB,gBAAI,KAAK,WAAL,KAAqB,UAArB,IAAmC,CAAC,IAAD,EAAO;AAC1C,qBAAK,cAAL,GAD0C;AAE1C,qBAAK,eAAL,CAAqB,uBAArB,CAA6C,KAA7C,EAAoD,KAAK,WAAL,CAApD,CAF0C;aAA9C,MAGO;AACH,qBAAK,WAAL,GAAmB,UAAnB,CADG;AAEH,qBAAK,eAAL,CAAqB,uBAArB,CAA6C,IAA7C,EAAmD,KAAK,WAAL,CAAnD,CAFG;aAHP;;;;;;;;;4CAYgB;AAChB,iBAAK,eAAL,GAAuB,CAAC,KAAK,eAAL,CADR;;;;iCAIX,QAAQ,YAAY,MAAM,IAAI;AACnC,gBAAI,iBAAiB,KAAK,QAAL,CAAc,IAAd,CAAjB,CAD+B;AAEnC,gBAAI,uBAAuB,KAAK,SAAL,GAAiB,iCAAjB,CAFQ;AAGnC,gBAAI,OAAO,KAAK,eAAL,CAAqB,0CAArB,CAAgE,MAAhE,CAAP,CAH+B;AAInC,gBAAI,OAAO,OAAO,KAAK,IAAL,GAAY,MAAnB;;;AAJwB,gBAOnC,CAAK,SAAL,CAAe,IAAf,CAAoB;AAChB,wBAAQ,QAAQ,OAAR,CAAgB,SAAS,IAAT,CAAxB;AACA,6BAAa,EAAb;AACA,4BAAY,cAAZ;AACA,6BAAa,oBAAb;AACA,4BAAY,0BAAZ;AACA,wBAAQ;AACJ,4BAAQ,MAAR;AACA,gCAAY,UAAZ;AACA,0BAAM,IAAN;AACA,0BAAM,IAAN;iBAJJ;;AANgB,aAApB,EAPmC;;AAsBnC,qBAAS,0BAAT,CAAoC,MAApC,EAA4C,SAA5C,EAAuD,EAAvD,EAA2D,eAA3D,EAA4E,mBAA5E,EAAiG;AAC7F,uBAAO,MAAP,GAAgB,MAAhB,CAD6F;AAE7F,uBAAO,IAAP,GAAc,IAAd,CAF6F;AAG7F,uBAAO,UAAP,GAAoB,UAApB,CAH6F;AAI7F,uBAAO,eAAP,GAAyB,eAAzB,CAJ6F;AAK7F,uBAAO,mBAAP,GAA6B,mBAA7B,CAL6F;AAM7F,uBAAO,IAAP,GAAc,IAAd,CAN6F;AAO7F,uBAAO,KAAP,GAAe,CAAC,OAAO,UAAP,GAAqB,OAAO,MAAP,GAAgB,OAAhB,GAA0B,MAA1B,GAAoC,OAAzD,CAAD,GAAqE,OAAO,IAAP,CAPS;AAQ7F,uBAAO,IAAP,GAAc,IAAd,CAR6F;;AAU7F,uBAAO,MAAP,GAAgB,YAAM;AAClB,8BAAU,IAAV,GADkB;iBAAN,CAV6E;;AAc7F,uBAAO,IAAP,GAAc,YAAM;;AAEhB,wBAAI,sBAAsB,EAAtB,CAFY;AAGhB,wBAAI,OAAO,IAAP,CAAY,OAAZ,CAAoB,WAApB,IAAmC,IAAnC,EAAyC;mDAChC;AACL,gCAAI,aAAa,OAAO,IAAP,CAAY,OAAZ,CAAoB,WAApB,CAAgC,CAAhC,CAAb;AACJ,gCAAI,WAAW,cAAX,IAA6B,IAA7B,IAAqC,WAAW,IAAX,IAAmB,IAAnB,EAAyB;;AAE9D,oCAAI,QAAO,WAAW,IAAX,CAFmD;;AAI1D,2CAAW,GAAG,KAAH,EAAX,CAJ0D;;AAK9D,uCAAO,mBAAP,CAA2B,WAA3B,CAAuC,KAAvC,EAA6C,IAA7C,CAAkD,UAAC,YAAD,EAAkB;AAChE,2CAAO,mBAAP,CAA2B,qBAA3B,CAAiD,YAAjD,EAA+D,IAA/D,CAAoE,UAAC,WAAD,EAAiB;AACjF,4CAAI,eAAe,IAAf,EAAqB;AACrB,gDAAI,gBAAgB;AAChB,gEAAgB,YAAY,EAAZ;AAChB,yDAAS,YAAY,OAAZ;6CAFT,CADiB;AAKrB,mDAAO,IAAP,CAAY,OAAZ,CAAoB,WAApB,CAAgC,CAAhC,IAAqC,aAArC,CALqB;AAMrB,qDAAS,OAAT,GANqB;yCAAzB;qCADgE,CAApE,CADgE;iCAAlB,CAAlD,CAL8D;AAiB9D,oDAAoB,IAApB,CAAyB,SAAS,OAAT,CAAzB,CAjB8D;6BAAlE;0BAHqC;;AACzC,6BAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,OAAO,IAAP,CAAY,OAAZ,CAAoB,WAApB,CAAgC,MAAhC,EAAwC,GAA5D,EAAiE;gCAMrD,SANqD;;kCAAxD,GAAwD;yBAAjE;qBADJ;;;AAHgB,sBA6BhB,CAAG,GAAH,CAAO,mBAAP,EAA4B,IAA5B,CAAiC,YAAM;AACnC,+BAAO,eAAP,CAAuB,gBAAvB,CAAwC,OAAO,IAAP,CAAY,EAAZ,EAAgB,OAAO,IAAP,CAAY,MAAZ,EAAoB,OAAO,IAAP,CAAY,mBAAZ,EAAiC,OAAO,IAAP,CAAY,IAAZ,EAAkB,OAAO,IAAP,CAAY,KAAZ,EAAmB,OAAO,IAAP,CAAY,OAAZ,CAAlJ,CACK,IADL,CACU,YAAM;AACR,sCAAU,IAAV,GADQ;yBAAN,CADV,CADmC;qBAAN,CAAjC,CA7BgB;iBAAN,CAd+E;;AAmD7F,uBAAO,MAAP,GAAgB,UAAC,IAAD,EAAU;;AAEtB,2BAAO,IAAP,GAAc,IAAd,CAFsB;iBAAV,CAnD6E;aAAjG;AAwDA,uCAA2B,OAA3B,GAAqC,CAAC,QAAD,EAAW,WAAX,EAAwB,IAAxB,EAA8B,iBAA9B,EAAiD,qBAAjD,CAArC,CA9EmC;;;;WA7UrC;;;AAgaN,gBAAgB,OAAhB,GAA0B,CACtB,QADsB,EAEtB,YAFsB,EAGtB,eAHsB,EAItB,gBAJsB,EAKtB,oBALsB,EAMtB,sBANsB,EAOtB,iBAPsB,EAQtB,gBARsB,EAStB,WATsB,EAUtB,UAVsB,EAWtB,UAXsB,EAYtB,sBAZsB,CAA1B;;kBAee","file":"themeController.js","sourcesContent":["'use strict';\n\nclass ThemeController {\n    constructor($scope,\n                $translate,\n                ConfigService,\n                ProjectService,\n                StudentDataService,\n                StudentStatusService,\n                NotebookService,\n                SessionService,\n                $mdDialog,\n                $mdMedia,\n                $mdToast,\n                $mdComponentRegistry) {\n\n        this.$scope = $scope;\n        this.$translate = $translate;\n        this.ConfigService = ConfigService;\n        this.ProjectService = ProjectService;\n        this.StudentDataService = StudentDataService;\n        this.NotebookService = NotebookService;\n        this.SessionService = SessionService;\n        this.StudentStatusService = StudentStatusService;\n        this.$mdDialog = $mdDialog;\n        this.$mdMedia = $mdMedia;\n        this.$mdToast = $mdToast;\n        this.$mdComponentRegistry = $mdComponentRegistry;\n\n        // TODO: set these variables dynamically from theme settings\n        this.layoutView = 'list'; // 'list' or 'card'\n        this.numberProject = true;\n\n        this.themePath = this.ProjectService.getThemePath();\n        this.themeSettings = this.ProjectService.getThemeSettings();\n        this.hideTotalScores = this.themeSettings.hideTotalScores;\n\n        this.nodeStatuses = this.StudentDataService.nodeStatuses;\n        this.idToOrder = this.ProjectService.idToOrder;\n\n        this.rootNode = this.ProjectService.rootNode;\n        this.rootNodeStatus = this.nodeStatuses[this.rootNode.id];\n\n        this.workgroupId = this.ConfigService.getWorkgroupId();\n        this.workgroupUserNames = this.ConfigService.getUserNamesByWorkgroupId(this.workgroupId);\n\n        this.notebookOpen = false;\n        this.notebookConfig = this.NotebookService.getNotebookConfig();\n        this.notebookFilter = '';\n\n        this.currentNode = this.StudentDataService.getCurrentNode();\n\n        // set current notebook type filter to first enabled type\n        if (this.notebookConfig.enabled) {\n            for (var type in this.notebookConfig.itemTypes) {\n                let prop = this.notebookConfig.itemTypes[type];\n                if (this.notebookConfig.itemTypes.hasOwnProperty(type) && prop.enabled) {\n                    this.notebookFilter = type;\n                    break;\n                }\n            }\n        }\n\n        // build server disconnect display\n        this.connectionLostDisplay = $mdToast.build({\n            template: '<md-toast>\\\n                      <span>Server error. Check your internet connection.</span>\\\n                      </md-toast>',\n            hideDelay: 0\n        });\n        this.connectionLostShown = false;\n\n        this.setLayoutState();\n\n        // update layout state when current node changes\n        this.$scope.$on('currentNodeChanged', (event, args) => {\n            this.currentNode = this.StudentDataService.getCurrentNode();\n            this.setLayoutState();\n        });\n\n        // alert user when a locked node has been clicked\n        this.$scope.$on('nodeClickLocked', (event, args) => {\n            var message = 'Sorry, you cannot view this item yet.';\n            let nodeId = args.nodeId;\n\n            var node = this.ProjectService.getNodeById(nodeId);\n\n            if (node != null) {\n\n                // get the constraints that affect this node\n                var constraints = this.ProjectService.getConstraintsForNode(node);\n\n                if (constraints != null && constraints.length > 0) {\n                    message = '';\n                }\n\n                // loop through all the constraints that affect this node\n                for (var c = 0; c < constraints.length; c++) {\n                    var constraint = constraints[c];\n\n                    // check if the constraint has been satisfied\n                    if (constraint != null && !this.StudentDataService.evaluateConstraint(node, constraint)) {\n                        // the constraint has not been satisfied and is still active\n\n                        if (message != '') {\n                            // separate multiple constraints with line breaks\n                            message += '<br/><br/>';\n                        }\n\n                        // get the message that describes how to disable the constraint\n                        message += this.ProjectService.getConstraintMessage(nodeId, constraint);\n                    }\n                }\n            }\n\n            this.$translate(['itemLocked', 'ok']).then((translations) => {\n                this.$mdDialog.show(\n                    this.$mdDialog.alert()\n                        .parent(angular.element(document.body))\n                        .title(translations.itemLocked)\n                        .htmlContent(message)\n                        .ariaLabel(translations.itemLocked)\n                        .ok(translations.ok)\n                        .targetEvent(event)\n                );\n            })\n        });\n\n        // alert user when inactive for a long time\n        this.$scope.$on('showSessionWarning', (ev) => {\n            this.$translate([\"sessionTimeout\", \"autoLogoutMessage\", \"yes\", \"no\"]).then((translations) => {\n\n                let alert = this.$mdDialog.confirm()\n                    .parent(angular.element(document.body))\n                    .title(translations.sessionTimeout)\n                    .textContent(translations.autoLogoutMessage)\n                    .ariaLabel(translations.sessionTimeout)\n                    .targetEvent(ev)\n                    .ok(translations.yes)\n                    .cancel(translations.no);\n\n                this.$mdDialog.show(alert).then(() => {\n                    this.SessionService.renewSession();\n                    alert = undefined;\n                }, () => {\n                    this.SessionService.forceLogOut();\n                });\n\n            });\n        });\n\n        // alert user when server loses connection\n        this.$scope.$on('serverDisconnected', () => {\n            this.handleServerDisconnect();\n        });\n\n        // remove alert when server regains connection\n        this.$scope.$on('serverConnected', () => {\n            this.handleServerReconnect();\n        });\n\n        // show list of revisions in a dialog when user clicks the show revisions link for a component\n        this.$scope.$on('showRevisions', (event, args) => {\n            let revisions = args.revisions;\n            let componentController = args.componentController;\n            let allowRevert = args.allowRevert;\n            let $event = args.$event;\n            let revisionsTemplateUrl = this.themePath + '/templates/componentRevisions.html';\n\n            this.$mdDialog.show({\n                parent: angular.element(document.body),\n                targetEvent: $event,\n                templateUrl: revisionsTemplateUrl,\n                locals: {\n                    items: revisions.reverse(),\n                    componentController: componentController,\n                    allowRevert: allowRevert\n                },\n                controller: RevisionsController\n            });\n            function RevisionsController($scope, $mdDialog, items, componentController, allowRevert) {\n                $scope.items = items;\n                $scope.componentController = componentController;\n                $scope.allowRevert = allowRevert;\n                $scope.close = () => {\n                    $mdDialog.hide();\n                };\n                $scope.revertWork = (componentState) => {\n                    $scope.componentController.setStudentWork(componentState);\n                    $scope.componentController.studentDataChanged();\n                    $mdDialog.hide();\n                };\n            }\n            RevisionsController.$inject = [\"$scope\", \"$mdDialog\", \"items\", \"componentController\", \"allowRevert\"];\n        });\n\n        this.$scope.$on('showStudentAssets', (event, args) => {\n            let componentController = args.componentController;\n            let $event = args.$event;\n            let studentAssetDialogTemplateUrl = this.themePath + '/templates/studentAssetDialog.html';\n            let studentAssetTemplateUrl = this.themePath + '/studentAsset/studentAsset.html';\n\n            this.$mdDialog.show({\n                parent: angular.element(document.body),\n                targetEvent: $event,\n                templateUrl: studentAssetDialogTemplateUrl,\n                locals: {\n                    studentAssetTemplateUrl: studentAssetTemplateUrl,\n                    componentController: componentController\n                },\n                controller: StudentAssetDialogController\n            });\n            function StudentAssetDialogController($scope, $mdDialog, componentController) {\n                $scope.studentAssetTemplateUrl = studentAssetTemplateUrl;\n                $scope.componentController = componentController;\n                $scope.closeDialog = function () {\n                    $mdDialog.hide();\n                }\n            }\n            StudentAssetDialogController.$inject = [\"$scope\", \"$mdDialog\", \"componentController\"];\n        });\n\n        // toggle notebook opened or closed on 'toggleNotebook' event\n        this.$scope.$on('toggleNotebook', (event, args) => {\n            let ev = args.ev;\n            let open = args.open;\n            this.toggleNotebook(ev, open);\n        });\n\n        // toggle notebook nav opened or closed on 'toggleNotebookNav' event\n        this.$scope.$on('toggleNotebookNav', () => {\n            this.toggleNotebookNav();\n        });\n\n        // update notebook filter on 'setNotebookFilter' event\n        this.$scope.$on('setNotebookFilter', (event, args) => {\n            let filter = args.filter;\n            this.notebookFilter = filter;\n        });\n\n        // show edit note dialog on 'editNote' event\n        this.$scope.$on('editNote', (event, args) => {\n            let itemId = args.itemId;\n            let ev = args.ev;\n            this.viewNote(itemId, true, null, ev);\n        });\n\n        // show edit note dialog on 'addNewNote' event\n        this.$scope.$on('addNewNote', (event, args) => {\n            let ev = args.ev;\n            let file = args.file;\n            this.viewNote(null, true, file, ev);\n        });\n\n        // capture notebook open/close events\n        this.$mdComponentRegistry.when('notebook').then(it => {\n            this.$scope.$watch(() => {\n                return it.isOpen();\n            }, (isOpenNewValue, isOpenOldValue) => {\n                if (isOpenNewValue !== isOpenOldValue) {\n                    let currentNode = this.StudentDataService.getCurrentNode();\n                    this.NotebookService.saveNotebookToggleEvent(isOpenNewValue, currentNode);\n                }\n            });\n        });\n    }\n\n    /**\n    * Set the layout state of the vle\n    * @param state string specifying state (e.g. 'notebook'; optional)\n    */\n    setLayoutState(state) {\n        let layoutState = 'nav'; // default layout state\n        if (state) {\n            layoutState = state;\n        } else {\n            // no state was sent, so set based on current node\n            if (this.currentNode) {\n                var id = this.currentNode.id;\n                if (this.ProjectService.isApplicationNode(id)) {\n                    // currently viewing step, so show step view\n                    layoutState = 'node';\n                } else if (this.ProjectService.isGroupNode(id)) {\n                    // currently viewing group node, so show navigation view\n                    layoutState = 'nav';\n                }\n            }\n        }\n\n        if (layoutState !== 'notebook') {\n            this.notebookNavOpen = false;\n        }\n\n        this.layoutState = layoutState;\n    }\n\n    // show server error alert when connection is lost\n    handleServerDisconnect() {\n        if (!this.connectionLostShown) {\n          this.$mdToast.show(this.connectionLostDisplay);\n          this.connectionLostShown = true;\n        }\n    }\n\n    // hide server error alert when connection is restored\n    handleServerReconnect() {\n        this.$mdToast.hide(this.connectionLostDisplay);\n        this.connectionLostShown = false;\n    }\n\n    getAvatarColorForWorkgroupId(workgroupId) {\n        return this.StudentStatusService.getAvatarColorForWorkgroupId(workgroupId);\n    }\n\n    /**\n    * Open or close the notebook and save notebook open/close events\n    */\n    toggleNotebook(ev, open) {\n        //this.notebookOpen = !this.notebookOpen;\n        if (this.layoutState === 'notebook' && !open) {\n            this.setLayoutState();\n            this.NotebookService.saveNotebookToggleEvent(false, this.currentNode);\n        } else {\n            this.layoutState = 'notebook';\n            this.NotebookService.saveNotebookToggleEvent(true, this.currentNode);\n        }\n    }\n\n    /**\n    * Open or close the notebook nav menu\n    */\n    toggleNotebookNav() {\n        this.notebookNavOpen = !this.notebookNavOpen;\n    }\n\n    viewNote(itemId, isEditMode, file, ev) {\n        let showFullScreen = this.$mdMedia('xs');\n        let notebookItemTemplate = this.themePath + '/notebook/viewNotebookItem.html';\n        let item = this.NotebookService.getLatestNotebookItemByLocalNotebookItemId(itemId);\n        let type = item ? item.type : 'note'; // TODO: don't hardcode type once questions are enabled\n\n        // Display a dialog where students can view/add/edit a notebook item\n        this.$mdDialog.show({\n            parent: angular.element(document.body),\n            targetEvent: ev,\n            fullscreen: showFullScreen,\n            templateUrl: notebookItemTemplate,\n            controller: ViewNotebookItemController,\n            locals: {\n                itemId: itemId,\n                isEditMode: isEditMode,\n                type: type,\n                file: file\n            }\n            //template: '<notebookitem is-edit-enabled=\"true\" item-id=\"{{itemId}}\"></notebookitem>'\n        });\n\n        function ViewNotebookItemController($scope, $mdDialog, $q, NotebookService, StudentAssetService) {\n            $scope.itemId = itemId;\n            $scope.type = type;\n            $scope.isEditMode = isEditMode;\n            $scope.NotebookService = NotebookService;\n            $scope.StudentAssetService = StudentAssetService;\n            $scope.item = null;\n            $scope.title = ($scope.isEditMode ? ($scope.itemId ? 'Edit ' : 'Add ') : 'View ') + $scope.type;\n            $scope.file = file;\n\n            $scope.cancel = () => {\n                $mdDialog.hide();\n            };\n\n            $scope.save = () => {\n                // go through the notebook item's attachments and look for any attachments that need to be uploaded and made into StudentAsset.\n                let uploadAssetPromises = [];\n                if ($scope.item.content.attachments != null) {\n                    for (let i = 0; i < $scope.item.content.attachments.length; i++) {\n                        let attachment = $scope.item.content.attachments[i];\n                        if (attachment.studentAssetId == null && attachment.file != null) {\n                            // this attachment hasn't been uploaded yet, so we'll do that now.\n                            let file = attachment.file;\n\n                            var deferred = $q.defer();\n                            $scope.StudentAssetService.uploadAsset(file).then((studentAsset) => {\n                                $scope.StudentAssetService.copyAssetForReference(studentAsset).then((copiedAsset) => {\n                                    if (copiedAsset != null) {\n                                        var newAttachment = {\n                                            studentAssetId: copiedAsset.id,\n                                            iconURL: copiedAsset.iconURL\n                                        };\n                                        $scope.item.content.attachments[i] = newAttachment;\n                                        deferred.resolve();\n                                    }\n                                });\n                            });\n                            uploadAssetPromises.push(deferred.promise);\n                        }\n                    }\n                }\n\n                // make sure all the assets are created before saving the notebook item.\n                $q.all(uploadAssetPromises).then(() => {\n                    $scope.NotebookService.saveNotebookItem($scope.item.id, $scope.item.nodeId, $scope.item.localNotebookItemId, $scope.item.type, $scope.item.title, $scope.item.content)\n                        .then(() => {\n                            $mdDialog.hide();\n                        });\n                });\n            };\n\n            $scope.update = (item) => {\n                // notebook item has changed\n                $scope.item = item;\n            };\n        }\n        ViewNotebookItemController.$inject = [\"$scope\", \"$mdDialog\", \"$q\", \"NotebookService\", \"StudentAssetService\"];\n    }\n}\n\n\nThemeController.$inject = [\n    '$scope',\n    '$translate',\n    'ConfigService',\n    'ProjectService',\n    'StudentDataService',\n    'StudentStatusService',\n    'NotebookService',\n    'SessionService',\n    '$mdDialog',\n    '$mdMedia',\n    '$mdToast',\n    '$mdComponentRegistry'\n];\n\nexport default ThemeController;\n"]}