{"version":3,"sources":["vleController.es6"],"names":[],"mappings":"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","file":"vleController.js","sourcesContent":["'use strict';\n\nclass VLEController {\n    constructor($scope,\n                $rootScope,\n                $mdDialog,\n                $state,\n                ConfigService,\n                NotebookService,\n                ProjectService,\n                SessionService,\n                StudentDataService,\n                StudentWebSocketService) {\n\n        this.$scope = $scope;\n        this.$rootScope = $rootScope;\n        this.$mdDialog = $mdDialog;\n        this.$state = $state;\n        this.ConfigService = ConfigService;\n        this.NotebookService = NotebookService;\n        this.ProjectService = ProjectService;\n        this.SessionService = SessionService;\n        this.StudentDataService = StudentDataService;\n        this.StudentWebSocketService = StudentWebSocketService;\n\n        this.currentNode = null;\n        this.pauseDialog = null;\n\n        this.navFilters = this.ProjectService.getFilters();\n        this.navFilter = this.navFilters[0].name;\n\n        this.projectStyle = this.ProjectService.getStyle();\n        this.projectName = this.ProjectService.getProjectTitle();\n\n        this.notebookFilters = this.NotebookService.filters;\n        this.notebookFilter = this.notebookFilters[0].name;   // show All note book items on load\n        this.notebookOpen = false;\n\n        // get the total score for the workgroup\n        this.totalScore = this.StudentDataService.getTotalScore();\n\n        // get the max score for the project\n        this.maxScore = this.ProjectService.getMaxScore();\n\n        this.toggleNotebook = function() {\n            this.notebookOpen = !this.notebookOpen;\n        };\n\n        this.$scope.$on('currentNodeChanged', angular.bind(this, function(event, args) {\n            var previousNode = args.previousNode;\n            var currentNode = this.StudentDataService.getCurrentNode();\n            var currentNodeId = currentNode.id;\n\n            this.StudentDataService.updateStackHistory(currentNodeId);\n            this.StudentDataService.updateVisitedNodesHistory(currentNodeId);\n            this.StudentDataService.updateNodeStatuses();\n\n            this.setLayoutState();\n\n            this.StudentWebSocketService.sendStudentStatus();\n            this.$state.go('root.vle', {nodeId:currentNodeId});\n\n            var componentId, componentType, category, eventName, eventData, eventNodeId;\n            if (previousNode != null && this.ProjectService.isGroupNode(previousNode.id)) {\n                // going from group to node or group to group\n                componentId = null;\n                componentType = null;\n                category = \"Navigation\";\n                eventName = \"nodeExited\";\n                eventData = {\n                    nodeId: previousNode.id\n                };\n                eventNodeId = previousNode.id;\n                this.StudentDataService.saveVLEEvent(eventNodeId, componentId, componentType, category, eventName, eventData);\n            }\n\n            if (this.ProjectService.isGroupNode(currentNodeId)) {\n                // save nodeEntered event if this is a group\n                componentId = null;\n                componentType = null;\n                category = \"Navigation\";\n                eventName = \"nodeEntered\";\n                eventData = {\n                    nodeId: currentNode.id\n                };\n                eventNodeId = currentNode.id;\n                this.StudentDataService.saveVLEEvent(eventNodeId, componentId, componentType, category, eventName, eventData);\n            }\n        }));\n\n        this.$scope.$on('componentStudentDataChanged', angular.bind(this, function() {\n            this.StudentDataService.updateNodeStatuses();\n        }));\n\n        // listen for the pause screen event\n        this.$scope.$on('pauseScreen', (event, args) => {\n            this.pauseScreen();\n        });\n\n        // listen for the unpause screen event\n        this.$scope.$on('unPauseScreen', (event, args) => {\n            this.unPauseScreen();\n        });\n\n        // Make sure if we drop something on the page we don't navigate away\n        // https://developer.mozilla.org/En/DragDrop/Drag_Operations#drop\n        $(document.body).on('dragover', function(e) {\n            e.preventDefault();\n            return false;\n        });\n\n        $(document.body).on('drop', function(e){\n            e.preventDefault();\n            return false;\n        });\n\n        this.themePath = this.ProjectService.getThemePath();\n        this.setLayoutState();\n\n        var nodeId = null;\n        var stateParams = null;\n        var stateParamNodeId = null;\n\n        if (this.$state != null) {\n            stateParams = this.$state.params;\n        }\n\n        if (stateParams != null) {\n            stateParamNodeId = stateParams.nodeId;\n        }\n\n        if (stateParamNodeId != null && stateParamNodeId !== '') {\n            nodeId = stateParamNodeId;\n        } else {\n            var latestComponentState = this.StudentDataService.getLatestComponentState();\n\n            if (latestComponentState != null) {\n                nodeId = latestComponentState.nodeId;\n            }\n        }\n\n        if (nodeId == null || nodeId === '') {\n            nodeId = this.ProjectService.getStartNodeId();\n        }\n\n        this.StudentDataService.setCurrentNodeByNodeId(nodeId);\n\n        // get the run status to see if the period is currently paused\n        var runStatus = this.StudentDataService.getRunStatus();\n\n        if (runStatus != null) {\n            var pause = false;\n            if (runStatus.allPeriodsPaused) {\n                pause = true;\n            } else {\n                // get the signed in user's period id\n                var periodId = this.ConfigService.getPeriodId();\n\n                if (periodId != null) {\n                    var periods = runStatus.periods;\n\n                    if (periods != null) {\n\n                        // loop through all the periods in the run status\n                        for (var p = 0; p < periods.length; p++) {\n                            var tempPeriod = periods[p];\n\n                            if (periodId === tempPeriod.periodId) {\n                                if (tempPeriod.paused) {\n                                    // our period is paused so we will pause the screen\n                                    pause = true;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (pause) {\n                this.pauseScreen();\n            }\n        }\n    }\n\n    setLayoutState() {\n        var layoutState = 'nav'; // default layout state\n        var node = this.StudentDataService.getCurrentNode();\n\n        if(node) {\n            var id = node.id;\n            if (this.ProjectService.isApplicationNode(id)) {\n                layoutState = 'node';\n            } else if (this.ProjectService.isGroupNode(id)) {\n                layoutState = 'nav';\n            }\n        }\n\n        this.layoutState = layoutState;\n    };\n\n    goHome() {\n        // save goHome event\n        var nodeId = null;\n        var componentId = null;\n        var componentType = null;\n        var category = \"Navigation\";\n        var event = \"goHomeButtonClicked\";\n        var eventData = {};\n        this.StudentDataService.saveVLEEvent(nodeId, componentId, componentType, category, event, eventData);\n\n        this.$rootScope.$broadcast('goHome');\n    };\n\n    logOut() {\n        // save logOut event\n        var nodeId = null;\n        var componentId = null;\n        var componentType = null;\n        var category = \"Navigation\";\n        var event = \"logOutButtonClicked\";\n        var eventData = {};\n        this.StudentDataService.saveVLEEvent(nodeId, componentId, componentType, category, event, eventData);\n\n        this.$rootScope.$broadcast('logOut');\n    };\n\n    loadRoot() {\n        this.StudentDataService.endCurrentNodeAndSetCurrentNodeByNodeId(this.ProjectService.rootNode.id);\n    };\n\n    /**\n     * The user moved the mouse on the page\n     */\n    mouseMoved() {\n        // tell the session service a mouse event occurred\n        // so it can reset the session timeout timers\n        this.SessionService.mouseEventOccurred();\n    };\n\n    /**\n     * Pause the screen\n     */\n    pauseScreen() {\n        this.pauseDialog = this.$mdDialog.show({\n            template: '<md-dialog aria-label=\"Screen Paused\"><md-toolbar><div class=\"md-toolbar-tools\"><h2>Screen Paused</h2></div></md-toolbar><md-dialog-content><div class=\"md-dialog-content\">Your teacher has paused all the screens in the class.</div></md-dialog-content></md-dialog>',\n            fullscreen: true,\n            escapeToClose: false\n        });\n    }\n\n    /**\n     * Unpause the screen\n     */\n    unPauseScreen() {\n        this.$mdDialog.hide();\n    }\n}\n\nVLEController.$inject = [\n    '$scope',\n    '$rootScope',\n    '$mdDialog',\n    '$state',\n    'ConfigService',\n    'NotebookService',\n    'ProjectService',\n    'SessionService',\n    'StudentDataService',\n    'StudentWebSocketService'\n];\n\nexport default VLEController;\n"]}